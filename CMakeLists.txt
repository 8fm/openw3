cmake_minimum_required(VERSION 3.18)
project(LavaEngine)

#set(CMAKE_VERBOSE_MAKEFILE ON)
message("CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}")
message("GAME_CONFIG=${GAME_CONFIG}")
message("GAME_PLATFORM=${GAME_PLATFORM}")

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/bin")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_SOURCE_DIR}/bin/${GAME_CONFIG}-${GAME_PLATFORM})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_SOURCE_DIR}/bin/${GAME_CONFIG}-${GAME_PLATFORM})

if (MSVC)
add_subdirectory(dev/src/common/core)
add_subdirectory(dev/src/common/engine)
add_subdirectory(dev/src/common/game)
add_subdirectory(dev/src/common/gpuApiDX10)
add_subdirectory(dev/src/common/gpuApiOpenGL)
add_subdirectory(dev/src/common/gpuApiUtils)
add_subdirectory(dev/src/common/matcompiler)
add_subdirectory(dev/src/common/nullrender)
add_subdirectory(dev/src/common/physics)
add_subdirectory(dev/src/common/platformCommon)
#add_subdirectory(dev/src/common/redContainers) # only headers
endif()
add_subdirectory(dev/src/common/redIO)
add_subdirectory(dev/src/common/redMath)
add_subdirectory(dev/src/common/redMemory)
add_subdirectory(dev/src/common/redMemoryFramework)
add_subdirectory(dev/src/common/redNetwork)
add_subdirectory(dev/src/common/redSystem)
add_subdirectory(dev/src/common/redThreads)
if (MSVC)
add_subdirectory(dev/src/common/renderer)
add_subdirectory(dev/src/common/scripts)
add_subdirectory(dev/src/games/r4)
add_subdirectory(dev/src/win32/platform)

add_subdirectory(dev/src/games/r4Launcher)
endif()
