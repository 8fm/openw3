////////////////////////////////////////////////////////////////////////
// Memory Class Definitions
//	This file should not be included directly ) unless you plan on defining the 
//	DECLARE_MEMORY_CLASS macro to do something interesting

// Macro Usage:
// To add a new memory class ) use DECLARE_MEMORY_CLASS( Class Name )

#ifndef BEGIN_MEMORY_CLASS_GROUP
	#define BEGIN_MEMORY_CLASS_GROUP(x)
#endif

#ifndef END_MEMORY_CLASS_GROUP
	#define END_MEMORY_CLASS_GROUP
#endif

#if defined(DECLARE_MEMORY_CLASS)

	BEGIN_MEMORY_CLASS_GROUP( "Unclassified / Generic" )
		DECLARE_MEMORY_CLASS( MC_OperatorNew )
		DECLARE_MEMORY_CLASS( MC_Default )
		DECLARE_MEMORY_CLASS( MC_DynArray )
		DECLARE_MEMORY_CLASS( MC_SortedSet )
		DECLARE_MEMORY_CLASS( MC_SetNodes )
		DECLARE_MEMORY_CLASS( MC_HashSet )
		DECLARE_MEMORY_CLASS( MC_HashMap )
		DECLARE_MEMORY_CLASS( MC_Pool )
		DECLARE_MEMORY_CLASS( MC_List )
		DECLARE_MEMORY_CLASS( MC_DataBlob )
		DECLARE_MEMORY_CLASS( MC_Variant )
		DECLARE_MEMORY_CLASS( MC_Temporary )
		DECLARE_MEMORY_CLASS( MC_Arrays2D )
		DECLARE_MEMORY_CLASS( MC_String )
		DECLARE_MEMORY_CLASS( MC_DataBuffer )
		DECLARE_MEMORY_CLASS( MC_SharedBuffer )
		DECLARE_MEMORY_CLASS( MC_LegacyDataBuffer )
		DECLARE_MEMORY_CLASS( MC_HeapContainer )
		DECLARE_MEMORY_CLASS( MC_Bitfield )
		DECLARE_MEMORY_CLASS( MC_InstanceBuffer )
		DECLARE_MEMORY_CLASS( MC_SmallObjectPool )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "Engine Internals" )
		DECLARE_MEMORY_CLASS( MC_Freed )
		DECLARE_MEMORY_CLASS( MC_Depot )
		DECLARE_MEMORY_CLASS( MC_RTTI )
		DECLARE_MEMORY_CLASS( MC_Names )
		DECLARE_MEMORY_CLASS( MC_Handle )
		DECLARE_MEMORY_CLASS( MC_ObjectMap )
		DECLARE_MEMORY_CLASS( MC_ScriptData )
		DECLARE_MEMORY_CLASS( MC_Linker )
		DECLARE_MEMORY_CLASS( MC_Package )
		DECLARE_MEMORY_CLASS( MC_ResourceBuffer )
		DECLARE_MEMORY_CLASS( MC_Transform )
		DECLARE_MEMORY_CLASS( MC_LayerSystem )
		DECLARE_MEMORY_CLASS( MC_EntityTemplate )
		DECLARE_MEMORY_CLASS( MC_EntityTemplateEffects )
		DECLARE_MEMORY_CLASS( MC_Editor )
		DECLARE_MEMORY_CLASS( MC_Engine )
		DECLARE_MEMORY_CLASS( MC_Task )
		DECLARE_MEMORY_CLASS( MC_PartitionEngine )
		DECLARE_MEMORY_CLASS( MC_Singleton )
		DECLARE_MEMORY_CLASS( MC_BufferScriptCode )
		DECLARE_MEMORY_CLASS( MC_BufferEntity )
		DECLARE_MEMORY_CLASS( MC_AllObjects )
		DECLARE_MEMORY_CLASS( MC_Referencable )
		DECLARE_MEMORY_CLASS( MC_ScriptObject )
		DECLARE_MEMORY_CLASS( MC_Thumbnail )
		DECLARE_MEMORY_CLASS( MC_CookedHeader )
		DECLARE_MEMORY_CLASS( MC_EntityManager )
		DECLARE_MEMORY_CLASS( MC_EntityStreaming )
		DECLARE_MEMORY_CLASS( MC_SectorData )
		DECLARE_MEMORY_CLASS( MC_SectorDataRuntime )
		DECLARE_MEMORY_CLASS( MC_SectorDataStreaming )
		DECLARE_MEMORY_CLASS( MC_Dzip )
		DECLARE_MEMORY_CLASS( MC_ScriptCompilation )
		DECLARE_MEMORY_CLASS( MC_DiskFileString )
		DECLARE_MEMORY_CLASS( MC_Json )
		DECLARE_MEMORY_CLASS( MC_StreamingInstaller )
		DECLARE_MEMORY_CLASS( MC_Fios )
		DECLARE_MEMORY_CLASS( MC_AsyncFileCache )
		DECLARE_MEMORY_CLASS( MC_Tags )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "IO" )
		DECLARE_MEMORY_CLASS( MC_IOCompressedData )
		DECLARE_MEMORY_CLASS( MC_IODecompressedData )
		DECLARE_MEMORY_CLASS( MC_IOBurstReadBuffer )
		DECLARE_MEMORY_CLASS( MC_IOTempshit )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "Rendering" )
		DECLARE_MEMORY_CLASS( MC_MaterialParameters )
		DECLARE_MEMORY_CLASS( MC_RenderFragment )
		DECLARE_MEMORY_CLASS( MC_RenderCommandBuffer )
		DECLARE_MEMORY_CLASS( MC_RenderVisibility )
		DECLARE_MEMORY_CLASS( MC_RenderObjects )		
		DECLARE_MEMORY_CLASS( MC_RenderData )
		DECLARE_MEMORY_CLASS( MC_BufferBitmap )
		DECLARE_MEMORY_CLASS( MC_BufferMesh )
		DECLARE_MEMORY_CLASS( MC_EnvProbeData )
		DECLARE_MEMORY_CLASS( MC_EnvProbeRender )
		DECLARE_MEMORY_CLASS( MC_RenderMeshChunks )
		DECLARE_MEMORY_CLASS( MC_RenderNormalBlendingData )
		DECLARE_MEMORY_CLASS( MC_RenderTreeNode )
		DECLARE_MEMORY_CLASS( MC_RenderElement )
		DECLARE_MEMORY_CLASS( MC_RenderObjectSpeedtree )
		DECLARE_MEMORY_CLASS( MC_RenderOcclusionData )
		DECLARE_MEMORY_CLASS( MC_RenderElementApex )
		DECLARE_MEMORY_CLASS( MC_RenderElementMeshChunk )
		DECLARE_MEMORY_CLASS( MC_RenderElementParticleEmitter )
		DECLARE_MEMORY_CLASS( MC_RenderProxy )
		DECLARE_MEMORY_CLASS( MC_RenderProxyMesh )
		DECLARE_MEMORY_CLASS( MC_RenderProxyDecal )
		DECLARE_MEMORY_CLASS( MC_RenderResource )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "Shaders" )
		DECLARE_MEMORY_CLASS( MC_BufferShader )
		DECLARE_MEMORY_CLASS( MC_ShaderCacheEntry )
		DECLARE_MEMORY_CLASS( MC_MaterialCacheEntry )
		DECLARE_MEMORY_CLASS( MC_StaticShaderCacheEntry )
		DECLARE_MEMORY_CLASS( MC_TemporaryShaderCache )
		DECLARE_MEMORY_CLASS( MC_TemporaryMaterialCache )
		DECLARE_MEMORY_CLASS( MC_MaterialSamplerStates )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "Physics / Apex" )
		DECLARE_MEMORY_CLASS( MC_CollisionCache )
		DECLARE_MEMORY_CLASS( MC_Apex )
		DECLARE_MEMORY_CLASS( MC_ApexMaterialMapping )
		DECLARE_MEMORY_CLASS( MC_PhysicalCollision )
		DECLARE_MEMORY_CLASS( MC_PhysicsEngine )
		DECLARE_MEMORY_CLASS( MC_PhysicsMaterial )
		DECLARE_MEMORY_CLASS( MC_PhysicsDebug )
		DECLARE_MEMORY_CLASS( MC_CompiledCollision )
		DECLARE_MEMORY_CLASS( MC_PhysxRagdollBuffer )
		DECLARE_MEMORY_CLASS( MC_PhysTileStaticBodies )
		DECLARE_MEMORY_CLASS( MC_PhysFoliageData )
		DECLARE_MEMORY_CLASS( MC_BufferHavok )
		DECLARE_MEMORY_CLASS( MC_Havok )
		DECLARE_MEMORY_CLASS( MC_HavokInstance )
		DECLARE_MEMORY_CLASS( MC_ApexRenderObject )
		DECLARE_MEMORY_CLASS( MC_PhysicsWrappers )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "Umbra" )
		DECLARE_MEMORY_CLASS( MC_UmbraBuffer )
		DECLARE_MEMORY_CLASS( MC_UmbraObjectCache )
		DECLARE_MEMORY_CLASS( MC_UmbraVisibleChunks )
		DECLARE_MEMORY_CLASS( MC_UmbraGates )
		DECLARE_MEMORY_CLASS( MC_UmbraClusters )
		DECLARE_MEMORY_CLASS( MC_UmbraQuery )
		DECLARE_MEMORY_CLASS( MC_UmbraObjectIDMap )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "Terrain / World" )
		DECLARE_MEMORY_CLASS( MC_TerrainHoles )
		DECLARE_MEMORY_CLASS( MC_TerrainClipmap )
		DECLARE_MEMORY_CLASS( MC_TerrainTileMips )
		DECLARE_MEMORY_CLASS( MC_GlobalWater )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "Foliage" )
		DECLARE_MEMORY_CLASS( MC_FoliageTree )
		DECLARE_MEMORY_CLASS( MC_FoliageInstances )
		DECLARE_MEMORY_CLASS( MC_SpeedTreeContainer )
		DECLARE_MEMORY_CLASS( MC_SpeedTreeGridCell )
		DECLARE_MEMORY_CLASS( MC_SpeedTreeRender )
		DECLARE_MEMORY_CLASS( MC_FoliageRendering )
		DECLARE_MEMORY_CLASS( MC_FoliageGrassMask )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "Animation" )
		DECLARE_MEMORY_CLASS( MC_Animation )
		DECLARE_MEMORY_CLASS( MC_BufferAnimation )
		DECLARE_MEMORY_CLASS( MC_UsedAnimData )
		DECLARE_MEMORY_CLASS( MC_SkinningData )
		DECLARE_MEMORY_CLASS( MC_SkinningMapping )
		DECLARE_MEMORY_CLASS( MC_EngineTransformArray )
		DECLARE_MEMORY_CLASS( MC_MassiveAnimation )
		DECLARE_MEMORY_CLASS( MC_PoseManagement )
		DECLARE_MEMORY_CLASS( MC_Pose )
		DECLARE_MEMORY_CLASS( MC_PoseBuffer )
		DECLARE_MEMORY_CLASS( MC_PoseEvent )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "Effects / Environment" )
		DECLARE_MEMORY_CLASS( MC_Particles )
		DECLARE_MEMORY_CLASS( MC_ParticlesRendering )	
		DECLARE_MEMORY_CLASS( MC_EntityFxState )
		DECLARE_MEMORY_CLASS( MC_CurveData )
		DECLARE_MEMORY_CLASS( MC_CurveParam )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "GUI" )
		DECLARE_MEMORY_CLASS( MC_GUI )
		DECLARE_MEMORY_CLASS( MC_ScriptObjectFlash )
		DECLARE_MEMORY_CLASS( MC_BufferFlash )
		DECLARE_MEMORY_CLASS( MC_Bink )
		DECLARE_MEMORY_CLASS( MC_BufferBitmapFlash )
		DECLARE_MEMORY_CLASS( MC_BufferBink )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "AI" )
		DECLARE_MEMORY_CLASS( MC_PathLib )
		DECLARE_MEMORY_CLASS( MC_Movement )
		DECLARE_MEMORY_CLASS( MC_Graph )
		DECLARE_MEMORY_CLASS( MC_AI )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "Game Systems" )
		DECLARE_MEMORY_CLASS( MC_Gameplay )
		DECLARE_MEMORY_CLASS( MC_AreaShapes )
		DECLARE_MEMORY_CLASS( MC_TriggerSystem )
		DECLARE_MEMORY_CLASS( MC_Boids )
		DECLARE_MEMORY_CLASS( MC_VolumePathManager )
		DECLARE_MEMORY_CLASS( MC_Dialog )
		DECLARE_MEMORY_CLASS( MC_BufferSpeech )
		DECLARE_MEMORY_CLASS( MC_FootstepData )
		DECLARE_MEMORY_CLASS( MC_SceneBeamTree )
		DECLARE_MEMORY_CLASS( MC_GlobalSpatialTree )
		DECLARE_MEMORY_CLASS( MC_ExplorationData )
		DECLARE_MEMORY_CLASS( MC_Inventory )
		DECLARE_MEMORY_CLASS( MC_EntityPool )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "Debugging" )
		DECLARE_MEMORY_CLASS( MC_RedGuiContainer )
		DECLARE_MEMORY_CLASS( MC_RedGuiInternals )
		DECLARE_MEMORY_CLASS( MC_RedGuiControls )
		DECLARE_MEMORY_CLASS( MC_RedGuiThemes )
		DECLARE_MEMORY_CLASS( MC_Network )
		DECLARE_MEMORY_CLASS( MC_Debug )
		DECLARE_MEMORY_CLASS( MC_Profiler )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "Resource System" )
		DECLARE_MEMORY_CLASS( MC_WorldBurstLoader )
		DECLARE_MEMORY_CLASS( MC_BundleResource )
		DECLARE_MEMORY_CLASS( MC_ResourceDatabase )
		DECLARE_MEMORY_CLASS( MC_BundleMetadata )
		DECLARE_MEMORY_CLASS( MC_BundleIO )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "Bundle Builder" )
		DECLARE_MEMORY_CLASS( MC_BundlerOutputBuffer )
		DECLARE_MEMORY_CLASS( MC_BundlerInputBuffer )
		DECLARE_MEMORY_CLASS( MC_BundlerAutoCache )
		DECLARE_MEMORY_CLASS( MC_BundlerProfiler )
	END_MEMORY_CLASS_GROUP
	
	BEGIN_MEMORY_CLASS_GROUP( "Internal" )
		// DO NOT MOVE, USE OR REMOVE. This is a simple marker to decide if memset 0 is needed. 
		// Every memory class declared before need to be memset, everything after do not. Ugly but fast and simple.
		DECLARE_MEMORY_CLASS( MC_No_Memset_DO_NOT_USE_MOVE_OR_REMOVE )	
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "MiddleWare" )
		DECLARE_MEMORY_CLASS( MC_Scaleform )
		DECLARE_MEMORY_CLASS( MC_PhysX )
		DECLARE_MEMORY_CLASS( MC_SpeedTree )
		DECLARE_MEMORY_CLASS( MC_WWise )
		DECLARE_MEMORY_CLASS( MC_UmbraGeneric )
		DECLARE_MEMORY_CLASS( MC_UmbraTomeCollection )
		DECLARE_MEMORY_CLASS( MC_UmbraTome )
		DECLARE_MEMORY_CLASS( MC_UmbraQueryAdditionalMemory )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "Compression" )
		DECLARE_MEMORY_CLASS( MC_Zlib )
		DECLARE_MEMORY_CLASS( MC_Snappy )
		DECLARE_MEMORY_CLASS( MC_Doboz )
		DECLARE_MEMORY_CLASS( MC_L4Z )
	END_MEMORY_CLASS_GROUP

	BEGIN_MEMORY_CLASS_GROUP( "Profile Manager" )
		DECLARE_MEMORY_CLASS( MC_UserProfileManager )
		DECLARE_MEMORY_CLASS( MC_PlatformIntegrationDLL )
	END_MEMORY_CLASS_GROUP

	#undef BEGIN_MEMORY_CLASS_GROUP
	#undef END_MEMORY_CLASS_GROUP

#else
	#error DECLARE_MEMORY_CLASS must be defined to include memoryClasses.h
#endif
