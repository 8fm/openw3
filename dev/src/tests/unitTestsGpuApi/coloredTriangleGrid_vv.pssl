// 8x8 grid of triangles, each a uniform color.
// Can draw fewer instances, will fill grid left-to-right, top-to-bottom (reading order)
ConstantBuffer globalvs
{
    float4 colors[64];
};

struct PSInput
{
	float4 pos : S_POSITION;
	float4 col : COLOR;
};

PSInput main( uint vertexId : S_VERTEX_ID, uint instanceId : S_INSTANCE_ID )
{
	PSInput o;
	float2 verts[3] = 
    {
        { float2( -0.1f,  0.1f ) }, 
		{ float2(  0.0f, -0.1f ) },
        { float2(  0.1f,  0.1f ) },
    };

	float2 gridPos = float2( instanceId % 8, instanceId / 8 );
	float2 instancePos = float2( gridPos.x / 8.0f, 1.0f - gridPos.y / 8.0f ) * 2.0f - 1.0f;
	float2 p = verts[ vertexId ] + instancePos + float2( 0.1f, -0.1f );

	o.pos = float4( p, 0, 1);
	o.col = colors[instanceId];

	return o;
}
