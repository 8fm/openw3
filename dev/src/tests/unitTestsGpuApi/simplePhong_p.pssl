struct PSInput
{
	float4 pos : S_POSITION;
	float3 norm : NORMAL;
	float3 viewVec : TEXCOORD0;
	float3 lightVec0 : TEXCOORD1;
};

static const float3 ambientColor = float3(0.2f, 0.2f, 0.2f);
static const float3 lightColor = float3(1.0f, 1.0f, 1.0f);
static const float3 kd = 0.5, ks = 0.5f, m = 100.0f;

float4 main(PSInput i) : S_TARGET_OUTPUT
{
	float3 viewVec = normalize(i.viewVec);
	float3 normal = normalize(i.norm);
	float3 lightVec = normalize(i.lightVec0);
	float3 halfVec = normalize(viewVec + lightVec);
	float3 color = surfaceColor.xyz * ambientColor;
	color += lightColor * surfaceColor.xyz * kd * saturate(dot(normal, lightVec)) +
			 lightColor * ks * pow(saturate(dot(normal, halfVec)), m);

	return float4(saturate(2.0f*color), surfaceColor.a);
}