/* soapStub.h
   Generated by gSOAP 2.8.14 from ttsoapcgi.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_ns1	"urn:testtrack-interface"
#include "stdsoap2.h"
#if GSOAP_VERSION != 20814
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (7)
/* Base64 schema type: */
class SOAP_CMAC xsd__base64Binary
{
public:
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 7; } /* = unique id SOAP_TYPE_xsd__base64Binary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__base64Binary() { xsd__base64Binary::soap_default(NULL); }
	virtual ~xsd__base64Binary() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CDatabase
#define SOAP_TYPE_ns1__CDatabase (16)
/* ns1:CDatabase */
class SOAP_CMAC ns1__CDatabase
{
public:
	char *name;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE_ns1__CDatabase */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CDatabase() { ns1__CDatabase::soap_default(NULL); }
	virtual ~ns1__CDatabase() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CProjectDataOption
#define SOAP_TYPE_ns1__CProjectDataOption (18)
/* ns1:CProjectDataOption */
class SOAP_CMAC ns1__CProjectDataOption
{
public:
	char *name;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE_ns1__CProjectDataOption */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CProjectDataOption() { ns1__CProjectDataOption::soap_default(NULL); }
	virtual ~ns1__CProjectDataOption() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CProject
#define SOAP_TYPE_ns1__CProject (20)
/* ns1:CProject */
class SOAP_CMAC ns1__CProject
{
public:
	ns1__CDatabase *database;	/* required element of type ns1:CDatabase */
	class ArrayOfCProjectDataOption *options;	/* optional element of type ArrayOfCProjectDataOption */
	int *servernumber;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique id SOAP_TYPE_ns1__CProject */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CProject() { ns1__CProject::soap_default(NULL); }
	virtual ~ns1__CProject() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CDatabaseTable
#define SOAP_TYPE_ns1__CDatabaseTable (22)
/* ns1:CDatabaseTable */
class SOAP_CMAC ns1__CDatabaseTable
{
public:
	char *name;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE_ns1__CDatabaseTable */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CDatabaseTable() { ns1__CDatabaseTable::soap_default(NULL); }
	virtual ~ns1__CDatabaseTable() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CTableField
#define SOAP_TYPE_ns1__CTableField (24)
/* ns1:CTableField */
class SOAP_CMAC ns1__CTableField
{
public:
	char *name;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE_ns1__CTableField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CTableField() { ns1__CTableField::soap_default(NULL); }
	virtual ~ns1__CTableField() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CFieldValue
#define SOAP_TYPE_ns1__CFieldValue (26)
/* ns1:CFieldValue */
class SOAP_CMAC ns1__CFieldValue
{
public:
	char *value;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE_ns1__CFieldValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CFieldValue() { ns1__CFieldValue::soap_default(NULL); }
	virtual ~ns1__CFieldValue() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CTableColumn
#define SOAP_TYPE_ns1__CTableColumn (28)
/* ns1:CTableColumn */
class SOAP_CMAC ns1__CTableColumn
{
public:
	char *name;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE_ns1__CTableColumn */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CTableColumn() { ns1__CTableColumn::soap_default(NULL); }
	virtual ~ns1__CTableColumn() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CFilter
#define SOAP_TYPE_ns1__CFilter (30)
/* ns1:CFilter */
class SOAP_CMAC ns1__CFilter
{
public:
	char *name;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE_ns1__CFilter */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CFilter() { ns1__CFilter::soap_default(NULL); }
	virtual ~ns1__CFilter() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CRecordData
#define SOAP_TYPE_ns1__CRecordData (32)
/* ns1:CRecordData */
class SOAP_CMAC ns1__CRecordData
{
public:
	char *value;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE_ns1__CRecordData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CRecordData() { ns1__CRecordData::soap_default(NULL); }
	virtual ~ns1__CRecordData() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CRecordRowSoap
#define SOAP_TYPE_ns1__CRecordRowSoap (34)
/* ns1:CRecordRowSoap */
class SOAP_CMAC ns1__CRecordRowSoap
{
public:
	class ArrayOfCRecordData *row;	/* required element of type ArrayOfCRecordData */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 34; } /* = unique id SOAP_TYPE_ns1__CRecordRowSoap */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CRecordRowSoap() { ns1__CRecordRowSoap::soap_default(NULL); }
	virtual ~ns1__CRecordRowSoap() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CRecordListSoap
#define SOAP_TYPE_ns1__CRecordListSoap (36)
/* ns1:CRecordListSoap */
class SOAP_CMAC ns1__CRecordListSoap
{
public:
	class ArrayOfCTableColumn *columnlist;	/* optional element of type ArrayOfCTableColumn */
	class ArrayOfCRecordRowSoap *records;	/* optional element of type ArrayOfCRecordRowSoap */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 36; } /* = unique id SOAP_TYPE_ns1__CRecordListSoap */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CRecordListSoap() { ns1__CRecordListSoap::soap_default(NULL); }
	virtual ~ns1__CRecordListSoap() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CItemWithDBRecordId
#define SOAP_TYPE_ns1__CItemWithDBRecordId (37)
/* ns1:CItemWithDBRecordId */
class SOAP_CMAC ns1__CItemWithDBRecordId
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 37; } /* = unique id SOAP_TYPE_ns1__CItemWithDBRecordId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CItemWithDBRecordId() { ns1__CItemWithDBRecordId::soap_default(NULL); }
	virtual ~ns1__CItemWithDBRecordId() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CFile
#define SOAP_TYPE_ns1__CFile (44)
/* ns1:CFile */
class SOAP_CMAC ns1__CFile
{
public:
	xsd__base64Binary *m_pFileData;	/* optional element of type xsd:base64Binary */
	char *m_strFileName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 44; } /* = unique id SOAP_TYPE_ns1__CFile */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CFile() { ns1__CFile::soap_default(NULL); }
	virtual ~ns1__CFile() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CReportRunResults
#define SOAP_TYPE_ns1__CReportRunResults (46)
/* ns1:CReportRunResults */
class SOAP_CMAC ns1__CReportRunResults
{
public:
	class ArrayOfCFile *m_FileList;	/* optional element of type ArrayOfCFile */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 46; } /* = unique id SOAP_TYPE_ns1__CReportRunResults */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CReportRunResults() { ns1__CReportRunResults::soap_default(NULL); }
	virtual ~ns1__CReportRunResults() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CEventDefinition
#define SOAP_TYPE_ns1__CEventDefinition (71)
/* ns1:CEventDefinition */
class SOAP_CMAC ns1__CEventDefinition
{
public:
	char *name;	/* optional element of type xsd:string */
	bool *user;	/* optional element of type xsd:boolean */
	bool *datetime;	/* optional element of type xsd:boolean */
	bool *notes;	/* optional element of type xsd:boolean */
	bool *resultingState;	/* optional element of type xsd:boolean */
	class ArrayOfCFieldValue *resultingStateValues;	/* optional element of type ArrayOfCFieldValue */
	bool *fileattachments;	/* optional element of type xsd:boolean */
	bool *timeTracking;	/* optional element of type xsd:boolean */
	bool *timeSumOfAll;	/* optional element of type xsd:boolean */
	bool *timeHoursSinceLast;	/* optional element of type xsd:boolean */
	bool *newAssignment;	/* optional element of type xsd:boolean */
	bool *releaseNotes;	/* optional element of type xsd:boolean */
	bool *marksuspect;	/* optional element of type xsd:boolean */
	bool *reviewnote;	/* optional element of type xsd:boolean */
	class ArrayOfCField *customFields;	/* optional element of type ArrayOfCField */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 71; } /* = unique id SOAP_TYPE_ns1__CEventDefinition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CEventDefinition() { ns1__CEventDefinition::soap_default(NULL); }
	virtual ~ns1__CEventDefinition() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PhoneNumber
#define SOAP_TYPE_ns1__PhoneNumber (77)
/* ns1:PhoneNumber */
class SOAP_CMAC ns1__PhoneNumber
{
public:
	char *numbertype;	/* optional element of type xsd:string */
	char *phonenumber;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 77; } /* = unique id SOAP_TYPE_ns1__PhoneNumber */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PhoneNumber() { ns1__PhoneNumber::soap_default(NULL); }
	virtual ~ns1__PhoneNumber() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CGlobalUser
#define SOAP_TYPE_ns1__CGlobalUser (79)
/* ns1:CGlobalUser */
class SOAP_CMAC ns1__CGlobalUser
{
public:
	char *loginname;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 79; } /* = unique id SOAP_TYPE_ns1__CGlobalUser */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CGlobalUser() { ns1__CGlobalUser::soap_default(NULL); }
	virtual ~ns1__CGlobalUser() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CUserLicense
#define SOAP_TYPE_ns1__CUserLicense (81)
/* ns1:CUserLicense */
class SOAP_CMAC ns1__CUserLicense
{
public:
	char *name;	/* optional element of type xsd:string */
	int *numberUsed;	/* optional element of type xsd:int */
	int *numberTotal;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 81; } /* = unique id SOAP_TYPE_ns1__CUserLicense */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CUserLicense() { ns1__CUserLicense::soap_default(NULL); }
	virtual ~ns1__CUserLicense() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CScheduleInfo
#define SOAP_TYPE_ns1__CScheduleInfo (92)
/* ns1:CScheduleInfo */
class SOAP_CMAC ns1__CScheduleInfo
{
public:
	char *startdate;	/* optional element of type xsd:date */
	char *enddate;	/* optional element of type xsd:date */
	bool *includeweekends;	/* optional element of type xsd:boolean */
	LONG64 *nonworkingdays;	/* optional element of type xsd:long */
	double *hoursperday;	/* optional element of type xsd:double */
	double *ptohours;	/* optional element of type xsd:double */
	double *usersavailable;	/* optional element of type xsd:double */
	LONG64 *storypoints;	/* optional element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 92; } /* = unique id SOAP_TYPE_ns1__CScheduleInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CScheduleInfo() { ns1__CScheduleInfo::soap_default(NULL); }
	virtual ~ns1__CScheduleInfo() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CVersionInfo
#define SOAP_TYPE_ns1__CVersionInfo (99)
/* ns1:CVersionInfo */
class SOAP_CMAC ns1__CVersionInfo
{
public:
	LONG64 *versionNumber;	/* optional element of type xsd:long */
	char *createdByUser;	/* optional element of type xsd:string */
	char *dateTimeCreated;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 99; } /* = unique id SOAP_TYPE_ns1__CVersionInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CVersionInfo() { ns1__CVersionInfo::soap_default(NULL); }
	virtual ~ns1__CVersionInfo() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CTreeNodeSoap
#define SOAP_TYPE_ns1__CTreeNodeSoap (105)
/* ns1:CTreeNodeSoap */
class SOAP_CMAC ns1__CTreeNodeSoap
{
public:
	char *entityTableName;	/* optional element of type xsd:string */
	LONG64 entityRecordID;	/* required element of type xsd:long */
	class ArrayOfCTreeNodeSoap *childList;	/* optional element of type ArrayOfCTreeNodeSoap */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 105; } /* = unique id SOAP_TYPE_ns1__CTreeNodeSoap */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CTreeNodeSoap() { ns1__CTreeNodeSoap::soap_default(NULL); }
	virtual ~ns1__CTreeNodeSoap() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CItemHyperlinkContainer
#define SOAP_TYPE_ns1__CItemHyperlinkContainer (108)
/* ns1:CItemHyperlinkContainer */
class SOAP_CMAC ns1__CItemHyperlinkContainer
{
public:
	char *ttstudioHyperlink;	/* optional element of type xsd:string */
	char *httpHyperlink;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 108; } /* = unique id SOAP_TYPE_ns1__CItemHyperlinkContainer */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CItemHyperlinkContainer() { ns1__CItemHyperlinkContainer::soap_default(NULL); }
	virtual ~ns1__CItemHyperlinkContainer() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfstring
#define SOAP_TYPE_ArrayOfstring (14)
/* SOAP encoded array of xsd:string schema type: */
class SOAP_CMAC ArrayOfstring
{
public:
	char **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE_ArrayOfstring */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfstring() { ArrayOfstring::soap_default(NULL); }
	virtual ~ArrayOfstring() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOflong
#define SOAP_TYPE_ArrayOflong (15)
/* SOAP encoded array of xsd:long schema type: */
class SOAP_CMAC ArrayOflong
{
public:
	LONG64 *__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE_ArrayOflong */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOflong() { ArrayOflong::soap_default(NULL); }
	virtual ~ArrayOflong() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCDatabase
#define SOAP_TYPE_ArrayOfCDatabase (17)
/* SOAP encoded array of ns1:CDatabase schema type: */
class SOAP_CMAC ArrayOfCDatabase
{
public:
	ns1__CDatabase **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique id SOAP_TYPE_ArrayOfCDatabase */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCDatabase() { ArrayOfCDatabase::soap_default(NULL); }
	virtual ~ArrayOfCDatabase() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCProjectDataOption
#define SOAP_TYPE_ArrayOfCProjectDataOption (19)
/* SOAP encoded array of ns1:CProjectDataOption schema type: */
class SOAP_CMAC ArrayOfCProjectDataOption
{
public:
	ns1__CProjectDataOption **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE_ArrayOfCProjectDataOption */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCProjectDataOption() { ArrayOfCProjectDataOption::soap_default(NULL); }
	virtual ~ArrayOfCProjectDataOption() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCProject
#define SOAP_TYPE_ArrayOfCProject (21)
/* SOAP encoded array of ns1:CProject schema type: */
class SOAP_CMAC ArrayOfCProject
{
public:
	ns1__CProject **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_ArrayOfCProject */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCProject() { ArrayOfCProject::soap_default(NULL); }
	virtual ~ArrayOfCProject() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCDatabaseTable
#define SOAP_TYPE_ArrayOfCDatabaseTable (23)
/* SOAP encoded array of ns1:CDatabaseTable schema type: */
class SOAP_CMAC ArrayOfCDatabaseTable
{
public:
	ns1__CDatabaseTable **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE_ArrayOfCDatabaseTable */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCDatabaseTable() { ArrayOfCDatabaseTable::soap_default(NULL); }
	virtual ~ArrayOfCDatabaseTable() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCTableField
#define SOAP_TYPE_ArrayOfCTableField (25)
/* SOAP encoded array of ns1:CTableField schema type: */
class SOAP_CMAC ArrayOfCTableField
{
public:
	ns1__CTableField **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE_ArrayOfCTableField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCTableField() { ArrayOfCTableField::soap_default(NULL); }
	virtual ~ArrayOfCTableField() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCFieldValue
#define SOAP_TYPE_ArrayOfCFieldValue (27)
/* SOAP encoded array of ns1:CFieldValue schema type: */
class SOAP_CMAC ArrayOfCFieldValue
{
public:
	ns1__CFieldValue **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique id SOAP_TYPE_ArrayOfCFieldValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCFieldValue() { ArrayOfCFieldValue::soap_default(NULL); }
	virtual ~ArrayOfCFieldValue() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCTableColumn
#define SOAP_TYPE_ArrayOfCTableColumn (29)
/* SOAP encoded array of ns1:CTableColumn schema type: */
class SOAP_CMAC ArrayOfCTableColumn
{
public:
	ns1__CTableColumn **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE_ArrayOfCTableColumn */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCTableColumn() { ArrayOfCTableColumn::soap_default(NULL); }
	virtual ~ArrayOfCTableColumn() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCFilter
#define SOAP_TYPE_ArrayOfCFilter (31)
/* SOAP encoded array of ns1:CFilter schema type: */
class SOAP_CMAC ArrayOfCFilter
{
public:
	ns1__CFilter **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE_ArrayOfCFilter */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCFilter() { ArrayOfCFilter::soap_default(NULL); }
	virtual ~ArrayOfCFilter() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCRecordData
#define SOAP_TYPE_ArrayOfCRecordData (33)
/* SOAP encoded array of ns1:CRecordData schema type: */
class SOAP_CMAC ArrayOfCRecordData
{
public:
	ns1__CRecordData **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 33; } /* = unique id SOAP_TYPE_ArrayOfCRecordData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCRecordData() { ArrayOfCRecordData::soap_default(NULL); }
	virtual ~ArrayOfCRecordData() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCRecordRowSoap
#define SOAP_TYPE_ArrayOfCRecordRowSoap (35)
/* SOAP encoded array of ns1:CRecordRowSoap schema type: */
class SOAP_CMAC ArrayOfCRecordRowSoap
{
public:
	ns1__CRecordRowSoap **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 35; } /* = unique id SOAP_TYPE_ArrayOfCRecordRowSoap */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCRecordRowSoap() { ArrayOfCRecordRowSoap::soap_default(NULL); }
	virtual ~ArrayOfCRecordRowSoap() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CItemToTrack
#define SOAP_TYPE_ns1__CItemToTrack (38)
/* ns1:CItemToTrack */
class SOAP_CMAC ns1__CItemToTrack
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
public:
	virtual int soap_type() const { return 38; } /* = unique id SOAP_TYPE_ns1__CItemToTrack */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CItemToTrack() { ns1__CItemToTrack::soap_default(NULL); }
	virtual ~ns1__CItemToTrack() { }
};
#endif

#ifndef SOAP_TYPE_ns1__COrderedItemWithDBRecordId
#define SOAP_TYPE_ns1__COrderedItemWithDBRecordId (39)
/* ns1:COrderedItemWithDBRecordId */
class SOAP_CMAC ns1__COrderedItemWithDBRecordId
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	LONG64 order;	/* required element of type xsd:long */
public:
	virtual int soap_type() const { return 39; } /* = unique id SOAP_TYPE_ns1__COrderedItemWithDBRecordId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__COrderedItemWithDBRecordId() { ns1__COrderedItemWithDBRecordId::soap_default(NULL); }
	virtual ~ns1__COrderedItemWithDBRecordId() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CSCCFileRecord
#define SOAP_TYPE_ns1__CSCCFileRecord (42)
/* ns1:CSCCFileRecord */
class SOAP_CMAC ns1__CSCCFileRecord
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *m_strFileName;	/* required element of type xsd:string */
	char *m_strFixedRevision;	/* optional element of type xsd:string */
	time_t *m_dateFixedTimestamp;	/* optional element of type xsd:dateTime */
	char *m_strType;	/* optional element of type xsd:string */
	LONG64 *m_scriptOrder;	/* optional element of type xsd:long */
	char *m_strScriptState;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 42; } /* = unique id SOAP_TYPE_ns1__CSCCFileRecord */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CSCCFileRecord() { ns1__CSCCFileRecord::soap_default(NULL); }
	virtual ~ns1__CSCCFileRecord() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCSCCFileRecord
#define SOAP_TYPE_ArrayOfCSCCFileRecord (43)
/* SOAP encoded array of ns1:CSCCFileRecord schema type: */
class SOAP_CMAC ArrayOfCSCCFileRecord
{
public:
	ns1__CSCCFileRecord **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 43; } /* = unique id SOAP_TYPE_ArrayOfCSCCFileRecord */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCSCCFileRecord() { ArrayOfCSCCFileRecord::soap_default(NULL); }
	virtual ~ArrayOfCSCCFileRecord() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCFile
#define SOAP_TYPE_ArrayOfCFile (45)
/* SOAP encoded array of ns1:CFile schema type: */
class SOAP_CMAC ArrayOfCFile
{
public:
	ns1__CFile **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 45; } /* = unique id SOAP_TYPE_ArrayOfCFile */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCFile() { ArrayOfCFile::soap_default(NULL); }
	virtual ~ArrayOfCFile() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CFileAttachment
#define SOAP_TYPE_ns1__CFileAttachment (47)
/* ns1:CFileAttachment */
class SOAP_CMAC ns1__CFileAttachment
{
public:
	xsd__base64Binary *m_pFileData;	/* optional element of type xsd:base64Binary */
	char *m_strFileName;	/* optional element of type xsd:string */
	LONG64 m_recordid;	/* required element of type xsd:long */
	char *m_strArchiveName;	/* optional element of type xsd:string */
	char *m_strType;	/* optional element of type xsd:string */
	LONG64 *m_scriptOrder;	/* optional element of type xsd:long */
	char *m_strScriptState;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 47; } /* = unique id SOAP_TYPE_ns1__CFileAttachment */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CFileAttachment() { ns1__CFileAttachment::soap_default(NULL); }
	virtual ~ns1__CFileAttachment() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCFileAttachment
#define SOAP_TYPE_ArrayOfCFileAttachment (48)
/* SOAP encoded array of ns1:CFileAttachment schema type: */
class SOAP_CMAC ArrayOfCFileAttachment
{
public:
	ns1__CFileAttachment **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 48; } /* = unique id SOAP_TYPE_ArrayOfCFileAttachment */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCFileAttachment() { ArrayOfCFileAttachment::soap_default(NULL); }
	virtual ~ArrayOfCFileAttachment() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CReportedByRecord
#define SOAP_TYPE_ns1__CReportedByRecord (49)
/* ns1:CReportedByRecord */
class SOAP_CMAC ns1__CReportedByRecord
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *foundby;	/* optional element of type xsd:string */
	char *datefound;	/* optional element of type xsd:date */
	char *contactinfo;	/* optional element of type xsd:string */
	char *foundinversion;	/* optional element of type xsd:string */
	char *comments;	/* optional element of type xsd:string */
	ArrayOfCFileAttachment *commentsInlineAttachList;	/* optional element of type ArrayOfCFileAttachment */
	char *reproduced;	/* optional element of type xsd:string */
	char *reproducedsteps;	/* optional element of type xsd:string */
	ArrayOfCFileAttachment *reproStepsInlineAttachList;	/* optional element of type ArrayOfCFileAttachment */
	class ns1__CSystem *standardtestconfig;	/* optional element of type ns1:CSystem */
	char *otherhardwaresoftware;	/* optional element of type xsd:string */
	ArrayOfCFileAttachment *otherHWSWInlineAttachList;	/* optional element of type ArrayOfCFileAttachment */
	short *testconfigtype;	/* optional element of type xsd:short */
	ArrayOfCFileAttachment *attachmentlist;	/* optional element of type ArrayOfCFileAttachment */
	short showorder;	/* required element of type xsd:short */
public:
	virtual int soap_type() const { return 49; } /* = unique id SOAP_TYPE_ns1__CReportedByRecord */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CReportedByRecord() { ns1__CReportedByRecord::soap_default(NULL); }
	virtual ~ns1__CReportedByRecord() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCReportedByRecord
#define SOAP_TYPE_ArrayOfCReportedByRecord (50)
/* SOAP encoded array of ns1:CReportedByRecord schema type: */
class SOAP_CMAC ArrayOfCReportedByRecord
{
public:
	ns1__CReportedByRecord **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 50; } /* = unique id SOAP_TYPE_ArrayOfCReportedByRecord */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCReportedByRecord() { ArrayOfCReportedByRecord::soap_default(NULL); }
	virtual ~ArrayOfCReportedByRecord() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CField
#define SOAP_TYPE_ns1__CField (51)
/* ns1:CField */
class SOAP_CMAC ns1__CField
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *name;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 51; } /* = unique id SOAP_TYPE_ns1__CField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CField() { ns1__CField::soap_default(NULL); }
	virtual ~ns1__CField() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCField
#define SOAP_TYPE_ArrayOfCField (64)
/* SOAP encoded array of ns1:CField schema type: */
class SOAP_CMAC ArrayOfCField
{
public:
	ns1__CField **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 64; } /* = unique id SOAP_TYPE_ArrayOfCField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCField() { ArrayOfCField::soap_default(NULL); }
	virtual ~ArrayOfCField() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCTestRunVariantField
#define SOAP_TYPE_ArrayOfCTestRunVariantField (65)
/* SOAP encoded array of ns1:CTestRunVariantField schema type: */
class SOAP_CMAC ArrayOfCTestRunVariantField
{
public:
	class ns1__CTestRunVariantField **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 65; } /* = unique id SOAP_TYPE_ArrayOfCTestRunVariantField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCTestRunVariantField() { ArrayOfCTestRunVariantField::soap_default(NULL); }
	virtual ~ArrayOfCTestRunVariantField() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCTestCaseVariantField
#define SOAP_TYPE_ArrayOfCTestCaseVariantField (66)
/* SOAP encoded array of ns1:CTestCaseVariantField schema type: */
class SOAP_CMAC ArrayOfCTestCaseVariantField
{
public:
	class ns1__CTestCaseVariantField **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 66; } /* = unique id SOAP_TYPE_ArrayOfCTestCaseVariantField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCTestCaseVariantField() { ArrayOfCTestCaseVariantField::soap_default(NULL); }
	virtual ~ArrayOfCTestCaseVariantField() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CEvent
#define SOAP_TYPE_ns1__CEvent (67)
/* ns1:CEvent */
class SOAP_CMAC ns1__CEvent
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *user;	/* optional element of type xsd:string */
	time_t date;	/* required element of type xsd:dateTime */
	char *notes;	/* optional element of type xsd:string */
	short eventaddorder;	/* required element of type xsd:short */
	char *name;	/* optional element of type xsd:string */
	LONG64 *parenteventid;	/* optional element of type xsd:long */
	ArrayOfCFileAttachment *attachmentlist;	/* optional element of type ArrayOfCFileAttachment */
	ArrayOfCField *fieldlist;	/* optional element of type ArrayOfCField */
	char *resultingstate;	/* optional element of type xsd:string */
	double *hours;	/* optional element of type xsd:double */
	ArrayOfstring *assigntolist;	/* optional element of type ArrayOfstring */
	char *releasenotesversion;	/* optional element of type xsd:string */
	char *generatedeventtype;	/* optional element of type xsd:string */
	char *generatedbyname;	/* optional element of type xsd:string */
	double *totaltimespent;	/* optional element of type xsd:double */
	char *overrideuser;	/* optional element of type xsd:string */
	bool *marksuspect;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 67; } /* = unique id SOAP_TYPE_ns1__CEvent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CEvent() { ns1__CEvent::soap_default(NULL); }
	virtual ~ns1__CEvent() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCEvent
#define SOAP_TYPE_ArrayOfCEvent (68)
/* SOAP encoded array of ns1:CEvent schema type: */
class SOAP_CMAC ArrayOfCEvent
{
public:
	ns1__CEvent **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 68; } /* = unique id SOAP_TYPE_ArrayOfCEvent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCEvent() { ArrayOfCEvent::soap_default(NULL); }
	virtual ~ArrayOfCEvent() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCDefectEvent
#define SOAP_TYPE_ArrayOfCDefectEvent (70)
/* SOAP encoded array of ns1:CDefectEvent schema type: */
class SOAP_CMAC ArrayOfCDefectEvent
{
public:
	class ns1__CDefectEvent **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 70; } /* = unique id SOAP_TYPE_ArrayOfCDefectEvent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCDefectEvent() { ArrayOfCDefectEvent::soap_default(NULL); }
	virtual ~ArrayOfCDefectEvent() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCEventDefinition
#define SOAP_TYPE_ArrayOfCEventDefinition (72)
/* SOAP encoded array of ns1:CEventDefinition schema type: */
class SOAP_CMAC ArrayOfCEventDefinition
{
public:
	ns1__CEventDefinition **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 72; } /* = unique id SOAP_TYPE_ArrayOfCEventDefinition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCEventDefinition() { ArrayOfCEventDefinition::soap_default(NULL); }
	virtual ~ArrayOfCEventDefinition() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CDefectEventDefinition
#define SOAP_TYPE_ns1__CDefectEventDefinition (73)
/* ns1:CDefectEventDefinition */
class SOAP_CMAC ns1__CDefectEventDefinition
{
public:
	char *name;	/* optional element of type xsd:string */
	bool *user;	/* optional element of type xsd:boolean */
	bool *datetime;	/* optional element of type xsd:boolean */
	bool *notes;	/* optional element of type xsd:boolean */
	bool *resultingState;	/* optional element of type xsd:boolean */
	ArrayOfCFieldValue *resultingStateValues;	/* optional element of type ArrayOfCFieldValue */
	bool *fileattachments;	/* optional element of type xsd:boolean */
	bool *timeTracking;	/* optional element of type xsd:boolean */
	bool *timeSumOfAll;	/* optional element of type xsd:boolean */
	bool *timeHoursSinceLast;	/* optional element of type xsd:boolean */
	bool *newAssignment;	/* optional element of type xsd:boolean */
	bool *releaseNotes;	/* optional element of type xsd:boolean */
	bool *marksuspect;	/* optional element of type xsd:boolean */
	bool *reviewnote;	/* optional element of type xsd:boolean */
	ArrayOfCField *customFields;	/* optional element of type ArrayOfCField */
public:
	virtual int soap_type() const { return 73; } /* = unique id SOAP_TYPE_ns1__CDefectEventDefinition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CDefectEventDefinition() { ns1__CDefectEventDefinition::soap_default(NULL); }
	virtual ~ns1__CDefectEventDefinition() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCDefectEventDefinition
#define SOAP_TYPE_ArrayOfCDefectEventDefinition (74)
/* SOAP encoded array of ns1:CDefectEventDefinition schema type: */
class SOAP_CMAC ArrayOfCDefectEventDefinition
{
public:
	ns1__CDefectEventDefinition **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 74; } /* = unique id SOAP_TYPE_ArrayOfCDefectEventDefinition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCDefectEventDefinition() { ArrayOfCDefectEventDefinition::soap_default(NULL); }
	virtual ~ArrayOfCDefectEventDefinition() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCGlobalUser
#define SOAP_TYPE_ArrayOfCGlobalUser (80)
/* SOAP encoded array of ns1:CGlobalUser schema type: */
class SOAP_CMAC ArrayOfCGlobalUser
{
public:
	ns1__CGlobalUser **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 80; } /* = unique id SOAP_TYPE_ArrayOfCGlobalUser */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCGlobalUser() { ArrayOfCGlobalUser::soap_default(NULL); }
	virtual ~ArrayOfCGlobalUser() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCUserLicense
#define SOAP_TYPE_ArrayOfCUserLicense (82)
/* SOAP encoded array of ns1:CUserLicense schema type: */
class SOAP_CMAC ArrayOfCUserLicense
{
public:
	ns1__CUserLicense **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 82; } /* = unique id SOAP_TYPE_ArrayOfCUserLicense */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCUserLicense() { ArrayOfCUserLicense::soap_default(NULL); }
	virtual ~ArrayOfCUserLicense() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCLinkedItem
#define SOAP_TYPE_ArrayOfCLinkedItem (84)
/* SOAP encoded array of ns1:CLinkedItem schema type: */
class SOAP_CMAC ArrayOfCLinkedItem
{
public:
	class ns1__CLinkedItem **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 84; } /* = unique id SOAP_TYPE_ArrayOfCLinkedItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCLinkedItem() { ArrayOfCLinkedItem::soap_default(NULL); }
	virtual ~ArrayOfCLinkedItem() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCLinkHistoryItem
#define SOAP_TYPE_ArrayOfCLinkHistoryItem (86)
/* SOAP encoded array of ns1:CLinkHistoryItem schema type: */
class SOAP_CMAC ArrayOfCLinkHistoryItem
{
public:
	class ns1__CLinkHistoryItem **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 86; } /* = unique id SOAP_TYPE_ArrayOfCLinkHistoryItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCLinkHistoryItem() { ArrayOfCLinkHistoryItem::soap_default(NULL); }
	virtual ~ArrayOfCLinkHistoryItem() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCLink
#define SOAP_TYPE_ArrayOfCLink (88)
/* SOAP encoded array of ns1:CLink schema type: */
class SOAP_CMAC ArrayOfCLink
{
public:
	class ns1__CLink **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 88; } /* = unique id SOAP_TYPE_ArrayOfCLink */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCLink() { ArrayOfCLink::soap_default(NULL); }
	virtual ~ArrayOfCLink() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCItemToTrack
#define SOAP_TYPE_ArrayOfCItemToTrack (91)
/* SOAP encoded array of ns1:CItemToTrack schema type: */
class SOAP_CMAC ArrayOfCItemToTrack
{
public:
	ns1__CItemToTrack **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 91; } /* = unique id SOAP_TYPE_ArrayOfCItemToTrack */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCItemToTrack() { ArrayOfCItemToTrack::soap_default(NULL); }
	virtual ~ArrayOfCItemToTrack() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCFolderType
#define SOAP_TYPE_ArrayOfCFolderType (94)
/* SOAP encoded array of ns1:CFolderType schema type: */
class SOAP_CMAC ArrayOfCFolderType
{
public:
	class ns1__CFolderType **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 94; } /* = unique id SOAP_TYPE_ArrayOfCFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCFolderType() { ArrayOfCFolderType::soap_default(NULL); }
	virtual ~ArrayOfCFolderType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CFolderItem
#define SOAP_TYPE_ns1__CFolderItem (96)
/* ns1:CFolderItem */
class SOAP_CMAC ns1__CFolderItem
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *entitytablename;	/* required element of type xsd:string */
	LONG64 entityrecordid;	/* required element of type xsd:long */
	LONG64 *rank;	/* optional element of type xsd:long */
public:
	virtual int soap_type() const { return 96; } /* = unique id SOAP_TYPE_ns1__CFolderItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CFolderItem() { ns1__CFolderItem::soap_default(NULL); }
	virtual ~ns1__CFolderItem() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCFolder
#define SOAP_TYPE_ArrayOfCFolder (97)
/* SOAP encoded array of ns1:CFolder schema type: */
class SOAP_CMAC ArrayOfCFolder
{
public:
	class ns1__CFolder **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 97; } /* = unique id SOAP_TYPE_ArrayOfCFolder */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCFolder() { ArrayOfCFolder::soap_default(NULL); }
	virtual ~ArrayOfCFolder() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCFolderItem
#define SOAP_TYPE_ArrayOfCFolderItem (98)
/* SOAP encoded array of ns1:CFolderItem schema type: */
class SOAP_CMAC ArrayOfCFolderItem
{
public:
	ns1__CFolderItem **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 98; } /* = unique id SOAP_TYPE_ArrayOfCFolderItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCFolderItem() { ArrayOfCFolderItem::soap_default(NULL); }
	virtual ~ArrayOfCFolderItem() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCVersionInfo
#define SOAP_TYPE_ArrayOfCVersionInfo (100)
/* SOAP encoded array of ns1:CVersionInfo schema type: */
class SOAP_CMAC ArrayOfCVersionInfo
{
public:
	ns1__CVersionInfo **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 100; } /* = unique id SOAP_TYPE_ArrayOfCVersionInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCVersionInfo() { ArrayOfCVersionInfo::soap_default(NULL); }
	virtual ~ArrayOfCVersionInfo() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CSnapshotInfo
#define SOAP_TYPE_ns1__CSnapshotInfo (101)
/* ns1:CSnapshotInfo */
class SOAP_CMAC ns1__CSnapshotInfo
{
public:
	LONG64 *versionNumber;	/* optional element of type xsd:long */
	char *createdByUser;	/* optional element of type xsd:string */
	char *dateTimeCreated;	/* optional element of type xsd:string */
	char *label;	/* optional element of type xsd:string */
	char *comment;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 101; } /* = unique id SOAP_TYPE_ns1__CSnapshotInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CSnapshotInfo() { ns1__CSnapshotInfo::soap_default(NULL); }
	virtual ~ns1__CSnapshotInfo() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCSnapshotInfo
#define SOAP_TYPE_ArrayOfCSnapshotInfo (102)
/* SOAP encoded array of ns1:CSnapshotInfo schema type: */
class SOAP_CMAC ArrayOfCSnapshotInfo
{
public:
	ns1__CSnapshotInfo **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 102; } /* = unique id SOAP_TYPE_ArrayOfCSnapshotInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCSnapshotInfo() { ArrayOfCSnapshotInfo::soap_default(NULL); }
	virtual ~ArrayOfCSnapshotInfo() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOfCTreeNodeSoap
#define SOAP_TYPE_ArrayOfCTreeNodeSoap (106)
/* SOAP encoded array of ns1:CTreeNodeSoap schema type: */
class SOAP_CMAC ArrayOfCTreeNodeSoap
{
public:
	ns1__CTreeNodeSoap **__ptritem;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 106; } /* = unique id SOAP_TYPE_ArrayOfCTreeNodeSoap */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOfCTreeNodeSoap() { ArrayOfCTreeNodeSoap::soap_default(NULL); }
	virtual ~ArrayOfCTreeNodeSoap() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CDocumentTreeNode
#define SOAP_TYPE_ns1__CDocumentTreeNode (107)
/* ns1:CDocumentTreeNode */
class SOAP_CMAC ns1__CDocumentTreeNode
{
public:
	char *entityTableName;	/* optional element of type xsd:string */
	LONG64 entityRecordID;	/* required element of type xsd:long */
	ArrayOfCTreeNodeSoap *childList;	/* optional element of type ArrayOfCTreeNodeSoap */
	char *summary;	/* optional element of type xsd:string */
	char *outlineNumber;	/* optional element of type xsd:string */
	char *tag;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 107; } /* = unique id SOAP_TYPE_ns1__CDocumentTreeNode */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CDocumentTreeNode() { ns1__CDocumentTreeNode::soap_default(NULL); }
	virtual ~ns1__CDocumentTreeNode() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CSystemBase
#define SOAP_TYPE_ns1__CSystemBase (40)
/* ns1:CSystemBase */
class SOAP_CMAC ns1__CSystemBase
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *systemname;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 40; } /* = unique id SOAP_TYPE_ns1__CSystemBase */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CSystemBase() { ns1__CSystemBase::soap_default(NULL); }
	virtual ~ns1__CSystemBase() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CStringField
#define SOAP_TYPE_ns1__CStringField (52)
/* ns1:CStringField */
class SOAP_CMAC ns1__CStringField
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *name;	/* required element of type xsd:string */
	char *value;	/* optional element of type xsd:string */
	bool *isMultilineString;	/* optional element of type xsd:boolean */
	bool *containsFormatting;	/* optional element of type xsd:boolean */
	ArrayOfCFileAttachment *inlineAttachmentList;	/* optional element of type ArrayOfCFileAttachment */
public:
	virtual int soap_type() const { return 52; } /* = unique id SOAP_TYPE_ns1__CStringField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CStringField() { ns1__CStringField::soap_default(NULL); }
	virtual ~ns1__CStringField() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CIntegerField
#define SOAP_TYPE_ns1__CIntegerField (53)
/* ns1:CIntegerField */
class SOAP_CMAC ns1__CIntegerField
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *name;	/* required element of type xsd:string */
	int value;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 53; } /* = unique id SOAP_TYPE_ns1__CIntegerField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CIntegerField() { ns1__CIntegerField::soap_default(NULL); }
	virtual ~ns1__CIntegerField() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CDecimalField
#define SOAP_TYPE_ns1__CDecimalField (54)
/* ns1:CDecimalField */
class SOAP_CMAC ns1__CDecimalField
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *name;	/* required element of type xsd:string */
	double value;	/* required element of type xsd:double */
public:
	virtual int soap_type() const { return 54; } /* = unique id SOAP_TYPE_ns1__CDecimalField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CDecimalField() { ns1__CDecimalField::soap_default(NULL); }
	virtual ~ns1__CDecimalField() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CBooleanField
#define SOAP_TYPE_ns1__CBooleanField (55)
/* ns1:CBooleanField */
class SOAP_CMAC ns1__CBooleanField
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *name;	/* required element of type xsd:string */
	bool value;	/* required element of type xsd:boolean */
public:
	virtual int soap_type() const { return 55; } /* = unique id SOAP_TYPE_ns1__CBooleanField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CBooleanField() { ns1__CBooleanField::soap_default(NULL); }
	virtual ~ns1__CBooleanField() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CDateField
#define SOAP_TYPE_ns1__CDateField (56)
/* ns1:CDateField */
class SOAP_CMAC ns1__CDateField
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *name;	/* required element of type xsd:string */
	char *value;	/* optional element of type xsd:date */
public:
	virtual int soap_type() const { return 56; } /* = unique id SOAP_TYPE_ns1__CDateField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CDateField() { ns1__CDateField::soap_default(NULL); }
	virtual ~ns1__CDateField() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CDateTimeField
#define SOAP_TYPE_ns1__CDateTimeField (57)
/* ns1:CDateTimeField */
class SOAP_CMAC ns1__CDateTimeField
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *name;	/* required element of type xsd:string */
	time_t *value;	/* optional element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 57; } /* = unique id SOAP_TYPE_ns1__CDateTimeField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CDateTimeField() { ns1__CDateTimeField::soap_default(NULL); }
	virtual ~ns1__CDateTimeField() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CDropdownField
#define SOAP_TYPE_ns1__CDropdownField (58)
/* ns1:CDropdownField */
class SOAP_CMAC ns1__CDropdownField
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *name;	/* required element of type xsd:string */
	char *value;	/* optional element of type xsd:string */
	ArrayOfCFieldValue *dropdownValues;	/* optional element of type ArrayOfCFieldValue */
public:
	virtual int soap_type() const { return 58; } /* = unique id SOAP_TYPE_ns1__CDropdownField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CDropdownField() { ns1__CDropdownField::soap_default(NULL); }
	virtual ~ns1__CDropdownField() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CMultiSelectDropdownField
#define SOAP_TYPE_ns1__CMultiSelectDropdownField (59)
/* ns1:CMultiSelectDropdownField */
class SOAP_CMAC ns1__CMultiSelectDropdownField
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *name;	/* required element of type xsd:string */
	ArrayOfCFieldValue *values;	/* optional element of type ArrayOfCFieldValue */
	ArrayOfCFieldValue *dropdownValues;	/* optional element of type ArrayOfCFieldValue */
public:
	virtual int soap_type() const { return 59; } /* = unique id SOAP_TYPE_ns1__CMultiSelectDropdownField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CMultiSelectDropdownField() { ns1__CMultiSelectDropdownField::soap_default(NULL); }
	virtual ~ns1__CMultiSelectDropdownField() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CVersionField
#define SOAP_TYPE_ns1__CVersionField (62)
/* ns1:CVersionField */
class SOAP_CMAC ns1__CVersionField
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *name;	/* required element of type xsd:string */
	char *value;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 62; } /* = unique id SOAP_TYPE_ns1__CVersionField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CVersionField() { ns1__CVersionField::soap_default(NULL); }
	virtual ~ns1__CVersionField() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CTimespanField
#define SOAP_TYPE_ns1__CTimespanField (63)
/* ns1:CTimespanField */
class SOAP_CMAC ns1__CTimespanField
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *name;	/* required element of type xsd:string */
	double value;	/* required element of type xsd:double */
	char *unit;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 63; } /* = unique id SOAP_TYPE_ns1__CTimespanField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CTimespanField() { ns1__CTimespanField::soap_default(NULL); }
	virtual ~ns1__CTimespanField() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CDefectEvent
#define SOAP_TYPE_ns1__CDefectEvent (69)
/* ns1:CDefectEvent */
class SOAP_CMAC ns1__CDefectEvent
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *user;	/* optional element of type xsd:string */
	time_t date;	/* required element of type xsd:dateTime */
	char *notes;	/* optional element of type xsd:string */
	short eventaddorder;	/* required element of type xsd:short */
	char *name;	/* optional element of type xsd:string */
	LONG64 *parenteventid;	/* optional element of type xsd:long */
	ArrayOfCFileAttachment *attachmentlist;	/* optional element of type ArrayOfCFileAttachment */
	ArrayOfCField *fieldlist;	/* optional element of type ArrayOfCField */
	char *resultingstate;	/* optional element of type xsd:string */
	double *hours;	/* optional element of type xsd:double */
	ArrayOfstring *assigntolist;	/* optional element of type ArrayOfstring */
	char *releasenotesversion;	/* optional element of type xsd:string */
	char *generatedeventtype;	/* optional element of type xsd:string */
	char *generatedbyname;	/* optional element of type xsd:string */
	double *totaltimespent;	/* optional element of type xsd:double */
	char *overrideuser;	/* optional element of type xsd:string */
	bool *marksuspect;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 69; } /* = unique id SOAP_TYPE_ns1__CDefectEvent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CDefectEvent() { ns1__CDefectEvent::soap_default(NULL); }
	virtual ~ns1__CDefectEvent() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CDefect
#define SOAP_TYPE_ns1__CDefect (75)
/* ns1:CDefect */
class SOAP_CMAC ns1__CDefect
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	LONG64 *defectnumber;	/* optional element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
	char *state;	/* optional element of type xsd:string */
	char *disposition;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *priority;	/* optional element of type xsd:string */
	char *product;	/* optional element of type xsd:string */
	char *component;	/* optional element of type xsd:string */
	char *reference;	/* optional element of type xsd:string */
	char *severity;	/* optional element of type xsd:string */
	char *enteredby;	/* optional element of type xsd:string */
	char *workaround;	/* optional element of type xsd:string */
	ArrayOfCFileAttachment *workaroundInlineAttachList;	/* optional element of type ArrayOfCFileAttachment */
	char *dateentered;	/* optional element of type xsd:date */
	char *locationaddedfrom;	/* optional element of type xsd:string */
	time_t *datetimecreated;	/* optional element of type xsd:dateTime */
	time_t *datetimemodified;	/* optional element of type xsd:dateTime */
	char *createdbyuser;	/* optional element of type xsd:string */
	char *modifiedbyuser;	/* optional element of type xsd:string */
	double *actualhourstofix;	/* optional element of type xsd:double */
	double *estimatedhours;	/* optional element of type xsd:double */
	double *remaininghours;	/* optional element of type xsd:double */
	double *variance;	/* optional element of type xsd:double */
	LONG64 *storypoints;	/* optional element of type xsd:long */
	LONG64 *percentdone;	/* optional element of type xsd:long */
	ArrayOfCReportedByRecord *reportedbylist;	/* optional element of type ArrayOfCReportedByRecord */
	ArrayOfCEvent *eventlist;	/* optional element of type ArrayOfCEvent */
	ArrayOfCSCCFileRecord *pSCCFileList;	/* optional element of type ArrayOfCSCCFileRecord */
	ArrayOfCField *customFieldList;	/* optional element of type ArrayOfCField */
public:
	virtual int soap_type() const { return 75; } /* = unique id SOAP_TYPE_ns1__CDefect */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CDefect() { ns1__CDefect::soap_default(NULL); }
	virtual ~ns1__CDefect() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CTask
#define SOAP_TYPE_ns1__CTask (76)
/* ns1:CTask */
class SOAP_CMAC ns1__CTask
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *status;	/* optional element of type xsd:string */
	char *priority;	/* optional element of type xsd:string */
	char *summary;	/* optional element of type xsd:string */
	char *description;	/* optional element of type xsd:string */
	char *datedue;	/* optional element of type xsd:date */
	char *dateassigned;	/* optional element of type xsd:date */
	char *versiondue;	/* optional element of type xsd:string */
	char *assignedto;	/* optional element of type xsd:string */
	char *assignedby;	/* optional element of type xsd:string */
	LONG64 *assigneddefect;	/* optional element of type xsd:long */
public:
	virtual int soap_type() const { return 76; } /* = unique id SOAP_TYPE_ns1__CTask */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CTask() { ns1__CTask::soap_default(NULL); }
	virtual ~ns1__CTask() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CUser
#define SOAP_TYPE_ns1__CUser (78)
/* ns1:CUser */
class SOAP_CMAC ns1__CUser
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *firstname;	/* optional element of type xsd:string */
	char *middleinitials;	/* optional element of type xsd:string */
	char *lastname;	/* optional element of type xsd:string */
	char *usergroupname;	/* optional element of type xsd:string */
	char *company;	/* optional element of type xsd:string */
	char *division;	/* optional element of type xsd:string */
	char *department;	/* optional element of type xsd:string */
	char *emailtype;	/* optional element of type xsd:string */
	char *emailaddress;	/* optional element of type xsd:string */
	bool *isactive;	/* optional element of type xsd:boolean */
	bool *iscustomer;	/* optional element of type xsd:boolean */
	bool *isglobal;	/* optional element of type xsd:boolean */
	bool *isactiveglobal;	/* optional element of type xsd:boolean */
	char *userLicense;	/* optional element of type xsd:string */
	char *userLicenseTCM;	/* optional element of type xsd:string */
	char *userLicenseRM;	/* optional element of type xsd:string */
	char *password;	/* optional element of type xsd:string */
	char *loginname;	/* optional element of type xsd:string */
	ns1__PhoneNumber *phoneone;	/* optional element of type ns1:PhoneNumber */
	ns1__PhoneNumber *phonetwo;	/* optional element of type ns1:PhoneNumber */
	char *notes;	/* optional element of type xsd:string */
	bool *betasite;	/* optional element of type xsd:boolean */
	char *address;	/* optional element of type xsd:string */
	ns1__CSystem *testconfig;	/* optional element of type ns1:CSystem */
public:
	virtual int soap_type() const { return 78; } /* = unique id SOAP_TYPE_ns1__CUser */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CUser() { ns1__CUser::soap_default(NULL); }
	virtual ~ns1__CUser() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CLinkedItem
#define SOAP_TYPE_ns1__CLinkedItem (83)
/* ns1:CLinkedItem */
class SOAP_CMAC ns1__CLinkedItem
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	LONG64 order;	/* required element of type xsd:long */
	LONG64 *entityType;	/* optional element of type xsd:long */
	char *tablename;	/* required element of type xsd:string */
	LONG64 entityID;	/* required element of type xsd:long */
	char *number;	/* optional element of type xsd:string */
	char *summary;	/* optional element of type xsd:string */
	char *status;	/* optional element of type xsd:string */
	char *state;	/* optional element of type xsd:string */
	bool *issuspect;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 83; } /* = unique id SOAP_TYPE_ns1__CLinkedItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CLinkedItem() { ns1__CLinkedItem::soap_default(NULL); }
	virtual ~ns1__CLinkedItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CLinkHistoryItem
#define SOAP_TYPE_ns1__CLinkHistoryItem (85)
/* ns1:CLinkHistoryItem */
class SOAP_CMAC ns1__CLinkHistoryItem
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	LONG64 order;	/* required element of type xsd:long */
	time_t *date;	/* optional element of type xsd:dateTime */
	char *firstname;	/* optional element of type xsd:string */
	char *lastname;	/* optional element of type xsd:string */
	char *history;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 85; } /* = unique id SOAP_TYPE_ns1__CLinkHistoryItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CLinkHistoryItem() { ns1__CLinkHistoryItem::soap_default(NULL); }
	virtual ~ns1__CLinkHistoryItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CLink
#define SOAP_TYPE_ns1__CLink (87)
/* ns1:CLink */
class SOAP_CMAC ns1__CLink
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *linkDefinitionName;	/* required element of type xsd:string */
	char *comment;	/* optional element of type xsd:string */
	bool *linkbroken;	/* optional element of type xsd:boolean */
	ns1__CLinkedItem *linkparent;	/* optional element of type ns1:CLinkedItem */
	ArrayOfCLinkedItem *childList;	/* optional element of type ArrayOfCLinkedItem */
	ArrayOfCLinkHistoryItem *historyList;	/* optional element of type ArrayOfCLinkHistoryItem */
public:
	virtual int soap_type() const { return 87; } /* = unique id SOAP_TYPE_ns1__CLink */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CLink() { ns1__CLink::soap_default(NULL); }
	virtual ~ns1__CLink() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CTestCase
#define SOAP_TYPE_ns1__CTestCase (89)
/* ns1:CTestCase */
class SOAP_CMAC ns1__CTestCase
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	LONG64 *testcasenumber;	/* optional element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
	char *state;	/* optional element of type xsd:string */
	char *createdbyuser;	/* optional element of type xsd:string */
	time_t *datetimecreated;	/* optional element of type xsd:dateTime */
	char *locationaddedfrom;	/* optional element of type xsd:string */
	char *modifiedbyuser;	/* optional element of type xsd:string */
	time_t *datetimemodified;	/* optional element of type xsd:dateTime */
	ArrayOfCField *customFieldList;	/* optional element of type ArrayOfCField */
	ArrayOfCEvent *eventlist;	/* optional element of type ArrayOfCEvent */
	double *actualhours;	/* optional element of type xsd:double */
	double *estimatedhours;	/* optional element of type xsd:double */
	double *remaininghours;	/* optional element of type xsd:double */
	double *variance;	/* optional element of type xsd:double */
	LONG64 *storypoints;	/* optional element of type xsd:long */
	LONG64 *percentdone;	/* optional element of type xsd:long */
	char *type;	/* optional element of type xsd:string */
	char *testrunstepsmode;	/* optional element of type xsd:string */
	bool *isautomated;	/* optional element of type xsd:boolean */
	char *estimatedtime;	/* optional element of type xsd:string */
	char *steps;	/* optional element of type xsd:string */
	ArrayOfCTestCaseVariantField *testVariants;	/* optional element of type ArrayOfCTestCaseVariantField */
	ArrayOfCFileAttachment *attachmentlist;	/* optional element of type ArrayOfCFileAttachment */
	ArrayOfCSCCFileRecord *sccFileList;	/* optional element of type ArrayOfCSCCFileRecord */
public:
	virtual int soap_type() const { return 89; } /* = unique id SOAP_TYPE_ns1__CTestCase */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CTestCase() { ns1__CTestCase::soap_default(NULL); }
	virtual ~ns1__CTestCase() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CTestRun
#define SOAP_TYPE_ns1__CTestRun (90)
/* ns1:CTestRun */
class SOAP_CMAC ns1__CTestRun
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	LONG64 *testrunnumber;	/* optional element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
	char *state;	/* optional element of type xsd:string */
	char *createdbyuser;	/* optional element of type xsd:string */
	time_t *datetimecreated;	/* optional element of type xsd:dateTime */
	char *locationaddedfrom;	/* optional element of type xsd:string */
	char *modifiedbyuser;	/* optional element of type xsd:string */
	time_t *datetimemodified;	/* optional element of type xsd:dateTime */
	ArrayOfCField *customFieldList;	/* optional element of type ArrayOfCField */
	ArrayOfCEvent *eventlist;	/* optional element of type ArrayOfCEvent */
	double *actualhours;	/* optional element of type xsd:double */
	double *estimatedhours;	/* optional element of type xsd:double */
	double *remaininghours;	/* optional element of type xsd:double */
	double *variance;	/* optional element of type xsd:double */
	LONG64 *storypoints;	/* optional element of type xsd:long */
	LONG64 *percentdone;	/* optional element of type xsd:long */
	LONG64 *testcasenumber;	/* optional element of type xsd:long */
	LONG64 *testcaserecordid;	/* optional element of type xsd:long */
	char *type;	/* optional element of type xsd:string */
	char *testrunset;	/* optional element of type xsd:string */
	bool *isautomated;	/* optional element of type xsd:boolean */
	char *estimatedtime;	/* optional element of type xsd:string */
	char *steps;	/* optional element of type xsd:string */
	char *problemstatement;	/* optional element of type xsd:string */
	ArrayOfCTestCaseVariantField *testVariants;	/* optional element of type ArrayOfCTestCaseVariantField */
	ArrayOfCFileAttachment *attachmentlist;	/* optional element of type ArrayOfCFileAttachment */
	ArrayOfCSCCFileRecord *sccFileList;	/* optional element of type ArrayOfCSCCFileRecord */
	char *stepsmode;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 90; } /* = unique id SOAP_TYPE_ns1__CTestRun */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CTestRun() { ns1__CTestRun::soap_default(NULL); }
	virtual ~ns1__CTestRun() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CFolderType
#define SOAP_TYPE_ns1__CFolderType (93)
/* ns1:CFolderType */
class SOAP_CMAC ns1__CFolderType
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *name;	/* optional element of type xsd:string */
	char *description;	/* optional element of type xsd:string */
	bool *allowweb;	/* optional element of type xsd:boolean */
	bool *allowdetails;	/* optional element of type xsd:boolean */
	bool *releaseplanning;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 93; } /* = unique id SOAP_TYPE_ns1__CFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CFolderType() { ns1__CFolderType::soap_default(NULL); }
	virtual ~ns1__CFolderType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CFolder
#define SOAP_TYPE_ns1__CFolder (95)
/* ns1:CFolder */
class SOAP_CMAC ns1__CFolder
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	LONG64 *createdbyuser;	/* optional element of type xsd:long */
	bool *ispublic;	/* optional element of type xsd:boolean */
	LONG64 *modifiedbyuser;	/* optional element of type xsd:long */
	char *locationaddedfrom;	/* optional element of type xsd:string */
	time_t *datetimecreated;	/* optional element of type xsd:dateTime */
	time_t *datetimemodified;	/* optional element of type xsd:dateTime */
	char *name;	/* optional element of type xsd:string */
	char *description;	/* optional element of type xsd:string */
	char *path;	/* optional element of type xsd:string */
	LONG64 *order;	/* optional element of type xsd:long */
	LONG64 *parentid;	/* optional element of type xsd:long */
	char *foldertypename;	/* optional element of type xsd:string */
	char *webview;	/* optional element of type xsd:string */
	char *notes;	/* optional element of type xsd:string */
	ArrayOfCFileAttachment *notesInlineAttachList;	/* optional element of type ArrayOfCFileAttachment */
	bool *noteseditable;	/* optional element of type xsd:boolean */
	ns1__CScheduleInfo *scheduleinfo;	/* optional element of type ns1:CScheduleInfo */
public:
	virtual int soap_type() const { return 95; } /* = unique id SOAP_TYPE_ns1__CFolder */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CFolder() { ns1__CFolder::soap_default(NULL); }
	virtual ~ns1__CFolder() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CRequirement
#define SOAP_TYPE_ns1__CRequirement (103)
/* ns1:CRequirement */
class SOAP_CMAC ns1__CRequirement
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	LONG64 *number;	/* optional element of type xsd:long */
	char *type;	/* required element of type xsd:string */
	char *summary;	/* optional element of type xsd:string */
	char *tag;	/* optional element of type xsd:string */
	char *dateEntered;	/* optional element of type xsd:date */
	char *enteredBy;	/* optional element of type xsd:string */
	char *importance;	/* optional element of type xsd:string */
	char *description;	/* optional element of type xsd:string */
	ArrayOfCFileAttachment *descriptionInlineAttachList;	/* optional element of type ArrayOfCFileAttachment */
	char *state;	/* optional element of type xsd:string */
	ArrayOfCFileAttachment *attachmentList;	/* optional element of type ArrayOfCFileAttachment */
	ArrayOfCSCCFileRecord *sccFileList;	/* optional element of type ArrayOfCSCCFileRecord */
	ArrayOfCField *customFieldList;	/* optional element of type ArrayOfCField */
	ArrayOfCEvent *eventList;	/* optional element of type ArrayOfCEvent */
	ArrayOfCVersionInfo *versionList;	/* optional element of type ArrayOfCVersionInfo */
	time_t *dateTimeCreated;	/* optional element of type xsd:dateTime */
	char *createdByUser;	/* optional element of type xsd:string */
	char *locationAddedFrom;	/* optional element of type xsd:string */
	char *modifiedByUser;	/* optional element of type xsd:string */
	time_t *dateTimeModified;	/* optional element of type xsd:dateTime */
	double *actualHours;	/* optional element of type xsd:double */
	double *estimatedHours;	/* optional element of type xsd:double */
	double *remainingHours;	/* optional element of type xsd:double */
	double *variance;	/* optional element of type xsd:double */
	LONG64 *storyPoints;	/* optional element of type xsd:long */
	LONG64 *percentDone;	/* optional element of type xsd:long */
public:
	virtual int soap_type() const { return 103; } /* = unique id SOAP_TYPE_ns1__CRequirement */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CRequirement() { ns1__CRequirement::soap_default(NULL); }
	virtual ~ns1__CRequirement() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CRequirementDocument
#define SOAP_TYPE_ns1__CRequirementDocument (104)
/* ns1:CRequirementDocument */
class SOAP_CMAC ns1__CRequirementDocument
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	LONG64 *number;	/* optional element of type xsd:long */
	char *name;	/* optional element of type xsd:string */
	char *description;	/* optional element of type xsd:string */
	ArrayOfCFileAttachment *descriptionInlineAttachList;	/* optional element of type ArrayOfCFileAttachment */
	char *state;	/* optional element of type xsd:string */
	ArrayOfCFileAttachment *attachmentList;	/* optional element of type ArrayOfCFileAttachment */
	ArrayOfCSCCFileRecord *sccFileList;	/* optional element of type ArrayOfCSCCFileRecord */
	ArrayOfCField *customFieldList;	/* optional element of type ArrayOfCField */
	ArrayOfCEvent *eventList;	/* optional element of type ArrayOfCEvent */
	ArrayOfCSnapshotInfo *snapshotList;	/* optional element of type ArrayOfCSnapshotInfo */
	time_t *dateTimeCreated;	/* optional element of type xsd:dateTime */
	char *createdByUser;	/* optional element of type xsd:string */
	char *locationAddedFrom;	/* optional element of type xsd:string */
	char *modifiedByUser;	/* optional element of type xsd:string */
	time_t *dateTimeModified;	/* optional element of type xsd:dateTime */
	double *actualHours;	/* optional element of type xsd:double */
	double *estimatedHours;	/* optional element of type xsd:double */
	double *remainingHours;	/* optional element of type xsd:double */
	double *variance;	/* optional element of type xsd:double */
	LONG64 *storyPoints;	/* optional element of type xsd:long */
	LONG64 *percentDone;	/* optional element of type xsd:long */
public:
	virtual int soap_type() const { return 104; } /* = unique id SOAP_TYPE_ns1__CRequirementDocument */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CRequirementDocument() { ns1__CRequirementDocument::soap_default(NULL); }
	virtual ~ns1__CRequirementDocument() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CSystem
#define SOAP_TYPE_ns1__CSystem (41)
/* ns1:CSystem */
class SOAP_CMAC ns1__CSystem
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *systemname;	/* required element of type xsd:string */
	char *computermodel;	/* optional element of type xsd:string */
	char *computerbrand;	/* optional element of type xsd:string */
	char *cputype;	/* optional element of type xsd:string */
	char *cpuspeed;	/* optional element of type xsd:string */
	char *harddisktype;	/* optional element of type xsd:string */
	char *harddisksize;	/* optional element of type xsd:string */
	char *ramsize;	/* optional element of type xsd:string */
	char *romsize;	/* optional element of type xsd:string */
	char *osname;	/* optional element of type xsd:string */
	char *osversion;	/* optional element of type xsd:string */
	char *videoname;	/* optional element of type xsd:string */
	bool *hascdrom;	/* optional element of type xsd:boolean */
	char *cdrommodel;	/* optional element of type xsd:string */
	bool *hasscanner;	/* optional element of type xsd:boolean */
	char *scannermodel;	/* optional element of type xsd:string */
	bool *hasmodem;	/* optional element of type xsd:boolean */
	char *modemmodel;	/* optional element of type xsd:string */
	bool *hasprinter;	/* optional element of type xsd:boolean */
	char *printermodel;	/* optional element of type xsd:string */
	char *otherhardware;	/* optional element of type xsd:string */
	bool *hasmultiplemonitors;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 41; } /* = unique id SOAP_TYPE_ns1__CSystem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CSystem() { ns1__CSystem::soap_default(NULL); }
	virtual ~ns1__CSystem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CTestRunVariantField
#define SOAP_TYPE_ns1__CTestRunVariantField (60)
/* ns1:CTestRunVariantField */
class SOAP_CMAC ns1__CTestRunVariantField
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *name;	/* required element of type xsd:string */
	ArrayOfCFieldValue *values;	/* optional element of type ArrayOfCFieldValue */
	ArrayOfCFieldValue *dropdownValues;	/* optional element of type ArrayOfCFieldValue */
public:
	virtual int soap_type() const { return 60; } /* = unique id SOAP_TYPE_ns1__CTestRunVariantField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CTestRunVariantField() { ns1__CTestRunVariantField::soap_default(NULL); }
	virtual ~ns1__CTestRunVariantField() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CTestCaseVariantField
#define SOAP_TYPE_ns1__CTestCaseVariantField (61)
/* ns1:CTestCaseVariantField */
class SOAP_CMAC ns1__CTestCaseVariantField
{
public:
	LONG64 recordid;	/* required element of type xsd:long */
	char *name;	/* required element of type xsd:string */
	ArrayOfCFieldValue *values;	/* optional element of type ArrayOfCFieldValue */
	ArrayOfCFieldValue *dropdownValues;	/* optional element of type ArrayOfCFieldValue */
	char *type;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 61; } /* = unique id SOAP_TYPE_ns1__CTestCaseVariantField */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CTestCaseVariantField() { ns1__CTestCaseVariantField::soap_default(NULL); }
	virtual ~ns1__CTestCaseVariantField() { }
};
#endif

#ifndef SOAP_TYPE_ns1__getDatabaseListResponse
#define SOAP_TYPE_ns1__getDatabaseListResponse (209)
/* ns1:getDatabaseListResponse */
struct ns1__getDatabaseListResponse
{
public:
	ArrayOfCDatabase *pDBList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCDatabase */
public:
	int soap_type() const { return 209; } /* = unique id SOAP_TYPE_ns1__getDatabaseListResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getDatabaseList
#define SOAP_TYPE_ns1__getDatabaseList (213)
/* ns1:getDatabaseList */
struct ns1__getDatabaseList
{
public:
	int soap_type() const { return 213; } /* = unique id SOAP_TYPE_ns1__getDatabaseList */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns1__getProjectListResponse
#define SOAP_TYPE_ns1__getProjectListResponse (214)
/* ns1:getProjectListResponse */
struct ns1__getProjectListResponse
{
public:
	ArrayOfCProject *pProjList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCProject */
public:
	int soap_type() const { return 214; } /* = unique id SOAP_TYPE_ns1__getProjectListResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getProjectList
#define SOAP_TYPE_ns1__getProjectList (218)
/* ns1:getProjectList */
struct ns1__getProjectList
{
public:
	char *username;	/* optional element of type xsd:string */
	char *password;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 218; } /* = unique id SOAP_TYPE_ns1__getProjectList */
};
#endif

#ifndef SOAP_TYPE_ns1__getProjectDataOptionListResponse
#define SOAP_TYPE_ns1__getProjectDataOptionListResponse (219)
/* ns1:getProjectDataOptionListResponse */
struct ns1__getProjectDataOptionListResponse
{
public:
	ArrayOfCProjectDataOption *pProjTypes;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCProjectDataOption */
public:
	int soap_type() const { return 219; } /* = unique id SOAP_TYPE_ns1__getProjectDataOptionListResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getProjectDataOptionList
#define SOAP_TYPE_ns1__getProjectDataOptionList (222)
/* ns1:getProjectDataOptionList */
struct ns1__getProjectDataOptionList
{
public:
	int soap_type() const { return 222; } /* = unique id SOAP_TYPE_ns1__getProjectDataOptionList */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns1__DatabaseLogonResponse
#define SOAP_TYPE_ns1__DatabaseLogonResponse (225)
/* ns1:DatabaseLogonResponse */
struct ns1__DatabaseLogonResponse
{
public:
	LONG64 Cookie;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
public:
	int soap_type() const { return 225; } /* = unique id SOAP_TYPE_ns1__DatabaseLogonResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__DatabaseLogon
#define SOAP_TYPE_ns1__DatabaseLogon (226)
/* ns1:DatabaseLogon */
struct ns1__DatabaseLogon
{
public:
	char *dbname;	/* optional element of type xsd:string */
	char *username;	/* optional element of type xsd:string */
	char *password;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 226; } /* = unique id SOAP_TYPE_ns1__DatabaseLogon */
};
#endif

#ifndef SOAP_TYPE_ns1__ProjectLogonResponse
#define SOAP_TYPE_ns1__ProjectLogonResponse (228)
/* ns1:ProjectLogonResponse */
struct ns1__ProjectLogonResponse
{
public:
	LONG64 Cookie;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
public:
	int soap_type() const { return 228; } /* = unique id SOAP_TYPE_ns1__ProjectLogonResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__ProjectLogon
#define SOAP_TYPE_ns1__ProjectLogon (229)
/* ns1:ProjectLogon */
struct ns1__ProjectLogon
{
public:
	ns1__CProject *pProj;	/* optional element of type ns1:CProject */
	char *username;	/* optional element of type xsd:string */
	char *password;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 229; } /* = unique id SOAP_TYPE_ns1__ProjectLogon */
};
#endif

#ifndef SOAP_TYPE_ns1__DatabaseLogoffResponse
#define SOAP_TYPE_ns1__DatabaseLogoffResponse (232)
/* ns1:DatabaseLogoffResponse */
struct ns1__DatabaseLogoffResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 232; } /* = unique id SOAP_TYPE_ns1__DatabaseLogoffResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__DatabaseLogoff
#define SOAP_TYPE_ns1__DatabaseLogoff (233)
/* ns1:DatabaseLogoff */
struct ns1__DatabaseLogoff
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 233; } /* = unique id SOAP_TYPE_ns1__DatabaseLogoff */
};
#endif

#ifndef SOAP_TYPE_ns1__formattedTextSupportResponse
#define SOAP_TYPE_ns1__formattedTextSupportResponse (236)
/* ns1:formattedTextSupportResponse */
struct ns1__formattedTextSupportResponse
{
public:
	bool formattingEnabled;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 236; } /* = unique id SOAP_TYPE_ns1__formattedTextSupportResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__formattedTextSupport
#define SOAP_TYPE_ns1__formattedTextSupport (237)
/* ns1:formattedTextSupport */
struct ns1__formattedTextSupport
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	bool enableFormattedText;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 237; } /* = unique id SOAP_TYPE_ns1__formattedTextSupport */
};
#endif

#ifndef SOAP_TYPE_ns1__getTableListResponse
#define SOAP_TYPE_ns1__getTableListResponse (238)
/* ns1:getTableListResponse */
struct ns1__getTableListResponse
{
public:
	ArrayOfCDatabaseTable *pTableList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCDatabaseTable */
public:
	int soap_type() const { return 238; } /* = unique id SOAP_TYPE_ns1__getTableListResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getTableList
#define SOAP_TYPE_ns1__getTableList (242)
/* ns1:getTableList */
struct ns1__getTableList
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 242; } /* = unique id SOAP_TYPE_ns1__getTableList */
};
#endif

#ifndef SOAP_TYPE_ns1__getDropdownFieldForTableResponse
#define SOAP_TYPE_ns1__getDropdownFieldForTableResponse (243)
/* ns1:getDropdownFieldForTableResponse */
struct ns1__getDropdownFieldForTableResponse
{
public:
	ArrayOfCTableField *pFieldList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCTableField */
public:
	int soap_type() const { return 243; } /* = unique id SOAP_TYPE_ns1__getDropdownFieldForTableResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getDropdownFieldForTable
#define SOAP_TYPE_ns1__getDropdownFieldForTable (247)
/* ns1:getDropdownFieldForTable */
struct ns1__getDropdownFieldForTable
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *tablename;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 247; } /* = unique id SOAP_TYPE_ns1__getDropdownFieldForTable */
};
#endif

#ifndef SOAP_TYPE_ns1__getDropdownFieldValuesForTableResponse
#define SOAP_TYPE_ns1__getDropdownFieldValuesForTableResponse (248)
/* ns1:getDropdownFieldValuesForTableResponse */
struct ns1__getDropdownFieldValuesForTableResponse
{
public:
	ArrayOfCFieldValue *pValueList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCFieldValue */
public:
	int soap_type() const { return 248; } /* = unique id SOAP_TYPE_ns1__getDropdownFieldValuesForTableResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getDropdownFieldValuesForTable
#define SOAP_TYPE_ns1__getDropdownFieldValuesForTable (251)
/* ns1:getDropdownFieldValuesForTable */
struct ns1__getDropdownFieldValuesForTable
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *tablename;	/* optional element of type xsd:string */
	char *fieldname;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 251; } /* = unique id SOAP_TYPE_ns1__getDropdownFieldValuesForTable */
};
#endif

#ifndef SOAP_TYPE_ns1__addDropdownFieldValuesForTableResponse
#define SOAP_TYPE_ns1__addDropdownFieldValuesForTableResponse (253)
/* ns1:addDropdownFieldValuesForTableResponse */
struct ns1__addDropdownFieldValuesForTableResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 253; } /* = unique id SOAP_TYPE_ns1__addDropdownFieldValuesForTableResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__addDropdownFieldValuesForTable
#define SOAP_TYPE_ns1__addDropdownFieldValuesForTable (254)
/* ns1:addDropdownFieldValuesForTable */
struct ns1__addDropdownFieldValuesForTable
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *tablename;	/* optional element of type xsd:string */
	char *fieldname;	/* optional element of type xsd:string */
	ArrayOfCFieldValue *pValueList;	/* optional element of type ArrayOfCFieldValue */
public:
	int soap_type() const { return 254; } /* = unique id SOAP_TYPE_ns1__addDropdownFieldValuesForTable */
};
#endif

#ifndef SOAP_TYPE_ns1__GetLinkDefinitionValuesResponse
#define SOAP_TYPE_ns1__GetLinkDefinitionValuesResponse (255)
/* ns1:GetLinkDefinitionValuesResponse */
struct ns1__GetLinkDefinitionValuesResponse
{
public:
	ArrayOfCFieldValue *pValueList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCFieldValue */
public:
	int soap_type() const { return 255; } /* = unique id SOAP_TYPE_ns1__GetLinkDefinitionValuesResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__GetLinkDefinitionValues
#define SOAP_TYPE_ns1__GetLinkDefinitionValues (258)
/* ns1:GetLinkDefinitionValues */
struct ns1__GetLinkDefinitionValues
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 258; } /* = unique id SOAP_TYPE_ns1__GetLinkDefinitionValues */
};
#endif

#ifndef SOAP_TYPE_ns1__getColumnsForTableResponse
#define SOAP_TYPE_ns1__getColumnsForTableResponse (259)
/* ns1:getColumnsForTableResponse */
struct ns1__getColumnsForTableResponse
{
public:
	ArrayOfCTableColumn *pColumnList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCTableColumn */
public:
	int soap_type() const { return 259; } /* = unique id SOAP_TYPE_ns1__getColumnsForTableResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getColumnsForTable
#define SOAP_TYPE_ns1__getColumnsForTable (262)
/* ns1:getColumnsForTable */
struct ns1__getColumnsForTable
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *tablename;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 262; } /* = unique id SOAP_TYPE_ns1__getColumnsForTable */
};
#endif

#ifndef SOAP_TYPE_ns1__getFilterListResponse
#define SOAP_TYPE_ns1__getFilterListResponse (263)
/* ns1:getFilterListResponse */
struct ns1__getFilterListResponse
{
public:
	ArrayOfCFilter *pFilterList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCFilter */
public:
	int soap_type() const { return 263; } /* = unique id SOAP_TYPE_ns1__getFilterListResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getFilterList
#define SOAP_TYPE_ns1__getFilterList (267)
/* ns1:getFilterList */
struct ns1__getFilterList
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 267; } /* = unique id SOAP_TYPE_ns1__getFilterList */
};
#endif

#ifndef SOAP_TYPE_ns1__getFilterListForTableResponse
#define SOAP_TYPE_ns1__getFilterListForTableResponse (268)
/* ns1:getFilterListForTableResponse */
struct ns1__getFilterListForTableResponse
{
public:
	ArrayOfCFilter *pFilterList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCFilter */
public:
	int soap_type() const { return 268; } /* = unique id SOAP_TYPE_ns1__getFilterListForTableResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getFilterListForTable
#define SOAP_TYPE_ns1__getFilterListForTable (271)
/* ns1:getFilterListForTable */
struct ns1__getFilterListForTable
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *tablename;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 271; } /* = unique id SOAP_TYPE_ns1__getFilterListForTable */
};
#endif

#ifndef SOAP_TYPE_ns1__getRecordListForTableResponse
#define SOAP_TYPE_ns1__getRecordListForTableResponse (272)
/* ns1:getRecordListForTableResponse */
struct ns1__getRecordListForTableResponse
{
public:
	ns1__CRecordListSoap *recordlist;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CRecordListSoap */
public:
	int soap_type() const { return 272; } /* = unique id SOAP_TYPE_ns1__getRecordListForTableResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getRecordListForTable
#define SOAP_TYPE_ns1__getRecordListForTable (276)
/* ns1:getRecordListForTable */
struct ns1__getRecordListForTable
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *tablename;	/* optional element of type xsd:string */
	char *filtername;	/* optional element of type xsd:string */
	ArrayOfCTableColumn *columnlist;	/* optional element of type ArrayOfCTableColumn */
public:
	int soap_type() const { return 276; } /* = unique id SOAP_TYPE_ns1__getRecordListForTable */
};
#endif

#ifndef SOAP_TYPE_ns1__getTestConfigResponse
#define SOAP_TYPE_ns1__getTestConfigResponse (277)
/* ns1:getTestConfigResponse */
struct ns1__getTestConfigResponse
{
public:
	ns1__CSystem *pTestConfig;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CSystem */
public:
	int soap_type() const { return 277; } /* = unique id SOAP_TYPE_ns1__getTestConfigResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getTestConfig
#define SOAP_TYPE_ns1__getTestConfig (280)
/* ns1:getTestConfig */
struct ns1__getTestConfig
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *name;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 280; } /* = unique id SOAP_TYPE_ns1__getTestConfig */
};
#endif

#ifndef SOAP_TYPE_ns1__getTestConfigByRecordIDResponse
#define SOAP_TYPE_ns1__getTestConfigByRecordIDResponse (281)
/* ns1:getTestConfigByRecordIDResponse */
struct ns1__getTestConfigByRecordIDResponse
{
public:
	ns1__CSystem *pTestConfig;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CSystem */
public:
	int soap_type() const { return 281; } /* = unique id SOAP_TYPE_ns1__getTestConfigByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getTestConfigByRecordID
#define SOAP_TYPE_ns1__getTestConfigByRecordID (284)
/* ns1:getTestConfigByRecordID */
struct ns1__getTestConfigByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 284; } /* = unique id SOAP_TYPE_ns1__getTestConfigByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__addTestConfigResponse
#define SOAP_TYPE_ns1__addTestConfigResponse (286)
/* ns1:addTestConfigResponse */
struct ns1__addTestConfigResponse
{
public:
	LONG64 recordID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
public:
	int soap_type() const { return 286; } /* = unique id SOAP_TYPE_ns1__addTestConfigResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__addTestConfig
#define SOAP_TYPE_ns1__addTestConfig (287)
/* ns1:addTestConfig */
struct ns1__addTestConfig
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CSystem *pTestConfig;	/* optional element of type ns1:CSystem */
public:
	int soap_type() const { return 287; } /* = unique id SOAP_TYPE_ns1__addTestConfig */
};
#endif

#ifndef SOAP_TYPE_ns1__editTestConfigResponse
#define SOAP_TYPE_ns1__editTestConfigResponse (288)
/* ns1:editTestConfigResponse */
struct ns1__editTestConfigResponse
{
public:
	ns1__CSystem *pTestConfig;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CSystem */
public:
	int soap_type() const { return 288; } /* = unique id SOAP_TYPE_ns1__editTestConfigResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editTestConfig
#define SOAP_TYPE_ns1__editTestConfig (291)
/* ns1:editTestConfig */
struct ns1__editTestConfig
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *name;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 291; } /* = unique id SOAP_TYPE_ns1__editTestConfig */
};
#endif

#ifndef SOAP_TYPE_ns1__editTestConfigByRecordIDResponse
#define SOAP_TYPE_ns1__editTestConfigByRecordIDResponse (292)
/* ns1:editTestConfigByRecordIDResponse */
struct ns1__editTestConfigByRecordIDResponse
{
public:
	ns1__CSystem *pTestConfig;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CSystem */
public:
	int soap_type() const { return 292; } /* = unique id SOAP_TYPE_ns1__editTestConfigByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editTestConfigByRecordID
#define SOAP_TYPE_ns1__editTestConfigByRecordID (295)
/* ns1:editTestConfigByRecordID */
struct ns1__editTestConfigByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 295; } /* = unique id SOAP_TYPE_ns1__editTestConfigByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__saveTestConfigResponse
#define SOAP_TYPE_ns1__saveTestConfigResponse (297)
/* ns1:saveTestConfigResponse */
struct ns1__saveTestConfigResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 297; } /* = unique id SOAP_TYPE_ns1__saveTestConfigResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__saveTestConfig
#define SOAP_TYPE_ns1__saveTestConfig (298)
/* ns1:saveTestConfig */
struct ns1__saveTestConfig
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CSystem *pTestConfig;	/* optional element of type ns1:CSystem */
public:
	int soap_type() const { return 298; } /* = unique id SOAP_TYPE_ns1__saveTestConfig */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteTestConfigResponse
#define SOAP_TYPE_ns1__deleteTestConfigResponse (300)
/* ns1:deleteTestConfigResponse */
struct ns1__deleteTestConfigResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 300; } /* = unique id SOAP_TYPE_ns1__deleteTestConfigResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteTestConfig
#define SOAP_TYPE_ns1__deleteTestConfig (301)
/* ns1:deleteTestConfig */
struct ns1__deleteTestConfig
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *name;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 301; } /* = unique id SOAP_TYPE_ns1__deleteTestConfig */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteTestConfigByRecordIDResponse
#define SOAP_TYPE_ns1__deleteTestConfigByRecordIDResponse (303)
/* ns1:deleteTestConfigByRecordIDResponse */
struct ns1__deleteTestConfigByRecordIDResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 303; } /* = unique id SOAP_TYPE_ns1__deleteTestConfigByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteTestConfigByRecordID
#define SOAP_TYPE_ns1__deleteTestConfigByRecordID (304)
/* ns1:deleteTestConfigByRecordID */
struct ns1__deleteTestConfigByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 304; } /* = unique id SOAP_TYPE_ns1__deleteTestConfigByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveTestConfigResponse
#define SOAP_TYPE_ns1__cancelSaveTestConfigResponse (306)
/* ns1:cancelSaveTestConfigResponse */
struct ns1__cancelSaveTestConfigResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 306; } /* = unique id SOAP_TYPE_ns1__cancelSaveTestConfigResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveTestConfig
#define SOAP_TYPE_ns1__cancelSaveTestConfig (307)
/* ns1:cancelSaveTestConfig */
struct ns1__cancelSaveTestConfig
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 307; } /* = unique id SOAP_TYPE_ns1__cancelSaveTestConfig */
};
#endif

#ifndef SOAP_TYPE_ns1__getAttachmentTypesResponse
#define SOAP_TYPE_ns1__getAttachmentTypesResponse (308)
/* ns1:getAttachmentTypesResponse */
struct ns1__getAttachmentTypesResponse
{
public:
	ArrayOfstring *pTypeList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfstring */
public:
	int soap_type() const { return 308; } /* = unique id SOAP_TYPE_ns1__getAttachmentTypesResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getAttachmentTypes
#define SOAP_TYPE_ns1__getAttachmentTypes (311)
/* ns1:getAttachmentTypes */
struct ns1__getAttachmentTypes
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 311; } /* = unique id SOAP_TYPE_ns1__getAttachmentTypes */
};
#endif

#ifndef SOAP_TYPE_ns1__getReportRunResultsByNameResponse
#define SOAP_TYPE_ns1__getReportRunResultsByNameResponse (312)
/* ns1:getReportRunResultsByNameResponse */
struct ns1__getReportRunResultsByNameResponse
{
public:
	ns1__CReportRunResults *results;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CReportRunResults */
public:
	int soap_type() const { return 312; } /* = unique id SOAP_TYPE_ns1__getReportRunResultsByNameResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getReportRunResultsByName
#define SOAP_TYPE_ns1__getReportRunResultsByName (316)
/* ns1:getReportRunResultsByName */
struct ns1__getReportRunResultsByName
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *name;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 316; } /* = unique id SOAP_TYPE_ns1__getReportRunResultsByName */
};
#endif

#ifndef SOAP_TYPE_ns1__getReportRunResultsByRecordIDResponse
#define SOAP_TYPE_ns1__getReportRunResultsByRecordIDResponse (317)
/* ns1:getReportRunResultsByRecordIDResponse */
struct ns1__getReportRunResultsByRecordIDResponse
{
public:
	ns1__CReportRunResults *results;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CReportRunResults */
public:
	int soap_type() const { return 317; } /* = unique id SOAP_TYPE_ns1__getReportRunResultsByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getReportRunResultsByRecordID
#define SOAP_TYPE_ns1__getReportRunResultsByRecordID (320)
/* ns1:getReportRunResultsByRecordID */
struct ns1__getReportRunResultsByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 320; } /* = unique id SOAP_TYPE_ns1__getReportRunResultsByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__getEventDefinitionListResponse
#define SOAP_TYPE_ns1__getEventDefinitionListResponse (321)
/* ns1:getEventDefinitionListResponse */
struct ns1__getEventDefinitionListResponse
{
public:
	ArrayOfCEventDefinition *EventDefinitionList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCEventDefinition */
public:
	int soap_type() const { return 321; } /* = unique id SOAP_TYPE_ns1__getEventDefinitionListResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getEventDefinitionList
#define SOAP_TYPE_ns1__getEventDefinitionList (325)
/* ns1:getEventDefinitionList */
struct ns1__getEventDefinitionList
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *tablename;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 325; } /* = unique id SOAP_TYPE_ns1__getEventDefinitionList */
};
#endif

#ifndef SOAP_TYPE_ns1__getDefectEventDefinitionListResponse
#define SOAP_TYPE_ns1__getDefectEventDefinitionListResponse (326)
/* ns1:getDefectEventDefinitionListResponse */
struct ns1__getDefectEventDefinitionListResponse
{
public:
	ArrayOfCDefectEventDefinition *EventDefinitionList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCDefectEventDefinition */
public:
	int soap_type() const { return 326; } /* = unique id SOAP_TYPE_ns1__getDefectEventDefinitionListResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getDefectEventDefinitionList
#define SOAP_TYPE_ns1__getDefectEventDefinitionList (330)
/* ns1:getDefectEventDefinitionList */
struct ns1__getDefectEventDefinitionList
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 330; } /* = unique id SOAP_TYPE_ns1__getDefectEventDefinitionList */
};
#endif

#ifndef SOAP_TYPE_ns1__getCustomFieldsDefinitionListResponse
#define SOAP_TYPE_ns1__getCustomFieldsDefinitionListResponse (331)
/* ns1:getCustomFieldsDefinitionListResponse */
struct ns1__getCustomFieldsDefinitionListResponse
{
public:
	ArrayOfCField *customFields;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCField */
public:
	int soap_type() const { return 331; } /* = unique id SOAP_TYPE_ns1__getCustomFieldsDefinitionListResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getCustomFieldsDefinitionList
#define SOAP_TYPE_ns1__getCustomFieldsDefinitionList (334)
/* ns1:getCustomFieldsDefinitionList */
struct ns1__getCustomFieldsDefinitionList
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *tablename;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 334; } /* = unique id SOAP_TYPE_ns1__getCustomFieldsDefinitionList */
};
#endif

#ifndef SOAP_TYPE_ns1__getDefectCustomFieldsDefinitionListResponse
#define SOAP_TYPE_ns1__getDefectCustomFieldsDefinitionListResponse (335)
/* ns1:getDefectCustomFieldsDefinitionListResponse */
struct ns1__getDefectCustomFieldsDefinitionListResponse
{
public:
	ArrayOfCField *customFields;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCField */
public:
	int soap_type() const { return 335; } /* = unique id SOAP_TYPE_ns1__getDefectCustomFieldsDefinitionListResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getDefectCustomFieldsDefinitionList
#define SOAP_TYPE_ns1__getDefectCustomFieldsDefinitionList (338)
/* ns1:getDefectCustomFieldsDefinitionList */
struct ns1__getDefectCustomFieldsDefinitionList
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 338; } /* = unique id SOAP_TYPE_ns1__getDefectCustomFieldsDefinitionList */
};
#endif

#ifndef SOAP_TYPE_ns1__getDefectResponse
#define SOAP_TYPE_ns1__getDefectResponse (339)
/* ns1:getDefectResponse */
struct ns1__getDefectResponse
{
public:
	ns1__CDefect *pDefect;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CDefect */
public:
	int soap_type() const { return 339; } /* = unique id SOAP_TYPE_ns1__getDefectResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getDefect
#define SOAP_TYPE_ns1__getDefect (343)
/* ns1:getDefect */
struct ns1__getDefect
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 defectNumber;	/* required element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 343; } /* = unique id SOAP_TYPE_ns1__getDefect */
};
#endif

#ifndef SOAP_TYPE_ns1__getDefectByRecordIDResponse
#define SOAP_TYPE_ns1__getDefectByRecordIDResponse (344)
/* ns1:getDefectByRecordIDResponse */
struct ns1__getDefectByRecordIDResponse
{
public:
	ns1__CDefect *pDefect;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CDefect */
public:
	int soap_type() const { return 344; } /* = unique id SOAP_TYPE_ns1__getDefectByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getDefectByRecordID
#define SOAP_TYPE_ns1__getDefectByRecordID (347)
/* ns1:getDefectByRecordID */
struct ns1__getDefectByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 347; } /* = unique id SOAP_TYPE_ns1__getDefectByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__addDefectResponse
#define SOAP_TYPE_ns1__addDefectResponse (349)
/* ns1:addDefectResponse */
struct ns1__addDefectResponse
{
public:
	LONG64 recordID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
public:
	int soap_type() const { return 349; } /* = unique id SOAP_TYPE_ns1__addDefectResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__addDefect
#define SOAP_TYPE_ns1__addDefect (350)
/* ns1:addDefect */
struct ns1__addDefect
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CDefect *pDefect;	/* optional element of type ns1:CDefect */
public:
	int soap_type() const { return 350; } /* = unique id SOAP_TYPE_ns1__addDefect */
};
#endif

#ifndef SOAP_TYPE_ns1__addDefectWithLinkResponse
#define SOAP_TYPE_ns1__addDefectWithLinkResponse (352)
/* ns1:addDefectWithLinkResponse */
struct ns1__addDefectWithLinkResponse
{
public:
	LONG64 recordID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
public:
	int soap_type() const { return 352; } /* = unique id SOAP_TYPE_ns1__addDefectWithLinkResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__addDefectWithLink
#define SOAP_TYPE_ns1__addDefectWithLink (353)
/* ns1:addDefectWithLink */
struct ns1__addDefectWithLink
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CDefect *pDefect;	/* optional element of type ns1:CDefect */
	LONG64 testRunRecordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 353; } /* = unique id SOAP_TYPE_ns1__addDefectWithLink */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteDefectResponse
#define SOAP_TYPE_ns1__deleteDefectResponse (355)
/* ns1:deleteDefectResponse */
struct ns1__deleteDefectResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 355; } /* = unique id SOAP_TYPE_ns1__deleteDefectResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteDefect
#define SOAP_TYPE_ns1__deleteDefect (356)
/* ns1:deleteDefect */
struct ns1__deleteDefect
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 defectNumber;	/* required element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 356; } /* = unique id SOAP_TYPE_ns1__deleteDefect */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteDefectByRecordIDResponse
#define SOAP_TYPE_ns1__deleteDefectByRecordIDResponse (358)
/* ns1:deleteDefectByRecordIDResponse */
struct ns1__deleteDefectByRecordIDResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 358; } /* = unique id SOAP_TYPE_ns1__deleteDefectByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteDefectByRecordID
#define SOAP_TYPE_ns1__deleteDefectByRecordID (359)
/* ns1:deleteDefectByRecordID */
struct ns1__deleteDefectByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 359; } /* = unique id SOAP_TYPE_ns1__deleteDefectByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__editDefectResponse
#define SOAP_TYPE_ns1__editDefectResponse (360)
/* ns1:editDefectResponse */
struct ns1__editDefectResponse
{
public:
	ns1__CDefect *pDefect;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CDefect */
public:
	int soap_type() const { return 360; } /* = unique id SOAP_TYPE_ns1__editDefectResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editDefect
#define SOAP_TYPE_ns1__editDefect (363)
/* ns1:editDefect */
struct ns1__editDefect
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 defectNumber;	/* required element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 363; } /* = unique id SOAP_TYPE_ns1__editDefect */
};
#endif

#ifndef SOAP_TYPE_ns1__editDefectByRecordIDResponse
#define SOAP_TYPE_ns1__editDefectByRecordIDResponse (364)
/* ns1:editDefectByRecordIDResponse */
struct ns1__editDefectByRecordIDResponse
{
public:
	ns1__CDefect *pDefect;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CDefect */
public:
	int soap_type() const { return 364; } /* = unique id SOAP_TYPE_ns1__editDefectByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editDefectByRecordID
#define SOAP_TYPE_ns1__editDefectByRecordID (367)
/* ns1:editDefectByRecordID */
struct ns1__editDefectByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 367; } /* = unique id SOAP_TYPE_ns1__editDefectByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__saveDefectResponse
#define SOAP_TYPE_ns1__saveDefectResponse (369)
/* ns1:saveDefectResponse */
struct ns1__saveDefectResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 369; } /* = unique id SOAP_TYPE_ns1__saveDefectResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__saveDefect
#define SOAP_TYPE_ns1__saveDefect (370)
/* ns1:saveDefect */
struct ns1__saveDefect
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CDefect *pDefect;	/* optional element of type ns1:CDefect */
public:
	int soap_type() const { return 370; } /* = unique id SOAP_TYPE_ns1__saveDefect */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveDefectResponse
#define SOAP_TYPE_ns1__cancelSaveDefectResponse (372)
/* ns1:cancelSaveDefectResponse */
struct ns1__cancelSaveDefectResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 372; } /* = unique id SOAP_TYPE_ns1__cancelSaveDefectResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveDefect
#define SOAP_TYPE_ns1__cancelSaveDefect (373)
/* ns1:cancelSaveDefect */
struct ns1__cancelSaveDefect
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 373; } /* = unique id SOAP_TYPE_ns1__cancelSaveDefect */
};
#endif

#ifndef SOAP_TYPE_ns1__getAttachmentResponse
#define SOAP_TYPE_ns1__getAttachmentResponse (374)
/* ns1:getAttachmentResponse */
struct ns1__getAttachmentResponse
{
public:
	ns1__CFileAttachment *pAttachment;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CFileAttachment */
public:
	int soap_type() const { return 374; } /* = unique id SOAP_TYPE_ns1__getAttachmentResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getAttachment
#define SOAP_TYPE_ns1__getAttachment (377)
/* ns1:getAttachment */
struct ns1__getAttachment
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *tablename;	/* optional element of type xsd:string */
	LONG64 recordID;	/* required element of type xsd:long */
	LONG64 eventID;	/* required element of type xsd:long */
	char *pszArchiveName;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 377; } /* = unique id SOAP_TYPE_ns1__getAttachment */
};
#endif

#ifndef SOAP_TYPE_ns1__getDefectAttachmentResponse
#define SOAP_TYPE_ns1__getDefectAttachmentResponse (378)
/* ns1:getDefectAttachmentResponse */
struct ns1__getDefectAttachmentResponse
{
public:
	ns1__CFileAttachment *pAttachment;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CFileAttachment */
public:
	int soap_type() const { return 378; } /* = unique id SOAP_TYPE_ns1__getDefectAttachmentResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getDefectAttachment
#define SOAP_TYPE_ns1__getDefectAttachment (381)
/* ns1:getDefectAttachment */
struct ns1__getDefectAttachment
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *pszArchiveName;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 381; } /* = unique id SOAP_TYPE_ns1__getDefectAttachment */
};
#endif

#ifndef SOAP_TYPE_ns1__getTaskResponse
#define SOAP_TYPE_ns1__getTaskResponse (382)
/* ns1:getTaskResponse */
struct ns1__getTaskResponse
{
public:
	ns1__CTask *pTask;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CTask */
public:
	int soap_type() const { return 382; } /* = unique id SOAP_TYPE_ns1__getTaskResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getTask
#define SOAP_TYPE_ns1__getTask (386)
/* ns1:getTask */
struct ns1__getTask
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 386; } /* = unique id SOAP_TYPE_ns1__getTask */
};
#endif

#ifndef SOAP_TYPE_ns1__getTaskByRecordIDResponse
#define SOAP_TYPE_ns1__getTaskByRecordIDResponse (387)
/* ns1:getTaskByRecordIDResponse */
struct ns1__getTaskByRecordIDResponse
{
public:
	ns1__CTask *pTask;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CTask */
public:
	int soap_type() const { return 387; } /* = unique id SOAP_TYPE_ns1__getTaskByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getTaskByRecordID
#define SOAP_TYPE_ns1__getTaskByRecordID (390)
/* ns1:getTaskByRecordID */
struct ns1__getTaskByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 390; } /* = unique id SOAP_TYPE_ns1__getTaskByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__addTaskResponse
#define SOAP_TYPE_ns1__addTaskResponse (392)
/* ns1:addTaskResponse */
struct ns1__addTaskResponse
{
public:
	LONG64 recordID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
public:
	int soap_type() const { return 392; } /* = unique id SOAP_TYPE_ns1__addTaskResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__addTask
#define SOAP_TYPE_ns1__addTask (393)
/* ns1:addTask */
struct ns1__addTask
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CTask *pTask;	/* optional element of type ns1:CTask */
public:
	int soap_type() const { return 393; } /* = unique id SOAP_TYPE_ns1__addTask */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteTaskResponse
#define SOAP_TYPE_ns1__deleteTaskResponse (395)
/* ns1:deleteTaskResponse */
struct ns1__deleteTaskResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 395; } /* = unique id SOAP_TYPE_ns1__deleteTaskResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteTask
#define SOAP_TYPE_ns1__deleteTask (396)
/* ns1:deleteTask */
struct ns1__deleteTask
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 396; } /* = unique id SOAP_TYPE_ns1__deleteTask */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteTaskByRecordIDResponse
#define SOAP_TYPE_ns1__deleteTaskByRecordIDResponse (398)
/* ns1:deleteTaskByRecordIDResponse */
struct ns1__deleteTaskByRecordIDResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 398; } /* = unique id SOAP_TYPE_ns1__deleteTaskByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteTaskByRecordID
#define SOAP_TYPE_ns1__deleteTaskByRecordID (399)
/* ns1:deleteTaskByRecordID */
struct ns1__deleteTaskByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 399; } /* = unique id SOAP_TYPE_ns1__deleteTaskByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__editTaskResponse
#define SOAP_TYPE_ns1__editTaskResponse (400)
/* ns1:editTaskResponse */
struct ns1__editTaskResponse
{
public:
	ns1__CTask *pTask;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CTask */
public:
	int soap_type() const { return 400; } /* = unique id SOAP_TYPE_ns1__editTaskResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editTask
#define SOAP_TYPE_ns1__editTask (403)
/* ns1:editTask */
struct ns1__editTask
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 403; } /* = unique id SOAP_TYPE_ns1__editTask */
};
#endif

#ifndef SOAP_TYPE_ns1__editTaskByRecordIDResponse
#define SOAP_TYPE_ns1__editTaskByRecordIDResponse (404)
/* ns1:editTaskByRecordIDResponse */
struct ns1__editTaskByRecordIDResponse
{
public:
	ns1__CTask *pTask;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CTask */
public:
	int soap_type() const { return 404; } /* = unique id SOAP_TYPE_ns1__editTaskByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editTaskByRecordID
#define SOAP_TYPE_ns1__editTaskByRecordID (407)
/* ns1:editTaskByRecordID */
struct ns1__editTaskByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 407; } /* = unique id SOAP_TYPE_ns1__editTaskByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__saveTaskResponse
#define SOAP_TYPE_ns1__saveTaskResponse (409)
/* ns1:saveTaskResponse */
struct ns1__saveTaskResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 409; } /* = unique id SOAP_TYPE_ns1__saveTaskResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__saveTask
#define SOAP_TYPE_ns1__saveTask (410)
/* ns1:saveTask */
struct ns1__saveTask
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CTask *pTask;	/* optional element of type ns1:CTask */
public:
	int soap_type() const { return 410; } /* = unique id SOAP_TYPE_ns1__saveTask */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveTaskResponse
#define SOAP_TYPE_ns1__cancelSaveTaskResponse (412)
/* ns1:cancelSaveTaskResponse */
struct ns1__cancelSaveTaskResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 412; } /* = unique id SOAP_TYPE_ns1__cancelSaveTaskResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveTask
#define SOAP_TYPE_ns1__cancelSaveTask (413)
/* ns1:cancelSaveTask */
struct ns1__cancelSaveTask
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 413; } /* = unique id SOAP_TYPE_ns1__cancelSaveTask */
};
#endif

#ifndef SOAP_TYPE_ns1__getGlobalUserListResponse
#define SOAP_TYPE_ns1__getGlobalUserListResponse (414)
/* ns1:getGlobalUserListResponse */
struct ns1__getGlobalUserListResponse
{
public:
	ArrayOfCGlobalUser *GlobalUserList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCGlobalUser */
public:
	int soap_type() const { return 414; } /* = unique id SOAP_TYPE_ns1__getGlobalUserListResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getGlobalUserList
#define SOAP_TYPE_ns1__getGlobalUserList (418)
/* ns1:getGlobalUserList */
struct ns1__getGlobalUserList
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 418; } /* = unique id SOAP_TYPE_ns1__getGlobalUserList */
};
#endif

#ifndef SOAP_TYPE_ns1__getGlobalCustomerListResponse
#define SOAP_TYPE_ns1__getGlobalCustomerListResponse (419)
/* ns1:getGlobalCustomerListResponse */
struct ns1__getGlobalCustomerListResponse
{
public:
	ArrayOfCGlobalUser *GlobalCustomerList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCGlobalUser */
public:
	int soap_type() const { return 419; } /* = unique id SOAP_TYPE_ns1__getGlobalCustomerListResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getGlobalCustomerList
#define SOAP_TYPE_ns1__getGlobalCustomerList (422)
/* ns1:getGlobalCustomerList */
struct ns1__getGlobalCustomerList
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 422; } /* = unique id SOAP_TYPE_ns1__getGlobalCustomerList */
};
#endif

#ifndef SOAP_TYPE_ns1__getUserLicenseListResponse
#define SOAP_TYPE_ns1__getUserLicenseListResponse (423)
/* ns1:getUserLicenseListResponse */
struct ns1__getUserLicenseListResponse
{
public:
	ArrayOfCUserLicense *UserLicenseList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCUserLicense */
public:
	int soap_type() const { return 423; } /* = unique id SOAP_TYPE_ns1__getUserLicenseListResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getUserLicenseList
#define SOAP_TYPE_ns1__getUserLicenseList (427)
/* ns1:getUserLicenseList */
struct ns1__getUserLicenseList
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 427; } /* = unique id SOAP_TYPE_ns1__getUserLicenseList */
};
#endif

#ifndef SOAP_TYPE_ns1__getUserResponse
#define SOAP_TYPE_ns1__getUserResponse (428)
/* ns1:getUserResponse */
struct ns1__getUserResponse
{
public:
	ns1__CUser *pUser;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CUser */
public:
	int soap_type() const { return 428; } /* = unique id SOAP_TYPE_ns1__getUserResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getUser
#define SOAP_TYPE_ns1__getUser (432)
/* ns1:getUser */
struct ns1__getUser
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *firstName;	/* optional element of type xsd:string */
	char *middleInitials;	/* optional element of type xsd:string */
	char *lastName;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 432; } /* = unique id SOAP_TYPE_ns1__getUser */
};
#endif

#ifndef SOAP_TYPE_ns1__getUserByRecordIDResponse
#define SOAP_TYPE_ns1__getUserByRecordIDResponse (433)
/* ns1:getUserByRecordIDResponse */
struct ns1__getUserByRecordIDResponse
{
public:
	ns1__CUser *pUser;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CUser */
public:
	int soap_type() const { return 433; } /* = unique id SOAP_TYPE_ns1__getUserByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getUserByRecordID
#define SOAP_TYPE_ns1__getUserByRecordID (436)
/* ns1:getUserByRecordID */
struct ns1__getUserByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 436; } /* = unique id SOAP_TYPE_ns1__getUserByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__getUserForCurrentSessionResponse
#define SOAP_TYPE_ns1__getUserForCurrentSessionResponse (437)
/* ns1:getUserForCurrentSessionResponse */
struct ns1__getUserForCurrentSessionResponse
{
public:
	ns1__CUser *pUser;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CUser */
public:
	int soap_type() const { return 437; } /* = unique id SOAP_TYPE_ns1__getUserForCurrentSessionResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getUserForCurrentSession
#define SOAP_TYPE_ns1__getUserForCurrentSession (440)
/* ns1:getUserForCurrentSession */
struct ns1__getUserForCurrentSession
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 440; } /* = unique id SOAP_TYPE_ns1__getUserForCurrentSession */
};
#endif

#ifndef SOAP_TYPE_ns1__addUserResponse
#define SOAP_TYPE_ns1__addUserResponse (442)
/* ns1:addUserResponse */
struct ns1__addUserResponse
{
public:
	LONG64 recordID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
public:
	int soap_type() const { return 442; } /* = unique id SOAP_TYPE_ns1__addUserResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__addUser
#define SOAP_TYPE_ns1__addUser (443)
/* ns1:addUser */
struct ns1__addUser
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CUser *pUser;	/* optional element of type ns1:CUser */
public:
	int soap_type() const { return 443; } /* = unique id SOAP_TYPE_ns1__addUser */
};
#endif

#ifndef SOAP_TYPE_ns1__editUserResponse
#define SOAP_TYPE_ns1__editUserResponse (444)
/* ns1:editUserResponse */
struct ns1__editUserResponse
{
public:
	ns1__CUser *pUser;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CUser */
public:
	int soap_type() const { return 444; } /* = unique id SOAP_TYPE_ns1__editUserResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editUser
#define SOAP_TYPE_ns1__editUser (447)
/* ns1:editUser */
struct ns1__editUser
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *firstName;	/* optional element of type xsd:string */
	char *middleInitials;	/* optional element of type xsd:string */
	char *lastName;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 447; } /* = unique id SOAP_TYPE_ns1__editUser */
};
#endif

#ifndef SOAP_TYPE_ns1__editUserByRecordIDResponse
#define SOAP_TYPE_ns1__editUserByRecordIDResponse (448)
/* ns1:editUserByRecordIDResponse */
struct ns1__editUserByRecordIDResponse
{
public:
	ns1__CUser *pUser;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CUser */
public:
	int soap_type() const { return 448; } /* = unique id SOAP_TYPE_ns1__editUserByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editUserByRecordID
#define SOAP_TYPE_ns1__editUserByRecordID (451)
/* ns1:editUserByRecordID */
struct ns1__editUserByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 451; } /* = unique id SOAP_TYPE_ns1__editUserByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__saveUserResponse
#define SOAP_TYPE_ns1__saveUserResponse (453)
/* ns1:saveUserResponse */
struct ns1__saveUserResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 453; } /* = unique id SOAP_TYPE_ns1__saveUserResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__saveUser
#define SOAP_TYPE_ns1__saveUser (454)
/* ns1:saveUser */
struct ns1__saveUser
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *firstName;	/* optional element of type xsd:string */
	char *middleInitials;	/* optional element of type xsd:string */
	char *lastName;	/* optional element of type xsd:string */
	ns1__CUser *pUser;	/* optional element of type ns1:CUser */
public:
	int soap_type() const { return 454; } /* = unique id SOAP_TYPE_ns1__saveUser */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteUserResponse
#define SOAP_TYPE_ns1__deleteUserResponse (456)
/* ns1:deleteUserResponse */
struct ns1__deleteUserResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 456; } /* = unique id SOAP_TYPE_ns1__deleteUserResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteUser
#define SOAP_TYPE_ns1__deleteUser (457)
/* ns1:deleteUser */
struct ns1__deleteUser
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *firstName;	/* optional element of type xsd:string */
	char *middleInitials;	/* optional element of type xsd:string */
	char *lastName;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 457; } /* = unique id SOAP_TYPE_ns1__deleteUser */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteUserByRecordIDResponse
#define SOAP_TYPE_ns1__deleteUserByRecordIDResponse (459)
/* ns1:deleteUserByRecordIDResponse */
struct ns1__deleteUserByRecordIDResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 459; } /* = unique id SOAP_TYPE_ns1__deleteUserByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteUserByRecordID
#define SOAP_TYPE_ns1__deleteUserByRecordID (460)
/* ns1:deleteUserByRecordID */
struct ns1__deleteUserByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 460; } /* = unique id SOAP_TYPE_ns1__deleteUserByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveUserResponse
#define SOAP_TYPE_ns1__cancelSaveUserResponse (462)
/* ns1:cancelSaveUserResponse */
struct ns1__cancelSaveUserResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 462; } /* = unique id SOAP_TYPE_ns1__cancelSaveUserResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveUser
#define SOAP_TYPE_ns1__cancelSaveUser (463)
/* ns1:cancelSaveUser */
struct ns1__cancelSaveUser
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 463; } /* = unique id SOAP_TYPE_ns1__cancelSaveUser */
};
#endif

#ifndef SOAP_TYPE_ns1__promoteUserResponse
#define SOAP_TYPE_ns1__promoteUserResponse (465)
/* ns1:promoteUserResponse */
struct ns1__promoteUserResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 465; } /* = unique id SOAP_TYPE_ns1__promoteUserResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__promoteUser
#define SOAP_TYPE_ns1__promoteUser (466)
/* ns1:promoteUser */
struct ns1__promoteUser
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *localUser;	/* optional element of type xsd:string */
	char *globalUser;	/* optional element of type xsd:string */
	char *loginname;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 466; } /* = unique id SOAP_TYPE_ns1__promoteUser */
};
#endif

#ifndef SOAP_TYPE_ns1__addGlobalUserResponse
#define SOAP_TYPE_ns1__addGlobalUserResponse (468)
/* ns1:addGlobalUserResponse */
struct ns1__addGlobalUserResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 468; } /* = unique id SOAP_TYPE_ns1__addGlobalUserResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__addGlobalUser
#define SOAP_TYPE_ns1__addGlobalUser (469)
/* ns1:addGlobalUser */
struct ns1__addGlobalUser
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CGlobalUser *pUser;	/* optional element of type ns1:CGlobalUser */
public:
	int soap_type() const { return 469; } /* = unique id SOAP_TYPE_ns1__addGlobalUser */
};
#endif

#ifndef SOAP_TYPE_ns1__getCustomerResponse
#define SOAP_TYPE_ns1__getCustomerResponse (470)
/* ns1:getCustomerResponse */
struct ns1__getCustomerResponse
{
public:
	ns1__CUser *pCustomer;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CUser */
public:
	int soap_type() const { return 470; } /* = unique id SOAP_TYPE_ns1__getCustomerResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getCustomer
#define SOAP_TYPE_ns1__getCustomer (473)
/* ns1:getCustomer */
struct ns1__getCustomer
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *firstName;	/* optional element of type xsd:string */
	char *middleInitials;	/* optional element of type xsd:string */
	char *lastName;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 473; } /* = unique id SOAP_TYPE_ns1__getCustomer */
};
#endif

#ifndef SOAP_TYPE_ns1__getCustomerByRecordIDResponse
#define SOAP_TYPE_ns1__getCustomerByRecordIDResponse (474)
/* ns1:getCustomerByRecordIDResponse */
struct ns1__getCustomerByRecordIDResponse
{
public:
	ns1__CUser *pCustomer;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CUser */
public:
	int soap_type() const { return 474; } /* = unique id SOAP_TYPE_ns1__getCustomerByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getCustomerByRecordID
#define SOAP_TYPE_ns1__getCustomerByRecordID (477)
/* ns1:getCustomerByRecordID */
struct ns1__getCustomerByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 477; } /* = unique id SOAP_TYPE_ns1__getCustomerByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__addCustomerResponse
#define SOAP_TYPE_ns1__addCustomerResponse (479)
/* ns1:addCustomerResponse */
struct ns1__addCustomerResponse
{
public:
	LONG64 recordID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
public:
	int soap_type() const { return 479; } /* = unique id SOAP_TYPE_ns1__addCustomerResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__addCustomer
#define SOAP_TYPE_ns1__addCustomer (480)
/* ns1:addCustomer */
struct ns1__addCustomer
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CUser *pCustomer;	/* optional element of type ns1:CUser */
public:
	int soap_type() const { return 480; } /* = unique id SOAP_TYPE_ns1__addCustomer */
};
#endif

#ifndef SOAP_TYPE_ns1__editCustomerResponse
#define SOAP_TYPE_ns1__editCustomerResponse (481)
/* ns1:editCustomerResponse */
struct ns1__editCustomerResponse
{
public:
	ns1__CUser *pCustomer;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CUser */
public:
	int soap_type() const { return 481; } /* = unique id SOAP_TYPE_ns1__editCustomerResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editCustomer
#define SOAP_TYPE_ns1__editCustomer (484)
/* ns1:editCustomer */
struct ns1__editCustomer
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *firstName;	/* optional element of type xsd:string */
	char *middleInitials;	/* optional element of type xsd:string */
	char *lastName;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 484; } /* = unique id SOAP_TYPE_ns1__editCustomer */
};
#endif

#ifndef SOAP_TYPE_ns1__editCustomerByRecordIDResponse
#define SOAP_TYPE_ns1__editCustomerByRecordIDResponse (485)
/* ns1:editCustomerByRecordIDResponse */
struct ns1__editCustomerByRecordIDResponse
{
public:
	ns1__CUser *pCustomer;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CUser */
public:
	int soap_type() const { return 485; } /* = unique id SOAP_TYPE_ns1__editCustomerByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editCustomerByRecordID
#define SOAP_TYPE_ns1__editCustomerByRecordID (488)
/* ns1:editCustomerByRecordID */
struct ns1__editCustomerByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 488; } /* = unique id SOAP_TYPE_ns1__editCustomerByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__saveCustomerResponse
#define SOAP_TYPE_ns1__saveCustomerResponse (490)
/* ns1:saveCustomerResponse */
struct ns1__saveCustomerResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 490; } /* = unique id SOAP_TYPE_ns1__saveCustomerResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__saveCustomer
#define SOAP_TYPE_ns1__saveCustomer (491)
/* ns1:saveCustomer */
struct ns1__saveCustomer
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *firstName;	/* optional element of type xsd:string */
	char *middleInitials;	/* optional element of type xsd:string */
	char *lastName;	/* optional element of type xsd:string */
	ns1__CUser *pCustomer;	/* optional element of type ns1:CUser */
public:
	int soap_type() const { return 491; } /* = unique id SOAP_TYPE_ns1__saveCustomer */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteCustomerResponse
#define SOAP_TYPE_ns1__deleteCustomerResponse (493)
/* ns1:deleteCustomerResponse */
struct ns1__deleteCustomerResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 493; } /* = unique id SOAP_TYPE_ns1__deleteCustomerResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteCustomer
#define SOAP_TYPE_ns1__deleteCustomer (494)
/* ns1:deleteCustomer */
struct ns1__deleteCustomer
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *firstName;	/* optional element of type xsd:string */
	char *middleInitials;	/* optional element of type xsd:string */
	char *lastName;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 494; } /* = unique id SOAP_TYPE_ns1__deleteCustomer */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteCustomerByRecordIDResponse
#define SOAP_TYPE_ns1__deleteCustomerByRecordIDResponse (496)
/* ns1:deleteCustomerByRecordIDResponse */
struct ns1__deleteCustomerByRecordIDResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 496; } /* = unique id SOAP_TYPE_ns1__deleteCustomerByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteCustomerByRecordID
#define SOAP_TYPE_ns1__deleteCustomerByRecordID (497)
/* ns1:deleteCustomerByRecordID */
struct ns1__deleteCustomerByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 497; } /* = unique id SOAP_TYPE_ns1__deleteCustomerByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveCustomerResponse
#define SOAP_TYPE_ns1__cancelSaveCustomerResponse (499)
/* ns1:cancelSaveCustomerResponse */
struct ns1__cancelSaveCustomerResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 499; } /* = unique id SOAP_TYPE_ns1__cancelSaveCustomerResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveCustomer
#define SOAP_TYPE_ns1__cancelSaveCustomer (500)
/* ns1:cancelSaveCustomer */
struct ns1__cancelSaveCustomer
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 500; } /* = unique id SOAP_TYPE_ns1__cancelSaveCustomer */
};
#endif

#ifndef SOAP_TYPE_ns1__promoteCustomerResponse
#define SOAP_TYPE_ns1__promoteCustomerResponse (502)
/* ns1:promoteCustomerResponse */
struct ns1__promoteCustomerResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 502; } /* = unique id SOAP_TYPE_ns1__promoteCustomerResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__promoteCustomer
#define SOAP_TYPE_ns1__promoteCustomer (503)
/* ns1:promoteCustomer */
struct ns1__promoteCustomer
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *localCustomer;	/* optional element of type xsd:string */
	char *globalUser;	/* optional element of type xsd:string */
	char *loginname;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 503; } /* = unique id SOAP_TYPE_ns1__promoteCustomer */
};
#endif

#ifndef SOAP_TYPE_ns1__addGlobalCustomerResponse
#define SOAP_TYPE_ns1__addGlobalCustomerResponse (505)
/* ns1:addGlobalCustomerResponse */
struct ns1__addGlobalCustomerResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 505; } /* = unique id SOAP_TYPE_ns1__addGlobalCustomerResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__addGlobalCustomer
#define SOAP_TYPE_ns1__addGlobalCustomer (506)
/* ns1:addGlobalCustomer */
struct ns1__addGlobalCustomer
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CGlobalUser *pUser;	/* optional element of type ns1:CGlobalUser */
public:
	int soap_type() const { return 506; } /* = unique id SOAP_TYPE_ns1__addGlobalCustomer */
};
#endif

#ifndef SOAP_TYPE_ns1__getLinksForItemResponse
#define SOAP_TYPE_ns1__getLinksForItemResponse (507)
/* ns1:getLinksForItemResponse */
struct ns1__getLinksForItemResponse
{
public:
	ArrayOfCLink *pLinkList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCLink */
public:
	int soap_type() const { return 507; } /* = unique id SOAP_TYPE_ns1__getLinksForItemResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getLinksForItem
#define SOAP_TYPE_ns1__getLinksForItem (511)
/* ns1:getLinksForItem */
struct ns1__getLinksForItem
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *tablename;	/* optional element of type xsd:string */
	LONG64 itemRecordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 511; } /* = unique id SOAP_TYPE_ns1__getLinksForItem */
};
#endif

#ifndef SOAP_TYPE_ns1__getLinksForDefectResponse
#define SOAP_TYPE_ns1__getLinksForDefectResponse (512)
/* ns1:getLinksForDefectResponse */
struct ns1__getLinksForDefectResponse
{
public:
	ArrayOfCLink *pLinkList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCLink */
public:
	int soap_type() const { return 512; } /* = unique id SOAP_TYPE_ns1__getLinksForDefectResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getLinksForDefect
#define SOAP_TYPE_ns1__getLinksForDefect (515)
/* ns1:getLinksForDefect */
struct ns1__getLinksForDefect
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 defectRecordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 515; } /* = unique id SOAP_TYPE_ns1__getLinksForDefect */
};
#endif

#ifndef SOAP_TYPE_ns1__getLinkResponse
#define SOAP_TYPE_ns1__getLinkResponse (516)
/* ns1:getLinkResponse */
struct ns1__getLinkResponse
{
public:
	ns1__CLink *pLink;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CLink */
public:
	int soap_type() const { return 516; } /* = unique id SOAP_TYPE_ns1__getLinkResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getLink
#define SOAP_TYPE_ns1__getLink (519)
/* ns1:getLink */
struct ns1__getLink
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 linkID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 519; } /* = unique id SOAP_TYPE_ns1__getLink */
};
#endif

#ifndef SOAP_TYPE_ns1__addLinkResponse
#define SOAP_TYPE_ns1__addLinkResponse (521)
/* ns1:addLinkResponse */
struct ns1__addLinkResponse
{
public:
	LONG64 recordID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
public:
	int soap_type() const { return 521; } /* = unique id SOAP_TYPE_ns1__addLinkResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__addLink
#define SOAP_TYPE_ns1__addLink (522)
/* ns1:addLink */
struct ns1__addLink
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CLink *pLink;	/* optional element of type ns1:CLink */
public:
	int soap_type() const { return 522; } /* = unique id SOAP_TYPE_ns1__addLink */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteLinkResponse
#define SOAP_TYPE_ns1__deleteLinkResponse (524)
/* ns1:deleteLinkResponse */
struct ns1__deleteLinkResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 524; } /* = unique id SOAP_TYPE_ns1__deleteLinkResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteLink
#define SOAP_TYPE_ns1__deleteLink (525)
/* ns1:deleteLink */
struct ns1__deleteLink
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 linkID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 525; } /* = unique id SOAP_TYPE_ns1__deleteLink */
};
#endif

#ifndef SOAP_TYPE_ns1__editLinkResponse
#define SOAP_TYPE_ns1__editLinkResponse (526)
/* ns1:editLinkResponse */
struct ns1__editLinkResponse
{
public:
	ns1__CLink *pLink;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CLink */
public:
	int soap_type() const { return 526; } /* = unique id SOAP_TYPE_ns1__editLinkResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editLink
#define SOAP_TYPE_ns1__editLink (529)
/* ns1:editLink */
struct ns1__editLink
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 linkID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 529; } /* = unique id SOAP_TYPE_ns1__editLink */
};
#endif

#ifndef SOAP_TYPE_ns1__saveLinkResponse
#define SOAP_TYPE_ns1__saveLinkResponse (531)
/* ns1:saveLinkResponse */
struct ns1__saveLinkResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 531; } /* = unique id SOAP_TYPE_ns1__saveLinkResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__saveLink
#define SOAP_TYPE_ns1__saveLink (532)
/* ns1:saveLink */
struct ns1__saveLink
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CLink *pLink;	/* optional element of type ns1:CLink */
public:
	int soap_type() const { return 532; } /* = unique id SOAP_TYPE_ns1__saveLink */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveLinkResponse
#define SOAP_TYPE_ns1__cancelSaveLinkResponse (534)
/* ns1:cancelSaveLinkResponse */
struct ns1__cancelSaveLinkResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 534; } /* = unique id SOAP_TYPE_ns1__cancelSaveLinkResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveLink
#define SOAP_TYPE_ns1__cancelSaveLink (535)
/* ns1:cancelSaveLink */
struct ns1__cancelSaveLink
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 linkID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 535; } /* = unique id SOAP_TYPE_ns1__cancelSaveLink */
};
#endif

#ifndef SOAP_TYPE_ns1__getTestVariantTypesResponse
#define SOAP_TYPE_ns1__getTestVariantTypesResponse (536)
/* ns1:getTestVariantTypesResponse */
struct ns1__getTestVariantTypesResponse
{
public:
	ArrayOfstring *pTypeList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfstring */
public:
	int soap_type() const { return 536; } /* = unique id SOAP_TYPE_ns1__getTestVariantTypesResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getTestVariantTypes
#define SOAP_TYPE_ns1__getTestVariantTypes (539)
/* ns1:getTestVariantTypes */
struct ns1__getTestVariantTypes
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 539; } /* = unique id SOAP_TYPE_ns1__getTestVariantTypes */
};
#endif

#ifndef SOAP_TYPE_ns1__getTestRunStepsModesResponse
#define SOAP_TYPE_ns1__getTestRunStepsModesResponse (540)
/* ns1:getTestRunStepsModesResponse */
struct ns1__getTestRunStepsModesResponse
{
public:
	ArrayOfstring *pModeList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfstring */
public:
	int soap_type() const { return 540; } /* = unique id SOAP_TYPE_ns1__getTestRunStepsModesResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getTestRunStepsModes
#define SOAP_TYPE_ns1__getTestRunStepsModes (543)
/* ns1:getTestRunStepsModes */
struct ns1__getTestRunStepsModes
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 543; } /* = unique id SOAP_TYPE_ns1__getTestRunStepsModes */
};
#endif

#ifndef SOAP_TYPE_ns1__getTestCaseResponse
#define SOAP_TYPE_ns1__getTestCaseResponse (544)
/* ns1:getTestCaseResponse */
struct ns1__getTestCaseResponse
{
public:
	ns1__CTestCase *pTestCase;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CTestCase */
public:
	int soap_type() const { return 544; } /* = unique id SOAP_TYPE_ns1__getTestCaseResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getTestCase
#define SOAP_TYPE_ns1__getTestCase (548)
/* ns1:getTestCase */
struct ns1__getTestCase
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 testCaseNumber;	/* required element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 548; } /* = unique id SOAP_TYPE_ns1__getTestCase */
};
#endif

#ifndef SOAP_TYPE_ns1__getTestCaseByRecordIDResponse
#define SOAP_TYPE_ns1__getTestCaseByRecordIDResponse (549)
/* ns1:getTestCaseByRecordIDResponse */
struct ns1__getTestCaseByRecordIDResponse
{
public:
	ns1__CTestCase *pTestCase;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CTestCase */
public:
	int soap_type() const { return 549; } /* = unique id SOAP_TYPE_ns1__getTestCaseByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getTestCaseByRecordID
#define SOAP_TYPE_ns1__getTestCaseByRecordID (552)
/* ns1:getTestCaseByRecordID */
struct ns1__getTestCaseByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 552; } /* = unique id SOAP_TYPE_ns1__getTestCaseByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__addTestCaseResponse
#define SOAP_TYPE_ns1__addTestCaseResponse (554)
/* ns1:addTestCaseResponse */
struct ns1__addTestCaseResponse
{
public:
	LONG64 recordID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
public:
	int soap_type() const { return 554; } /* = unique id SOAP_TYPE_ns1__addTestCaseResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__addTestCase
#define SOAP_TYPE_ns1__addTestCase (555)
/* ns1:addTestCase */
struct ns1__addTestCase
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CTestCase *pTestCase;	/* optional element of type ns1:CTestCase */
public:
	int soap_type() const { return 555; } /* = unique id SOAP_TYPE_ns1__addTestCase */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteTestCaseResponse
#define SOAP_TYPE_ns1__deleteTestCaseResponse (557)
/* ns1:deleteTestCaseResponse */
struct ns1__deleteTestCaseResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 557; } /* = unique id SOAP_TYPE_ns1__deleteTestCaseResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteTestCase
#define SOAP_TYPE_ns1__deleteTestCase (558)
/* ns1:deleteTestCase */
struct ns1__deleteTestCase
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 testCaseNumber;	/* required element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
	bool bDeleteAssociatedTestRuns;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 558; } /* = unique id SOAP_TYPE_ns1__deleteTestCase */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteTestCaseByRecordIDResponse
#define SOAP_TYPE_ns1__deleteTestCaseByRecordIDResponse (560)
/* ns1:deleteTestCaseByRecordIDResponse */
struct ns1__deleteTestCaseByRecordIDResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 560; } /* = unique id SOAP_TYPE_ns1__deleteTestCaseByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteTestCaseByRecordID
#define SOAP_TYPE_ns1__deleteTestCaseByRecordID (561)
/* ns1:deleteTestCaseByRecordID */
struct ns1__deleteTestCaseByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool bDeleteAssociatedTestRun;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 561; } /* = unique id SOAP_TYPE_ns1__deleteTestCaseByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__editTestCaseResponse
#define SOAP_TYPE_ns1__editTestCaseResponse (562)
/* ns1:editTestCaseResponse */
struct ns1__editTestCaseResponse
{
public:
	ns1__CTestCase *pTestCase;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CTestCase */
public:
	int soap_type() const { return 562; } /* = unique id SOAP_TYPE_ns1__editTestCaseResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editTestCase
#define SOAP_TYPE_ns1__editTestCase (565)
/* ns1:editTestCase */
struct ns1__editTestCase
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 testCaseNumber;	/* required element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 565; } /* = unique id SOAP_TYPE_ns1__editTestCase */
};
#endif

#ifndef SOAP_TYPE_ns1__editTestCaseByRecordIDResponse
#define SOAP_TYPE_ns1__editTestCaseByRecordIDResponse (566)
/* ns1:editTestCaseByRecordIDResponse */
struct ns1__editTestCaseByRecordIDResponse
{
public:
	ns1__CTestCase *pTestCase;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CTestCase */
public:
	int soap_type() const { return 566; } /* = unique id SOAP_TYPE_ns1__editTestCaseByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editTestCaseByRecordID
#define SOAP_TYPE_ns1__editTestCaseByRecordID (569)
/* ns1:editTestCaseByRecordID */
struct ns1__editTestCaseByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 569; } /* = unique id SOAP_TYPE_ns1__editTestCaseByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__saveTestCaseResponse
#define SOAP_TYPE_ns1__saveTestCaseResponse (571)
/* ns1:saveTestCaseResponse */
struct ns1__saveTestCaseResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 571; } /* = unique id SOAP_TYPE_ns1__saveTestCaseResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__saveTestCase
#define SOAP_TYPE_ns1__saveTestCase (572)
/* ns1:saveTestCase */
struct ns1__saveTestCase
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CTestCase *pTestCase;	/* optional element of type ns1:CTestCase */
public:
	int soap_type() const { return 572; } /* = unique id SOAP_TYPE_ns1__saveTestCase */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveTestCaseResponse
#define SOAP_TYPE_ns1__cancelSaveTestCaseResponse (574)
/* ns1:cancelSaveTestCaseResponse */
struct ns1__cancelSaveTestCaseResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 574; } /* = unique id SOAP_TYPE_ns1__cancelSaveTestCaseResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveTestCase
#define SOAP_TYPE_ns1__cancelSaveTestCase (575)
/* ns1:cancelSaveTestCase */
struct ns1__cancelSaveTestCase
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 575; } /* = unique id SOAP_TYPE_ns1__cancelSaveTestCase */
};
#endif

#ifndef SOAP_TYPE_ns1__getTestRunResponse
#define SOAP_TYPE_ns1__getTestRunResponse (576)
/* ns1:getTestRunResponse */
struct ns1__getTestRunResponse
{
public:
	ns1__CTestRun *pTestRun;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CTestRun */
public:
	int soap_type() const { return 576; } /* = unique id SOAP_TYPE_ns1__getTestRunResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getTestRun
#define SOAP_TYPE_ns1__getTestRun (580)
/* ns1:getTestRun */
struct ns1__getTestRun
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 testRunNumber;	/* required element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 580; } /* = unique id SOAP_TYPE_ns1__getTestRun */
};
#endif

#ifndef SOAP_TYPE_ns1__getTestRunByRecordIDResponse
#define SOAP_TYPE_ns1__getTestRunByRecordIDResponse (581)
/* ns1:getTestRunByRecordIDResponse */
struct ns1__getTestRunByRecordIDResponse
{
public:
	ns1__CTestRun *pTestRun;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CTestRun */
public:
	int soap_type() const { return 581; } /* = unique id SOAP_TYPE_ns1__getTestRunByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getTestRunByRecordID
#define SOAP_TYPE_ns1__getTestRunByRecordID (584)
/* ns1:getTestRunByRecordID */
struct ns1__getTestRunByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 584; } /* = unique id SOAP_TYPE_ns1__getTestRunByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteTestRunResponse
#define SOAP_TYPE_ns1__deleteTestRunResponse (586)
/* ns1:deleteTestRunResponse */
struct ns1__deleteTestRunResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 586; } /* = unique id SOAP_TYPE_ns1__deleteTestRunResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteTestRun
#define SOAP_TYPE_ns1__deleteTestRun (587)
/* ns1:deleteTestRun */
struct ns1__deleteTestRun
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 testRunNumber;	/* required element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 587; } /* = unique id SOAP_TYPE_ns1__deleteTestRun */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteTestRunByRecordIDResponse
#define SOAP_TYPE_ns1__deleteTestRunByRecordIDResponse (589)
/* ns1:deleteTestRunByRecordIDResponse */
struct ns1__deleteTestRunByRecordIDResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 589; } /* = unique id SOAP_TYPE_ns1__deleteTestRunByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteTestRunByRecordID
#define SOAP_TYPE_ns1__deleteTestRunByRecordID (590)
/* ns1:deleteTestRunByRecordID */
struct ns1__deleteTestRunByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 590; } /* = unique id SOAP_TYPE_ns1__deleteTestRunByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__editTestRunResponse
#define SOAP_TYPE_ns1__editTestRunResponse (591)
/* ns1:editTestRunResponse */
struct ns1__editTestRunResponse
{
public:
	ns1__CTestRun *pTestRun;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CTestRun */
public:
	int soap_type() const { return 591; } /* = unique id SOAP_TYPE_ns1__editTestRunResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editTestRun
#define SOAP_TYPE_ns1__editTestRun (594)
/* ns1:editTestRun */
struct ns1__editTestRun
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 testRunNumber;	/* required element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 594; } /* = unique id SOAP_TYPE_ns1__editTestRun */
};
#endif

#ifndef SOAP_TYPE_ns1__editTestRunByRecordIDResponse
#define SOAP_TYPE_ns1__editTestRunByRecordIDResponse (595)
/* ns1:editTestRunByRecordIDResponse */
struct ns1__editTestRunByRecordIDResponse
{
public:
	ns1__CTestRun *pTestRun;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CTestRun */
public:
	int soap_type() const { return 595; } /* = unique id SOAP_TYPE_ns1__editTestRunByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editTestRunByRecordID
#define SOAP_TYPE_ns1__editTestRunByRecordID (598)
/* ns1:editTestRunByRecordID */
struct ns1__editTestRunByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 598; } /* = unique id SOAP_TYPE_ns1__editTestRunByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__saveTestRunResponse
#define SOAP_TYPE_ns1__saveTestRunResponse (600)
/* ns1:saveTestRunResponse */
struct ns1__saveTestRunResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 600; } /* = unique id SOAP_TYPE_ns1__saveTestRunResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__saveTestRun
#define SOAP_TYPE_ns1__saveTestRun (601)
/* ns1:saveTestRun */
struct ns1__saveTestRun
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CTestRun *pTestRun;	/* optional element of type ns1:CTestRun */
public:
	int soap_type() const { return 601; } /* = unique id SOAP_TYPE_ns1__saveTestRun */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveTestRunResponse
#define SOAP_TYPE_ns1__cancelSaveTestRunResponse (603)
/* ns1:cancelSaveTestRunResponse */
struct ns1__cancelSaveTestRunResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 603; } /* = unique id SOAP_TYPE_ns1__cancelSaveTestRunResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveTestRun
#define SOAP_TYPE_ns1__cancelSaveTestRun (604)
/* ns1:cancelSaveTestRun */
struct ns1__cancelSaveTestRun
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 604; } /* = unique id SOAP_TYPE_ns1__cancelSaveTestRun */
};
#endif

#ifndef SOAP_TYPE_ns1__createDefectForTestRunResponse
#define SOAP_TYPE_ns1__createDefectForTestRunResponse (605)
/* ns1:createDefectForTestRunResponse */
struct ns1__createDefectForTestRunResponse
{
public:
	ns1__CDefect *pDefect;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CDefect */
public:
	int soap_type() const { return 605; } /* = unique id SOAP_TYPE_ns1__createDefectForTestRunResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__createDefectForTestRun
#define SOAP_TYPE_ns1__createDefectForTestRun (608)
/* ns1:createDefectForTestRun */
struct ns1__createDefectForTestRun
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 608; } /* = unique id SOAP_TYPE_ns1__createDefectForTestRun */
};
#endif

#ifndef SOAP_TYPE_ns1__generateTestRunsResponse
#define SOAP_TYPE_ns1__generateTestRunsResponse (609)
/* ns1:generateTestRunsResponse */
struct ns1__generateTestRunsResponse
{
public:
	ArrayOfCItemToTrack *pResults;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCItemToTrack */
public:
	int soap_type() const { return 609; } /* = unique id SOAP_TYPE_ns1__generateTestRunsResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__generateTestRuns
#define SOAP_TYPE_ns1__generateTestRuns (614)
/* ns1:generateTestRuns */
struct ns1__generateTestRuns
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	ArrayOfCTestRunVariantField *testVariants;	/* optional element of type ArrayOfCTestRunVariantField */
	char *testRunSet;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 614; } /* = unique id SOAP_TYPE_ns1__generateTestRuns */
};
#endif

#ifndef SOAP_TYPE_ns1__getFolderTypeByNameResponse
#define SOAP_TYPE_ns1__getFolderTypeByNameResponse (615)
/* ns1:getFolderTypeByNameResponse */
struct ns1__getFolderTypeByNameResponse
{
public:
	ns1__CFolderType *pType;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CFolderType */
public:
	int soap_type() const { return 615; } /* = unique id SOAP_TYPE_ns1__getFolderTypeByNameResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getFolderTypeByName
#define SOAP_TYPE_ns1__getFolderTypeByName (618)
/* ns1:getFolderTypeByName */
struct ns1__getFolderTypeByName
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *name;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 618; } /* = unique id SOAP_TYPE_ns1__getFolderTypeByName */
};
#endif

#ifndef SOAP_TYPE_ns1__getFolderTypeListResponse
#define SOAP_TYPE_ns1__getFolderTypeListResponse (619)
/* ns1:getFolderTypeListResponse */
struct ns1__getFolderTypeListResponse
{
public:
	ArrayOfCFolderType *pTypeList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCFolderType */
public:
	int soap_type() const { return 619; } /* = unique id SOAP_TYPE_ns1__getFolderTypeListResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getFolderTypeList
#define SOAP_TYPE_ns1__getFolderTypeList (623)
/* ns1:getFolderTypeList */
struct ns1__getFolderTypeList
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 623; } /* = unique id SOAP_TYPE_ns1__getFolderTypeList */
};
#endif

#ifndef SOAP_TYPE_ns1__addFolderResponse
#define SOAP_TYPE_ns1__addFolderResponse (625)
/* ns1:addFolderResponse */
struct ns1__addFolderResponse
{
public:
	LONG64 recordID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
public:
	int soap_type() const { return 625; } /* = unique id SOAP_TYPE_ns1__addFolderResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__addFolder
#define SOAP_TYPE_ns1__addFolder (626)
/* ns1:addFolder */
struct ns1__addFolder
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CFolder *pFolder;	/* optional element of type ns1:CFolder */
public:
	int soap_type() const { return 626; } /* = unique id SOAP_TYPE_ns1__addFolder */
};
#endif

#ifndef SOAP_TYPE_ns1__editFolderResponse
#define SOAP_TYPE_ns1__editFolderResponse (627)
/* ns1:editFolderResponse */
struct ns1__editFolderResponse
{
public:
	ns1__CFolder *pFolder;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CFolder */
public:
	int soap_type() const { return 627; } /* = unique id SOAP_TYPE_ns1__editFolderResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editFolder
#define SOAP_TYPE_ns1__editFolder (630)
/* ns1:editFolder */
struct ns1__editFolder
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *folderPath;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 630; } /* = unique id SOAP_TYPE_ns1__editFolder */
};
#endif

#ifndef SOAP_TYPE_ns1__editFolderByRecordIDResponse
#define SOAP_TYPE_ns1__editFolderByRecordIDResponse (631)
/* ns1:editFolderByRecordIDResponse */
struct ns1__editFolderByRecordIDResponse
{
public:
	ns1__CFolder *pFolder;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CFolder */
public:
	int soap_type() const { return 631; } /* = unique id SOAP_TYPE_ns1__editFolderByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editFolderByRecordID
#define SOAP_TYPE_ns1__editFolderByRecordID (634)
/* ns1:editFolderByRecordID */
struct ns1__editFolderByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool publicFolder;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 634; } /* = unique id SOAP_TYPE_ns1__editFolderByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__saveFolderResponse
#define SOAP_TYPE_ns1__saveFolderResponse (636)
/* ns1:saveFolderResponse */
struct ns1__saveFolderResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 636; } /* = unique id SOAP_TYPE_ns1__saveFolderResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__saveFolder
#define SOAP_TYPE_ns1__saveFolder (637)
/* ns1:saveFolder */
struct ns1__saveFolder
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CFolder *pFolder;	/* optional element of type ns1:CFolder */
public:
	int soap_type() const { return 637; } /* = unique id SOAP_TYPE_ns1__saveFolder */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveFolderResponse
#define SOAP_TYPE_ns1__cancelSaveFolderResponse (639)
/* ns1:cancelSaveFolderResponse */
struct ns1__cancelSaveFolderResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 639; } /* = unique id SOAP_TYPE_ns1__cancelSaveFolderResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveFolder
#define SOAP_TYPE_ns1__cancelSaveFolder (640)
/* ns1:cancelSaveFolder */
struct ns1__cancelSaveFolder
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 640; } /* = unique id SOAP_TYPE_ns1__cancelSaveFolder */
};
#endif

#ifndef SOAP_TYPE_ns1__getFolderResponse
#define SOAP_TYPE_ns1__getFolderResponse (641)
/* ns1:getFolderResponse */
struct ns1__getFolderResponse
{
public:
	ns1__CFolder *pFolder;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CFolder */
public:
	int soap_type() const { return 641; } /* = unique id SOAP_TYPE_ns1__getFolderResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getFolder
#define SOAP_TYPE_ns1__getFolder (644)
/* ns1:getFolder */
struct ns1__getFolder
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *path;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 644; } /* = unique id SOAP_TYPE_ns1__getFolder */
};
#endif

#ifndef SOAP_TYPE_ns1__getFolderByRecordIDResponse
#define SOAP_TYPE_ns1__getFolderByRecordIDResponse (645)
/* ns1:getFolderByRecordIDResponse */
struct ns1__getFolderByRecordIDResponse
{
public:
	ns1__CFolder *pFolder;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CFolder */
public:
	int soap_type() const { return 645; } /* = unique id SOAP_TYPE_ns1__getFolderByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getFolderByRecordID
#define SOAP_TYPE_ns1__getFolderByRecordID (648)
/* ns1:getFolderByRecordID */
struct ns1__getFolderByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool publicFolder;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 648; } /* = unique id SOAP_TYPE_ns1__getFolderByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteFolderResponse
#define SOAP_TYPE_ns1__deleteFolderResponse (650)
/* ns1:deleteFolderResponse */
struct ns1__deleteFolderResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 650; } /* = unique id SOAP_TYPE_ns1__deleteFolderResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteFolder
#define SOAP_TYPE_ns1__deleteFolder (651)
/* ns1:deleteFolder */
struct ns1__deleteFolder
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *folderPath;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 651; } /* = unique id SOAP_TYPE_ns1__deleteFolder */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteFolderByRecordIDResponse
#define SOAP_TYPE_ns1__deleteFolderByRecordIDResponse (653)
/* ns1:deleteFolderByRecordIDResponse */
struct ns1__deleteFolderByRecordIDResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 653; } /* = unique id SOAP_TYPE_ns1__deleteFolderByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteFolderByRecordID
#define SOAP_TYPE_ns1__deleteFolderByRecordID (654)
/* ns1:deleteFolderByRecordID */
struct ns1__deleteFolderByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool publicFolder;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 654; } /* = unique id SOAP_TYPE_ns1__deleteFolderByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__addEntityToFolderByRecordIDResponse
#define SOAP_TYPE_ns1__addEntityToFolderByRecordIDResponse (656)
/* ns1:addEntityToFolderByRecordIDResponse */
struct ns1__addEntityToFolderByRecordIDResponse
{
public:
	int itemRecordID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 656; } /* = unique id SOAP_TYPE_ns1__addEntityToFolderByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__addEntityToFolderByRecordID
#define SOAP_TYPE_ns1__addEntityToFolderByRecordID (657)
/* ns1:addEntityToFolderByRecordID */
struct ns1__addEntityToFolderByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool publicFolder;	/* required element of type xsd:boolean */
	LONG64 entityRecordID;	/* required element of type xsd:long */
	char *entityTableName;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 657; } /* = unique id SOAP_TYPE_ns1__addEntityToFolderByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__removeEntityFromFolderByRecordIDResponse
#define SOAP_TYPE_ns1__removeEntityFromFolderByRecordIDResponse (659)
/* ns1:removeEntityFromFolderByRecordIDResponse */
struct ns1__removeEntityFromFolderByRecordIDResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 659; } /* = unique id SOAP_TYPE_ns1__removeEntityFromFolderByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__removeEntityFromFolderByRecordID
#define SOAP_TYPE_ns1__removeEntityFromFolderByRecordID (660)
/* ns1:removeEntityFromFolderByRecordID */
struct ns1__removeEntityFromFolderByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool publicFolder;	/* required element of type xsd:boolean */
	ns1__CFolderItem *entity;	/* optional element of type ns1:CFolderItem */
public:
	int soap_type() const { return 660; } /* = unique id SOAP_TYPE_ns1__removeEntityFromFolderByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__getEntityListForFolderByRecordIDResponse
#define SOAP_TYPE_ns1__getEntityListForFolderByRecordIDResponse (661)
/* ns1:getEntityListForFolderByRecordIDResponse */
struct ns1__getEntityListForFolderByRecordIDResponse
{
public:
	ArrayOfCFolderItem *pEntityList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCFolderItem */
public:
	int soap_type() const { return 661; } /* = unique id SOAP_TYPE_ns1__getEntityListForFolderByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getEntityListForFolderByRecordID
#define SOAP_TYPE_ns1__getEntityListForFolderByRecordID (665)
/* ns1:getEntityListForFolderByRecordID */
struct ns1__getEntityListForFolderByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool publicFolder;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 665; } /* = unique id SOAP_TYPE_ns1__getEntityListForFolderByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__getFolderListForEntityByRecordIDResponse
#define SOAP_TYPE_ns1__getFolderListForEntityByRecordIDResponse (666)
/* ns1:getFolderListForEntityByRecordIDResponse */
struct ns1__getFolderListForEntityByRecordIDResponse
{
public:
	ArrayOfCFolder *pFolderList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCFolder */
public:
	int soap_type() const { return 666; } /* = unique id SOAP_TYPE_ns1__getFolderListForEntityByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getFolderListForEntityByRecordID
#define SOAP_TYPE_ns1__getFolderListForEntityByRecordID (670)
/* ns1:getFolderListForEntityByRecordID */
struct ns1__getFolderListForEntityByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *tablename;	/* optional element of type xsd:string */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 670; } /* = unique id SOAP_TYPE_ns1__getFolderListForEntityByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__getFolderPathSeparatorResponse
#define SOAP_TYPE_ns1__getFolderPathSeparatorResponse (673)
/* ns1:getFolderPathSeparatorResponse */
struct ns1__getFolderPathSeparatorResponse
{
public:
	char separator;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:byte */
public:
	int soap_type() const { return 673; } /* = unique id SOAP_TYPE_ns1__getFolderPathSeparatorResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getFolderPathSeparator
#define SOAP_TYPE_ns1__getFolderPathSeparator (674)
/* ns1:getFolderPathSeparator */
struct ns1__getFolderPathSeparator
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 674; } /* = unique id SOAP_TYPE_ns1__getFolderPathSeparator */
};
#endif

#ifndef SOAP_TYPE_ns1__getRootPublicFolderPathResponse
#define SOAP_TYPE_ns1__getRootPublicFolderPathResponse (677)
/* ns1:getRootPublicFolderPathResponse */
struct ns1__getRootPublicFolderPathResponse
{
public:
	char *strPublicPath;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
public:
	int soap_type() const { return 677; } /* = unique id SOAP_TYPE_ns1__getRootPublicFolderPathResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getRootPublicFolderPath
#define SOAP_TYPE_ns1__getRootPublicFolderPath (678)
/* ns1:getRootPublicFolderPath */
struct ns1__getRootPublicFolderPath
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 678; } /* = unique id SOAP_TYPE_ns1__getRootPublicFolderPath */
};
#endif

#ifndef SOAP_TYPE_ns1__getRootPrivateFolderPathResponse
#define SOAP_TYPE_ns1__getRootPrivateFolderPathResponse (680)
/* ns1:getRootPrivateFolderPathResponse */
struct ns1__getRootPrivateFolderPathResponse
{
public:
	char *strPrivatePath;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
public:
	int soap_type() const { return 680; } /* = unique id SOAP_TYPE_ns1__getRootPrivateFolderPathResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getRootPrivateFolderPath
#define SOAP_TYPE_ns1__getRootPrivateFolderPath (681)
/* ns1:getRootPrivateFolderPath */
struct ns1__getRootPrivateFolderPath
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
public:
	int soap_type() const { return 681; } /* = unique id SOAP_TYPE_ns1__getRootPrivateFolderPath */
};
#endif

#ifndef SOAP_TYPE_ns1__editFolderItemRankResponse
#define SOAP_TYPE_ns1__editFolderItemRankResponse (682)
/* ns1:editFolderItemRankResponse */
struct ns1__editFolderItemRankResponse
{
public:
	ArrayOfCFolderItem *pEntityList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfCFolderItem */
public:
	int soap_type() const { return 682; } /* = unique id SOAP_TYPE_ns1__editFolderItemRankResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editFolderItemRank
#define SOAP_TYPE_ns1__editFolderItemRank (685)
/* ns1:editFolderItemRank */
struct ns1__editFolderItemRank
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool publicFolder;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 685; } /* = unique id SOAP_TYPE_ns1__editFolderItemRank */
};
#endif

#ifndef SOAP_TYPE_ns1__saveFolderItemRankResponse
#define SOAP_TYPE_ns1__saveFolderItemRankResponse (687)
/* ns1:saveFolderItemRankResponse */
struct ns1__saveFolderItemRankResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 687; } /* = unique id SOAP_TYPE_ns1__saveFolderItemRankResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__saveFolderItemRank
#define SOAP_TYPE_ns1__saveFolderItemRank (688)
/* ns1:saveFolderItemRank */
struct ns1__saveFolderItemRank
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool publicFolder;	/* required element of type xsd:boolean */
	ArrayOfCFolderItem *folderItemList;	/* optional element of type ArrayOfCFolderItem */
public:
	int soap_type() const { return 688; } /* = unique id SOAP_TYPE_ns1__saveFolderItemRank */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveFolderItemRankResponse
#define SOAP_TYPE_ns1__cancelSaveFolderItemRankResponse (690)
/* ns1:cancelSaveFolderItemRankResponse */
struct ns1__cancelSaveFolderItemRankResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 690; } /* = unique id SOAP_TYPE_ns1__cancelSaveFolderItemRankResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveFolderItemRank
#define SOAP_TYPE_ns1__cancelSaveFolderItemRank (691)
/* ns1:cancelSaveFolderItemRank */
struct ns1__cancelSaveFolderItemRank
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 691; } /* = unique id SOAP_TYPE_ns1__cancelSaveFolderItemRank */
};
#endif

#ifndef SOAP_TYPE_ns1__getRequirementResponse
#define SOAP_TYPE_ns1__getRequirementResponse (692)
/* ns1:getRequirementResponse */
struct ns1__getRequirementResponse
{
public:
	ns1__CRequirement *pRequirement;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CRequirement */
public:
	int soap_type() const { return 692; } /* = unique id SOAP_TYPE_ns1__getRequirementResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getRequirement
#define SOAP_TYPE_ns1__getRequirement (696)
/* ns1:getRequirement */
struct ns1__getRequirement
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 requirementNumber;	/* required element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 696; } /* = unique id SOAP_TYPE_ns1__getRequirement */
};
#endif

#ifndef SOAP_TYPE_ns1__getRequirementByRecordIDResponse
#define SOAP_TYPE_ns1__getRequirementByRecordIDResponse (697)
/* ns1:getRequirementByRecordIDResponse */
struct ns1__getRequirementByRecordIDResponse
{
public:
	ns1__CRequirement *pRequirement;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CRequirement */
public:
	int soap_type() const { return 697; } /* = unique id SOAP_TYPE_ns1__getRequirementByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getRequirementByRecordID
#define SOAP_TYPE_ns1__getRequirementByRecordID (700)
/* ns1:getRequirementByRecordID */
struct ns1__getRequirementByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 700; } /* = unique id SOAP_TYPE_ns1__getRequirementByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__addRequirementResponse
#define SOAP_TYPE_ns1__addRequirementResponse (702)
/* ns1:addRequirementResponse */
struct ns1__addRequirementResponse
{
public:
	LONG64 recordID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
public:
	int soap_type() const { return 702; } /* = unique id SOAP_TYPE_ns1__addRequirementResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__addRequirement
#define SOAP_TYPE_ns1__addRequirement (703)
/* ns1:addRequirement */
struct ns1__addRequirement
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CRequirement *pRequirement;	/* optional element of type ns1:CRequirement */
public:
	int soap_type() const { return 703; } /* = unique id SOAP_TYPE_ns1__addRequirement */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteRequirementResponse
#define SOAP_TYPE_ns1__deleteRequirementResponse (705)
/* ns1:deleteRequirementResponse */
struct ns1__deleteRequirementResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 705; } /* = unique id SOAP_TYPE_ns1__deleteRequirementResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteRequirement
#define SOAP_TYPE_ns1__deleteRequirement (706)
/* ns1:deleteRequirement */
struct ns1__deleteRequirement
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 requirementNumber;	/* required element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 706; } /* = unique id SOAP_TYPE_ns1__deleteRequirement */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteRequirementByRecordIDResponse
#define SOAP_TYPE_ns1__deleteRequirementByRecordIDResponse (708)
/* ns1:deleteRequirementByRecordIDResponse */
struct ns1__deleteRequirementByRecordIDResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 708; } /* = unique id SOAP_TYPE_ns1__deleteRequirementByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteRequirementByRecordID
#define SOAP_TYPE_ns1__deleteRequirementByRecordID (709)
/* ns1:deleteRequirementByRecordID */
struct ns1__deleteRequirementByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 709; } /* = unique id SOAP_TYPE_ns1__deleteRequirementByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__editRequirementResponse
#define SOAP_TYPE_ns1__editRequirementResponse (710)
/* ns1:editRequirementResponse */
struct ns1__editRequirementResponse
{
public:
	ns1__CRequirement *pRequirement;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CRequirement */
public:
	int soap_type() const { return 710; } /* = unique id SOAP_TYPE_ns1__editRequirementResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editRequirement
#define SOAP_TYPE_ns1__editRequirement (713)
/* ns1:editRequirement */
struct ns1__editRequirement
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 requirementNumber;	/* required element of type xsd:long */
	char *summary;	/* optional element of type xsd:string */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 713; } /* = unique id SOAP_TYPE_ns1__editRequirement */
};
#endif

#ifndef SOAP_TYPE_ns1__editRequirementByRecordIDResponse
#define SOAP_TYPE_ns1__editRequirementByRecordIDResponse (714)
/* ns1:editRequirementByRecordIDResponse */
struct ns1__editRequirementByRecordIDResponse
{
public:
	ns1__CRequirement *pRequirement;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CRequirement */
public:
	int soap_type() const { return 714; } /* = unique id SOAP_TYPE_ns1__editRequirementByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editRequirementByRecordID
#define SOAP_TYPE_ns1__editRequirementByRecordID (717)
/* ns1:editRequirementByRecordID */
struct ns1__editRequirementByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 717; } /* = unique id SOAP_TYPE_ns1__editRequirementByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__saveRequirementResponse
#define SOAP_TYPE_ns1__saveRequirementResponse (719)
/* ns1:saveRequirementResponse */
struct ns1__saveRequirementResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 719; } /* = unique id SOAP_TYPE_ns1__saveRequirementResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__saveRequirement
#define SOAP_TYPE_ns1__saveRequirement (720)
/* ns1:saveRequirement */
struct ns1__saveRequirement
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CRequirement *pRequirement;	/* optional element of type ns1:CRequirement */
public:
	int soap_type() const { return 720; } /* = unique id SOAP_TYPE_ns1__saveRequirement */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveRequirementResponse
#define SOAP_TYPE_ns1__cancelSaveRequirementResponse (722)
/* ns1:cancelSaveRequirementResponse */
struct ns1__cancelSaveRequirementResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 722; } /* = unique id SOAP_TYPE_ns1__cancelSaveRequirementResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveRequirement
#define SOAP_TYPE_ns1__cancelSaveRequirement (723)
/* ns1:cancelSaveRequirement */
struct ns1__cancelSaveRequirement
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 723; } /* = unique id SOAP_TYPE_ns1__cancelSaveRequirement */
};
#endif

#ifndef SOAP_TYPE_ns1__appendToRequirementDocumentResponse
#define SOAP_TYPE_ns1__appendToRequirementDocumentResponse (725)
/* ns1:appendToRequirementDocumentResponse */
struct ns1__appendToRequirementDocumentResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 725; } /* = unique id SOAP_TYPE_ns1__appendToRequirementDocumentResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__appendToRequirementDocument
#define SOAP_TYPE_ns1__appendToRequirementDocument (726)
/* ns1:appendToRequirementDocument */
struct ns1__appendToRequirementDocument
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 requirementID;	/* required element of type xsd:long */
	LONG64 documentID;	/* required element of type xsd:long */
	LONG64 parentRequirementID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 726; } /* = unique id SOAP_TYPE_ns1__appendToRequirementDocument */
};
#endif

#ifndef SOAP_TYPE_ns1__getDocumentIDsForRequirementResponse
#define SOAP_TYPE_ns1__getDocumentIDsForRequirementResponse (727)
/* ns1:getDocumentIDsForRequirementResponse */
struct ns1__getDocumentIDsForRequirementResponse
{
public:
	ArrayOflong *recordIDs;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOflong */
public:
	int soap_type() const { return 727; } /* = unique id SOAP_TYPE_ns1__getDocumentIDsForRequirementResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getDocumentIDsForRequirement
#define SOAP_TYPE_ns1__getDocumentIDsForRequirement (731)
/* ns1:getDocumentIDsForRequirement */
struct ns1__getDocumentIDsForRequirement
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 requirementID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 731; } /* = unique id SOAP_TYPE_ns1__getDocumentIDsForRequirement */
};
#endif

#ifndef SOAP_TYPE_ns1__changeRequirementTypeResponse
#define SOAP_TYPE_ns1__changeRequirementTypeResponse (733)
/* ns1:changeRequirementTypeResponse */
struct ns1__changeRequirementTypeResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 733; } /* = unique id SOAP_TYPE_ns1__changeRequirementTypeResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__changeRequirementType
#define SOAP_TYPE_ns1__changeRequirementType (734)
/* ns1:changeRequirementType */
struct ns1__changeRequirementType
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 requirementID;	/* required element of type xsd:long */
	char *newTypeName;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 734; } /* = unique id SOAP_TYPE_ns1__changeRequirementType */
};
#endif

#ifndef SOAP_TYPE_ns1__getRequirementDocumentResponse
#define SOAP_TYPE_ns1__getRequirementDocumentResponse (735)
/* ns1:getRequirementDocumentResponse */
struct ns1__getRequirementDocumentResponse
{
public:
	ns1__CRequirementDocument *pRequirementDocument;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CRequirementDocument */
public:
	int soap_type() const { return 735; } /* = unique id SOAP_TYPE_ns1__getRequirementDocumentResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getRequirementDocument
#define SOAP_TYPE_ns1__getRequirementDocument (739)
/* ns1:getRequirementDocument */
struct ns1__getRequirementDocument
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 documentNumber;	/* required element of type xsd:long */
	char *name;	/* optional element of type xsd:string */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 739; } /* = unique id SOAP_TYPE_ns1__getRequirementDocument */
};
#endif

#ifndef SOAP_TYPE_ns1__getRequirementDocumentByRecordIDResponse
#define SOAP_TYPE_ns1__getRequirementDocumentByRecordIDResponse (740)
/* ns1:getRequirementDocumentByRecordIDResponse */
struct ns1__getRequirementDocumentByRecordIDResponse
{
public:
	ns1__CRequirementDocument *pRequirementDocument;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CRequirementDocument */
public:
	int soap_type() const { return 740; } /* = unique id SOAP_TYPE_ns1__getRequirementDocumentByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getRequirementDocumentByRecordID
#define SOAP_TYPE_ns1__getRequirementDocumentByRecordID (743)
/* ns1:getRequirementDocumentByRecordID */
struct ns1__getRequirementDocumentByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 743; } /* = unique id SOAP_TYPE_ns1__getRequirementDocumentByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__addRequirementDocumentResponse
#define SOAP_TYPE_ns1__addRequirementDocumentResponse (745)
/* ns1:addRequirementDocumentResponse */
struct ns1__addRequirementDocumentResponse
{
public:
	LONG64 recordID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
public:
	int soap_type() const { return 745; } /* = unique id SOAP_TYPE_ns1__addRequirementDocumentResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__addRequirementDocument
#define SOAP_TYPE_ns1__addRequirementDocument (746)
/* ns1:addRequirementDocument */
struct ns1__addRequirementDocument
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CRequirementDocument *pRequirementDocument;	/* optional element of type ns1:CRequirementDocument */
public:
	int soap_type() const { return 746; } /* = unique id SOAP_TYPE_ns1__addRequirementDocument */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteRequirementDocumentResponse
#define SOAP_TYPE_ns1__deleteRequirementDocumentResponse (748)
/* ns1:deleteRequirementDocumentResponse */
struct ns1__deleteRequirementDocumentResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 748; } /* = unique id SOAP_TYPE_ns1__deleteRequirementDocumentResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteRequirementDocument
#define SOAP_TYPE_ns1__deleteRequirementDocument (749)
/* ns1:deleteRequirementDocument */
struct ns1__deleteRequirementDocument
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 documentNumber;	/* required element of type xsd:long */
	char *name;	/* optional element of type xsd:string */
	bool bDeleteAssociatedRequirements;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 749; } /* = unique id SOAP_TYPE_ns1__deleteRequirementDocument */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteRequirementDocumentByRecordIDResponse
#define SOAP_TYPE_ns1__deleteRequirementDocumentByRecordIDResponse (751)
/* ns1:deleteRequirementDocumentByRecordIDResponse */
struct ns1__deleteRequirementDocumentByRecordIDResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 751; } /* = unique id SOAP_TYPE_ns1__deleteRequirementDocumentByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__deleteRequirementDocumentByRecordID
#define SOAP_TYPE_ns1__deleteRequirementDocumentByRecordID (752)
/* ns1:deleteRequirementDocumentByRecordID */
struct ns1__deleteRequirementDocumentByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool bDeleteAssociatedRequirements;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 752; } /* = unique id SOAP_TYPE_ns1__deleteRequirementDocumentByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__editRequirementDocumentResponse
#define SOAP_TYPE_ns1__editRequirementDocumentResponse (753)
/* ns1:editRequirementDocumentResponse */
struct ns1__editRequirementDocumentResponse
{
public:
	ns1__CRequirementDocument *pRequirementDocument;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CRequirementDocument */
public:
	int soap_type() const { return 753; } /* = unique id SOAP_TYPE_ns1__editRequirementDocumentResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editRequirementDocument
#define SOAP_TYPE_ns1__editRequirementDocument (756)
/* ns1:editRequirementDocument */
struct ns1__editRequirementDocument
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 documentNumber;	/* required element of type xsd:long */
	char *name;	/* optional element of type xsd:string */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 756; } /* = unique id SOAP_TYPE_ns1__editRequirementDocument */
};
#endif

#ifndef SOAP_TYPE_ns1__editRequirementDocumentByRecordIDResponse
#define SOAP_TYPE_ns1__editRequirementDocumentByRecordIDResponse (757)
/* ns1:editRequirementDocumentByRecordIDResponse */
struct ns1__editRequirementDocumentByRecordIDResponse
{
public:
	ns1__CRequirementDocument *pRequirementDocument;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CRequirementDocument */
public:
	int soap_type() const { return 757; } /* = unique id SOAP_TYPE_ns1__editRequirementDocumentByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__editRequirementDocumentByRecordID
#define SOAP_TYPE_ns1__editRequirementDocumentByRecordID (760)
/* ns1:editRequirementDocumentByRecordID */
struct ns1__editRequirementDocumentByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
	bool bDownloadAttachments;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 760; } /* = unique id SOAP_TYPE_ns1__editRequirementDocumentByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__saveRequirementDocumentResponse
#define SOAP_TYPE_ns1__saveRequirementDocumentResponse (762)
/* ns1:saveRequirementDocumentResponse */
struct ns1__saveRequirementDocumentResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 762; } /* = unique id SOAP_TYPE_ns1__saveRequirementDocumentResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__saveRequirementDocument
#define SOAP_TYPE_ns1__saveRequirementDocument (763)
/* ns1:saveRequirementDocument */
struct ns1__saveRequirementDocument
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	ns1__CRequirementDocument *pRequirementDocument;	/* optional element of type ns1:CRequirementDocument */
public:
	int soap_type() const { return 763; } /* = unique id SOAP_TYPE_ns1__saveRequirementDocument */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveRequirementDocumentResponse
#define SOAP_TYPE_ns1__cancelSaveRequirementDocumentResponse (765)
/* ns1:cancelSaveRequirementDocumentResponse */
struct ns1__cancelSaveRequirementDocumentResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 765; } /* = unique id SOAP_TYPE_ns1__cancelSaveRequirementDocumentResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__cancelSaveRequirementDocument
#define SOAP_TYPE_ns1__cancelSaveRequirementDocument (766)
/* ns1:cancelSaveRequirementDocument */
struct ns1__cancelSaveRequirementDocument
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 recordID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 766; } /* = unique id SOAP_TYPE_ns1__cancelSaveRequirementDocument */
};
#endif

#ifndef SOAP_TYPE_ns1__createSnapshotResponse
#define SOAP_TYPE_ns1__createSnapshotResponse (768)
/* ns1:createSnapshotResponse */
struct ns1__createSnapshotResponse
{
public:
	int result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 768; } /* = unique id SOAP_TYPE_ns1__createSnapshotResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__createSnapshot
#define SOAP_TYPE_ns1__createSnapshot (769)
/* ns1:createSnapshot */
struct ns1__createSnapshot
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 documentID;	/* required element of type xsd:long */
	ns1__CSnapshotInfo *snapshot;	/* optional element of type ns1:CSnapshotInfo */
public:
	int soap_type() const { return 769; } /* = unique id SOAP_TYPE_ns1__createSnapshot */
};
#endif

#ifndef SOAP_TYPE_ns1__getRequirementIDsForDocumentResponse
#define SOAP_TYPE_ns1__getRequirementIDsForDocumentResponse (770)
/* ns1:getRequirementIDsForDocumentResponse */
struct ns1__getRequirementIDsForDocumentResponse
{
public:
	ArrayOflong *recordIDs;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOflong */
public:
	int soap_type() const { return 770; } /* = unique id SOAP_TYPE_ns1__getRequirementIDsForDocumentResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getRequirementIDsForDocument
#define SOAP_TYPE_ns1__getRequirementIDsForDocument (773)
/* ns1:getRequirementIDsForDocument */
struct ns1__getRequirementIDsForDocument
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 documentID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 773; } /* = unique id SOAP_TYPE_ns1__getRequirementIDsForDocument */
};
#endif

#ifndef SOAP_TYPE_ns1__getDocumentTreeResponse
#define SOAP_TYPE_ns1__getDocumentTreeResponse (774)
/* ns1:getDocumentTreeResponse */
struct ns1__getDocumentTreeResponse
{
public:
	ns1__CTreeNodeSoap *docTreeRootNode;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CTreeNodeSoap */
public:
	int soap_type() const { return 774; } /* = unique id SOAP_TYPE_ns1__getDocumentTreeResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getDocumentTree
#define SOAP_TYPE_ns1__getDocumentTree (777)
/* ns1:getDocumentTree */
struct ns1__getDocumentTree
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 documentID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 777; } /* = unique id SOAP_TYPE_ns1__getDocumentTree */
};
#endif

#ifndef SOAP_TYPE_ns1__getFolderTreeByRecordIDResponse
#define SOAP_TYPE_ns1__getFolderTreeByRecordIDResponse (778)
/* ns1:getFolderTreeByRecordIDResponse */
struct ns1__getFolderTreeByRecordIDResponse
{
public:
	ns1__CTreeNodeSoap *folderTreeRoot;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CTreeNodeSoap */
public:
	int soap_type() const { return 778; } /* = unique id SOAP_TYPE_ns1__getFolderTreeByRecordIDResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getFolderTreeByRecordID
#define SOAP_TYPE_ns1__getFolderTreeByRecordID (781)
/* ns1:getFolderTreeByRecordID */
struct ns1__getFolderTreeByRecordID
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	LONG64 treeRootFolderID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 781; } /* = unique id SOAP_TYPE_ns1__getFolderTreeByRecordID */
};
#endif

#ifndef SOAP_TYPE_ns1__getFolderTreeResponse
#define SOAP_TYPE_ns1__getFolderTreeResponse (782)
/* ns1:getFolderTreeResponse */
struct ns1__getFolderTreeResponse
{
public:
	ns1__CTreeNodeSoap *folderTreeRoot;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CTreeNodeSoap */
public:
	int soap_type() const { return 782; } /* = unique id SOAP_TYPE_ns1__getFolderTreeResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getFolderTree
#define SOAP_TYPE_ns1__getFolderTree (785)
/* ns1:getFolderTree */
struct ns1__getFolderTree
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *treeRootFolderPath;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 785; } /* = unique id SOAP_TYPE_ns1__getFolderTree */
};
#endif

#ifndef SOAP_TYPE_ns1__getItemHyperlinksResponse
#define SOAP_TYPE_ns1__getItemHyperlinksResponse (786)
/* ns1:getItemHyperlinksResponse */
struct ns1__getItemHyperlinksResponse
{
public:
	ns1__CItemHyperlinkContainer *hyperlinks;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CItemHyperlinkContainer */
public:
	int soap_type() const { return 786; } /* = unique id SOAP_TYPE_ns1__getItemHyperlinksResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__getItemHyperlinks
#define SOAP_TYPE_ns1__getItemHyperlinks (790)
/* ns1:getItemHyperlinks */
struct ns1__getItemHyperlinks
{
public:
	LONG64 cookie;	/* required element of type xsd:long */
	char *itemType;	/* optional element of type xsd:string */
	LONG64 itemID;	/* required element of type xsd:long */
public:
	int soap_type() const { return 790; } /* = unique id SOAP_TYPE_ns1__getItemHyperlinks */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (791)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 791; } /* = unique id SOAP_TYPE_SOAP_ENV__Header */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (792)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 792; } /* = unique id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (794)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 794; } /* = unique id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (797)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 797; } /* = unique id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (798)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 798; } /* = unique id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__byte
#define SOAP_TYPE_xsd__byte (12)
typedef char xsd__byte;
#endif

#ifndef SOAP_TYPE_xsd__date
#define SOAP_TYPE_xsd__date (13)
typedef char *xsd__date;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
