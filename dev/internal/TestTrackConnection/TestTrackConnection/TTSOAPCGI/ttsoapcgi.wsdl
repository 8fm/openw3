<?xml version="1.0" encoding="UTF-8"?>
<definitions name="ttsoapcgi"
 targetNamespace="urn:testtrack-interface"
 xmlns:tns="urn:testtrack-interface"
 xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
 xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:ttns="urn:testtrack-interface"
 xmlns:SOAP="http://schemas.xmlsoap.org/wsdl/soap/"
 xmlns:MIME="http://schemas.xmlsoap.org/wsdl/mime/"
 xmlns:DIME="http://schemas.xmlsoap.org/ws/2002/04/dime/wsdl/"
 xmlns:WSDL="http://schemas.xmlsoap.org/wsdl/"
 xmlns="http://schemas.xmlsoap.org/wsdl/">

<types>

 <schema targetNamespace="urn:testtrack-interface"
  xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:ttns="urn:testtrack-interface"
  xmlns="http://www.w3.org/2001/XMLSchema"
  elementFormDefault="unqualified"
  attributeFormDefault="unqualified">
  <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
  <complexType name="ArrayOfstring">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="xsd:string[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="ArrayOflong">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="xsd:long" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="xsd:long[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CDatabase">
   <sequence>
     <element name="name" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="ArrayOfCDatabase">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CDatabase" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CDatabase[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CProjectDataOption">
   <annotation>
    <documentation>Stores TestTrack project data options. Specifies what type of access a SOAP user has (TestTrack Pro, TestTrack TCM, and/or TestTrack RM).</documentation>
   </annotation>
   <sequence>
     <element name="name" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="ArrayOfCProjectDataOption">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CProjectDataOption" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CProjectDataOption[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CProject">
   <sequence>
     <element name="database" type="ttns:CDatabase" minOccurs="1" maxOccurs="1" nillable="false"/>
     <element name="options" type="ttns:ArrayOfCProjectDataOption" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="servernumber" type="xsd:int" minOccurs="0" maxOccurs="1"/>
   </sequence>
  </complexType>
  <complexType name="ArrayOfCProject">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CProject" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CProject[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CDatabaseTable">
   <sequence>
     <element name="name" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="ArrayOfCDatabaseTable">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CDatabaseTable" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CDatabaseTable[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CTableField">
   <annotation>
    <documentation>Stores the name of a field with a discrete range of values. Used by getDropdownFieldForTable to return an array of field name values. For example, structure can be used for fields represented by a combo box.</documentation>
   </annotation>
   <sequence>
     <element name="name" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="ArrayOfCTableField">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CTableField" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CTableField[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CFieldValue">
   <annotation>
    <documentation>Stores values for a field with a discrete range of values, used by getDropdownFieldForTable to return an array of CTableField values.</documentation>
   </annotation>
   <sequence>
     <element name="value" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="ArrayOfCFieldValue">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CFieldValue" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CFieldValue[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CTableColumn">
   <annotation>
    <documentation>Stores the name of a field that can be retrieved via list operations. Used by getColumnsForTable to return the list of columns that can be retrieved for a table. Structure is also used by getRecordListForTable to return an array of fields for objects in a table.</documentation>
   </annotation>
   <sequence>
     <element name="name" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="ArrayOfCTableColumn">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CTableColumn" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CTableColumn[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CFilter">
   <sequence>
     <element name="name" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="ArrayOfCFilter">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CFilter" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CFilter[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CRecordData">
   <sequence>
     <element name="value" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="ArrayOfCRecordData">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CRecordData" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CRecordData[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CRecordRowSoap">
   <sequence>
     <element name="row" type="ttns:ArrayOfCRecordData" minOccurs="1" maxOccurs="1" nillable="false"/>
   </sequence>
  </complexType>
  <complexType name="ArrayOfCRecordRowSoap">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CRecordRowSoap" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CRecordRowSoap[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CRecordListSoap">
   <sequence>
     <element name="columnlist" type="ttns:ArrayOfCTableColumn" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="records" type="ttns:ArrayOfCRecordRowSoap" minOccurs="0" maxOccurs="1" nillable="true"/>
   </sequence>
  </complexType>
  <complexType name="CItemWithDBRecordId">
   <annotation>
    <documentation>Stores record ID value for each object stored on the TestTrack Server. More complex objects are created from this structure. For example, CSystem can be created from CItemWithDBRecordID.</documentation>
   </annotation>
   <sequence>
     <element name="recordid" type="xsd:long" minOccurs="1" maxOccurs="1"/>
   </sequence>
  </complexType>
  <complexType name="CItemToTrack">
   <annotation>
    <documentation>Inherits from CItemWithDBRecordID. Extends the CItemWithDBRecordID structure, allowing it to be used polymorphically to create more advanced structures such as CTestCase.</documentation>
   </annotation>
   <complexContent>
    <extension base="ttns:CItemWithDBRecordId">
     <sequence>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="COrderedItemWithDBRecordId">
   <annotation>
    <documentation>Inherits from CItemWithDBRecordID. Extends the CItemWithDBRecordID type by adding an element that represents its order in a list. Used by CLinkedItem and CLinkHistoryItem, where the order of items is important.</documentation>
   </annotation>
   <complexContent>
    <extension base="ttns:CItemWithDBRecordId">
     <sequence>
     <element name="order" type="xsd:long" minOccurs="1" maxOccurs="1"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CSystemBase">
   <complexContent>
    <extension base="ttns:CItemToTrack">
     <sequence>
     <element name="systemname" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CSystem">
   <complexContent>
    <extension base="ttns:CSystemBase">
     <sequence>
     <element name="computermodel" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="computerbrand" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="cputype" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="cpuspeed" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="harddisktype" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="harddisksize" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="ramsize" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="romsize" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="osname" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="osversion" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="videoname" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="hascdrom" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="cdrommodel" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="hasscanner" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="scannermodel" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="hasmodem" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="modemmodel" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="hasprinter" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="printermodel" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="otherhardware" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="hasmultiplemonitors" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CSCCFileRecord">
   <annotation>
    <documentation>Inherits from CItemWithDBRecordID. Stores the source control information about files associated with the record. Structure is an extension of the CItemWithDBRecordID structure because the server tracks a unique CSSCFileRecord for each source control file associated with a record.</documentation>
   </annotation>
   <complexContent>
    <extension base="ttns:CItemWithDBRecordId">
     <sequence>
     <element name="m-strFileName" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
     <element name="m-strFixedRevision" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="m-dateFixedTimestamp" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="m-strType" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="m-scriptOrder" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="m-strScriptState" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCSCCFileRecord">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CSCCFileRecord" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CSCCFileRecord[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CFile">
   <sequence>
     <element name="m-pFileData" type="xsd:base64Binary" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="m-strFileName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
   </sequence>
  </complexType>
  <complexType name="ArrayOfCFile">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CFile" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CFile[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CReportRunResults">
   <sequence>
     <element name="m-FileList" type="ttns:ArrayOfCFile" minOccurs="0" maxOccurs="1" nillable="true"/>
   </sequence>
  </complexType>
  <complexType name="CFileAttachment">
   <annotation>
    <documentation>Stores binary data for a file attached to a CReportedByRecord. The xsd:base64binary type contains two elements: _ptr and _size. The _ptr member stores binary data of the file and the _size specifies the length of data. When retrieving a CFileAttachment from the server, caller must create a file and copy the data from the m-pFileData into the file. When saving a CFileAttachment to the server, the caller must copy the data from the file and place it in the m-pFileData member.</documentation>
   </annotation>
   <complexContent>
    <extension base="ttns:CFile">
     <sequence>
     <element name="m-recordid" type="xsd:long" minOccurs="1" maxOccurs="1"/>
     <element name="m-strArchiveName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="m-strType" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="m-scriptOrder" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="m-strScriptState" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCFileAttachment">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CFileAttachment" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CFileAttachment[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CReportedByRecord">
   <complexContent>
    <extension base="ttns:CItemWithDBRecordId">
     <sequence>
     <element name="foundby" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="datefound" type="xsd:date" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="contactinfo" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="foundinversion" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="comments" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="commentsInlineAttachList" type="ttns:ArrayOfCFileAttachment" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="reproduced" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="reproducedsteps" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="reproStepsInlineAttachList" type="ttns:ArrayOfCFileAttachment" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="standardtestconfig" type="ttns:CSystem" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="otherhardwaresoftware" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="otherHWSWInlineAttachList" type="ttns:ArrayOfCFileAttachment" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="testconfigtype" type="xsd:short" minOccurs="0" maxOccurs="1"/>
     <element name="attachmentlist" type="ttns:ArrayOfCFileAttachment" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="showorder" type="xsd:short" minOccurs="1" maxOccurs="1"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCReportedByRecord">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CReportedByRecord" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CReportedByRecord[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CField">
   <annotation>
    <documentation>Inherits from CItemWithDBRecordID. Superclass for all field classes (e.g., CStringField, CIntegerField). This class is necessary so the ArrayOfCField polymorphic array can have a mixed collection of field objects.</documentation>
   </annotation>
   <complexContent>
    <extension base="ttns:CItemWithDBRecordId">
     <sequence>
     <element name="name" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CStringField">
   <complexContent>
    <extension base="ttns:CField">
     <sequence>
     <element name="value" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="isMultilineString" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="containsFormatting" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="inlineAttachmentList" type="ttns:ArrayOfCFileAttachment" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CIntegerField">
   <complexContent>
    <extension base="ttns:CField">
     <sequence>
     <element name="value" type="xsd:int" minOccurs="1" maxOccurs="1"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CDecimalField">
   <complexContent>
    <extension base="ttns:CField">
     <sequence>
     <element name="value" type="xsd:double" minOccurs="1" maxOccurs="1"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CBooleanField">
   <complexContent>
    <extension base="ttns:CField">
     <sequence>
     <element name="value" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CDateField">
   <complexContent>
    <extension base="ttns:CField">
     <sequence>
     <element name="value" type="xsd:date" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CDateTimeField">
   <complexContent>
    <extension base="ttns:CField">
     <sequence>
     <element name="value" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CDropdownField">
   <complexContent>
    <extension base="ttns:CField">
     <sequence>
     <element name="value" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="dropdownValues" type="ttns:ArrayOfCFieldValue" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CMultiSelectDropdownField">
   <complexContent>
    <extension base="ttns:CField">
     <sequence>
     <element name="values" type="ttns:ArrayOfCFieldValue" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="dropdownValues" type="ttns:ArrayOfCFieldValue" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CTestRunVariantField">
   <annotation>
    <documentation>Inherits from CMultiSelectDropdownfield. Extends CMultiSelectDropdownField. Stores any additional test variants added to a test run.</documentation>
   </annotation>
   <complexContent>
    <extension base="ttns:CMultiSelectDropdownField">
     <sequence>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CTestCaseVariantField">
   <annotation>
    <documentation>Inherits from CMultiSelectDropdownfield. Extends CMultiSelectDropdownField. Stores any additional test variants added to a test case.</documentation>
   </annotation>
   <complexContent>
    <extension base="ttns:CTestRunVariantField">
     <sequence>
     <element name="type" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CVersionField">
   <complexContent>
    <extension base="ttns:CField">
     <sequence>
     <element name="value" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CTimespanField">
   <complexContent>
    <extension base="ttns:CField">
     <sequence>
     <element name="value" type="xsd:double" minOccurs="1" maxOccurs="1"/>
     <element name="unit" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCField">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CField" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CField[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCTestRunVariantField">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CTestRunVariantField" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CTestRunVariantField[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCTestCaseVariantField">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CTestCaseVariantField" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CTestCaseVariantField[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CEvent">
   <annotation>
    <documentation>The base used for all events. All events extend this structure.</documentation>
   </annotation>
   <complexContent>
    <extension base="ttns:CItemWithDBRecordId">
     <sequence>
     <element name="user" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="date" type="xsd:dateTime" minOccurs="1" maxOccurs="1" nillable="false"/>
     <element name="notes" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="eventaddorder" type="xsd:short" minOccurs="1" maxOccurs="1"/>
     <element name="name" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="parenteventid" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="attachmentlist" type="ttns:ArrayOfCFileAttachment" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="fieldlist" type="ttns:ArrayOfCField" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="resultingstate" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="hours" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="assigntolist" type="ttns:ArrayOfstring" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="releasenotesversion" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="generatedeventtype" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="generatedbyname" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="totaltimespent" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="overrideuser" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="marksuspect" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCEvent">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CEvent" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CEvent[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CDefectEvent">
   <annotation>
    <documentation>Deprecated; use CEvent</documentation>
   </annotation>
   <complexContent>
    <extension base="ttns:CEvent">
     <sequence>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCDefectEvent">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CDefectEvent" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CDefectEvent[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CEventDefinition">
   <annotation>
    <documentation>Contains all information needed to define a CEvent object. It contains a list of xsd:boolean members that indicate which event fields are present for this particular event. This is a read-only object.</documentation>
   </annotation>
   <sequence>
     <element name="name" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="user" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="datetime" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="notes" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="resultingState" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="resultingStateValues" type="ttns:ArrayOfCFieldValue" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="fileattachments" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="timeTracking" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="timeSumOfAll" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="timeHoursSinceLast" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="newAssignment" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="releaseNotes" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="marksuspect" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="reviewnote" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="customFields" type="ttns:ArrayOfCField" minOccurs="0" maxOccurs="1" nillable="true"/>
   </sequence>
  </complexType>
  <complexType name="ArrayOfCEventDefinition">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CEventDefinition" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CEventDefinition[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CDefectEventDefinition">
   <annotation>
    <documentation>Deprecated; use CEventDefinition</documentation>
   </annotation>
   <complexContent>
    <extension base="ttns:CEventDefinition">
     <sequence>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCDefectEventDefinition">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CDefectEventDefinition" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CDefectEventDefinition[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CDefect">
   <complexContent>
    <extension base="ttns:CItemToTrack">
     <sequence>
     <element name="defectnumber" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="summary" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="state" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="disposition" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="type" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="priority" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="product" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="component" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="reference" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="severity" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="enteredby" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="workaround" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="workaroundInlineAttachList" type="ttns:ArrayOfCFileAttachment" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="dateentered" type="xsd:date" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="locationaddedfrom" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="datetimecreated" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="datetimemodified" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="createdbyuser" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="modifiedbyuser" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="actualhourstofix" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="estimatedhours" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="remaininghours" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="variance" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="storypoints" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="percentdone" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="reportedbylist" type="ttns:ArrayOfCReportedByRecord" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="eventlist" type="ttns:ArrayOfCEvent" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="pSCCFileList" type="ttns:ArrayOfCSCCFileRecord" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="customFieldList" type="ttns:ArrayOfCField" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CTask">
   <annotation>
    <documentation>Inherits from CItemToTrack. Stores task fields tracked by the TestTrack Server. The addTask, editTask, getTask, and saveTask requests use this structure.</documentation>
   </annotation>
   <complexContent>
    <extension base="ttns:CItemToTrack">
     <sequence>
     <element name="status" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="priority" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="summary" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="description" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="datedue" type="xsd:date" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="dateassigned" type="xsd:date" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="versiondue" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="assignedto" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="assignedby" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="assigneddefect" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="PhoneNumber">
   <sequence>
     <element name="numbertype" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="phonenumber" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
   </sequence>
  </complexType>
  <complexType name="CUser">
   <annotation>
    <documentation>Inherits from CItemToTrack. Contains all user object fields stored in TestTrack. Used by the addUser, editUser, getUser, saveUser, addCustomer, editCustomer, getCustomer and saveCustomer requests. Use getDropdownFieldValuesForTable to get the allowed values for the security group and email type fields.</documentation>
   </annotation>
   <complexContent>
    <extension base="ttns:CItemToTrack">
     <sequence>
     <element name="firstname" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="middleinitials" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="lastname" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="usergroupname" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="company" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="division" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="department" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="emailtype" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="emailaddress" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="isactive" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="iscustomer" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="isglobal" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="isactiveglobal" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="userLicense" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="userLicenseTCM" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="userLicenseRM" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="password" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="loginname" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="phoneone" type="ttns:PhoneNumber" minOccurs="0" maxOccurs="1"/>
     <element name="phonetwo" type="ttns:PhoneNumber" minOccurs="0" maxOccurs="1"/>
     <element name="notes" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="betasite" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="address" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="testconfig" type="ttns:CSystem" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CGlobalUser">
   <annotation>
    <documentation>Contains the login name and the name of a user that is stored on the Seapine License Server. Used by the addGlobalUser and addGlobalCustomer requests.</documentation>
   </annotation>
   <sequence>
     <element name="loginname" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="name" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
   </sequence>
  </complexType>
  <complexType name="ArrayOfCGlobalUser">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CGlobalUser" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CGlobalUser[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CUserLicense">
   <annotation>
    <documentation>Contains Seapine License Server user license information.</documentation>
   </annotation>
   <sequence>
     <element name="name" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="numberUsed" type="xsd:int" minOccurs="0" maxOccurs="1"/>
     <element name="numberTotal" type="xsd:int" minOccurs="0" maxOccurs="1"/>
   </sequence>
  </complexType>
  <complexType name="ArrayOfCUserLicense">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CUserLicense" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CUserLicense[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CLinkedItem">
   <annotation>
    <documentation>Inherits from COrderedItemWithDBRecordID. Extends the COrderedItemWithDBRecordID structure and stores information about an item that is in a link. NOTE: entityType is deprecated; use tablename.</documentation>
   </annotation>
   <complexContent>
    <extension base="ttns:COrderedItemWithDBRecordId">
     <sequence>
     <element name="entityType" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="tablename" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
     <element name="entityID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
     <element name="number" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="summary" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="status" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="state" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="issuspect" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCLinkedItem">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CLinkedItem" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CLinkedItem[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CLinkHistoryItem">
   <annotation>
    <documentation>Inherits from COrderedItemWithDBRecordID. Extends the COrderedItemWithDBRecordID and stores the description of a change made to a link. This is a read-only object.</documentation>
   </annotation>
   <complexContent>
    <extension base="ttns:COrderedItemWithDBRecordId">
     <sequence>
     <element name="date" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="firstname" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="lastname" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="history" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCLinkHistoryItem">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CLinkHistoryItem" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CLinkHistoryItem[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CLink">
   <complexContent>
    <extension base="ttns:CItemToTrack">
     <sequence>
     <element name="linkDefinitionName" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
     <element name="comment" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="linkbroken" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="linkparent" type="ttns:CLinkedItem" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="childList" type="ttns:ArrayOfCLinkedItem" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="historyList" type="ttns:ArrayOfCLinkHistoryItem" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCLink">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CLink" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CLink[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CTestCase">
   <annotation>
    <documentation>Inherits from CItemToTrack. Stores the fields that comprise a test case. NOTE: Problem statements added to test runs with the steps in grid mode will be added as the last element in the grid. If you want to insert problem statements (steps, comments or expected results) into the grid, use the following mark up characters, which are only valid if they are the first letter after a new line: Asterisk(*)- indicates the beginning of a new step; Plus sign (+) - indicates the expected result of the previous step; Pound sign (#) - indicates a comment line</documentation>
   </annotation>
   <complexContent>
    <extension base="ttns:CItemToTrack">
     <sequence>
     <element name="testcasenumber" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="summary" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="state" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="createdbyuser" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="datetimecreated" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="locationaddedfrom" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="modifiedbyuser" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="datetimemodified" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="customFieldList" type="ttns:ArrayOfCField" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="eventlist" type="ttns:ArrayOfCEvent" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="actualhours" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="estimatedhours" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="remaininghours" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="variance" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="storypoints" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="percentdone" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="type" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="testrunstepsmode" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="isautomated" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="estimatedtime" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="steps" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="testVariants" type="ttns:ArrayOfCTestCaseVariantField" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="attachmentlist" type="ttns:ArrayOfCFileAttachment" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="sccFileList" type="ttns:ArrayOfCSCCFileRecord" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CTestRun">
   <annotation>
    <documentation>Inherits from CItemToTrack. Stores the fields that comprise a test run. NOTE: Problem statements added to test runs with the steps in grid mode will be added as the last element in the grid. If you want to insert problem statements (steps, comments or expected results) into the grid, use the following mark up characters, which are only valid if they are the first letter after a new line: Asterisk(*)- indicates the beginning of a new step; Plus sign (+) - indicates the expected result of the previous step; Pound sign (#) - indicates a comment line; Exclamation point (!) - indicates a problem statement</documentation>
   </annotation>
   <complexContent>
    <extension base="ttns:CItemToTrack">
     <sequence>
     <element name="testrunnumber" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="summary" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="state" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="createdbyuser" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="datetimecreated" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="locationaddedfrom" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="modifiedbyuser" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="datetimemodified" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="customFieldList" type="ttns:ArrayOfCField" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="eventlist" type="ttns:ArrayOfCEvent" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="actualhours" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="estimatedhours" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="remaininghours" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="variance" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="storypoints" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="percentdone" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="testcasenumber" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="testcaserecordid" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="type" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="testrunset" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="isautomated" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="estimatedtime" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="steps" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="problemstatement" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="testVariants" type="ttns:ArrayOfCTestCaseVariantField" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="attachmentlist" type="ttns:ArrayOfCFileAttachment" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="sccFileList" type="ttns:ArrayOfCSCCFileRecord" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="stepsmode" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCItemToTrack">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CItemToTrack" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CItemToTrack[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CScheduleInfo">
   <sequence>
     <element name="startdate" type="xsd:date" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="enddate" type="xsd:date" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="includeweekends" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="nonworkingdays" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="hoursperday" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="ptohours" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="usersavailable" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="storypoints" type="xsd:long" minOccurs="0" maxOccurs="1"/>
   </sequence>
  </complexType>
  <complexType name="CFolderType">
   <complexContent>
    <extension base="ttns:CItemToTrack">
     <sequence>
     <element name="name" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="description" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="allowweb" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="allowdetails" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="releaseplanning" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCFolderType">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CFolderType" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CFolderType[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CFolder">
   <complexContent>
    <extension base="ttns:CItemToTrack">
     <sequence>
     <element name="createdbyuser" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="ispublic" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="modifiedbyuser" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="locationaddedfrom" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="datetimecreated" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="datetimemodified" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="name" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="description" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="path" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="order" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="parentid" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="foldertypename" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="webview" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="notes" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="notesInlineAttachList" type="ttns:ArrayOfCFileAttachment" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="noteseditable" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
     <element name="scheduleinfo" type="ttns:CScheduleInfo" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CFolderItem">
   <complexContent>
    <extension base="ttns:CItemWithDBRecordId">
     <sequence>
     <element name="entitytablename" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
     <element name="entityrecordid" type="xsd:long" minOccurs="1" maxOccurs="1"/>
     <element name="rank" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCFolder">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CFolder" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CFolder[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCFolderItem">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CFolderItem" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CFolderItem[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CVersionInfo">
   <sequence>
     <element name="versionNumber" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="createdByUser" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="dateTimeCreated" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
   </sequence>
  </complexType>
  <complexType name="ArrayOfCVersionInfo">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CVersionInfo" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CVersionInfo[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CSnapshotInfo">
   <complexContent>
    <extension base="ttns:CVersionInfo">
     <sequence>
     <element name="label" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="comment" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="ArrayOfCSnapshotInfo">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CSnapshotInfo" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CSnapshotInfo[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CRequirement">
   <complexContent>
    <extension base="ttns:CItemToTrack">
     <sequence>
     <element name="number" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="type" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="false"/>
     <element name="summary" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="tag" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="dateEntered" type="xsd:date" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="enteredBy" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="importance" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="description" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="descriptionInlineAttachList" type="ttns:ArrayOfCFileAttachment" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="state" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="attachmentList" type="ttns:ArrayOfCFileAttachment" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="sccFileList" type="ttns:ArrayOfCSCCFileRecord" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="customFieldList" type="ttns:ArrayOfCField" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="eventList" type="ttns:ArrayOfCEvent" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="versionList" type="ttns:ArrayOfCVersionInfo" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="dateTimeCreated" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="createdByUser" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="locationAddedFrom" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="modifiedByUser" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="dateTimeModified" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="actualHours" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="estimatedHours" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="remainingHours" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="variance" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="storyPoints" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="percentDone" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CRequirementDocument">
   <complexContent>
    <extension base="ttns:CItemToTrack">
     <sequence>
     <element name="number" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="name" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="description" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="descriptionInlineAttachList" type="ttns:ArrayOfCFileAttachment" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="state" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="attachmentList" type="ttns:ArrayOfCFileAttachment" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="sccFileList" type="ttns:ArrayOfCSCCFileRecord" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="customFieldList" type="ttns:ArrayOfCField" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="eventList" type="ttns:ArrayOfCEvent" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="snapshotList" type="ttns:ArrayOfCSnapshotInfo" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="dateTimeCreated" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="createdByUser" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="locationAddedFrom" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="modifiedByUser" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="dateTimeModified" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="actualHours" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="estimatedHours" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="remainingHours" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="variance" type="xsd:double" minOccurs="0" maxOccurs="1"/>
     <element name="storyPoints" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     <element name="percentDone" type="xsd:long" minOccurs="0" maxOccurs="1"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CTreeNodeSoap">
   <sequence>
     <element name="entityTableName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="entityRecordID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
     <element name="childList" type="ttns:ArrayOfCTreeNodeSoap" minOccurs="0" maxOccurs="1" nillable="true"/>
   </sequence>
  </complexType>
  <complexType name="ArrayOfCTreeNodeSoap">
   <complexContent>
    <restriction base="SOAP-ENC:Array">
     <sequence>
      <element name="item" type="ttns:CTreeNodeSoap" minOccurs="0" maxOccurs="unbounded"/>
     </sequence>
     <attribute ref="SOAP-ENC:arrayType" WSDL:arrayType="ttns:CTreeNodeSoap[]"/>
    </restriction>
   </complexContent>
  </complexType>
  <complexType name="CDocumentTreeNode">
   <complexContent>
    <extension base="ttns:CTreeNodeSoap">
     <sequence>
     <element name="summary" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="outlineNumber" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="tag" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     </sequence>
    </extension>
   </complexContent>
  </complexType>
  <complexType name="CItemHyperlinkContainer">
   <sequence>
     <element name="ttstudioHyperlink" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
     <element name="httpHyperlink" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
   </sequence>
  </complexType>
 </schema>

</types>

<message name="getDatabaseListRequest">
</message>

<message name="getDatabaseListResponse">
 <part name="pDBList" type="ttns:ArrayOfCDatabase"/>
</message>

<message name="getProjectListRequest">
 <part name="username" type="xsd:string"/>
 <part name="password" type="xsd:string"/>
</message>

<message name="getProjectListResponse">
 <part name="pProjList" type="ttns:ArrayOfCProject"/>
</message>

<message name="getProjectDataOptionListRequest">
</message>

<message name="getProjectDataOptionListResponse">
 <part name="pProjTypes" type="ttns:ArrayOfCProjectDataOption"/>
</message>

<message name="DatabaseLogonRequest">
 <part name="dbname" type="xsd:string"/>
 <part name="username" type="xsd:string"/>
 <part name="password" type="xsd:string"/>
</message>

<message name="DatabaseLogonResponse">
 <part name="Cookie" type="xsd:long"/>
</message>

<message name="ProjectLogonRequest">
 <part name="pProj" type="ttns:CProject"/>
 <part name="username" type="xsd:string"/>
 <part name="password" type="xsd:string"/>
</message>

<message name="ProjectLogonResponse">
 <part name="Cookie" type="xsd:long"/>
</message>

<message name="DatabaseLogoffRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="DatabaseLogoffResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="formattedTextSupportRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="enableFormattedText" type="xsd:boolean"/>
</message>

<message name="formattedTextSupportResponse">
 <part name="formattingEnabled" type="xsd:boolean"/>
</message>

<message name="getTableListRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="getTableListResponse">
 <part name="pTableList" type="ttns:ArrayOfCDatabaseTable"/>
</message>

<message name="getDropdownFieldForTableRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="tablename" type="xsd:string"/>
</message>

<message name="getDropdownFieldForTableResponse">
 <part name="pFieldList" type="ttns:ArrayOfCTableField"/>
</message>

<message name="getDropdownFieldValuesForTableRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="tablename" type="xsd:string"/>
 <part name="fieldname" type="xsd:string"/>
</message>

<message name="getDropdownFieldValuesForTableResponse">
 <part name="pValueList" type="ttns:ArrayOfCFieldValue"/>
</message>

<message name="addDropdownFieldValuesForTableRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="tablename" type="xsd:string"/>
 <part name="fieldname" type="xsd:string"/>
 <part name="pValueList" type="ttns:ArrayOfCFieldValue"/>
</message>

<message name="addDropdownFieldValuesForTableResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="GetLinkDefinitionValuesRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="GetLinkDefinitionValuesResponse">
 <part name="pValueList" type="ttns:ArrayOfCFieldValue"/>
</message>

<message name="getColumnsForTableRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="tablename" type="xsd:string"/>
</message>

<message name="getColumnsForTableResponse">
 <part name="pColumnList" type="ttns:ArrayOfCTableColumn"/>
</message>

<message name="getFilterListRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="getFilterListResponse">
 <part name="pFilterList" type="ttns:ArrayOfCFilter"/>
</message>

<message name="getFilterListForTableRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="tablename" type="xsd:string"/>
</message>

<message name="getFilterListForTableResponse">
 <part name="pFilterList" type="ttns:ArrayOfCFilter"/>
</message>

<message name="getRecordListForTableRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="tablename" type="xsd:string"/>
 <part name="filtername" type="xsd:string"/>
 <part name="columnlist" type="ttns:ArrayOfCTableColumn"/>
</message>

<message name="getRecordListForTableResponse">
 <part name="recordlist" type="ttns:CRecordListSoap"/>
</message>

<message name="getTestConfigRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="name" type="xsd:string"/>
</message>

<message name="getTestConfigResponse">
 <part name="pTestConfig" type="ttns:CSystem"/>
</message>

<message name="getTestConfigByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="getTestConfigByRecordIDResponse">
 <part name="pTestConfig" type="ttns:CSystem"/>
</message>

<message name="addTestConfigRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pTestConfig" type="ttns:CSystem"/>
</message>

<message name="addTestConfigResponse">
 <part name="recordID" type="xsd:long"/>
</message>

<message name="editTestConfigRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="name" type="xsd:string"/>
</message>

<message name="editTestConfigResponse">
 <part name="pTestConfig" type="ttns:CSystem"/>
</message>

<message name="editTestConfigByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="editTestConfigByRecordIDResponse">
 <part name="pTestConfig" type="ttns:CSystem"/>
</message>

<message name="saveTestConfigRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pTestConfig" type="ttns:CSystem"/>
</message>

<message name="saveTestConfigResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="deleteTestConfigRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="name" type="xsd:string"/>
</message>

<message name="deleteTestConfigResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="deleteTestConfigByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="deleteTestConfigByRecordIDResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="cancelSaveTestConfigRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="cancelSaveTestConfigResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="getAttachmentTypesRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="getAttachmentTypesResponse">
 <part name="pTypeList" type="ttns:ArrayOfstring"/>
</message>

<message name="getReportRunResultsByNameRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="name" type="xsd:string"/>
</message>

<message name="getReportRunResultsByNameResponse">
 <part name="results" type="ttns:CReportRunResults"/>
</message>

<message name="getReportRunResultsByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="getReportRunResultsByRecordIDResponse">
 <part name="results" type="ttns:CReportRunResults"/>
</message>

<message name="getEventDefinitionListRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="tablename" type="xsd:string"/>
</message>

<message name="getEventDefinitionListResponse">
 <part name="EventDefinitionList" type="ttns:ArrayOfCEventDefinition"/>
</message>

<message name="getDefectEventDefinitionListRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="getDefectEventDefinitionListResponse">
 <part name="EventDefinitionList" type="ttns:ArrayOfCDefectEventDefinition"/>
</message>

<message name="getCustomFieldsDefinitionListRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="tablename" type="xsd:string"/>
</message>

<message name="getCustomFieldsDefinitionListResponse">
 <part name="customFields" type="ttns:ArrayOfCField"/>
</message>

<message name="getDefectCustomFieldsDefinitionListRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="getDefectCustomFieldsDefinitionListResponse">
 <part name="customFields" type="ttns:ArrayOfCField"/>
</message>

<message name="getDefectRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="defectNumber" type="xsd:long"/>
 <part name="summary" type="xsd:string"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="getDefectResponse">
 <part name="pDefect" type="ttns:CDefect"/>
</message>

<message name="getDefectByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="getDefectByRecordIDResponse">
 <part name="pDefect" type="ttns:CDefect"/>
</message>

<message name="addDefectRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pDefect" type="ttns:CDefect"/>
</message>

<message name="addDefectResponse">
 <part name="recordID" type="xsd:long"/>
</message>

<message name="addDefectWithLinkRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pDefect" type="ttns:CDefect"/>
 <part name="testRunRecordID" type="xsd:long"/>
</message>

<message name="addDefectWithLinkResponse">
 <part name="recordID" type="xsd:long"/>
</message>

<message name="deleteDefectRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="defectNumber" type="xsd:long"/>
 <part name="summary" type="xsd:string"/>
</message>

<message name="deleteDefectResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="deleteDefectByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="deleteDefectByRecordIDResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="editDefectRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="defectNumber" type="xsd:long"/>
 <part name="summary" type="xsd:string"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="editDefectResponse">
 <part name="pDefect" type="ttns:CDefect"/>
</message>

<message name="editDefectByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="editDefectByRecordIDResponse">
 <part name="pDefect" type="ttns:CDefect"/>
</message>

<message name="saveDefectRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pDefect" type="ttns:CDefect"/>
</message>

<message name="saveDefectResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="cancelSaveDefectRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="cancelSaveDefectResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="getAttachmentRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="tablename" type="xsd:string"/>
 <part name="recordID" type="xsd:long"/>
 <part name="eventID" type="xsd:long"/>
 <part name="pszArchiveName" type="xsd:string"/>
</message>

<message name="getAttachmentResponse">
 <part name="pAttachment" type="ttns:CFileAttachment"/>
</message>

<message name="getDefectAttachmentRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pszArchiveName" type="xsd:string"/>
</message>

<message name="getDefectAttachmentResponse">
 <part name="pAttachment" type="ttns:CFileAttachment"/>
</message>

<message name="getTaskRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="summary" type="xsd:string"/>
</message>

<message name="getTaskResponse">
 <part name="pTask" type="ttns:CTask"/>
</message>

<message name="getTaskByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="getTaskByRecordIDResponse">
 <part name="pTask" type="ttns:CTask"/>
</message>

<message name="addTaskRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pTask" type="ttns:CTask"/>
</message>

<message name="addTaskResponse">
 <part name="recordID" type="xsd:long"/>
</message>

<message name="deleteTaskRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="summary" type="xsd:string"/>
</message>

<message name="deleteTaskResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="deleteTaskByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="deleteTaskByRecordIDResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="editTaskRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="summary" type="xsd:string"/>
</message>

<message name="editTaskResponse">
 <part name="pTask" type="ttns:CTask"/>
</message>

<message name="editTaskByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="editTaskByRecordIDResponse">
 <part name="pTask" type="ttns:CTask"/>
</message>

<message name="saveTaskRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pTask" type="ttns:CTask"/>
</message>

<message name="saveTaskResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="cancelSaveTaskRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="cancelSaveTaskResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="getGlobalUserListRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="getGlobalUserListResponse">
 <part name="GlobalUserList" type="ttns:ArrayOfCGlobalUser"/>
</message>

<message name="getGlobalCustomerListRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="getGlobalCustomerListResponse">
 <part name="GlobalCustomerList" type="ttns:ArrayOfCGlobalUser"/>
</message>

<message name="getUserLicenseListRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="getUserLicenseListResponse">
 <part name="UserLicenseList" type="ttns:ArrayOfCUserLicense"/>
</message>

<message name="getUserRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="firstName" type="xsd:string"/>
 <part name="middleInitials" type="xsd:string"/>
 <part name="lastName" type="xsd:string"/>
</message>

<message name="getUserResponse">
 <part name="pUser" type="ttns:CUser"/>
</message>

<message name="getUserByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="getUserByRecordIDResponse">
 <part name="pUser" type="ttns:CUser"/>
</message>

<message name="getUserForCurrentSessionRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="getUserForCurrentSessionResponse">
 <part name="pUser" type="ttns:CUser"/>
</message>

<message name="addUserRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pUser" type="ttns:CUser"/>
</message>

<message name="addUserResponse">
 <part name="recordID" type="xsd:long"/>
</message>

<message name="editUserRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="firstName" type="xsd:string"/>
 <part name="middleInitials" type="xsd:string"/>
 <part name="lastName" type="xsd:string"/>
</message>

<message name="editUserResponse">
 <part name="pUser" type="ttns:CUser"/>
</message>

<message name="editUserByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="editUserByRecordIDResponse">
 <part name="pUser" type="ttns:CUser"/>
</message>

<message name="saveUserRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="firstName" type="xsd:string"/>
 <part name="middleInitials" type="xsd:string"/>
 <part name="lastName" type="xsd:string"/>
 <part name="pUser" type="ttns:CUser"/>
</message>

<message name="saveUserResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="deleteUserRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="firstName" type="xsd:string"/>
 <part name="middleInitials" type="xsd:string"/>
 <part name="lastName" type="xsd:string"/>
</message>

<message name="deleteUserResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="deleteUserByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="deleteUserByRecordIDResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="cancelSaveUserRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="cancelSaveUserResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="promoteUserRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="localUser" type="xsd:string"/>
 <part name="globalUser" type="xsd:string"/>
 <part name="loginname" type="xsd:string"/>
</message>

<message name="promoteUserResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="addGlobalUserRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pUser" type="ttns:CGlobalUser"/>
</message>

<message name="addGlobalUserResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="getCustomerRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="firstName" type="xsd:string"/>
 <part name="middleInitials" type="xsd:string"/>
 <part name="lastName" type="xsd:string"/>
</message>

<message name="getCustomerResponse">
 <part name="pCustomer" type="ttns:CUser"/>
</message>

<message name="getCustomerByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="getCustomerByRecordIDResponse">
 <part name="pCustomer" type="ttns:CUser"/>
</message>

<message name="addCustomerRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pCustomer" type="ttns:CUser"/>
</message>

<message name="addCustomerResponse">
 <part name="recordID" type="xsd:long"/>
</message>

<message name="editCustomerRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="firstName" type="xsd:string"/>
 <part name="middleInitials" type="xsd:string"/>
 <part name="lastName" type="xsd:string"/>
</message>

<message name="editCustomerResponse">
 <part name="pCustomer" type="ttns:CUser"/>
</message>

<message name="editCustomerByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="editCustomerByRecordIDResponse">
 <part name="pCustomer" type="ttns:CUser"/>
</message>

<message name="saveCustomerRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="firstName" type="xsd:string"/>
 <part name="middleInitials" type="xsd:string"/>
 <part name="lastName" type="xsd:string"/>
 <part name="pCustomer" type="ttns:CUser"/>
</message>

<message name="saveCustomerResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="deleteCustomerRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="firstName" type="xsd:string"/>
 <part name="middleInitials" type="xsd:string"/>
 <part name="lastName" type="xsd:string"/>
</message>

<message name="deleteCustomerResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="deleteCustomerByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="deleteCustomerByRecordIDResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="cancelSaveCustomerRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="cancelSaveCustomerResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="promoteCustomerRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="localCustomer" type="xsd:string"/>
 <part name="globalUser" type="xsd:string"/>
 <part name="loginname" type="xsd:string"/>
</message>

<message name="promoteCustomerResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="addGlobalCustomerRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pUser" type="ttns:CGlobalUser"/>
</message>

<message name="addGlobalCustomerResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="getLinksForItemRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="tablename" type="xsd:string"/>
 <part name="itemRecordID" type="xsd:long"/>
</message>

<message name="getLinksForItemResponse">
 <part name="pLinkList" type="ttns:ArrayOfCLink"/>
</message>

<message name="getLinksForDefectRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="defectRecordID" type="xsd:long"/>
</message>

<message name="getLinksForDefectResponse">
 <part name="pLinkList" type="ttns:ArrayOfCLink"/>
</message>

<message name="getLinkRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="linkID" type="xsd:long"/>
</message>

<message name="getLinkResponse">
 <part name="pLink" type="ttns:CLink"/>
</message>

<message name="addLinkRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pLink" type="ttns:CLink"/>
</message>

<message name="addLinkResponse">
 <part name="recordID" type="xsd:long"/>
</message>

<message name="deleteLinkRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="linkID" type="xsd:long"/>
</message>

<message name="deleteLinkResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="editLinkRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="linkID" type="xsd:long"/>
</message>

<message name="editLinkResponse">
 <part name="pLink" type="ttns:CLink"/>
</message>

<message name="saveLinkRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pLink" type="ttns:CLink"/>
</message>

<message name="saveLinkResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="cancelSaveLinkRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="linkID" type="xsd:long"/>
</message>

<message name="cancelSaveLinkResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="getTestVariantTypesRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="getTestVariantTypesResponse">
 <part name="pTypeList" type="ttns:ArrayOfstring"/>
</message>

<message name="getTestRunStepsModesRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="getTestRunStepsModesResponse">
 <part name="pModeList" type="ttns:ArrayOfstring"/>
</message>

<message name="getTestCaseRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="testCaseNumber" type="xsd:long"/>
 <part name="summary" type="xsd:string"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="getTestCaseResponse">
 <part name="pTestCase" type="ttns:CTestCase"/>
</message>

<message name="getTestCaseByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="getTestCaseByRecordIDResponse">
 <part name="pTestCase" type="ttns:CTestCase"/>
</message>

<message name="addTestCaseRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pTestCase" type="ttns:CTestCase"/>
</message>

<message name="addTestCaseResponse">
 <part name="recordID" type="xsd:long"/>
</message>

<message name="deleteTestCaseRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="testCaseNumber" type="xsd:long"/>
 <part name="summary" type="xsd:string"/>
 <part name="bDeleteAssociatedTestRuns" type="xsd:boolean"/>
</message>

<message name="deleteTestCaseResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="deleteTestCaseByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="bDeleteAssociatedTestRun" type="xsd:boolean"/>
</message>

<message name="deleteTestCaseByRecordIDResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="editTestCaseRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="testCaseNumber" type="xsd:long"/>
 <part name="summary" type="xsd:string"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="editTestCaseResponse">
 <part name="pTestCase" type="ttns:CTestCase"/>
</message>

<message name="editTestCaseByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="editTestCaseByRecordIDResponse">
 <part name="pTestCase" type="ttns:CTestCase"/>
</message>

<message name="saveTestCaseRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pTestCase" type="ttns:CTestCase"/>
</message>

<message name="saveTestCaseResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="cancelSaveTestCaseRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="cancelSaveTestCaseResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="getTestRunRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="testRunNumber" type="xsd:long"/>
 <part name="summary" type="xsd:string"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="getTestRunResponse">
 <part name="pTestRun" type="ttns:CTestRun"/>
</message>

<message name="getTestRunByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="getTestRunByRecordIDResponse">
 <part name="pTestRun" type="ttns:CTestRun"/>
</message>

<message name="deleteTestRunRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="testRunNumber" type="xsd:long"/>
 <part name="summary" type="xsd:string"/>
</message>

<message name="deleteTestRunResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="deleteTestRunByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="deleteTestRunByRecordIDResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="editTestRunRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="testRunNumber" type="xsd:long"/>
 <part name="summary" type="xsd:string"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="editTestRunResponse">
 <part name="pTestRun" type="ttns:CTestRun"/>
</message>

<message name="editTestRunByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="editTestRunByRecordIDResponse">
 <part name="pTestRun" type="ttns:CTestRun"/>
</message>

<message name="saveTestRunRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pTestRun" type="ttns:CTestRun"/>
</message>

<message name="saveTestRunResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="cancelSaveTestRunRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="cancelSaveTestRunResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="createDefectForTestRunRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="createDefectForTestRunResponse">
 <part name="pDefect" type="ttns:CDefect"/>
</message>

<message name="generateTestRunsRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="testVariants" type="ttns:ArrayOfCTestRunVariantField"/>
 <part name="testRunSet" type="xsd:string"/>
</message>

<message name="generateTestRunsResponse">
 <part name="pResults" type="ttns:ArrayOfCItemToTrack"/>
</message>

<message name="getFolderTypeByNameRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="name" type="xsd:string"/>
</message>

<message name="getFolderTypeByNameResponse">
 <part name="pType" type="ttns:CFolderType"/>
</message>

<message name="getFolderTypeListRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="getFolderTypeListResponse">
 <part name="pTypeList" type="ttns:ArrayOfCFolderType"/>
</message>

<message name="addFolderRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pFolder" type="ttns:CFolder"/>
</message>

<message name="addFolderResponse">
 <part name="recordID" type="xsd:long"/>
</message>

<message name="editFolderRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="folderPath" type="xsd:string"/>
</message>

<message name="editFolderResponse">
 <part name="pFolder" type="ttns:CFolder"/>
</message>

<message name="editFolderByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="publicFolder" type="xsd:boolean"/>
</message>

<message name="editFolderByRecordIDResponse">
 <part name="pFolder" type="ttns:CFolder"/>
</message>

<message name="saveFolderRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pFolder" type="ttns:CFolder"/>
</message>

<message name="saveFolderResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="cancelSaveFolderRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="cancelSaveFolderResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="getFolderRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="path" type="xsd:string"/>
</message>

<message name="getFolderResponse">
 <part name="pFolder" type="ttns:CFolder"/>
</message>

<message name="getFolderByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="publicFolder" type="xsd:boolean"/>
</message>

<message name="getFolderByRecordIDResponse">
 <part name="pFolder" type="ttns:CFolder"/>
</message>

<message name="deleteFolderRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="folderPath" type="xsd:string"/>
</message>

<message name="deleteFolderResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="deleteFolderByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="publicFolder" type="xsd:boolean"/>
</message>

<message name="deleteFolderByRecordIDResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="addEntityToFolderByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="publicFolder" type="xsd:boolean"/>
 <part name="entityRecordID" type="xsd:long"/>
 <part name="entityTableName" type="xsd:string"/>
</message>

<message name="addEntityToFolderByRecordIDResponse">
 <part name="itemRecordID" type="xsd:int"/>
</message>

<message name="removeEntityFromFolderByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="publicFolder" type="xsd:boolean"/>
 <part name="entity" type="ttns:CFolderItem"/>
</message>

<message name="removeEntityFromFolderByRecordIDResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="getEntityListForFolderByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="publicFolder" type="xsd:boolean"/>
</message>

<message name="getEntityListForFolderByRecordIDResponse">
 <part name="pEntityList" type="ttns:ArrayOfCFolderItem"/>
</message>

<message name="getFolderListForEntityByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="tablename" type="xsd:string"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="getFolderListForEntityByRecordIDResponse">
 <part name="pFolderList" type="ttns:ArrayOfCFolder"/>
</message>

<message name="getFolderPathSeparatorRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="getFolderPathSeparatorResponse">
 <part name="separator" type="xsd:byte"/>
</message>

<message name="getRootPublicFolderPathRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="getRootPublicFolderPathResponse">
 <part name="strPublicPath" type="xsd:string"/>
</message>

<message name="getRootPrivateFolderPathRequest">
 <part name="cookie" type="xsd:long"/>
</message>

<message name="getRootPrivateFolderPathResponse">
 <part name="strPrivatePath" type="xsd:string"/>
</message>

<message name="editFolderItemRankRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="publicFolder" type="xsd:boolean"/>
</message>

<message name="editFolderItemRankResponse">
 <part name="pEntityList" type="ttns:ArrayOfCFolderItem"/>
</message>

<message name="saveFolderItemRankRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="publicFolder" type="xsd:boolean"/>
 <part name="folderItemList" type="ttns:ArrayOfCFolderItem"/>
</message>

<message name="saveFolderItemRankResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="cancelSaveFolderItemRankRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="cancelSaveFolderItemRankResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="getRequirementRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="requirementNumber" type="xsd:long"/>
 <part name="summary" type="xsd:string"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="getRequirementResponse">
 <part name="pRequirement" type="ttns:CRequirement"/>
</message>

<message name="getRequirementByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="getRequirementByRecordIDResponse">
 <part name="pRequirement" type="ttns:CRequirement"/>
</message>

<message name="addRequirementRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pRequirement" type="ttns:CRequirement"/>
</message>

<message name="addRequirementResponse">
 <part name="recordID" type="xsd:long"/>
</message>

<message name="deleteRequirementRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="requirementNumber" type="xsd:long"/>
 <part name="summary" type="xsd:string"/>
</message>

<message name="deleteRequirementResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="deleteRequirementByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="deleteRequirementByRecordIDResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="editRequirementRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="requirementNumber" type="xsd:long"/>
 <part name="summary" type="xsd:string"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="editRequirementResponse">
 <part name="pRequirement" type="ttns:CRequirement"/>
</message>

<message name="editRequirementByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="editRequirementByRecordIDResponse">
 <part name="pRequirement" type="ttns:CRequirement"/>
</message>

<message name="saveRequirementRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pRequirement" type="ttns:CRequirement"/>
</message>

<message name="saveRequirementResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="cancelSaveRequirementRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="cancelSaveRequirementResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="appendToRequirementDocumentRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="requirementID" type="xsd:long"/>
 <part name="documentID" type="xsd:long"/>
 <part name="parentRequirementID" type="xsd:long"/>
</message>

<message name="appendToRequirementDocumentResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="getDocumentIDsForRequirementRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="requirementID" type="xsd:long"/>
</message>

<message name="getDocumentIDsForRequirementResponse">
 <part name="recordIDs" type="ttns:ArrayOflong"/>
</message>

<message name="changeRequirementTypeRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="requirementID" type="xsd:long"/>
 <part name="newTypeName" type="xsd:string"/>
</message>

<message name="changeRequirementTypeResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="getRequirementDocumentRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="documentNumber" type="xsd:long"/>
 <part name="name" type="xsd:string"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="getRequirementDocumentResponse">
 <part name="pRequirementDocument" type="ttns:CRequirementDocument"/>
</message>

<message name="getRequirementDocumentByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="getRequirementDocumentByRecordIDResponse">
 <part name="pRequirementDocument" type="ttns:CRequirementDocument"/>
</message>

<message name="addRequirementDocumentRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pRequirementDocument" type="ttns:CRequirementDocument"/>
</message>

<message name="addRequirementDocumentResponse">
 <part name="recordID" type="xsd:long"/>
</message>

<message name="deleteRequirementDocumentRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="documentNumber" type="xsd:long"/>
 <part name="name" type="xsd:string"/>
 <part name="bDeleteAssociatedRequirements" type="xsd:boolean"/>
</message>

<message name="deleteRequirementDocumentResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="deleteRequirementDocumentByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="bDeleteAssociatedRequirements" type="xsd:boolean"/>
</message>

<message name="deleteRequirementDocumentByRecordIDResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="editRequirementDocumentRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="documentNumber" type="xsd:long"/>
 <part name="name" type="xsd:string"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="editRequirementDocumentResponse">
 <part name="pRequirementDocument" type="ttns:CRequirementDocument"/>
</message>

<message name="editRequirementDocumentByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
 <part name="bDownloadAttachments" type="xsd:boolean"/>
</message>

<message name="editRequirementDocumentByRecordIDResponse">
 <part name="pRequirementDocument" type="ttns:CRequirementDocument"/>
</message>

<message name="saveRequirementDocumentRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="pRequirementDocument" type="ttns:CRequirementDocument"/>
</message>

<message name="saveRequirementDocumentResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="cancelSaveRequirementDocumentRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="recordID" type="xsd:long"/>
</message>

<message name="cancelSaveRequirementDocumentResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="createSnapshotRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="documentID" type="xsd:long"/>
 <part name="snapshot" type="ttns:CSnapshotInfo"/>
</message>

<message name="createSnapshotResponse">
 <part name="result" type="xsd:int"/>
</message>

<message name="getRequirementIDsForDocumentRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="documentID" type="xsd:long"/>
</message>

<message name="getRequirementIDsForDocumentResponse">
 <part name="recordIDs" type="ttns:ArrayOflong"/>
</message>

<message name="getDocumentTreeRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="documentID" type="xsd:long"/>
</message>

<message name="getDocumentTreeResponse">
 <part name="docTreeRootNode" type="ttns:CTreeNodeSoap"/>
</message>

<message name="getFolderTreeByRecordIDRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="treeRootFolderID" type="xsd:long"/>
</message>

<message name="getFolderTreeByRecordIDResponse">
 <part name="folderTreeRoot" type="ttns:CTreeNodeSoap"/>
</message>

<message name="getFolderTreeRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="treeRootFolderPath" type="xsd:string"/>
</message>

<message name="getFolderTreeResponse">
 <part name="folderTreeRoot" type="ttns:CTreeNodeSoap"/>
</message>

<message name="getItemHyperlinksRequest">
 <part name="cookie" type="xsd:long"/>
 <part name="itemType" type="xsd:string"/>
 <part name="itemID" type="xsd:long"/>
</message>

<message name="getItemHyperlinksResponse">
 <part name="hyperlinks" type="ttns:CItemHyperlinkContainer"/>
</message>

<portType name="ttsoapcgiPortType">
 <operation name="getDatabaseList">
  <documentation>Returns a list of database names the SOAP client can connect to. Deprecated; use getProjectList.</documentation>
  <input message="tns:getDatabaseListRequest"/>
  <output message="tns:getDatabaseListResponse"/>
 </operation>
 <operation name="getProjectList">
  <documentation>Returns a list of project names the SOAP client can connect to.</documentation>
  <input message="tns:getProjectListRequest"/>
  <output message="tns:getProjectListResponse"/>
 </operation>
 <operation name="getProjectDataOptionList">
  <documentation>Returns what type of access SOAP user has. For example, logging in with access to TestTrack Pro.</documentation>
  <input message="tns:getProjectDataOptionListRequest"/>
  <output message="tns:getProjectDataOptionListResponse"/>
 </operation>
 <operation name="DatabaseLogon">
  <documentation>Logs SOAP user into TestTrack. Deprecated; use ProjectLogon.</documentation>
  <input message="tns:DatabaseLogonRequest"/>
  <output message="tns:DatabaseLogonResponse"/>
 </operation>
 <operation name="ProjectLogon">
  <documentation>Logs SOAP user into TestTrack. Uses a project name, which the getProjectList request returns, with a username and password. This request returns a cookie that is used in subsequent calls. NOTE: In the TestTrack Client, users can be required to change their passwords at the next login. This option is not enforced in the SOAP client because we do not want to prevent SOAP scripts from running because of the change password option.</documentation>
  <input message="tns:ProjectLogonRequest"/>
  <output message="tns:ProjectLogonResponse"/>
 </operation>
 <operation name="DatabaseLogoff">
  <documentation>Logs SOAP user out of TestTrack. This operation is used for session management and should be the final call made to the SOAP server. It performs session clean up, logs off all users, and closes all connections to the TestTrack project.</documentation>
  <input message="tns:DatabaseLogoffRequest"/>
  <output message="tns:DatabaseLogoffResponse"/>
 </operation>
 <operation name="formattedTextSupport">
  <documentation>Turns formattedTextSupport on or off. Defaults to plain text. Pass in 'true' to turn rich text on.</documentation>
  <input message="tns:formattedTextSupportRequest"/>
  <output message="tns:formattedTextSupportResponse"/>
 </operation>
 <operation name="getTableList">
  <documentation>Returns a list of tables the user can access. Many TestTrack SOAP requests and types use a table name as a parameter. This request filters out tables the SOAP user does not have security access to.</documentation>
  <input message="tns:getTableListRequest"/>
  <output message="tns:getTableListResponse"/>
 </operation>
 <operation name="getDropdownFieldForTable">
  <documentation>Returns table drop-down field. Fields only access specific values and are included as a subset of columns returned from getColumnsForTable. Use getDropdownFieldValuesForTable to get field values.</documentation>
  <input message="tns:getDropdownFieldForTableRequest"/>
  <output message="tns:getDropdownFieldForTableResponse"/>
 </operation>
 <operation name="getDropdownFieldValuesForTable">
  <documentation>Returns table drop-down field values. Use getDropdownFieldForTable to get fields.</documentation>
  <input message="tns:getDropdownFieldValuesForTableRequest"/>
  <output message="tns:getDropdownFieldValuesForTableResponse"/>
 </operation>
 <operation name="addDropdownFieldValuesForTable">
  <documentation>Adds drop-down values to a selected field. The list of values is sent to the server with the new value added last.</documentation>
  <input message="tns:addDropdownFieldValuesForTableRequest"/>
  <output message="tns:addDropdownFieldValuesForTableResponse"/>
 </operation>
 <operation name="GetLinkDefinitionValues">
  <documentation>Returns a list of defined links.</documentation>
  <input message="tns:GetLinkDefinitionValuesRequest"/>
  <output message="tns:GetLinkDefinitionValuesResponse"/>
 </operation>
 <operation name="getColumnsForTable">
  <documentation>Returns column fields that are displayed for a specific table.</documentation>
  <input message="tns:getColumnsForTableRequest"/>
  <output message="tns:getColumnsForTableResponse"/>
 </operation>
 <operation name="getFilterList">
  <documentation>Returns a list of filters.</documentation>
  <input message="tns:getFilterListRequest"/>
  <output message="tns:getFilterListResponse"/>
 </operation>
 <operation name="getFilterListForTable">
  <documentation>Returns list of filters that a specified table can use.</documentation>
  <input message="tns:getFilterListForTableRequest"/>
  <output message="tns:getFilterListForTableResponse"/>
 </operation>
 <operation name="getRecordListForTable">
  <documentation>Returns table data. The filtername parameter applies a filter to the results. The columnlist parameter limits the returned data to specific columns. NOTE: Only the first 128 characters are returned. Following are the table names: Customer, Defect, Folder, Links, Report, Requirement, Requirement Document, Task, Test Case, Test Config, Test Run, Test Variant, User.  The returned DateTime data format is based on the server locale setting.</documentation>
  <input message="tns:getRecordListForTableRequest"/>
  <output message="tns:getRecordListForTableResponse"/>
 </operation>
 <operation name="getTestConfig">
  <documentation>Returns a list of test configs.</documentation>
  <input message="tns:getTestConfigRequest"/>
  <output message="tns:getTestConfigResponse"/>
 </operation>
 <operation name="getTestConfigByRecordID">
  <documentation>Returns a test config based on record ID.</documentation>
  <input message="tns:getTestConfigByRecordIDRequest"/>
  <output message="tns:getTestConfigByRecordIDResponse"/>
 </operation>
 <operation name="addTestConfig">
  <documentation>Creates a test config.</documentation>
  <input message="tns:addTestConfigRequest"/>
  <output message="tns:addTestConfigResponse"/>
 </operation>
 <operation name="editTestConfig">
  <documentation>Retrieves a test config for editing. The saveTestConfig request must be called and passed the changed object.</documentation>
  <input message="tns:editTestConfigRequest"/>
  <output message="tns:editTestConfigResponse"/>
 </operation>
 <operation name="editTestConfigByRecordID">
  <documentation>Retrieves a test config for editing based on record ID. The saveTestConfig request must be called and passed the changed objects.</documentation>
  <input message="tns:editTestConfigByRecordIDRequest"/>
  <output message="tns:editTestConfigByRecordIDResponse"/>
 </operation>
 <operation name="saveTestConfig">
  <documentation>Saves a modified test config.</documentation>
  <input message="tns:saveTestConfigRequest"/>
  <output message="tns:saveTestConfigResponse"/>
 </operation>
 <operation name="deleteTestConfig">
  <documentation>Deletes a test config.</documentation>
  <input message="tns:deleteTestConfigRequest"/>
  <output message="tns:deleteTestConfigResponse"/>
 </operation>
 <operation name="deleteTestConfigByRecordID">
  <documentation>Deletes a test config based on record ID.</documentation>
  <input message="tns:deleteTestConfigByRecordIDRequest"/>
  <output message="tns:deleteTestConfigByRecordIDResponse"/>
 </operation>
 <operation name="cancelSaveTestConfig">
  <documentation>Discards changes to a test config.</documentation>
  <input message="tns:cancelSaveTestConfigRequest"/>
  <output message="tns:cancelSaveTestConfigResponse"/>
 </operation>
 <operation name="getAttachmentTypes">
  <documentation>Returns the values (Standard, Script, Run Result) that are used in the m-strType var of an attachment in an attachmentList for core items.</documentation>
  <input message="tns:getAttachmentTypesRequest"/>
  <output message="tns:getAttachmentTypesResponse"/>
 </operation>
 <operation name="getReportRunResultsByName">
  <documentation>Runs a report and returns results based on report names. NOTE: Live charts and interactively filtered reports are not supported.</documentation>
  <input message="tns:getReportRunResultsByNameRequest"/>
  <output message="tns:getReportRunResultsByNameResponse"/>
 </operation>
 <operation name="getReportRunResultsByRecordID">
  <documentation>Runs a report and returns results based on report ID. NOTE: Live charts and interactively filtered reports are not supported.</documentation>
  <input message="tns:getReportRunResultsByRecordIDRequest"/>
  <output message="tns:getReportRunResultsByRecordIDResponse"/>
 </operation>
 <operation name="getEventDefinitionList">
  <documentation>Returns a list of event definitions that describe what fields are included with each event.</documentation>
  <input message="tns:getEventDefinitionListRequest"/>
  <output message="tns:getEventDefinitionListResponse"/>
 </operation>
 <operation name="getDefectEventDefinitionList">
  <documentation>Returns a list of defect event definitions that describe the fields included with each event.  Deprecated; use getEventDefinitionList.</documentation>
  <input message="tns:getDefectEventDefinitionListRequest"/>
  <output message="tns:getDefectEventDefinitionListResponse"/>
 </operation>
 <operation name="getCustomFieldsDefinitionList">
  <documentation>Returns a list of custom field definitions.</documentation>
  <input message="tns:getCustomFieldsDefinitionListRequest"/>
  <output message="tns:getCustomFieldsDefinitionListResponse"/>
 </operation>
 <operation name="getDefectCustomFieldsDefinitionList">
  <documentation>Returns a list of defect custom field definitions.</documentation>
  <input message="tns:getDefectCustomFieldsDefinitionListRequest"/>
  <output message="tns:getDefectCustomFieldsDefinitionListResponse"/>
 </operation>
 <operation name="getDefect">
  <documentation>Returns a defect based on defect number or summary.</documentation>
  <input message="tns:getDefectRequest"/>
  <output message="tns:getDefectResponse"/>
 </operation>
 <operation name="getDefectByRecordID">
  <documentation>Returns a defect based on record ID.</documentation>
  <input message="tns:getDefectByRecordIDRequest"/>
  <output message="tns:getDefectByRecordIDResponse"/>
 </operation>
 <operation name="addDefect">
  <documentation>Creates a defect.</documentation>
  <input message="tns:addDefectRequest"/>
  <output message="tns:addDefectResponse"/>
 </operation>
 <operation name="addDefectWithLink">
  <documentation>Creates a linked defect.</documentation>
  <input message="tns:addDefectWithLinkRequest"/>
  <output message="tns:addDefectWithLinkResponse"/>
 </operation>
 <operation name="deleteDefect">
  <documentation>Deletes a defect based on defect number or summary.</documentation>
  <input message="tns:deleteDefectRequest"/>
  <output message="tns:deleteDefectResponse"/>
 </operation>
 <operation name="deleteDefectByRecordID">
  <documentation>Deletes a defect based on record ID.</documentation>
  <input message="tns:deleteDefectByRecordIDRequest"/>
  <output message="tns:deleteDefectByRecordIDResponse"/>
 </operation>
 <operation name="editDefect">
  <documentation>Retrieves a defect for editing. The saveDefect request must be called and passed the changed objects.</documentation>
  <input message="tns:editDefectRequest"/>
  <output message="tns:editDefectResponse"/>
 </operation>
 <operation name="editDefectByRecordID">
  <documentation>Retrieves a defect for editing based on record ID. The saveDefect request must be called and passed the changed objects.</documentation>
  <input message="tns:editDefectByRecordIDRequest"/>
  <output message="tns:editDefectByRecordIDResponse"/>
 </operation>
 <operation name="saveDefect">
  <documentation>Saves changes made to a defect.</documentation>
  <input message="tns:saveDefectRequest"/>
  <output message="tns:saveDefectResponse"/>
 </operation>
 <operation name="cancelSaveDefect">
  <documentation>Discards any changes made to a defect.</documentation>
  <input message="tns:cancelSaveDefectRequest"/>
  <output message="tns:cancelSaveDefectResponse"/>
 </operation>
 <operation name="getAttachment">
  <documentation>Retrieves file attachments.</documentation>
  <input message="tns:getAttachmentRequest"/>
  <output message="tns:getAttachmentResponse"/>
 </operation>
 <operation name="getDefectAttachment">
  <documentation>Retrieves defect file attachments. Deprecated; use getAttachmentRequest.</documentation>
  <input message="tns:getDefectAttachmentRequest"/>
  <output message="tns:getDefectAttachmentResponse"/>
 </operation>
 <operation name="getTask">
  <documentation>Retrieves a task.</documentation>
  <input message="tns:getTaskRequest"/>
  <output message="tns:getTaskResponse"/>
 </operation>
 <operation name="getTaskByRecordID">
  <documentation>Retrieves a task based on record ID.</documentation>
  <input message="tns:getTaskByRecordIDRequest"/>
  <output message="tns:getTaskByRecordIDResponse"/>
 </operation>
 <operation name="addTask">
  <documentation>Creates a task.</documentation>
  <input message="tns:addTaskRequest"/>
  <output message="tns:addTaskResponse"/>
 </operation>
 <operation name="deleteTask">
  <documentation>Deletes a task.</documentation>
  <input message="tns:deleteTaskRequest"/>
  <output message="tns:deleteTaskResponse"/>
 </operation>
 <operation name="deleteTaskByRecordID">
  <documentation>Deletes a task based on record ID.</documentation>
  <input message="tns:deleteTaskByRecordIDRequest"/>
  <output message="tns:deleteTaskByRecordIDResponse"/>
 </operation>
 <operation name="editTask">
  <documentation>Retrieves a task for editing. The saveTask request must be called and passed the changed object.</documentation>
  <input message="tns:editTaskRequest"/>
  <output message="tns:editTaskResponse"/>
 </operation>
 <operation name="editTaskByRecordID">
  <documentation>Retrieves a task for editing based on record ID. The saveTask request must be called and passed the changed object.</documentation>
  <input message="tns:editTaskByRecordIDRequest"/>
  <output message="tns:editTaskByRecordIDResponse"/>
 </operation>
 <operation name="saveTask">
  <documentation>Saves changes made to a task.</documentation>
  <input message="tns:saveTaskRequest"/>
  <output message="tns:saveTaskResponse"/>
 </operation>
 <operation name="cancelSaveTask">
  <documentation>Discards any changes made to a task.</documentation>
  <input message="tns:cancelSaveTaskRequest"/>
  <output message="tns:cancelSaveTaskResponse"/>
 </operation>
 <operation name="getGlobalUserList">
  <documentation>Returns a list of global users from the Seapine License Server.</documentation>
  <input message="tns:getGlobalUserListRequest"/>
  <output message="tns:getGlobalUserListResponse"/>
 </operation>
 <operation name="getGlobalCustomerList">
  <documentation>Returns a list of global customers from the Seapine License Server.</documentation>
  <input message="tns:getGlobalCustomerListRequest"/>
  <output message="tns:getGlobalCustomerListResponse"/>
 </operation>
 <operation name="getUserLicenseList">
  <documentation>Returns a list of user licenses.</documentation>
  <input message="tns:getUserLicenseListRequest"/>
  <output message="tns:getUserLicenseListResponse"/>
 </operation>
 <operation name="getUser">
  <documentation>Returns a user.</documentation>
  <input message="tns:getUserRequest"/>
  <output message="tns:getUserResponse"/>
 </operation>
 <operation name="getUserByRecordID">
  <documentation>Returns a user based on record ID.</documentation>
  <input message="tns:getUserByRecordIDRequest"/>
  <output message="tns:getUserByRecordIDResponse"/>
 </operation>
 <operation name="getUserForCurrentSession">
  <documentation>Returns the user used to log in for this session.</documentation>
  <input message="tns:getUserForCurrentSessionRequest"/>
  <output message="tns:getUserForCurrentSessionResponse"/>
 </operation>
 <operation name="addUser">
  <documentation>Creates a user.</documentation>
  <input message="tns:addUserRequest"/>
  <output message="tns:addUserResponse"/>
 </operation>
 <operation name="editUser">
  <documentation>Retrieves a user for editing. The saveUser request must be called and passed the changed object.</documentation>
  <input message="tns:editUserRequest"/>
  <output message="tns:editUserResponse"/>
 </operation>
 <operation name="editUserByRecordID">
  <documentation>Retrieves a user for editing based on record ID. The saveUser request must be called and passed the changed object.</documentation>
  <input message="tns:editUserByRecordIDRequest"/>
  <output message="tns:editUserByRecordIDResponse"/>
 </operation>
 <operation name="saveUser">
  <documentation>Saves changes made to a user record.</documentation>
  <input message="tns:saveUserRequest"/>
  <output message="tns:saveUserResponse"/>
 </operation>
 <operation name="deleteUser">
  <documentation>Deletes a user.</documentation>
  <input message="tns:deleteUserRequest"/>
  <output message="tns:deleteUserResponse"/>
 </operation>
 <operation name="deleteUserByRecordID">
  <documentation>Deletes a user based on record ID.</documentation>
  <input message="tns:deleteUserByRecordIDRequest"/>
  <output message="tns:deleteUserByRecordIDResponse"/>
 </operation>
 <operation name="cancelSaveUser">
  <documentation>Discards changes made to a user record.</documentation>
  <input message="tns:cancelSaveUserRequest"/>
  <output message="tns:cancelSaveUserResponse"/>
 </operation>
 <operation name="promoteUser">
  <documentation>Promotes a local user to a global user on the Seapine License Server.</documentation>
  <input message="tns:promoteUserRequest"/>
  <output message="tns:promoteUserResponse"/>
 </operation>
 <operation name="addGlobalUser">
  <documentation>Retrieves a global user from the Seapine License Server and adds them to TestTrack.</documentation>
  <input message="tns:addGlobalUserRequest"/>
  <output message="tns:addGlobalUserResponse"/>
 </operation>
 <operation name="getCustomer">
  <documentation>Returns a customer.</documentation>
  <input message="tns:getCustomerRequest"/>
  <output message="tns:getCustomerResponse"/>
 </operation>
 <operation name="getCustomerByRecordID">
  <documentation>Returns a customer based on record ID.</documentation>
  <input message="tns:getCustomerByRecordIDRequest"/>
  <output message="tns:getCustomerByRecordIDResponse"/>
 </operation>
 <operation name="addCustomer">
  <documentation>Creates a customer.</documentation>
  <input message="tns:addCustomerRequest"/>
  <output message="tns:addCustomerResponse"/>
 </operation>
 <operation name="editCustomer">
  <documentation>Retrieves a customer for editing. The saveCustomer request must be called and passed the changed object.</documentation>
  <input message="tns:editCustomerRequest"/>
  <output message="tns:editCustomerResponse"/>
 </operation>
 <operation name="editCustomerByRecordID">
  <documentation>Retrieves a customer for editing based on record ID. The saveCustomer request must be called and passed the changed object.</documentation>
  <input message="tns:editCustomerByRecordIDRequest"/>
  <output message="tns:editCustomerByRecordIDResponse"/>
 </operation>
 <operation name="saveCustomer">
  <documentation>Saves changes made to a customer record.</documentation>
  <input message="tns:saveCustomerRequest"/>
  <output message="tns:saveCustomerResponse"/>
 </operation>
 <operation name="deleteCustomer">
  <documentation>Deletes a customer.</documentation>
  <input message="tns:deleteCustomerRequest"/>
  <output message="tns:deleteCustomerResponse"/>
 </operation>
 <operation name="deleteCustomerByRecordID">
  <documentation>Deletes a customer based on record ID.</documentation>
  <input message="tns:deleteCustomerByRecordIDRequest"/>
  <output message="tns:deleteCustomerByRecordIDResponse"/>
 </operation>
 <operation name="cancelSaveCustomer">
  <documentation>Discards changes made to a customer record.</documentation>
  <input message="tns:cancelSaveCustomerRequest"/>
  <output message="tns:cancelSaveCustomerResponse"/>
 </operation>
 <operation name="promoteCustomer">
  <documentation>Promotes a local customer to a global customer on the Seapine License Server.</documentation>
  <input message="tns:promoteCustomerRequest"/>
  <output message="tns:promoteCustomerResponse"/>
 </operation>
 <operation name="addGlobalCustomer">
  <documentation>Retrieves a global customer from the Seapine License Server and adds them to TestTrack.</documentation>
  <input message="tns:addGlobalCustomerRequest"/>
  <output message="tns:addGlobalCustomerResponse"/>
 </operation>
 <operation name="getLinksForItem">
  <documentation>Returns links for a specified item.</documentation>
  <input message="tns:getLinksForItemRequest"/>
  <output message="tns:getLinksForItemResponse"/>
 </operation>
 <operation name="getLinksForDefect">
  <documentation>Returns links for a specified defect.</documentation>
  <input message="tns:getLinksForDefectRequest"/>
  <output message="tns:getLinksForDefectResponse"/>
 </operation>
 <operation name="getLink">
  <documentation>Returns a list of all links.</documentation>
  <input message="tns:getLinkRequest"/>
  <output message="tns:getLinkResponse"/>
 </operation>
 <operation name="addLink">
  <documentation>Creates a link.</documentation>
  <input message="tns:addLinkRequest"/>
  <output message="tns:addLinkResponse"/>
 </operation>
 <operation name="deleteLink">
  <documentation>Deletes a link.</documentation>
  <input message="tns:deleteLinkRequest"/>
  <output message="tns:deleteLinkResponse"/>
 </operation>
 <operation name="editLink">
  <documentation>Retrieves a link for editing. The saveLink request must be called and passed the changed objects.</documentation>
  <input message="tns:editLinkRequest"/>
  <output message="tns:editLinkResponse"/>
 </operation>
 <operation name="saveLink">
  <documentation>Saves changes made to a link.</documentation>
  <input message="tns:saveLinkRequest"/>
  <output message="tns:saveLinkResponse"/>
 </operation>
 <operation name="cancelSaveLink">
  <documentation>Discards changes made to a link.</documentation>
  <input message="tns:cancelSaveLinkRequest"/>
  <output message="tns:cancelSaveLinkResponse"/>
 </operation>
 <operation name="getTestVariantTypes">
  <documentation>Returns a list of test variant types.</documentation>
  <input message="tns:getTestVariantTypesRequest"/>
  <output message="tns:getTestVariantTypesResponse"/>
 </operation>
 <operation name="getTestRunStepsModes">
  <documentation>Returns test runs steps mode. Either Grid View or Free Form Text View.</documentation>
  <input message="tns:getTestRunStepsModesRequest"/>
  <output message="tns:getTestRunStepsModesResponse"/>
 </operation>
 <operation name="getTestCase">
  <documentation>Returns a list of test cases.</documentation>
  <input message="tns:getTestCaseRequest"/>
  <output message="tns:getTestCaseResponse"/>
 </operation>
 <operation name="getTestCaseByRecordID">
  <documentation>Returns a test case based on record ID.</documentation>
  <input message="tns:getTestCaseByRecordIDRequest"/>
  <output message="tns:getTestCaseByRecordIDResponse"/>
 </operation>
 <operation name="addTestCase">
  <documentation>Creates a test case.</documentation>
  <input message="tns:addTestCaseRequest"/>
  <output message="tns:addTestCaseResponse"/>
 </operation>
 <operation name="deleteTestCase">
  <documentation>Deletes a test case.</documentation>
  <input message="tns:deleteTestCaseRequest"/>
  <output message="tns:deleteTestCaseResponse"/>
 </operation>
 <operation name="deleteTestCaseByRecordID">
  <documentation>Deletes a test case based on a record ID.</documentation>
  <input message="tns:deleteTestCaseByRecordIDRequest"/>
  <output message="tns:deleteTestCaseByRecordIDResponse"/>
 </operation>
 <operation name="editTestCase">
  <documentation>Retrieves a test case for editing. The saveTestCase request must be called and passed the changed objects.</documentation>
  <input message="tns:editTestCaseRequest"/>
  <output message="tns:editTestCaseResponse"/>
 </operation>
 <operation name="editTestCaseByRecordID">
  <documentation>Retrieves a test case for editing based on record ID. The saveTestCase request must be called and passed the changed objects.</documentation>
  <input message="tns:editTestCaseByRecordIDRequest"/>
  <output message="tns:editTestCaseByRecordIDResponse"/>
 </operation>
 <operation name="saveTestCase">
  <documentation>Saves changes made to a test case.</documentation>
  <input message="tns:saveTestCaseRequest"/>
  <output message="tns:saveTestCaseResponse"/>
 </operation>
 <operation name="cancelSaveTestCase">
  <documentation>Discards changes made to a test case.</documentation>
  <input message="tns:cancelSaveTestCaseRequest"/>
  <output message="tns:cancelSaveTestCaseResponse"/>
 </operation>
 <operation name="getTestRun">
  <documentation>Returns a list of test runs.</documentation>
  <input message="tns:getTestRunRequest"/>
  <output message="tns:getTestRunResponse"/>
 </operation>
 <operation name="getTestRunByRecordID">
  <documentation>Returns a test run based on record ID.</documentation>
  <input message="tns:getTestRunByRecordIDRequest"/>
  <output message="tns:getTestRunByRecordIDResponse"/>
 </operation>
 <operation name="deleteTestRun">
  <documentation>Deletes a test run.</documentation>
  <input message="tns:deleteTestRunRequest"/>
  <output message="tns:deleteTestRunResponse"/>
 </operation>
 <operation name="deleteTestRunByRecordID">
  <documentation>Deletes a test run based on record ID.</documentation>
  <input message="tns:deleteTestRunByRecordIDRequest"/>
  <output message="tns:deleteTestRunByRecordIDResponse"/>
 </operation>
 <operation name="editTestRun">
  <documentation>Retrieves a test run for editing. The saveTestRun request must be called and passed the changed objects.</documentation>
  <input message="tns:editTestRunRequest"/>
  <output message="tns:editTestRunResponse"/>
 </operation>
 <operation name="editTestRunByRecordID">
  <documentation>Retrieves a test run for editing based on record ID. The saveTestRun request must be called and passed the changed objects.</documentation>
  <input message="tns:editTestRunByRecordIDRequest"/>
  <output message="tns:editTestRunByRecordIDResponse"/>
 </operation>
 <operation name="saveTestRun">
  <documentation>Saves changes made to a test run.</documentation>
  <input message="tns:saveTestRunRequest"/>
  <output message="tns:saveTestRunResponse"/>
 </operation>
 <operation name="cancelSaveTestRun">
  <documentation>Discards changes made to a test run.</documentation>
  <input message="tns:cancelSaveTestRunRequest"/>
  <output message="tns:cancelSaveTestRunResponse"/>
 </operation>
 <operation name="createDefectForTestRun">
  <documentation>Creates a defect based on test run results.</documentation>
  <input message="tns:createDefectForTestRunRequest"/>
  <output message="tns:createDefectForTestRunResponse"/>
 </operation>
 <operation name="generateTestRuns">
  <documentation>Generates test runs for a test case.</documentation>
  <input message="tns:generateTestRunsRequest"/>
  <output message="tns:generateTestRunsResponse"/>
 </operation>
 <operation name="getFolderTypeByName">
  <documentation>Returns the properties of the folder type. Call the getFolderTypeList request to get the names used in this request.</documentation>
  <input message="tns:getFolderTypeByNameRequest"/>
  <output message="tns:getFolderTypeByNameResponse"/>
 </operation>
 <operation name="getFolderTypeList">
  <documentation>Returns a list of configured folder types.</documentation>
  <input message="tns:getFolderTypeListRequest"/>
  <output message="tns:getFolderTypeListResponse"/>
 </operation>
 <operation name="addFolder">
  <documentation>Creates a folder.</documentation>
  <input message="tns:addFolderRequest"/>
  <output message="tns:addFolderResponse"/>
 </operation>
 <operation name="editFolder">
  <documentation>Retrieves a folder for editing. The saveFolder request must be called and passed the changed objects.</documentation>
  <input message="tns:editFolderRequest"/>
  <output message="tns:editFolderResponse"/>
 </operation>
 <operation name="editFolderByRecordID">
  <documentation>Retrieves a folder for editing based on record ID. The saveFolder request must be called and passed the changed objects.</documentation>
  <input message="tns:editFolderByRecordIDRequest"/>
  <output message="tns:editFolderByRecordIDResponse"/>
 </operation>
 <operation name="saveFolder">
  <documentation>Saves changes made to a folder. NOTES: If you set the path, parentid, and the ispublic flag, they must all be consistent. If you set only the path, you can pass back the original parentid and ispublic flag and they will be updated automatically. Similarly, if you set the parentid and the ispublic flag you can pass back the original path (or none at all) and it will be updated. If you set only the parentid, the ispublic flag and the owner of the new parent folder (if private) must be the same as the old parent folder. If the folder name changes, the path must also change. The path must always end with the folder name and no trailing path separator character. Changing only ispublic or only name results in an error.</documentation>
  <input message="tns:saveFolderRequest"/>
  <output message="tns:saveFolderResponse"/>
 </operation>
 <operation name="cancelSaveFolder">
  <documentation>Discards changes made to a folder.</documentation>
  <input message="tns:cancelSaveFolderRequest"/>
  <output message="tns:cancelSaveFolderResponse"/>
 </operation>
 <operation name="getFolder">
  <documentation>Returns a list of folders.</documentation>
  <input message="tns:getFolderRequest"/>
  <output message="tns:getFolderResponse"/>
 </operation>
 <operation name="getFolderByRecordID">
  <documentation>Returns a folder based on record ID.</documentation>
  <input message="tns:getFolderByRecordIDRequest"/>
  <output message="tns:getFolderByRecordIDResponse"/>
 </operation>
 <operation name="deleteFolder">
  <documentation>Deletes a folder.</documentation>
  <input message="tns:deleteFolderRequest"/>
  <output message="tns:deleteFolderResponse"/>
 </operation>
 <operation name="deleteFolderByRecordID">
  <documentation>Deletes a folder based on record ID.</documentation>
  <input message="tns:deleteFolderByRecordIDRequest"/>
  <output message="tns:deleteFolderByRecordIDResponse"/>
 </operation>
 <operation name="addEntityToFolderByRecordID">
  <documentation>Adds a TestTrack item to a folder based on record ID.</documentation>
  <input message="tns:addEntityToFolderByRecordIDRequest"/>
  <output message="tns:addEntityToFolderByRecordIDResponse"/>
 </operation>
 <operation name="removeEntityFromFolderByRecordID">
  <documentation>Removes a TestTrack item from a folder based on record ID.</documentation>
  <input message="tns:removeEntityFromFolderByRecordIDRequest"/>
  <output message="tns:removeEntityFromFolderByRecordIDResponse"/>
 </operation>
 <operation name="getEntityListForFolderByRecordID">
  <documentation>Returns a list of TestTrack items in a folder based on record ID.</documentation>
  <input message="tns:getEntityListForFolderByRecordIDRequest"/>
  <output message="tns:getEntityListForFolderByRecordIDResponse"/>
 </operation>
 <operation name="getFolderListForEntityByRecordID">
  <documentation>Returns a list of folders a specified item is in.</documentation>
  <input message="tns:getFolderListForEntityByRecordIDRequest"/>
  <output message="tns:getFolderListForEntityByRecordIDResponse"/>
 </operation>
 <operation name="getFolderPathSeparator">
  <documentation>Returns the folder separator character, which is '/'.</documentation>
  <input message="tns:getFolderPathSeparatorRequest"/>
  <output message="tns:getFolderPathSeparatorResponse"/>
 </operation>
 <operation name="getRootPublicFolderPath">
  <documentation>Returns a public folder path.</documentation>
  <input message="tns:getRootPublicFolderPathRequest"/>
  <output message="tns:getRootPublicFolderPathResponse"/>
 </operation>
 <operation name="getRootPrivateFolderPath">
  <documentation>Returns a private folder path.</documentation>
  <input message="tns:getRootPrivateFolderPathRequest"/>
  <output message="tns:getRootPrivateFolderPathResponse"/>
 </operation>
 <operation name="editFolderItemRank">
  <documentation>Retrieves a folder for item ranking.</documentation>
  <input message="tns:editFolderItemRankRequest"/>
  <output message="tns:editFolderItemRankResponse"/>
 </operation>
 <operation name="saveFolderItemRank">
  <documentation>Save changes made to item rank in a folder.</documentation>
  <input message="tns:saveFolderItemRankRequest"/>
  <output message="tns:saveFolderItemRankResponse"/>
 </operation>
 <operation name="cancelSaveFolderItemRank">
  <documentation>Discards changes made to item rank in a folder.</documentation>
  <input message="tns:cancelSaveFolderItemRankRequest"/>
  <output message="tns:cancelSaveFolderItemRankResponse"/>
 </operation>
 <operation name="getRequirement">
  <documentation>Returns a list of requirements.</documentation>
  <input message="tns:getRequirementRequest"/>
  <output message="tns:getRequirementResponse"/>
 </operation>
 <operation name="getRequirementByRecordID">
  <documentation>Returns a requirement based on record ID.</documentation>
  <input message="tns:getRequirementByRecordIDRequest"/>
  <output message="tns:getRequirementByRecordIDResponse"/>
 </operation>
 <operation name="addRequirement">
  <documentation>Creates a requirement.</documentation>
  <input message="tns:addRequirementRequest"/>
  <output message="tns:addRequirementResponse"/>
 </operation>
 <operation name="deleteRequirement">
  <documentation>Deletes a requirement.</documentation>
  <input message="tns:deleteRequirementRequest"/>
  <output message="tns:deleteRequirementResponse"/>
 </operation>
 <operation name="deleteRequirementByRecordID">
  <documentation>Deletes a requirement based on record ID.</documentation>
  <input message="tns:deleteRequirementByRecordIDRequest"/>
  <output message="tns:deleteRequirementByRecordIDResponse"/>
 </operation>
 <operation name="editRequirement">
  <documentation>Retrieves a requirement for editing. The saveRequirement request must be called and passed the changed objects.</documentation>
  <input message="tns:editRequirementRequest"/>
  <output message="tns:editRequirementResponse"/>
 </operation>
 <operation name="editRequirementByRecordID">
  <documentation>Retrieves a requirement for editing based on record ID. The saveRequirement request must be called and passed the changed objects.</documentation>
  <input message="tns:editRequirementByRecordIDRequest"/>
  <output message="tns:editRequirementByRecordIDResponse"/>
 </operation>
 <operation name="saveRequirement">
  <documentation>Saves changes made to a requirement.</documentation>
  <input message="tns:saveRequirementRequest"/>
  <output message="tns:saveRequirementResponse"/>
 </operation>
 <operation name="cancelSaveRequirement">
  <documentation>Discards changes made to a requirement.</documentation>
  <input message="tns:cancelSaveRequirementRequest"/>
  <output message="tns:cancelSaveRequirementResponse"/>
 </operation>
 <operation name="appendToRequirementDocument">
  <documentation>Appends the requirement to the end of a requirement document.</documentation>
  <input message="tns:appendToRequirementDocumentRequest"/>
  <output message="tns:appendToRequirementDocumentResponse"/>
 </operation>
 <operation name="getDocumentIDsForRequirement">
  <documentation>Returns a list of requirement document IDs for a specified requirement.</documentation>
  <input message="tns:getDocumentIDsForRequirementRequest"/>
  <output message="tns:getDocumentIDsForRequirementResponse"/>
 </operation>
 <operation name="changeRequirementType">
  <documentation>Changes the requirement type.</documentation>
  <input message="tns:changeRequirementTypeRequest"/>
  <output message="tns:changeRequirementTypeResponse"/>
 </operation>
 <operation name="getRequirementDocument">
  <documentation>Returns a list of requirement documents.</documentation>
  <input message="tns:getRequirementDocumentRequest"/>
  <output message="tns:getRequirementDocumentResponse"/>
 </operation>
 <operation name="getRequirementDocumentByRecordID">
  <documentation>Returns a list of requirement documents by record ID.</documentation>
  <input message="tns:getRequirementDocumentByRecordIDRequest"/>
  <output message="tns:getRequirementDocumentByRecordIDResponse"/>
 </operation>
 <operation name="addRequirementDocument">
  <documentation>Creates a requirement document.</documentation>
  <input message="tns:addRequirementDocumentRequest"/>
  <output message="tns:addRequirementDocumentResponse"/>
 </operation>
 <operation name="deleteRequirementDocument">
  <documentation>Deletes a requirement document.</documentation>
  <input message="tns:deleteRequirementDocumentRequest"/>
  <output message="tns:deleteRequirementDocumentResponse"/>
 </operation>
 <operation name="deleteRequirementDocumentByRecordID">
  <documentation>Service definition of function ttns__deleteRequirementDocumentByRecordID</documentation>
  <input message="tns:deleteRequirementDocumentByRecordIDRequest"/>
  <output message="tns:deleteRequirementDocumentByRecordIDResponse"/>
 </operation>
 <operation name="editRequirementDocument">
  <documentation>Retrieves a requirement document for editing. The saveRequirementDocument request must be called and passed the changed objects.</documentation>
  <input message="tns:editRequirementDocumentRequest"/>
  <output message="tns:editRequirementDocumentResponse"/>
 </operation>
 <operation name="editRequirementDocumentByRecordID">
  <documentation>Retrieves a requirement document for editing based on record ID. The saveRequirementDocument request must be called and passed the changed objects.</documentation>
  <input message="tns:editRequirementDocumentByRecordIDRequest"/>
  <output message="tns:editRequirementDocumentByRecordIDResponse"/>
 </operation>
 <operation name="saveRequirementDocument">
  <documentation>Saves changes made to a requirement document.</documentation>
  <input message="tns:saveRequirementDocumentRequest"/>
  <output message="tns:saveRequirementDocumentResponse"/>
 </operation>
 <operation name="cancelSaveRequirementDocument">
  <documentation>Discards changes made to a requirement document.</documentation>
  <input message="tns:cancelSaveRequirementDocumentRequest"/>
  <output message="tns:cancelSaveRequirementDocumentResponse"/>
 </operation>
 <operation name="createSnapshot">
  <documentation>Creates a requirement document snapshot.</documentation>
  <input message="tns:createSnapshotRequest"/>
  <output message="tns:createSnapshotResponse"/>
 </operation>
 <operation name="getRequirementIDsForDocument">
  <documentation>Returns a list of requirement IDs for the requirement document.</documentation>
  <input message="tns:getRequirementIDsForDocumentRequest"/>
  <output message="tns:getRequirementIDsForDocumentResponse"/>
 </operation>
 <operation name="getDocumentTree">
  <documentation>Returns the requirement hierarchy from a requirement document.</documentation>
  <input message="tns:getDocumentTreeRequest"/>
  <output message="tns:getDocumentTreeResponse"/>
 </operation>
 <operation name="getFolderTreeByRecordID">
  <documentation>Returns the public or private folder hierarchy starting at a specified folder based on record ID.</documentation>
  <input message="tns:getFolderTreeByRecordIDRequest"/>
  <output message="tns:getFolderTreeByRecordIDResponse"/>
 </operation>
 <operation name="getFolderTree">
  <documentation>Returns the public or private folder hierarchy starting at a specified folder.</documentation>
  <input message="tns:getFolderTreeRequest"/>
  <output message="tns:getFolderTreeResponse"/>
 </operation>
 <operation name="getItemHyperlinks">
  <documentation>Returns ttstudio and http hyperlinks for a specified item.</documentation>
  <input message="tns:getItemHyperlinksRequest"/>
  <output message="tns:getItemHyperlinksResponse"/>
 </operation>
</portType>

<binding name="ttsoapcgi" type="tns:ttsoapcgiPortType">
 <SOAP:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
 <operation name="getDatabaseList">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getDatabaseList"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getProjectList">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getProjectList"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getProjectDataOptionList">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getProjectDataOptionList"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="DatabaseLogon">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#DatabaseLogon"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="ProjectLogon">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#ProjectLogon"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="DatabaseLogoff">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#DatabaseLogoff"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="formattedTextSupport">
  <SOAP:operation style="rpc" soapAction=""/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getTableList">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getTableList"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getDropdownFieldForTable">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getDropdownFieldForTable"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getDropdownFieldValuesForTable">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getDropdownFieldValuesForTable"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="addDropdownFieldValuesForTable">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#addDropdownFieldValuesForTable"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="GetLinkDefinitionValues">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#GetLinkDefinitionValues"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getColumnsForTable">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getColumnsForTable"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getFilterList">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getFilterList"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getFilterListForTable">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getFilterListForTable"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getRecordListForTable">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getRecordListForTable"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getTestConfig">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getTestConfig"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getTestConfigByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getTestConfigByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="addTestConfig">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#addTestConfig"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editTestConfig">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editTestConfig"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editTestConfigByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editTestConfigByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="saveTestConfig">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#saveTestConfig"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteTestConfig">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteTestConfig"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteTestConfigByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteTestConfigByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="cancelSaveTestConfig">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#cancelSaveTestConfig"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getAttachmentTypes">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getAttachmentTypes"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getReportRunResultsByName">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getReportRunResultsByName"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getReportRunResultsByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getReportRunResultsByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getEventDefinitionList">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getEventDefinitionList"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getDefectEventDefinitionList">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getDefectEventDefinitionList"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getCustomFieldsDefinitionList">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getCustomFieldsDefinitionList"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getDefectCustomFieldsDefinitionList">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getDefectCustomFieldsDefinitionList"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getDefect">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getDefect"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getDefectByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getDefectByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="addDefect">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#addDefect"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="addDefectWithLink">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#addDefectWithLink"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteDefect">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteDefect"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteDefectByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteDefectByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editDefect">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editDefect"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editDefectByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editDefectByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="saveDefect">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#saveDefect"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="cancelSaveDefect">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#cancelSaveDefect"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getAttachment">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getAttachment"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getDefectAttachment">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getDefectAttachment"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getTask">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getTask"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getTaskByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getTaskByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="addTask">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#addTask"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteTask">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteTask"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteTaskByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteTaskByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editTask">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editTask"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editTaskByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editTaskByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="saveTask">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#saveTask"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="cancelSaveTask">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#cancelSaveTask"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getGlobalUserList">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getGlobalUserList"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getGlobalCustomerList">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getGlobalCustomerList"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getUserLicenseList">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getUserLicenseList"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getUser">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getUser"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getUserByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getUserByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getUserForCurrentSession">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getUserForCurrentSession"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="addUser">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#addUser"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editUser">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editUser"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editUserByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editUserByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="saveUser">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#saveUser"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteUser">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteUser"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteUserByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteUserByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="cancelSaveUser">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#cancelSaveUser"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="promoteUser">
  <SOAP:operation style="rpc" soapAction=""/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="addGlobalUser">
  <SOAP:operation style="rpc" soapAction=""/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getCustomer">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getCustomer"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getCustomerByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getCustomerByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="addCustomer">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#addCustomer"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editCustomer">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editCustomer"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editCustomerByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editCustomerByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="saveCustomer">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#saveCustomer"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteCustomer">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteCustomer"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteCustomerByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteCustomerByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="cancelSaveCustomer">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#cancelSaveCustomer"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="promoteCustomer">
  <SOAP:operation style="rpc" soapAction=""/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="addGlobalCustomer">
  <SOAP:operation style="rpc" soapAction=""/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getLinksForItem">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getLinksForItem"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getLinksForDefect">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getLinksForDefect"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getLink">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getLink"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="addLink">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#addLink"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteLink">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteLink"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editLink">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editLink"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="saveLink">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#saveLink"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="cancelSaveLink">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#cancelSaveLink"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getTestVariantTypes">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getTestVariantTypes"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getTestRunStepsModes">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getTestRunStepsModes"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getTestCase">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getTestCase"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getTestCaseByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getTestCaseByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="addTestCase">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#addTestCase"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteTestCase">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteTestCase"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteTestCaseByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteTestCaseByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editTestCase">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editTestCase"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editTestCaseByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editTestCaseByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="saveTestCase">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#saveTestCase"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="cancelSaveTestCase">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#cancelSaveTestCase"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getTestRun">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getTestRun"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getTestRunByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getTestRunByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteTestRun">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteTestRun"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteTestRunByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteTestRunByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editTestRun">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editTestRun"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editTestRunByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editTestRunByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="saveTestRun">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#saveTestRun"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="cancelSaveTestRun">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#cancelSaveTestRun"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="createDefectForTestRun">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#createDefectForTestRun"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="generateTestRuns">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#generateTestRuns"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getFolderTypeByName">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getFolderTypeByName"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getFolderTypeList">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getFolderTypeList"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="addFolder">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#addFolder"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editFolder">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editFolder"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editFolderByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editFolderByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="saveFolder">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#saveFolder"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="cancelSaveFolder">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#cancelSaveFolder"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getFolder">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getFolder"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getFolderByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getFolderByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteFolder">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteFolder"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteFolderByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteFolderByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="addEntityToFolderByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#addEntityToFolderByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="removeEntityFromFolderByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#removeEntityFromFolderByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getEntityListForFolderByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getEntityListForFolderByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getFolderListForEntityByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getFolderListForEntityByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getFolderPathSeparator">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getFolderPathSeparator"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getRootPublicFolderPath">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getRootPublicFolderPath"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getRootPrivateFolderPath">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getRootPrivateFolderPath"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editFolderItemRank">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editFolderItemRank"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="saveFolderItemRank">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#saveFolderItemRank"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="cancelSaveFolderItemRank">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#cancelSaveFolderItemRank"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getRequirement">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getRequirement"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getRequirementByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getRequirementByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="addRequirement">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#addRequirement"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteRequirement">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteRequirement"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteRequirementByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteRequirementByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editRequirement">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editRequirement"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editRequirementByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editRequirementByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="saveRequirement">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#saveRequirement"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="cancelSaveRequirement">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#cancelSaveRequirement"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="appendToRequirementDocument">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#appendToRequirementDocument"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getDocumentIDsForRequirement">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getDocumentIDsForRequirement"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="changeRequirementType">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#changeRequirementType"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getRequirementDocument">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getRequirementDocument"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getRequirementDocumentByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getRequirementDocumentByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="addRequirementDocument">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#addRequirementDocument"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteRequirementDocument">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteRequirementDocument"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="deleteRequirementDocumentByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#deleteRequirementDocumentByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editRequirementDocument">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editRequirementDocument"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="editRequirementDocumentByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#editRequirementDocumentByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="saveRequirementDocument">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#saveRequirementDocument"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="cancelSaveRequirementDocument">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#cancelSaveRequirementDocument"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="createSnapshot">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#createSnapshot"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getRequirementIDsForDocument">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getRequirementIDsForDocument"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getDocumentTree">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getDocumentTree"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getFolderTreeByRecordID">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getFolderTreeByRecordID"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getFolderTree">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getFolderTree"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
 <operation name="getItemHyperlinks">
  <SOAP:operation style="rpc" soapAction="urn:testtrack-interface#getItemHyperlinks"/>
  <input>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </input>
  <output>
     <SOAP:body use="encoded" namespace="urn:testtrack-interface" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
  </output>
 </operation>
</binding>

<service name="ttsoapcgi">
 <documentation>Returns ttstudio and http hyperlinks for a specified item.</documentation>
 <port name="ttsoapcgi" binding="tns:ttsoapcgi">
  <SOAP:address location="http://192.168.100.19:80/scripts/ttsoapcgi.exe"/>
 </port>
</service>

</definitions>
