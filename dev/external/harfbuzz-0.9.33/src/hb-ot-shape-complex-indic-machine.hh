
#line 1 "hb-ot-shape-complex-indic-machine.rl"
/*
 * Copyright Â© 2011,2012  Google, Inc.
 *
 *  This is part of HarfBuzz, a text shaping library.
 *
 * Permission is hereby granted, without written agreement and without
 * license or royalty fees, to use, copy, modify, and distribute this
 * software and its documentation for any purpose, provided that the
 * above copyright notice and the following two paragraphs appear in
 * all copies of this software.
 *
 * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR
 * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
 * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN
 * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 *
 * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,
 * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
 * ON AN "AS IS" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO
 * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
 *
 * Google Author(s): Behdad Esfahbod
 */

#ifndef HB_OT_SHAPE_COMPLEX_INDIC_MACHINE_HH
#define HB_OT_SHAPE_COMPLEX_INDIC_MACHINE_HH

#include "hb-private.hh"


#line 33 "hb-ot-shape-complex-indic-machine.c"
static const char _indic_syllable_machine_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	6, 1, 7, 1, 8, 1, 9, 1, 
	10, 1, 11, 1, 12, 1, 13, 1, 
	14, 1, 15, 1, 16, 1, 17, 1, 
	18, 1, 19, 1, 20, 1, 21, 1, 
	22, 2, 2, 3, 2, 2, 4, 2, 
	2, 5
};

static const short _indic_syllable_machine_key_offsets[] = {
	0, 3, 4, 7, 10, 11, 14, 17, 
	18, 21, 24, 25, 28, 31, 32, 33, 
	34, 35, 39, 40, 41, 45, 46, 47, 
	51, 52, 53, 58, 64, 69, 75, 80, 
	86, 91, 97, 102, 108, 111, 112, 115, 
	118, 119, 122, 125, 126, 129, 132, 133, 
	136, 139, 140, 141, 142, 143, 147, 148, 
	149, 153, 154, 155, 159, 160, 161, 166, 
	172, 177, 183, 188, 194, 199, 205, 210, 
	216, 219, 220, 223, 226, 227, 230, 233, 
	234, 237, 240, 241, 244, 247, 248, 249, 
	250, 251, 255, 256, 257, 261, 262, 263, 
	267, 268, 269, 274, 280, 285, 291, 296, 
	302, 307, 313, 318, 321, 322, 325, 328, 
	329, 332, 335, 336, 339, 342, 343, 346, 
	349, 350, 351, 352, 353, 357, 358, 359, 
	363, 364, 365, 369, 370, 371, 376, 382, 
	387, 393, 398, 404, 409, 415, 420, 426, 
	432, 438, 441, 444, 447, 450, 451, 454, 
	457, 458, 461, 464, 465, 468, 469, 470, 
	471, 472, 476, 477, 478, 482, 483, 484, 
	488, 489, 490, 509, 521, 532, 542, 550, 
	562, 573, 583, 591, 603, 614, 624, 632, 
	644, 655, 665, 673, 685, 696, 706, 712, 
	716, 720, 722, 723, 725, 727, 728, 731, 
	738, 742, 745, 749, 755, 763, 772, 780, 
	787, 796, 804, 811, 820, 828, 835, 842, 
	848, 853, 858, 867, 876, 884, 895, 907, 
	917, 923, 930, 937, 946, 957, 969, 979, 
	985, 992, 999, 1008, 1019, 1031, 1041, 1047, 
	1054, 1061, 1070, 1081, 1093, 1103, 1109, 1116, 
	1123, 1132, 1143, 1155, 1167, 1178, 1188, 1196, 
	1208, 1219, 1229, 1237, 1249, 1260, 1270, 1278, 
	1290, 1301, 1311, 1319, 1331, 1342, 1352, 1358, 
	1362, 1366, 1368, 1369, 1371, 1373, 1374, 1377, 
	1384, 1388, 1391, 1395, 1401, 1409, 1418, 1426, 
	1433, 1442, 1450, 1457, 1466, 1474, 1481, 1488, 
	1494, 1499, 1504, 1513, 1522, 1530, 1541, 1553, 
	1563, 1569, 1576, 1583, 1592, 1603, 1615, 1625, 
	1631, 1638, 1645, 1654, 1665, 1677, 1687, 1693, 
	1700, 1707, 1716, 1727, 1739, 1749, 1755, 1762, 
	1769, 1774, 1783, 1794, 1805, 1815, 1823, 1835, 
	1846, 1856, 1864, 1876, 1887, 1897, 1905, 1917, 
	1928, 1938, 1946, 1958, 1969, 1979, 1985, 1989, 
	1993, 1995, 1996, 1998, 2000, 2001, 2004, 2011, 
	2015, 2018, 2022, 2028, 2036, 2045, 2053, 2060, 
	2069, 2077, 2084, 2093, 2101, 2108, 2115, 2121, 
	2126, 2131, 2140, 2149, 2157, 2168, 2180, 2190, 
	2196, 2203, 2210, 2219, 2230, 2242, 2252, 2258, 
	2265, 2272, 2281, 2292, 2304, 2314, 2320, 2327, 
	2334, 2343, 2354, 2366, 2376, 2382, 2389, 2396, 
	2405, 2411, 2422, 2427, 2439, 2450, 2460, 2468, 
	2480, 2491, 2501, 2509, 2521, 2532, 2542, 2550, 
	2562, 2573, 2583, 2591, 2603, 2614, 2624, 2630, 
	2634, 2638, 2640, 2641, 2643, 2645, 2646, 2649, 
	2656, 2660, 2663, 2667, 2673, 2681, 2690, 2698, 
	2705, 2714, 2722, 2729, 2738, 2746, 2753, 2760, 
	2766, 2771, 2776, 2785, 2794, 2802, 2813, 2825, 
	2835, 2841, 2848, 2855, 2864, 2875, 2887, 2897, 
	2903, 2910, 2917, 2926, 2937, 2949, 2959, 2965, 
	2972, 2979, 2988, 2999, 3011, 3021, 3027, 3034, 
	3041, 3050, 3061, 3078, 3090, 3106, 3115, 3123, 
	3135, 3146, 3156, 3160, 3162, 3163, 3165, 3167, 
	3168, 3171, 3182, 3194, 3205, 3214, 3222, 3229, 
	3238, 3246, 3253, 3262, 3270, 3277, 3284, 3290, 
	3294, 3301, 3305, 3308, 3312, 3318, 3327, 3331, 
	3334, 3338, 3340, 3341, 3343, 3345, 3346
};

static const unsigned char _indic_syllable_machine_trans_keys[] = {
	1u, 2u, 16u, 13u, 7u, 5u, 6u, 7u, 
	5u, 6u, 7u, 7u, 5u, 6u, 7u, 5u, 
	6u, 7u, 7u, 5u, 6u, 7u, 5u, 6u, 
	7u, 7u, 5u, 6u, 7u, 5u, 6u, 7u, 
	4u, 6u, 16u, 4u, 7u, 5u, 6u, 6u, 
	16u, 4u, 7u, 5u, 6u, 6u, 16u, 4u, 
	7u, 5u, 6u, 6u, 16u, 4u, 7u, 14u, 
	5u, 6u, 4u, 7u, 13u, 14u, 5u, 6u, 
	4u, 7u, 14u, 5u, 6u, 4u, 7u, 13u, 
	14u, 5u, 6u, 4u, 7u, 14u, 5u, 6u, 
	4u, 7u, 13u, 14u, 5u, 6u, 4u, 7u, 
	14u, 5u, 6u, 4u, 7u, 13u, 14u, 5u, 
	6u, 4u, 7u, 14u, 5u, 6u, 4u, 7u, 
	13u, 14u, 5u, 6u, 1u, 2u, 16u, 13u, 
	7u, 5u, 6u, 7u, 5u, 6u, 7u, 7u, 
	5u, 6u, 7u, 5u, 6u, 7u, 7u, 5u, 
	6u, 7u, 5u, 6u, 7u, 7u, 5u, 6u, 
	7u, 5u, 6u, 7u, 4u, 6u, 16u, 4u, 
	7u, 5u, 6u, 6u, 16u, 4u, 7u, 5u, 
	6u, 6u, 16u, 4u, 7u, 5u, 6u, 6u, 
	16u, 4u, 7u, 14u, 5u, 6u, 4u, 7u, 
	13u, 14u, 5u, 6u, 4u, 7u, 14u, 5u, 
	6u, 4u, 7u, 13u, 14u, 5u, 6u, 4u, 
	7u, 14u, 5u, 6u, 4u, 7u, 13u, 14u, 
	5u, 6u, 4u, 7u, 14u, 5u, 6u, 4u, 
	7u, 13u, 14u, 5u, 6u, 4u, 7u, 14u, 
	5u, 6u, 4u, 7u, 13u, 14u, 5u, 6u, 
	1u, 2u, 16u, 13u, 7u, 5u, 6u, 7u, 
	5u, 6u, 7u, 7u, 5u, 6u, 7u, 5u, 
	6u, 7u, 7u, 5u, 6u, 7u, 5u, 6u, 
	7u, 7u, 5u, 6u, 7u, 5u, 6u, 7u, 
	4u, 6u, 16u, 4u, 7u, 5u, 6u, 6u, 
	16u, 4u, 7u, 5u, 6u, 6u, 16u, 4u, 
	7u, 5u, 6u, 6u, 16u, 4u, 7u, 14u, 
	5u, 6u, 4u, 7u, 13u, 14u, 5u, 6u, 
	4u, 7u, 14u, 5u, 6u, 4u, 7u, 13u, 
	14u, 5u, 6u, 4u, 7u, 14u, 5u, 6u, 
	4u, 7u, 13u, 14u, 5u, 6u, 4u, 7u, 
	14u, 5u, 6u, 4u, 7u, 13u, 14u, 5u, 
	6u, 4u, 7u, 14u, 5u, 6u, 1u, 2u, 
	16u, 13u, 7u, 5u, 6u, 7u, 5u, 6u, 
	7u, 7u, 5u, 6u, 7u, 5u, 6u, 7u, 
	7u, 5u, 6u, 7u, 5u, 6u, 7u, 7u, 
	5u, 6u, 7u, 5u, 6u, 7u, 4u, 6u, 
	16u, 4u, 7u, 5u, 6u, 6u, 16u, 4u, 
	7u, 5u, 6u, 6u, 16u, 4u, 7u, 5u, 
	6u, 6u, 16u, 4u, 7u, 14u, 5u, 6u, 
	4u, 7u, 13u, 14u, 5u, 6u, 4u, 7u, 
	14u, 5u, 6u, 4u, 7u, 13u, 14u, 5u, 
	6u, 4u, 7u, 14u, 5u, 6u, 4u, 7u, 
	13u, 14u, 5u, 6u, 4u, 7u, 14u, 5u, 
	6u, 4u, 7u, 13u, 14u, 5u, 6u, 4u, 
	7u, 14u, 5u, 6u, 4u, 7u, 13u, 14u, 
	5u, 6u, 4u, 7u, 13u, 14u, 5u, 6u, 
	4u, 7u, 13u, 14u, 5u, 6u, 7u, 5u, 
	6u, 7u, 5u, 6u, 7u, 5u, 6u, 7u, 
	5u, 6u, 7u, 7u, 5u, 6u, 7u, 5u, 
	6u, 7u, 7u, 5u, 6u, 7u, 5u, 6u, 
	7u, 1u, 2u, 16u, 13u, 4u, 6u, 16u, 
	4u, 7u, 5u, 6u, 6u, 16u, 4u, 7u, 
	5u, 6u, 6u, 16u, 4u, 7u, 5u, 6u, 
	6u, 16u, 1u, 2u, 3u, 4u, 5u, 6u, 
	7u, 8u, 9u, 10u, 13u, 14u, 15u, 16u, 
	17u, 18u, 31u, 11u, 12u, 3u, 4u, 5u, 
	6u, 7u, 8u, 9u, 10u, 13u, 14u, 17u, 
	31u, 3u, 4u, 7u, 8u, 9u, 10u, 14u, 
	17u, 31u, 5u, 6u, 4u, 7u, 8u, 9u, 
	10u, 14u, 17u, 31u, 5u, 6u, 1u, 5u, 
	6u, 8u, 9u, 10u, 14u, 16u, 3u, 4u, 
	5u, 6u, 7u, 8u, 9u, 10u, 13u, 14u, 
	17u, 31u, 3u, 4u, 7u, 8u, 9u, 10u, 
	14u, 17u, 31u, 5u, 6u, 4u, 7u, 8u, 
	9u, 10u, 14u, 17u, 31u, 5u, 6u, 1u, 
	5u, 6u, 8u, 9u, 10u, 14u, 16u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 10u, 13u, 
	14u, 17u, 31u, 3u, 4u, 7u, 8u, 9u, 
	10u, 14u, 17u, 31u, 5u, 6u, 4u, 7u, 
	8u, 9u, 10u, 14u, 17u, 31u, 5u, 6u, 
	1u, 5u, 6u, 8u, 9u, 10u, 14u, 16u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 
	13u, 14u, 17u, 31u, 3u, 4u, 7u, 8u, 
	9u, 10u, 14u, 17u, 31u, 5u, 6u, 4u, 
	7u, 8u, 9u, 10u, 14u, 17u, 31u, 5u, 
	6u, 1u, 5u, 6u, 8u, 9u, 10u, 14u, 
	16u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 13u, 14u, 17u, 31u, 3u, 4u, 7u, 
	8u, 9u, 10u, 14u, 17u, 31u, 5u, 6u, 
	4u, 7u, 8u, 9u, 10u, 14u, 17u, 31u, 
	5u, 6u, 5u, 6u, 8u, 9u, 10u, 14u, 
	8u, 9u, 10u, 14u, 5u, 8u, 9u, 10u, 
	9u, 10u, 9u, 9u, 10u, 9u, 10u, 9u, 
	5u, 9u, 10u, 3u, 5u, 6u, 8u, 9u, 
	10u, 13u, 3u, 8u, 9u, 10u, 8u, 9u, 
	10u, 3u, 8u, 9u, 10u, 3u, 5u, 8u, 
	9u, 10u, 13u, 3u, 7u, 8u, 9u, 10u, 
	14u, 5u, 6u, 3u, 4u, 5u, 6u, 7u, 
	8u, 9u, 10u, 14u, 4u, 5u, 6u, 7u, 
	8u, 9u, 10u, 14u, 7u, 8u, 9u, 10u, 
	14u, 5u, 6u, 3u, 4u, 5u, 6u, 7u, 
	8u, 9u, 10u, 14u, 4u, 5u, 6u, 7u, 
	8u, 9u, 10u, 14u, 7u, 8u, 9u, 10u, 
	14u, 5u, 6u, 3u, 4u, 5u, 6u, 7u, 
	8u, 9u, 10u, 14u, 4u, 5u, 6u, 7u, 
	8u, 9u, 10u, 14u, 7u, 8u, 9u, 10u, 
	14u, 5u, 6u, 3u, 4u, 6u, 8u, 9u, 
	10u, 14u, 4u, 6u, 8u, 9u, 10u, 14u, 
	6u, 8u, 9u, 10u, 14u, 3u, 8u, 9u, 
	10u, 14u, 1u, 2u, 5u, 6u, 8u, 9u, 
	10u, 14u, 16u, 4u, 7u, 8u, 9u, 10u, 
	14u, 31u, 5u, 6u, 4u, 7u, 8u, 9u, 
	10u, 14u, 5u, 6u, 3u, 4u, 7u, 8u, 
	9u, 10u, 14u, 17u, 31u, 5u, 6u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 10u, 13u, 
	14u, 17u, 31u, 1u, 3u, 7u, 8u, 9u, 
	10u, 14u, 16u, 5u, 6u, 1u, 8u, 9u, 
	10u, 14u, 16u, 1u, 6u, 8u, 9u, 10u, 
	14u, 16u, 1u, 3u, 8u, 9u, 10u, 14u, 
	16u, 1u, 2u, 5u, 6u, 8u, 9u, 10u, 
	14u, 16u, 3u, 4u, 7u, 8u, 9u, 10u, 
	14u, 17u, 31u, 5u, 6u, 3u, 4u, 5u, 
	6u, 7u, 8u, 9u, 10u, 13u, 14u, 17u, 
	31u, 1u, 3u, 7u, 8u, 9u, 10u, 14u, 
	16u, 5u, 6u, 1u, 8u, 9u, 10u, 14u, 
	16u, 1u, 6u, 8u, 9u, 10u, 14u, 16u, 
	1u, 3u, 8u, 9u, 10u, 14u, 16u, 1u, 
	2u, 5u, 6u, 8u, 9u, 10u, 14u, 16u, 
	3u, 4u, 7u, 8u, 9u, 10u, 14u, 17u, 
	31u, 5u, 6u, 3u, 4u, 5u, 6u, 7u, 
	8u, 9u, 10u, 13u, 14u, 17u, 31u, 1u, 
	3u, 7u, 8u, 9u, 10u, 14u, 16u, 5u, 
	6u, 1u, 8u, 9u, 10u, 14u, 16u, 1u, 
	6u, 8u, 9u, 10u, 14u, 16u, 1u, 3u, 
	8u, 9u, 10u, 14u, 16u, 1u, 2u, 5u, 
	6u, 8u, 9u, 10u, 14u, 16u, 3u, 4u, 
	7u, 8u, 9u, 10u, 14u, 17u, 31u, 5u, 
	6u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 13u, 14u, 17u, 31u, 1u, 3u, 7u, 
	8u, 9u, 10u, 14u, 16u, 5u, 6u, 1u, 
	8u, 9u, 10u, 14u, 16u, 1u, 6u, 8u, 
	9u, 10u, 14u, 16u, 1u, 3u, 8u, 9u, 
	10u, 14u, 16u, 1u, 2u, 5u, 6u, 8u, 
	9u, 10u, 14u, 16u, 3u, 4u, 7u, 8u, 
	9u, 10u, 14u, 17u, 31u, 5u, 6u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 10u, 13u, 
	14u, 17u, 31u, 3u, 4u, 5u, 6u, 7u, 
	8u, 9u, 10u, 13u, 14u, 17u, 31u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 10u, 14u, 
	17u, 31u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 14u, 17u, 31u, 1u, 5u, 6u, 8u, 
	9u, 10u, 14u, 16u, 3u, 4u, 5u, 6u, 
	7u, 8u, 9u, 10u, 13u, 14u, 17u, 31u, 
	3u, 4u, 7u, 8u, 9u, 10u, 14u, 17u, 
	31u, 5u, 6u, 4u, 7u, 8u, 9u, 10u, 
	14u, 17u, 31u, 5u, 6u, 1u, 5u, 6u, 
	8u, 9u, 10u, 14u, 16u, 3u, 4u, 5u, 
	6u, 7u, 8u, 9u, 10u, 13u, 14u, 17u, 
	31u, 3u, 4u, 7u, 8u, 9u, 10u, 14u, 
	17u, 31u, 5u, 6u, 4u, 7u, 8u, 9u, 
	10u, 14u, 17u, 31u, 5u, 6u, 1u, 5u, 
	6u, 8u, 9u, 10u, 14u, 16u, 3u, 4u, 
	5u, 6u, 7u, 8u, 9u, 10u, 13u, 14u, 
	17u, 31u, 3u, 4u, 7u, 8u, 9u, 10u, 
	14u, 17u, 31u, 5u, 6u, 4u, 7u, 8u, 
	9u, 10u, 14u, 17u, 31u, 5u, 6u, 1u, 
	5u, 6u, 8u, 9u, 10u, 14u, 16u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 10u, 13u, 
	14u, 17u, 31u, 3u, 4u, 7u, 8u, 9u, 
	10u, 14u, 17u, 31u, 5u, 6u, 4u, 7u, 
	8u, 9u, 10u, 14u, 17u, 31u, 5u, 6u, 
	5u, 6u, 8u, 9u, 10u, 14u, 8u, 9u, 
	10u, 14u, 5u, 8u, 9u, 10u, 9u, 10u, 
	9u, 9u, 10u, 9u, 10u, 9u, 5u, 9u, 
	10u, 3u, 5u, 6u, 8u, 9u, 10u, 13u, 
	3u, 8u, 9u, 10u, 8u, 9u, 10u, 3u, 
	8u, 9u, 10u, 3u, 5u, 8u, 9u, 10u, 
	13u, 3u, 7u, 8u, 9u, 10u, 14u, 5u, 
	6u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 14u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 14u, 7u, 8u, 9u, 10u, 14u, 5u, 
	6u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 14u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 14u, 7u, 8u, 9u, 10u, 14u, 5u, 
	6u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 14u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 14u, 7u, 8u, 9u, 10u, 14u, 5u, 
	6u, 3u, 4u, 6u, 8u, 9u, 10u, 14u, 
	4u, 6u, 8u, 9u, 10u, 14u, 6u, 8u, 
	9u, 10u, 14u, 3u, 8u, 9u, 10u, 14u, 
	1u, 2u, 5u, 6u, 8u, 9u, 10u, 14u, 
	16u, 4u, 7u, 8u, 9u, 10u, 14u, 31u, 
	5u, 6u, 4u, 7u, 8u, 9u, 10u, 14u, 
	5u, 6u, 3u, 4u, 7u, 8u, 9u, 10u, 
	14u, 17u, 31u, 5u, 6u, 3u, 4u, 5u, 
	6u, 7u, 8u, 9u, 10u, 13u, 14u, 17u, 
	31u, 1u, 3u, 7u, 8u, 9u, 10u, 14u, 
	16u, 5u, 6u, 1u, 8u, 9u, 10u, 14u, 
	16u, 1u, 6u, 8u, 9u, 10u, 14u, 16u, 
	1u, 3u, 8u, 9u, 10u, 14u, 16u, 1u, 
	2u, 5u, 6u, 8u, 9u, 10u, 14u, 16u, 
	3u, 4u, 7u, 8u, 9u, 10u, 14u, 17u, 
	31u, 5u, 6u, 3u, 4u, 5u, 6u, 7u, 
	8u, 9u, 10u, 13u, 14u, 17u, 31u, 1u, 
	3u, 7u, 8u, 9u, 10u, 14u, 16u, 5u, 
	6u, 1u, 8u, 9u, 10u, 14u, 16u, 1u, 
	6u, 8u, 9u, 10u, 14u, 16u, 1u, 3u, 
	8u, 9u, 10u, 14u, 16u, 1u, 2u, 5u, 
	6u, 8u, 9u, 10u, 14u, 16u, 3u, 4u, 
	7u, 8u, 9u, 10u, 14u, 17u, 31u, 5u, 
	6u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 13u, 14u, 17u, 31u, 1u, 3u, 7u, 
	8u, 9u, 10u, 14u, 16u, 5u, 6u, 1u, 
	8u, 9u, 10u, 14u, 16u, 1u, 6u, 8u, 
	9u, 10u, 14u, 16u, 1u, 3u, 8u, 9u, 
	10u, 14u, 16u, 1u, 2u, 5u, 6u, 8u, 
	9u, 10u, 14u, 16u, 3u, 4u, 7u, 8u, 
	9u, 10u, 14u, 17u, 31u, 5u, 6u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 10u, 13u, 
	14u, 17u, 31u, 1u, 3u, 7u, 8u, 9u, 
	10u, 14u, 16u, 5u, 6u, 1u, 8u, 9u, 
	10u, 14u, 16u, 1u, 6u, 8u, 9u, 10u, 
	14u, 16u, 1u, 3u, 8u, 9u, 10u, 14u, 
	16u, 4u, 7u, 14u, 5u, 6u, 1u, 2u, 
	5u, 6u, 8u, 9u, 10u, 14u, 16u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 10u, 14u, 
	17u, 31u, 3u, 4u, 7u, 8u, 9u, 10u, 
	14u, 17u, 31u, 5u, 6u, 4u, 7u, 8u, 
	9u, 10u, 14u, 17u, 31u, 5u, 6u, 1u, 
	5u, 6u, 8u, 9u, 10u, 14u, 16u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 10u, 13u, 
	14u, 17u, 31u, 3u, 4u, 7u, 8u, 9u, 
	10u, 14u, 17u, 31u, 5u, 6u, 4u, 7u, 
	8u, 9u, 10u, 14u, 17u, 31u, 5u, 6u, 
	1u, 5u, 6u, 8u, 9u, 10u, 14u, 16u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 
	13u, 14u, 17u, 31u, 3u, 4u, 7u, 8u, 
	9u, 10u, 14u, 17u, 31u, 5u, 6u, 4u, 
	7u, 8u, 9u, 10u, 14u, 17u, 31u, 5u, 
	6u, 1u, 5u, 6u, 8u, 9u, 10u, 14u, 
	16u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 13u, 14u, 17u, 31u, 3u, 4u, 7u, 
	8u, 9u, 10u, 14u, 17u, 31u, 5u, 6u, 
	4u, 7u, 8u, 9u, 10u, 14u, 17u, 31u, 
	5u, 6u, 1u, 5u, 6u, 8u, 9u, 10u, 
	14u, 16u, 3u, 4u, 5u, 6u, 7u, 8u, 
	9u, 10u, 13u, 14u, 17u, 31u, 3u, 4u, 
	7u, 8u, 9u, 10u, 14u, 17u, 31u, 5u, 
	6u, 4u, 7u, 8u, 9u, 10u, 14u, 17u, 
	31u, 5u, 6u, 5u, 6u, 8u, 9u, 10u, 
	14u, 8u, 9u, 10u, 14u, 5u, 8u, 9u, 
	10u, 9u, 10u, 9u, 9u, 10u, 9u, 10u, 
	9u, 5u, 9u, 10u, 3u, 5u, 6u, 8u, 
	9u, 10u, 13u, 3u, 8u, 9u, 10u, 8u, 
	9u, 10u, 3u, 8u, 9u, 10u, 3u, 5u, 
	8u, 9u, 10u, 13u, 3u, 7u, 8u, 9u, 
	10u, 14u, 5u, 6u, 3u, 4u, 5u, 6u, 
	7u, 8u, 9u, 10u, 14u, 4u, 5u, 6u, 
	7u, 8u, 9u, 10u, 14u, 7u, 8u, 9u, 
	10u, 14u, 5u, 6u, 3u, 4u, 5u, 6u, 
	7u, 8u, 9u, 10u, 14u, 4u, 5u, 6u, 
	7u, 8u, 9u, 10u, 14u, 7u, 8u, 9u, 
	10u, 14u, 5u, 6u, 3u, 4u, 5u, 6u, 
	7u, 8u, 9u, 10u, 14u, 4u, 5u, 6u, 
	7u, 8u, 9u, 10u, 14u, 7u, 8u, 9u, 
	10u, 14u, 5u, 6u, 3u, 4u, 6u, 8u, 
	9u, 10u, 14u, 4u, 6u, 8u, 9u, 10u, 
	14u, 6u, 8u, 9u, 10u, 14u, 3u, 8u, 
	9u, 10u, 14u, 1u, 2u, 5u, 6u, 8u, 
	9u, 10u, 14u, 16u, 4u, 7u, 8u, 9u, 
	10u, 14u, 31u, 5u, 6u, 4u, 7u, 8u, 
	9u, 10u, 14u, 5u, 6u, 3u, 4u, 7u, 
	8u, 9u, 10u, 14u, 17u, 31u, 5u, 6u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 
	13u, 14u, 17u, 31u, 1u, 3u, 7u, 8u, 
	9u, 10u, 14u, 16u, 5u, 6u, 1u, 8u, 
	9u, 10u, 14u, 16u, 1u, 6u, 8u, 9u, 
	10u, 14u, 16u, 1u, 3u, 8u, 9u, 10u, 
	14u, 16u, 1u, 2u, 5u, 6u, 8u, 9u, 
	10u, 14u, 16u, 3u, 4u, 7u, 8u, 9u, 
	10u, 14u, 17u, 31u, 5u, 6u, 3u, 4u, 
	5u, 6u, 7u, 8u, 9u, 10u, 13u, 14u, 
	17u, 31u, 1u, 3u, 7u, 8u, 9u, 10u, 
	14u, 16u, 5u, 6u, 1u, 8u, 9u, 10u, 
	14u, 16u, 1u, 6u, 8u, 9u, 10u, 14u, 
	16u, 1u, 3u, 8u, 9u, 10u, 14u, 16u, 
	1u, 2u, 5u, 6u, 8u, 9u, 10u, 14u, 
	16u, 3u, 4u, 7u, 8u, 9u, 10u, 14u, 
	17u, 31u, 5u, 6u, 3u, 4u, 5u, 6u, 
	7u, 8u, 9u, 10u, 13u, 14u, 17u, 31u, 
	1u, 3u, 7u, 8u, 9u, 10u, 14u, 16u, 
	5u, 6u, 1u, 8u, 9u, 10u, 14u, 16u, 
	1u, 6u, 8u, 9u, 10u, 14u, 16u, 1u, 
	3u, 8u, 9u, 10u, 14u, 16u, 1u, 2u, 
	5u, 6u, 8u, 9u, 10u, 14u, 16u, 3u, 
	4u, 7u, 8u, 9u, 10u, 14u, 17u, 31u, 
	5u, 6u, 3u, 4u, 5u, 6u, 7u, 8u, 
	9u, 10u, 13u, 14u, 17u, 31u, 1u, 3u, 
	7u, 8u, 9u, 10u, 14u, 16u, 5u, 6u, 
	1u, 8u, 9u, 10u, 14u, 16u, 1u, 6u, 
	8u, 9u, 10u, 14u, 16u, 1u, 3u, 8u, 
	9u, 10u, 14u, 16u, 1u, 2u, 5u, 6u, 
	8u, 9u, 10u, 14u, 16u, 4u, 7u, 13u, 
	14u, 5u, 6u, 3u, 4u, 7u, 8u, 9u, 
	10u, 14u, 17u, 31u, 5u, 6u, 4u, 7u, 
	14u, 5u, 6u, 3u, 4u, 5u, 6u, 7u, 
	8u, 9u, 10u, 13u, 14u, 17u, 31u, 3u, 
	4u, 7u, 8u, 9u, 10u, 14u, 17u, 31u, 
	5u, 6u, 4u, 7u, 8u, 9u, 10u, 14u, 
	17u, 31u, 5u, 6u, 1u, 5u, 6u, 8u, 
	9u, 10u, 14u, 16u, 3u, 4u, 5u, 6u, 
	7u, 8u, 9u, 10u, 13u, 14u, 17u, 31u, 
	3u, 4u, 7u, 8u, 9u, 10u, 14u, 17u, 
	31u, 5u, 6u, 4u, 7u, 8u, 9u, 10u, 
	14u, 17u, 31u, 5u, 6u, 1u, 5u, 6u, 
	8u, 9u, 10u, 14u, 16u, 3u, 4u, 5u, 
	6u, 7u, 8u, 9u, 10u, 13u, 14u, 17u, 
	31u, 3u, 4u, 7u, 8u, 9u, 10u, 14u, 
	17u, 31u, 5u, 6u, 4u, 7u, 8u, 9u, 
	10u, 14u, 17u, 31u, 5u, 6u, 1u, 5u, 
	6u, 8u, 9u, 10u, 14u, 16u, 3u, 4u, 
	5u, 6u, 7u, 8u, 9u, 10u, 13u, 14u, 
	17u, 31u, 3u, 4u, 7u, 8u, 9u, 10u, 
	14u, 17u, 31u, 5u, 6u, 4u, 7u, 8u, 
	9u, 10u, 14u, 17u, 31u, 5u, 6u, 1u, 
	5u, 6u, 8u, 9u, 10u, 14u, 16u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 10u, 13u, 
	14u, 17u, 31u, 3u, 4u, 7u, 8u, 9u, 
	10u, 14u, 17u, 31u, 5u, 6u, 4u, 7u, 
	8u, 9u, 10u, 14u, 17u, 31u, 5u, 6u, 
	5u, 6u, 8u, 9u, 10u, 14u, 8u, 9u, 
	10u, 14u, 5u, 8u, 9u, 10u, 9u, 10u, 
	9u, 9u, 10u, 9u, 10u, 9u, 5u, 9u, 
	10u, 3u, 5u, 6u, 8u, 9u, 10u, 13u, 
	3u, 8u, 9u, 10u, 8u, 9u, 10u, 3u, 
	8u, 9u, 10u, 3u, 5u, 8u, 9u, 10u, 
	13u, 3u, 7u, 8u, 9u, 10u, 14u, 5u, 
	6u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 14u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 14u, 7u, 8u, 9u, 10u, 14u, 5u, 
	6u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 14u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 14u, 7u, 8u, 9u, 10u, 14u, 5u, 
	6u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 14u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 14u, 7u, 8u, 9u, 10u, 14u, 5u, 
	6u, 3u, 4u, 6u, 8u, 9u, 10u, 14u, 
	4u, 6u, 8u, 9u, 10u, 14u, 6u, 8u, 
	9u, 10u, 14u, 3u, 8u, 9u, 10u, 14u, 
	1u, 2u, 5u, 6u, 8u, 9u, 10u, 14u, 
	16u, 4u, 7u, 8u, 9u, 10u, 14u, 31u, 
	5u, 6u, 4u, 7u, 8u, 9u, 10u, 14u, 
	5u, 6u, 3u, 4u, 7u, 8u, 9u, 10u, 
	14u, 17u, 31u, 5u, 6u, 3u, 4u, 5u, 
	6u, 7u, 8u, 9u, 10u, 13u, 14u, 17u, 
	31u, 1u, 3u, 7u, 8u, 9u, 10u, 14u, 
	16u, 5u, 6u, 1u, 8u, 9u, 10u, 14u, 
	16u, 1u, 6u, 8u, 9u, 10u, 14u, 16u, 
	1u, 3u, 8u, 9u, 10u, 14u, 16u, 1u, 
	2u, 5u, 6u, 8u, 9u, 10u, 14u, 16u, 
	3u, 4u, 7u, 8u, 9u, 10u, 14u, 17u, 
	31u, 5u, 6u, 3u, 4u, 5u, 6u, 7u, 
	8u, 9u, 10u, 13u, 14u, 17u, 31u, 1u, 
	3u, 7u, 8u, 9u, 10u, 14u, 16u, 5u, 
	6u, 1u, 8u, 9u, 10u, 14u, 16u, 1u, 
	6u, 8u, 9u, 10u, 14u, 16u, 1u, 3u, 
	8u, 9u, 10u, 14u, 16u, 1u, 2u, 5u, 
	6u, 8u, 9u, 10u, 14u, 16u, 3u, 4u, 
	7u, 8u, 9u, 10u, 14u, 17u, 31u, 5u, 
	6u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 13u, 14u, 17u, 31u, 1u, 3u, 7u, 
	8u, 9u, 10u, 14u, 16u, 5u, 6u, 1u, 
	8u, 9u, 10u, 14u, 16u, 1u, 6u, 8u, 
	9u, 10u, 14u, 16u, 1u, 3u, 8u, 9u, 
	10u, 14u, 16u, 1u, 2u, 5u, 6u, 8u, 
	9u, 10u, 14u, 16u, 3u, 4u, 7u, 8u, 
	9u, 10u, 14u, 17u, 31u, 5u, 6u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 10u, 13u, 
	14u, 17u, 31u, 1u, 3u, 7u, 8u, 9u, 
	10u, 14u, 16u, 5u, 6u, 1u, 8u, 9u, 
	10u, 14u, 16u, 1u, 6u, 8u, 9u, 10u, 
	14u, 16u, 1u, 3u, 8u, 9u, 10u, 14u, 
	16u, 1u, 2u, 5u, 6u, 8u, 9u, 10u, 
	14u, 16u, 3u, 4u, 7u, 8u, 9u, 10u, 
	14u, 17u, 31u, 5u, 6u, 1u, 2u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 10u, 13u, 
	14u, 16u, 17u, 31u, 11u, 12u, 3u, 4u, 
	5u, 6u, 7u, 8u, 9u, 10u, 13u, 14u, 
	17u, 31u, 1u, 2u, 3u, 4u, 5u, 6u, 
	7u, 8u, 9u, 10u, 12u, 13u, 14u, 16u, 
	17u, 31u, 4u, 7u, 8u, 9u, 10u, 13u, 
	14u, 5u, 6u, 1u, 2u, 6u, 8u, 9u, 
	10u, 14u, 16u, 3u, 4u, 5u, 6u, 7u, 
	8u, 9u, 10u, 13u, 14u, 17u, 31u, 3u, 
	4u, 7u, 8u, 9u, 10u, 14u, 17u, 31u, 
	5u, 6u, 4u, 7u, 8u, 9u, 10u, 14u, 
	17u, 31u, 5u, 6u, 5u, 8u, 9u, 10u, 
	9u, 10u, 9u, 9u, 10u, 9u, 10u, 9u, 
	5u, 9u, 10u, 3u, 4u, 7u, 8u, 9u, 
	10u, 14u, 17u, 31u, 5u, 6u, 3u, 4u, 
	5u, 6u, 7u, 8u, 9u, 10u, 13u, 14u, 
	17u, 31u, 1u, 3u, 4u, 7u, 8u, 9u, 
	10u, 14u, 16u, 5u, 6u, 3u, 4u, 5u, 
	6u, 7u, 8u, 9u, 10u, 14u, 4u, 5u, 
	6u, 7u, 8u, 9u, 10u, 14u, 7u, 8u, 
	9u, 10u, 14u, 5u, 6u, 3u, 4u, 5u, 
	6u, 7u, 8u, 9u, 10u, 14u, 4u, 5u, 
	6u, 7u, 8u, 9u, 10u, 14u, 7u, 8u, 
	9u, 10u, 14u, 5u, 6u, 3u, 4u, 5u, 
	6u, 7u, 8u, 9u, 10u, 14u, 4u, 5u, 
	6u, 7u, 8u, 9u, 10u, 14u, 7u, 8u, 
	9u, 10u, 14u, 5u, 6u, 3u, 4u, 6u, 
	8u, 9u, 10u, 14u, 4u, 6u, 8u, 9u, 
	10u, 14u, 8u, 9u, 10u, 14u, 3u, 5u, 
	6u, 8u, 9u, 10u, 13u, 3u, 8u, 9u, 
	10u, 8u, 9u, 10u, 3u, 8u, 9u, 10u, 
	3u, 5u, 8u, 9u, 10u, 13u, 1u, 2u, 
	5u, 6u, 8u, 9u, 10u, 14u, 16u, 3u, 
	8u, 9u, 10u, 8u, 9u, 10u, 5u, 8u, 
	9u, 10u, 9u, 10u, 9u, 9u, 10u, 9u, 
	10u, 9u, 5u, 9u, 10u, 0
};

static const char _indic_syllable_machine_single_lengths[] = {
	3, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 1, 1, 2, 1, 1, 2, 
	1, 1, 3, 4, 3, 4, 3, 4, 
	3, 4, 3, 4, 3, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 2, 1, 1, 
	2, 1, 1, 2, 1, 1, 3, 4, 
	3, 4, 3, 4, 3, 4, 3, 4, 
	3, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 1, 1, 2, 1, 1, 2, 
	1, 1, 3, 4, 3, 4, 3, 4, 
	3, 4, 3, 3, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 2, 1, 1, 2, 
	1, 1, 2, 1, 1, 3, 4, 3, 
	4, 3, 4, 3, 4, 3, 4, 4, 
	4, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 3, 1, 1, 1, 
	1, 2, 1, 1, 2, 1, 1, 2, 
	1, 1, 17, 12, 9, 8, 8, 12, 
	9, 8, 8, 12, 9, 8, 8, 12, 
	9, 8, 8, 12, 9, 8, 6, 4, 
	4, 2, 1, 2, 2, 1, 3, 7, 
	4, 3, 4, 6, 6, 9, 8, 5, 
	9, 8, 5, 9, 8, 5, 7, 6, 
	5, 5, 9, 7, 6, 9, 12, 8, 
	6, 7, 7, 9, 9, 12, 8, 6, 
	7, 7, 9, 9, 12, 8, 6, 7, 
	7, 9, 9, 12, 8, 6, 7, 7, 
	9, 9, 12, 12, 11, 10, 8, 12, 
	9, 8, 8, 12, 9, 8, 8, 12, 
	9, 8, 8, 12, 9, 8, 6, 4, 
	4, 2, 1, 2, 2, 1, 3, 7, 
	4, 3, 4, 6, 6, 9, 8, 5, 
	9, 8, 5, 9, 8, 5, 7, 6, 
	5, 5, 9, 7, 6, 9, 12, 8, 
	6, 7, 7, 9, 9, 12, 8, 6, 
	7, 7, 9, 9, 12, 8, 6, 7, 
	7, 9, 9, 12, 8, 6, 7, 7, 
	3, 9, 11, 9, 8, 8, 12, 9, 
	8, 8, 12, 9, 8, 8, 12, 9, 
	8, 8, 12, 9, 8, 6, 4, 4, 
	2, 1, 2, 2, 1, 3, 7, 4, 
	3, 4, 6, 6, 9, 8, 5, 9, 
	8, 5, 9, 8, 5, 7, 6, 5, 
	5, 9, 7, 6, 9, 12, 8, 6, 
	7, 7, 9, 9, 12, 8, 6, 7, 
	7, 9, 9, 12, 8, 6, 7, 7, 
	9, 9, 12, 8, 6, 7, 7, 9, 
	4, 9, 3, 12, 9, 8, 8, 12, 
	9, 8, 8, 12, 9, 8, 8, 12, 
	9, 8, 8, 12, 9, 8, 6, 4, 
	4, 2, 1, 2, 2, 1, 3, 7, 
	4, 3, 4, 6, 6, 9, 8, 5, 
	9, 8, 5, 9, 8, 5, 7, 6, 
	5, 5, 9, 7, 6, 9, 12, 8, 
	6, 7, 7, 9, 9, 12, 8, 6, 
	7, 7, 9, 9, 12, 8, 6, 7, 
	7, 9, 9, 12, 8, 6, 7, 7, 
	9, 9, 15, 12, 16, 7, 8, 12, 
	9, 8, 4, 2, 1, 2, 2, 1, 
	3, 9, 12, 9, 9, 8, 5, 9, 
	8, 5, 9, 8, 5, 7, 6, 4, 
	7, 4, 3, 4, 6, 9, 4, 3, 
	4, 2, 1, 2, 2, 1, 3
};

static const char _indic_syllable_machine_range_lengths[] = {
	0, 0, 1, 1, 0, 1, 1, 0, 
	1, 1, 0, 1, 1, 0, 0, 0, 
	0, 1, 0, 0, 1, 0, 0, 1, 
	0, 0, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 0, 0, 1, 1, 
	0, 1, 1, 0, 1, 1, 0, 1, 
	1, 0, 0, 0, 0, 1, 0, 0, 
	1, 0, 0, 1, 0, 0, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	0, 0, 1, 1, 0, 1, 1, 0, 
	1, 1, 0, 1, 1, 0, 0, 0, 
	0, 1, 0, 0, 1, 0, 0, 1, 
	0, 0, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 0, 1, 1, 0, 
	1, 1, 0, 1, 1, 0, 1, 1, 
	0, 0, 0, 0, 1, 0, 0, 1, 
	0, 0, 1, 0, 0, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 0, 1, 1, 
	0, 1, 1, 0, 0, 0, 0, 0, 
	0, 1, 0, 0, 1, 0, 0, 1, 
	0, 0, 1, 0, 1, 1, 0, 0, 
	1, 1, 0, 0, 1, 1, 0, 0, 
	1, 1, 0, 0, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 0, 0, 1, 
	0, 0, 1, 0, 0, 1, 0, 0, 
	0, 0, 0, 1, 1, 1, 0, 1, 
	0, 0, 0, 0, 1, 0, 1, 0, 
	0, 0, 0, 1, 0, 1, 0, 0, 
	0, 0, 1, 0, 1, 0, 0, 0, 
	0, 1, 0, 0, 0, 0, 0, 0, 
	1, 1, 0, 0, 1, 1, 0, 0, 
	1, 1, 0, 0, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 0, 0, 1, 
	0, 0, 1, 0, 0, 1, 0, 0, 
	0, 0, 0, 1, 1, 1, 0, 1, 
	0, 0, 0, 0, 1, 0, 1, 0, 
	0, 0, 0, 1, 0, 1, 0, 0, 
	0, 0, 1, 0, 1, 0, 0, 0, 
	1, 0, 0, 1, 1, 0, 0, 1, 
	1, 0, 0, 1, 1, 0, 0, 1, 
	1, 0, 0, 1, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 0, 0, 1, 0, 
	0, 1, 0, 0, 1, 0, 0, 0, 
	0, 0, 1, 1, 1, 0, 1, 0, 
	0, 0, 0, 1, 0, 1, 0, 0, 
	0, 0, 1, 0, 1, 0, 0, 0, 
	0, 1, 0, 1, 0, 0, 0, 0, 
	1, 1, 1, 0, 1, 1, 0, 0, 
	1, 1, 0, 0, 1, 1, 0, 0, 
	1, 1, 0, 0, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 0, 0, 1, 
	0, 0, 1, 0, 0, 1, 0, 0, 
	0, 0, 0, 1, 1, 1, 0, 1, 
	0, 0, 0, 0, 1, 0, 1, 0, 
	0, 0, 0, 1, 0, 1, 0, 0, 
	0, 0, 1, 0, 1, 0, 0, 0, 
	0, 1, 1, 0, 0, 1, 0, 0, 
	1, 1, 0, 0, 0, 0, 0, 0, 
	0, 1, 0, 1, 0, 0, 1, 0, 
	0, 1, 0, 0, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0
};

static const short _indic_syllable_machine_index_offsets[] = {
	0, 4, 6, 9, 12, 14, 17, 20, 
	22, 25, 28, 30, 33, 36, 38, 40, 
	42, 44, 48, 50, 52, 56, 58, 60, 
	64, 66, 68, 73, 79, 84, 90, 95, 
	101, 106, 112, 117, 123, 127, 129, 132, 
	135, 137, 140, 143, 145, 148, 151, 153, 
	156, 159, 161, 163, 165, 167, 171, 173, 
	175, 179, 181, 183, 187, 189, 191, 196, 
	202, 207, 213, 218, 224, 229, 235, 240, 
	246, 250, 252, 255, 258, 260, 263, 266, 
	268, 271, 274, 276, 279, 282, 284, 286, 
	288, 290, 294, 296, 298, 302, 304, 306, 
	310, 312, 314, 319, 325, 330, 336, 341, 
	347, 352, 358, 363, 367, 369, 372, 375, 
	377, 380, 383, 385, 388, 391, 393, 396, 
	399, 401, 403, 405, 407, 411, 413, 415, 
	419, 421, 423, 427, 429, 431, 436, 442, 
	447, 453, 458, 464, 469, 475, 480, 486, 
	492, 498, 501, 504, 507, 510, 512, 515, 
	518, 520, 523, 526, 528, 532, 534, 536, 
	538, 540, 544, 546, 548, 552, 554, 556, 
	560, 562, 564, 583, 596, 607, 617, 626, 
	639, 650, 660, 669, 682, 693, 703, 712, 
	725, 736, 746, 755, 768, 779, 789, 796, 
	801, 806, 809, 811, 814, 817, 819, 823, 
	831, 836, 840, 845, 852, 860, 870, 879, 
	886, 896, 905, 912, 922, 931, 938, 946, 
	953, 959, 965, 975, 984, 992, 1003, 1016, 
	1026, 1033, 1041, 1049, 1059, 1070, 1083, 1093, 
	1100, 1108, 1116, 1126, 1137, 1150, 1160, 1167, 
	1175, 1183, 1193, 1204, 1217, 1227, 1234, 1242, 
	1250, 1260, 1271, 1284, 1297, 1309, 1320, 1329, 
	1342, 1353, 1363, 1372, 1385, 1396, 1406, 1415, 
	1428, 1439, 1449, 1458, 1471, 1482, 1492, 1499, 
	1504, 1509, 1512, 1514, 1517, 1520, 1522, 1526, 
	1534, 1539, 1543, 1548, 1555, 1563, 1573, 1582, 
	1589, 1599, 1608, 1615, 1625, 1634, 1641, 1649, 
	1656, 1662, 1668, 1678, 1687, 1695, 1706, 1719, 
	1729, 1736, 1744, 1752, 1762, 1773, 1786, 1796, 
	1803, 1811, 1819, 1829, 1840, 1853, 1863, 1870, 
	1878, 1886, 1896, 1907, 1920, 1930, 1937, 1945, 
	1953, 1958, 1968, 1980, 1991, 2001, 2010, 2023, 
	2034, 2044, 2053, 2066, 2077, 2087, 2096, 2109, 
	2120, 2130, 2139, 2152, 2163, 2173, 2180, 2185, 
	2190, 2193, 2195, 2198, 2201, 2203, 2207, 2215, 
	2220, 2224, 2229, 2236, 2244, 2254, 2263, 2270, 
	2280, 2289, 2296, 2306, 2315, 2322, 2330, 2337, 
	2343, 2349, 2359, 2368, 2376, 2387, 2400, 2410, 
	2417, 2425, 2433, 2443, 2454, 2467, 2477, 2484, 
	2492, 2500, 2510, 2521, 2534, 2544, 2551, 2559, 
	2567, 2577, 2588, 2601, 2611, 2618, 2626, 2634, 
	2644, 2650, 2661, 2666, 2679, 2690, 2700, 2709, 
	2722, 2733, 2743, 2752, 2765, 2776, 2786, 2795, 
	2808, 2819, 2829, 2838, 2851, 2862, 2872, 2879, 
	2884, 2889, 2892, 2894, 2897, 2900, 2902, 2906, 
	2914, 2919, 2923, 2928, 2935, 2943, 2953, 2962, 
	2969, 2979, 2988, 2995, 3005, 3014, 3021, 3029, 
	3036, 3042, 3048, 3058, 3067, 3075, 3086, 3099, 
	3109, 3116, 3124, 3132, 3142, 3153, 3166, 3176, 
	3183, 3191, 3199, 3209, 3220, 3233, 3243, 3250, 
	3258, 3266, 3276, 3287, 3300, 3310, 3317, 3325, 
	3333, 3343, 3354, 3371, 3384, 3401, 3410, 3419, 
	3432, 3443, 3453, 3458, 3461, 3463, 3466, 3469, 
	3471, 3475, 3486, 3499, 3510, 3520, 3529, 3536, 
	3546, 3555, 3562, 3572, 3581, 3588, 3596, 3603, 
	3608, 3616, 3621, 3625, 3630, 3637, 3647, 3652, 
	3656, 3661, 3664, 3666, 3669, 3672, 3674
};

static const short _indic_syllable_machine_indicies[] = {
	1, 2, 1, 0, 3, 0, 5, 4, 
	0, 5, 6, 0, 5, 0, 8, 7, 
	0, 8, 9, 0, 8, 0, 11, 10, 
	0, 11, 12, 0, 11, 0, 14, 13, 
	0, 14, 15, 0, 14, 0, 16, 0, 
	17, 0, 18, 0, 19, 14, 13, 0, 
	20, 0, 21, 0, 22, 11, 10, 0, 
	23, 0, 24, 0, 25, 8, 7, 0, 
	26, 0, 27, 0, 28, 5, 28, 4, 
	0, 28, 5, 29, 28, 4, 0, 30, 
	5, 30, 4, 0, 30, 5, 31, 30, 
	4, 0, 32, 5, 32, 4, 0, 32, 
	5, 33, 32, 4, 0, 34, 5, 34, 
	4, 0, 34, 5, 35, 34, 4, 0, 
	36, 5, 36, 4, 0, 36, 5, 37, 
	36, 4, 0, 39, 40, 39, 38, 41, 
	38, 43, 42, 38, 43, 44, 38, 43, 
	38, 46, 45, 38, 46, 47, 38, 46, 
	38, 49, 48, 38, 49, 50, 38, 49, 
	38, 52, 51, 38, 52, 53, 38, 52, 
	38, 54, 38, 55, 38, 56, 38, 57, 
	52, 51, 38, 58, 38, 59, 38, 60, 
	49, 48, 38, 61, 38, 62, 38, 63, 
	46, 45, 38, 64, 38, 65, 38, 66, 
	43, 66, 42, 38, 66, 43, 67, 66, 
	42, 38, 68, 43, 68, 42, 38, 68, 
	43, 69, 68, 42, 38, 70, 43, 70, 
	42, 38, 70, 43, 71, 70, 42, 38, 
	72, 43, 72, 42, 38, 72, 43, 73, 
	72, 42, 38, 74, 43, 74, 42, 38, 
	74, 43, 75, 74, 42, 38, 77, 78, 
	77, 76, 79, 76, 81, 80, 76, 81, 
	83, 82, 81, 82, 85, 84, 76, 85, 
	86, 76, 85, 76, 88, 87, 76, 88, 
	89, 76, 88, 76, 91, 90, 76, 91, 
	92, 76, 91, 76, 93, 76, 94, 76, 
	95, 76, 96, 91, 90, 76, 97, 76, 
	98, 76, 99, 88, 87, 76, 100, 76, 
	101, 76, 102, 85, 84, 76, 103, 76, 
	104, 76, 105, 81, 105, 80, 76, 105, 
	81, 106, 105, 80, 76, 107, 81, 107, 
	80, 76, 107, 81, 108, 107, 80, 76, 
	109, 81, 109, 80, 76, 109, 81, 110, 
	109, 80, 76, 111, 81, 111, 80, 82, 
	111, 81, 112, 111, 80, 76, 113, 81, 
	113, 80, 76, 115, 116, 115, 114, 117, 
	114, 119, 118, 114, 119, 120, 114, 119, 
	114, 122, 121, 114, 122, 123, 114, 122, 
	114, 125, 124, 114, 125, 126, 114, 125, 
	114, 128, 127, 114, 128, 129, 114, 128, 
	114, 130, 114, 131, 114, 132, 114, 133, 
	128, 127, 114, 134, 114, 135, 114, 136, 
	125, 124, 114, 137, 114, 138, 114, 139, 
	122, 121, 114, 140, 114, 141, 114, 142, 
	119, 142, 118, 114, 142, 119, 143, 142, 
	118, 114, 144, 119, 144, 118, 114, 144, 
	119, 145, 144, 118, 114, 146, 119, 146, 
	118, 114, 146, 119, 147, 146, 118, 114, 
	148, 119, 148, 118, 114, 148, 119, 149, 
	148, 118, 114, 150, 119, 150, 118, 114, 
	150, 119, 151, 150, 118, 114, 113, 81, 
	152, 113, 80, 76, 111, 81, 153, 111, 
	80, 0, 155, 154, 0, 155, 6, 0, 
	157, 156, 0, 157, 158, 0, 157, 0, 
	160, 159, 0, 160, 161, 0, 160, 0, 
	163, 162, 0, 163, 164, 0, 163, 0, 
	165, 166, 165, 0, 167, 0, 168, 0, 
	169, 0, 170, 0, 171, 163, 162, 0, 
	172, 0, 173, 0, 174, 160, 159, 0, 
	175, 0, 176, 0, 177, 157, 156, 0, 
	178, 0, 179, 0, 181, 182, 183, 184, 
	185, 186, 81, 187, 188, 189, 152, 191, 
	192, 193, 194, 195, 196, 190, 180, 198, 
	199, 200, 201, 5, 202, 203, 204, 37, 
	205, 206, 207, 197, 208, 199, 5, 202, 
	203, 204, 205, 206, 207, 209, 197, 199, 
	5, 202, 203, 204, 205, 206, 207, 209, 
	197, 210, 18, 211, 202, 203, 204, 212, 
	210, 197, 213, 214, 215, 216, 5, 202, 
	203, 204, 35, 217, 206, 207, 197, 218, 
	214, 5, 202, 203, 204, 217, 206, 207, 
	219, 197, 214, 5, 202, 203, 204, 217, 
	206, 207, 219, 197, 220, 18, 221, 202, 
	203, 204, 212, 220, 197, 222, 223, 224, 
	225, 5, 202, 203, 204, 33, 226, 206, 
	207, 197, 227, 223, 5, 202, 203, 204, 
	226, 206, 207, 228, 197, 223, 5, 202, 
	203, 204, 226, 206, 207, 228, 197, 229, 
	18, 230, 202, 203, 204, 212, 229, 197, 
	231, 232, 233, 234, 5, 202, 203, 204, 
	31, 235, 206, 207, 197, 236, 232, 5, 
	202, 203, 204, 235, 206, 207, 237, 197, 
	232, 5, 202, 203, 204, 235, 206, 207, 
	237, 197, 238, 18, 239, 202, 203, 204, 
	212, 238, 197, 240, 241, 242, 243, 5, 
	202, 203, 204, 29, 244, 206, 207, 197, 
	245, 241, 5, 202, 203, 204, 244, 206, 
	207, 246, 197, 241, 5, 202, 203, 204, 
	244, 206, 207, 246, 197, 18, 247, 202, 
	203, 204, 212, 197, 202, 203, 204, 212, 
	197, 248, 249, 203, 204, 197, 203, 204, 
	197, 250, 197, 203, 251, 197, 203, 252, 
	197, 203, 197, 248, 203, 204, 197, 253, 
	254, 255, 202, 203, 204, 3, 197, 2, 
	202, 203, 204, 197, 202, 203, 204, 197, 
	253, 202, 203, 204, 197, 253, 254, 202, 
	203, 204, 3, 197, 18, 5, 202, 203, 
	204, 212, 256, 197, 257, 27, 258, 259, 
	8, 202, 203, 204, 212, 197, 27, 258, 
	259, 8, 202, 203, 204, 212, 197, 8, 
	202, 203, 204, 212, 258, 197, 260, 24, 
	261, 262, 11, 202, 203, 204, 212, 197, 
	24, 261, 262, 11, 202, 203, 204, 212, 
	197, 11, 202, 203, 204, 212, 261, 197, 
	263, 21, 264, 265, 14, 202, 203, 204, 
	212, 197, 21, 264, 265, 14, 202, 203, 
	204, 212, 197, 14, 202, 203, 204, 212, 
	264, 197, 266, 18, 267, 202, 203, 204, 
	212, 197, 18, 267, 202, 203, 204, 212, 
	197, 268, 202, 203, 204, 212, 197, 18, 
	202, 203, 204, 212, 197, 1, 2, 18, 
	247, 202, 203, 204, 212, 1, 197, 241, 
	5, 202, 203, 204, 244, 207, 246, 197, 
	241, 5, 202, 203, 204, 244, 246, 197, 
	240, 241, 5, 202, 203, 204, 244, 206, 
	207, 246, 197, 240, 241, 242, 246, 5, 
	202, 203, 204, 29, 244, 206, 207, 197, 
	238, 269, 5, 202, 203, 204, 212, 238, 
	256, 197, 238, 202, 203, 204, 212, 238, 
	197, 238, 270, 202, 203, 204, 212, 238, 
	197, 238, 269, 202, 203, 204, 212, 238, 
	197, 238, 2, 18, 239, 202, 203, 204, 
	212, 238, 197, 231, 232, 5, 202, 203, 
	204, 235, 206, 207, 237, 197, 231, 232, 
	233, 237, 5, 202, 203, 204, 31, 235, 
	206, 207, 197, 229, 271, 5, 202, 203, 
	204, 212, 229, 256, 197, 229, 202, 203, 
	204, 212, 229, 197, 229, 272, 202, 203, 
	204, 212, 229, 197, 229, 271, 202, 203, 
	204, 212, 229, 197, 229, 2, 18, 230, 
	202, 203, 204, 212, 229, 197, 222, 223, 
	5, 202, 203, 204, 226, 206, 207, 228, 
	197, 222, 223, 224, 228, 5, 202, 203, 
	204, 33, 226, 206, 207, 197, 220, 273, 
	5, 202, 203, 204, 212, 220, 256, 197, 
	220, 202, 203, 204, 212, 220, 197, 220, 
	274, 202, 203, 204, 212, 220, 197, 220, 
	273, 202, 203, 204, 212, 220, 197, 220, 
	2, 18, 221, 202, 203, 204, 212, 220, 
	197, 213, 214, 5, 202, 203, 204, 217, 
	206, 207, 219, 197, 213, 214, 215, 219, 
	5, 202, 203, 204, 35, 217, 206, 207, 
	197, 210, 275, 5, 202, 203, 204, 212, 
	210, 256, 197, 210, 202, 203, 204, 212, 
	210, 197, 210, 276, 202, 203, 204, 212, 
	210, 197, 210, 275, 202, 203, 204, 212, 
	210, 197, 210, 2, 18, 211, 202, 203, 
	204, 212, 210, 197, 198, 199, 5, 202, 
	203, 204, 205, 206, 207, 209, 197, 198, 
	199, 200, 209, 5, 202, 203, 204, 37, 
	205, 206, 207, 197, 278, 279, 280, 281, 
	43, 282, 283, 284, 75, 285, 286, 287, 
	277, 288, 279, 289, 281, 43, 282, 283, 
	284, 285, 286, 287, 277, 279, 289, 281, 
	43, 282, 283, 284, 285, 286, 287, 277, 
	290, 56, 291, 282, 283, 284, 292, 290, 
	277, 293, 294, 295, 296, 43, 282, 283, 
	284, 73, 297, 286, 287, 277, 298, 294, 
	43, 282, 283, 284, 297, 286, 287, 299, 
	277, 294, 43, 282, 283, 284, 297, 286, 
	287, 299, 277, 300, 56, 301, 282, 283, 
	284, 292, 300, 277, 302, 303, 304, 305, 
	43, 282, 283, 284, 71, 306, 286, 287, 
	277, 307, 303, 43, 282, 283, 284, 306, 
	286, 287, 308, 277, 303, 43, 282, 283, 
	284, 306, 286, 287, 308, 277, 309, 56, 
	310, 282, 283, 284, 292, 309, 277, 311, 
	312, 313, 314, 43, 282, 283, 284, 69, 
	315, 286, 287, 277, 316, 312, 43, 282, 
	283, 284, 315, 286, 287, 317, 277, 312, 
	43, 282, 283, 284, 315, 286, 287, 317, 
	277, 318, 56, 319, 282, 283, 284, 292, 
	318, 277, 320, 321, 322, 323, 43, 282, 
	283, 284, 67, 324, 286, 287, 277, 325, 
	321, 43, 282, 283, 284, 324, 286, 287, 
	326, 277, 321, 43, 282, 283, 284, 324, 
	286, 287, 326, 277, 56, 327, 282, 283, 
	284, 292, 277, 282, 283, 284, 292, 277, 
	328, 329, 283, 284, 277, 283, 284, 277, 
	330, 277, 283, 331, 277, 283, 332, 277, 
	283, 277, 328, 283, 284, 277, 333, 334, 
	335, 282, 283, 284, 41, 277, 40, 282, 
	283, 284, 277, 282, 283, 284, 277, 333, 
	282, 283, 284, 277, 333, 334, 282, 283, 
	284, 41, 277, 56, 43, 282, 283, 284, 
	292, 336, 277, 337, 65, 338, 339, 46, 
	282, 283, 284, 292, 277, 65, 338, 339, 
	46, 282, 283, 284, 292, 277, 46, 282, 
	283, 284, 292, 338, 277, 340, 62, 341, 
	342, 49, 282, 283, 284, 292, 277, 62, 
	341, 342, 49, 282, 283, 284, 292, 277, 
	49, 282, 283, 284, 292, 341, 277, 343, 
	59, 344, 345, 52, 282, 283, 284, 292, 
	277, 59, 344, 345, 52, 282, 283, 284, 
	292, 277, 52, 282, 283, 284, 292, 344, 
	277, 346, 56, 347, 282, 283, 284, 292, 
	277, 56, 347, 282, 283, 284, 292, 277, 
	348, 282, 283, 284, 292, 277, 56, 282, 
	283, 284, 292, 277, 39, 40, 56, 327, 
	282, 283, 284, 292, 39, 277, 321, 43, 
	282, 283, 284, 324, 287, 326, 277, 321, 
	43, 282, 283, 284, 324, 326, 277, 320, 
	321, 43, 282, 283, 284, 324, 286, 287, 
	326, 277, 320, 321, 322, 326, 43, 282, 
	283, 284, 67, 324, 286, 287, 277, 318, 
	349, 43, 282, 283, 284, 292, 318, 336, 
	277, 318, 282, 283, 284, 292, 318, 277, 
	318, 350, 282, 283, 284, 292, 318, 277, 
	318, 349, 282, 283, 284, 292, 318, 277, 
	318, 40, 56, 319, 282, 283, 284, 292, 
	318, 277, 311, 312, 43, 282, 283, 284, 
	315, 286, 287, 317, 277, 311, 312, 313, 
	317, 43, 282, 283, 284, 69, 315, 286, 
	287, 277, 309, 351, 43, 282, 283, 284, 
	292, 309, 336, 277, 309, 282, 283, 284, 
	292, 309, 277, 309, 352, 282, 283, 284, 
	292, 309, 277, 309, 351, 282, 283, 284, 
	292, 309, 277, 309, 40, 56, 310, 282, 
	283, 284, 292, 309, 277, 302, 303, 43, 
	282, 283, 284, 306, 286, 287, 308, 277, 
	302, 303, 304, 308, 43, 282, 283, 284, 
	71, 306, 286, 287, 277, 300, 353, 43, 
	282, 283, 284, 292, 300, 336, 277, 300, 
	282, 283, 284, 292, 300, 277, 300, 354, 
	282, 283, 284, 292, 300, 277, 300, 353, 
	282, 283, 284, 292, 300, 277, 300, 40, 
	56, 301, 282, 283, 284, 292, 300, 277, 
	293, 294, 43, 282, 283, 284, 297, 286, 
	287, 299, 277, 293, 294, 295, 299, 43, 
	282, 283, 284, 73, 297, 286, 287, 277, 
	290, 355, 43, 282, 283, 284, 292, 290, 
	336, 277, 290, 282, 283, 284, 292, 290, 
	277, 290, 356, 282, 283, 284, 292, 290, 
	277, 290, 355, 282, 283, 284, 292, 290, 
	277, 74, 43, 74, 42, 277, 290, 40, 
	56, 291, 282, 283, 284, 292, 290, 277, 
	278, 279, 289, 281, 43, 282, 283, 284, 
	285, 286, 287, 277, 358, 184, 81, 187, 
	188, 189, 191, 194, 196, 359, 357, 184, 
	81, 187, 188, 189, 191, 194, 196, 359, 
	357, 360, 95, 361, 187, 188, 189, 362, 
	360, 357, 363, 364, 365, 366, 81, 187, 
	188, 189, 112, 367, 194, 196, 357, 368, 
	364, 81, 187, 188, 189, 367, 194, 196, 
	369, 357, 364, 81, 187, 188, 189, 367, 
	194, 196, 369, 357, 370, 95, 371, 187, 
	188, 189, 362, 370, 357, 372, 373, 374, 
	375, 81, 187, 188, 189, 110, 376, 194, 
	196, 357, 377, 373, 81, 187, 188, 189, 
	376, 194, 196, 378, 357, 373, 81, 187, 
	188, 189, 376, 194, 196, 378, 357, 379, 
	95, 380, 187, 188, 189, 362, 379, 357, 
	381, 382, 383, 384, 81, 187, 188, 189, 
	108, 385, 194, 196, 357, 386, 382, 81, 
	187, 188, 189, 385, 194, 196, 387, 357, 
	382, 81, 187, 188, 189, 385, 194, 196, 
	387, 357, 388, 95, 389, 187, 188, 189, 
	362, 388, 357, 390, 391, 392, 393, 81, 
	187, 188, 189, 106, 394, 194, 196, 357, 
	395, 391, 81, 187, 188, 189, 394, 194, 
	196, 396, 357, 391, 81, 187, 188, 189, 
	394, 194, 196, 396, 357, 95, 397, 187, 
	188, 189, 362, 357, 187, 188, 189, 362, 
	357, 398, 399, 188, 189, 357, 188, 189, 
	357, 400, 357, 188, 401, 357, 188, 402, 
	357, 188, 357, 398, 188, 189, 357, 403, 
	404, 405, 187, 188, 189, 79, 357, 78, 
	187, 188, 189, 357, 187, 188, 189, 357, 
	403, 187, 188, 189, 357, 403, 404, 187, 
	188, 189, 79, 357, 95, 81, 187, 188, 
	189, 362, 406, 357, 407, 104, 408, 409, 
	85, 187, 188, 189, 362, 357, 104, 408, 
	409, 85, 187, 188, 189, 362, 357, 85, 
	187, 188, 189, 362, 408, 357, 410, 101, 
	411, 412, 88, 187, 188, 189, 362, 357, 
	101, 411, 412, 88, 187, 188, 189, 362, 
	357, 88, 187, 188, 189, 362, 411, 357, 
	413, 98, 414, 415, 91, 187, 188, 189, 
	362, 357, 98, 414, 415, 91, 187, 188, 
	189, 362, 357, 91, 187, 188, 189, 362, 
	414, 357, 416, 95, 417, 187, 188, 189, 
	362, 357, 95, 417, 187, 188, 189, 362, 
	357, 418, 187, 188, 189, 362, 357, 95, 
	187, 188, 189, 362, 357, 77, 78, 95, 
	397, 187, 188, 189, 362, 77, 357, 391, 
	81, 187, 188, 189, 394, 196, 396, 357, 
	391, 81, 187, 188, 189, 394, 396, 357, 
	390, 391, 81, 187, 188, 189, 394, 194, 
	196, 396, 357, 390, 391, 392, 396, 81, 
	187, 188, 189, 106, 394, 194, 196, 357, 
	388, 419, 81, 187, 188, 189, 362, 388, 
	406, 357, 388, 187, 188, 189, 362, 388, 
	357, 388, 420, 187, 188, 189, 362, 388, 
	357, 388, 419, 187, 188, 189, 362, 388, 
	357, 388, 78, 95, 389, 187, 188, 189, 
	362, 388, 357, 381, 382, 81, 187, 188, 
	189, 385, 194, 196, 387, 357, 381, 382, 
	383, 387, 81, 187, 188, 189, 108, 385, 
	194, 196, 357, 379, 421, 81, 187, 188, 
	189, 362, 379, 406, 357, 379, 187, 188, 
	189, 362, 379, 357, 379, 422, 187, 188, 
	189, 362, 379, 357, 379, 421, 187, 188, 
	189, 362, 379, 357, 379, 78, 95, 380, 
	187, 188, 189, 362, 379, 357, 372, 373, 
	81, 187, 188, 189, 376, 194, 196, 378, 
	357, 372, 373, 374, 378, 81, 187, 188, 
	189, 110, 376, 194, 196, 357, 370, 423, 
	81, 187, 188, 189, 362, 370, 406, 357, 
	370, 187, 188, 189, 362, 370, 357, 370, 
	424, 187, 188, 189, 362, 370, 357, 370, 
	423, 187, 188, 189, 362, 370, 357, 370, 
	78, 95, 371, 187, 188, 189, 362, 370, 
	357, 363, 364, 81, 187, 188, 189, 367, 
	194, 196, 369, 357, 363, 364, 365, 369, 
	81, 187, 188, 189, 112, 367, 194, 196, 
	357, 360, 425, 81, 187, 188, 189, 362, 
	360, 406, 357, 360, 187, 188, 189, 362, 
	360, 357, 360, 426, 187, 188, 189, 362, 
	360, 357, 360, 425, 187, 188, 189, 362, 
	360, 357, 360, 78, 95, 361, 187, 188, 
	189, 362, 360, 357, 113, 81, 152, 113, 
	80, 427, 183, 184, 81, 187, 188, 189, 
	191, 194, 196, 359, 357, 113, 81, 113, 
	80, 427, 429, 430, 431, 432, 119, 433, 
	434, 435, 151, 436, 437, 438, 428, 439, 
	430, 119, 433, 434, 435, 436, 437, 438, 
	432, 428, 430, 119, 433, 434, 435, 436, 
	437, 438, 432, 428, 440, 132, 441, 433, 
	434, 435, 442, 440, 428, 443, 444, 445, 
	446, 119, 433, 434, 435, 149, 447, 437, 
	438, 428, 448, 444, 119, 433, 434, 435, 
	447, 437, 438, 449, 428, 444, 119, 433, 
	434, 435, 447, 437, 438, 449, 428, 450, 
	132, 451, 433, 434, 435, 442, 450, 428, 
	452, 453, 454, 455, 119, 433, 434, 435, 
	147, 456, 437, 438, 428, 457, 453, 119, 
	433, 434, 435, 456, 437, 438, 458, 428, 
	453, 119, 433, 434, 435, 456, 437, 438, 
	458, 428, 459, 132, 460, 433, 434, 435, 
	442, 459, 428, 461, 462, 463, 464, 119, 
	433, 434, 435, 145, 465, 437, 438, 428, 
	466, 462, 119, 433, 434, 435, 465, 437, 
	438, 467, 428, 462, 119, 433, 434, 435, 
	465, 437, 438, 467, 428, 468, 132, 469, 
	433, 434, 435, 442, 468, 428, 470, 471, 
	472, 473, 119, 433, 434, 435, 143, 474, 
	437, 438, 428, 475, 471, 119, 433, 434, 
	435, 474, 437, 438, 476, 428, 471, 119, 
	433, 434, 435, 474, 437, 438, 476, 428, 
	132, 477, 433, 434, 435, 442, 428, 433, 
	434, 435, 442, 428, 478, 479, 434, 435, 
	428, 434, 435, 428, 480, 428, 434, 481, 
	428, 434, 482, 428, 434, 428, 478, 434, 
	435, 428, 483, 484, 485, 433, 434, 435, 
	117, 428, 116, 433, 434, 435, 428, 433, 
	434, 435, 428, 483, 433, 434, 435, 428, 
	483, 484, 433, 434, 435, 117, 428, 132, 
	119, 433, 434, 435, 442, 486, 428, 487, 
	141, 488, 489, 122, 433, 434, 435, 442, 
	428, 141, 488, 489, 122, 433, 434, 435, 
	442, 428, 122, 433, 434, 435, 442, 488, 
	428, 490, 138, 491, 492, 125, 433, 434, 
	435, 442, 428, 138, 491, 492, 125, 433, 
	434, 435, 442, 428, 125, 433, 434, 435, 
	442, 491, 428, 493, 135, 494, 495, 128, 
	433, 434, 435, 442, 428, 135, 494, 495, 
	128, 433, 434, 435, 442, 428, 128, 433, 
	434, 435, 442, 494, 428, 496, 132, 497, 
	433, 434, 435, 442, 428, 132, 497, 433, 
	434, 435, 442, 428, 498, 433, 434, 435, 
	442, 428, 132, 433, 434, 435, 442, 428, 
	115, 116, 132, 477, 433, 434, 435, 442, 
	115, 428, 471, 119, 433, 434, 435, 474, 
	438, 476, 428, 471, 119, 433, 434, 435, 
	474, 476, 428, 470, 471, 119, 433, 434, 
	435, 474, 437, 438, 476, 428, 470, 471, 
	472, 476, 119, 433, 434, 435, 143, 474, 
	437, 438, 428, 468, 499, 119, 433, 434, 
	435, 442, 468, 486, 428, 468, 433, 434, 
	435, 442, 468, 428, 468, 500, 433, 434, 
	435, 442, 468, 428, 468, 499, 433, 434, 
	435, 442, 468, 428, 468, 116, 132, 469, 
	433, 434, 435, 442, 468, 428, 461, 462, 
	119, 433, 434, 435, 465, 437, 438, 467, 
	428, 461, 462, 463, 467, 119, 433, 434, 
	435, 145, 465, 437, 438, 428, 459, 501, 
	119, 433, 434, 435, 442, 459, 486, 428, 
	459, 433, 434, 435, 442, 459, 428, 459, 
	502, 433, 434, 435, 442, 459, 428, 459, 
	501, 433, 434, 435, 442, 459, 428, 459, 
	116, 132, 460, 433, 434, 435, 442, 459, 
	428, 452, 453, 119, 433, 434, 435, 456, 
	437, 438, 458, 428, 452, 453, 454, 458, 
	119, 433, 434, 435, 147, 456, 437, 438, 
	428, 450, 503, 119, 433, 434, 435, 442, 
	450, 486, 428, 450, 433, 434, 435, 442, 
	450, 428, 450, 504, 433, 434, 435, 442, 
	450, 428, 450, 503, 433, 434, 435, 442, 
	450, 428, 450, 116, 132, 451, 433, 434, 
	435, 442, 450, 428, 443, 444, 119, 433, 
	434, 435, 447, 437, 438, 449, 428, 443, 
	444, 445, 449, 119, 433, 434, 435, 149, 
	447, 437, 438, 428, 440, 505, 119, 433, 
	434, 435, 442, 440, 486, 428, 440, 433, 
	434, 435, 442, 440, 428, 440, 506, 433, 
	434, 435, 442, 440, 428, 440, 505, 433, 
	434, 435, 442, 440, 428, 440, 116, 132, 
	441, 433, 434, 435, 442, 440, 428, 429, 
	430, 119, 433, 434, 435, 436, 437, 438, 
	432, 428, 181, 182, 183, 184, 507, 359, 
	81, 187, 188, 189, 152, 191, 181, 194, 
	196, 190, 357, 198, 508, 200, 201, 5, 
	202, 203, 204, 37, 205, 206, 207, 197, 
	210, 182, 183, 184, 509, 510, 81, 511, 
	512, 513, 190, 152, 514, 210, 194, 196, 
	197, 113, 81, 202, 203, 204, 152, 515, 
	80, 197, 516, 2, 426, 187, 188, 189, 
	362, 516, 357, 517, 364, 518, 519, 81, 
	511, 512, 513, 153, 367, 194, 196, 197, 
	520, 364, 81, 511, 512, 513, 367, 194, 
	196, 369, 197, 364, 81, 511, 512, 513, 
	367, 194, 196, 369, 197, 521, 522, 512, 
	513, 197, 512, 513, 197, 250, 197, 512, 
	523, 197, 512, 524, 197, 512, 197, 521, 
	512, 513, 197, 517, 364, 81, 511, 512, 
	513, 367, 194, 196, 369, 197, 517, 364, 
	518, 369, 81, 511, 512, 513, 153, 367, 
	194, 196, 197, 210, 275, 113, 155, 202, 
	203, 204, 515, 210, 525, 197, 526, 179, 
	527, 528, 157, 511, 512, 513, 529, 197, 
	179, 527, 528, 157, 511, 512, 513, 529, 
	197, 157, 511, 512, 513, 529, 527, 197, 
	530, 176, 531, 532, 160, 511, 512, 513, 
	529, 197, 176, 531, 532, 160, 511, 512, 
	513, 529, 197, 160, 511, 512, 513, 529, 
	531, 197, 533, 173, 534, 535, 163, 511, 
	512, 513, 529, 197, 173, 534, 535, 163, 
	511, 512, 513, 529, 197, 163, 511, 512, 
	513, 529, 534, 197, 536, 170, 537, 511, 
	512, 513, 529, 197, 170, 537, 511, 512, 
	513, 529, 197, 511, 512, 513, 529, 197, 
	538, 539, 540, 511, 512, 513, 167, 197, 
	166, 511, 512, 513, 197, 511, 512, 513, 
	197, 538, 511, 512, 513, 197, 538, 539, 
	511, 512, 513, 167, 197, 516, 166, 95, 
	361, 187, 188, 189, 362, 516, 357, 542, 
	543, 544, 545, 541, 543, 544, 545, 541, 
	546, 547, 544, 545, 541, 544, 545, 541, 
	548, 541, 544, 549, 541, 544, 550, 541, 
	544, 541, 546, 544, 545, 541, 0
};

static const short _indic_syllable_machine_trans_targs[] = {
	170, 199, 201, 202, 3, 205, 4, 6, 
	208, 7, 9, 211, 10, 12, 214, 13, 
	15, 16, 191, 18, 19, 213, 21, 22, 
	210, 24, 25, 207, 216, 221, 225, 228, 
	232, 235, 239, 242, 246, 249, 170, 279, 
	281, 282, 39, 285, 40, 42, 288, 43, 
	45, 291, 46, 48, 294, 49, 51, 52, 
	271, 54, 55, 293, 57, 58, 290, 60, 
	61, 287, 296, 301, 305, 308, 312, 315, 
	319, 322, 326, 330, 170, 358, 360, 361, 
	75, 364, 170, 76, 78, 367, 79, 81, 
	370, 82, 84, 373, 85, 87, 88, 350, 
	90, 91, 372, 93, 94, 369, 96, 97, 
	366, 375, 380, 384, 387, 391, 394, 398, 
	401, 405, 170, 439, 441, 442, 110, 445, 
	111, 113, 448, 114, 116, 451, 117, 119, 
	454, 120, 122, 123, 431, 125, 126, 453, 
	128, 129, 450, 131, 132, 447, 456, 461, 
	465, 468, 472, 475, 479, 482, 486, 489, 
	409, 505, 146, 508, 148, 511, 149, 151, 
	514, 152, 154, 517, 155, 520, 522, 523, 
	159, 160, 519, 162, 163, 516, 165, 166, 
	513, 168, 169, 510, 170, 171, 251, 331, 
	333, 408, 410, 351, 353, 354, 411, 407, 
	490, 491, 378, 526, 379, 170, 172, 174, 
	35, 250, 192, 194, 195, 248, 219, 220, 
	173, 34, 175, 244, 0, 176, 178, 33, 
	243, 241, 177, 32, 179, 237, 180, 182, 
	31, 236, 234, 181, 30, 183, 230, 184, 
	186, 29, 229, 227, 185, 28, 187, 223, 
	188, 190, 27, 222, 218, 189, 26, 204, 
	193, 198, 170, 196, 197, 200, 1, 203, 
	2, 206, 5, 23, 209, 8, 20, 212, 
	11, 17, 215, 14, 217, 224, 226, 231, 
	233, 238, 240, 245, 247, 170, 252, 254, 
	71, 328, 272, 274, 275, 329, 299, 300, 
	253, 70, 255, 324, 36, 256, 258, 69, 
	323, 321, 257, 68, 259, 317, 260, 262, 
	67, 316, 314, 261, 66, 263, 310, 264, 
	266, 65, 309, 307, 265, 64, 267, 303, 
	268, 270, 63, 302, 298, 269, 62, 284, 
	273, 278, 170, 276, 277, 280, 37, 283, 
	38, 286, 41, 59, 289, 44, 56, 292, 
	47, 53, 295, 50, 297, 304, 306, 311, 
	313, 318, 320, 325, 327, 170, 332, 106, 
	334, 403, 72, 335, 337, 105, 402, 400, 
	336, 104, 338, 396, 339, 341, 103, 395, 
	393, 340, 102, 342, 389, 343, 345, 101, 
	388, 386, 344, 100, 346, 382, 347, 349, 
	99, 381, 377, 348, 98, 363, 352, 357, 
	170, 355, 356, 359, 73, 362, 74, 365, 
	77, 95, 368, 80, 92, 371, 83, 89, 
	374, 86, 376, 383, 385, 390, 392, 397, 
	399, 404, 406, 170, 170, 412, 414, 142, 
	141, 432, 434, 435, 488, 459, 460, 413, 
	415, 484, 107, 416, 418, 140, 483, 481, 
	417, 139, 419, 477, 420, 422, 138, 476, 
	474, 421, 137, 423, 470, 424, 426, 136, 
	469, 467, 425, 135, 427, 463, 428, 430, 
	134, 462, 458, 429, 133, 444, 433, 438, 
	170, 436, 437, 440, 108, 443, 109, 446, 
	112, 130, 449, 115, 127, 452, 118, 124, 
	455, 121, 457, 464, 466, 471, 473, 478, 
	480, 485, 487, 143, 492, 493, 507, 498, 
	500, 501, 525, 494, 495, 496, 144, 506, 
	497, 499, 504, 502, 503, 145, 509, 147, 
	167, 156, 512, 150, 164, 515, 153, 161, 
	518, 158, 521, 157, 524, 170, 527, 528, 
	530, 531, 529, 534, 170, 532, 533
};

static const char _indic_syllable_machine_trans_actions[] = {
	31, 5, 0, 0, 0, 5, 0, 0, 
	5, 0, 0, 5, 0, 0, 5, 0, 
	0, 0, 5, 0, 0, 5, 0, 0, 
	5, 0, 0, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 33, 5, 
	0, 0, 0, 5, 0, 0, 5, 0, 
	0, 5, 0, 0, 5, 0, 0, 0, 
	5, 0, 0, 5, 0, 0, 5, 0, 
	0, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 37, 5, 0, 0, 
	0, 5, 39, 0, 0, 5, 0, 0, 
	5, 0, 0, 5, 0, 0, 0, 5, 
	0, 0, 5, 0, 0, 5, 0, 0, 
	5, 5, 44, 5, 44, 5, 44, 5, 
	44, 5, 35, 5, 0, 0, 0, 5, 
	0, 0, 5, 0, 0, 5, 0, 0, 
	5, 0, 0, 0, 5, 0, 0, 5, 
	0, 0, 5, 0, 0, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	44, 41, 0, 5, 0, 5, 0, 0, 
	5, 0, 0, 5, 0, 5, 0, 0, 
	0, 0, 5, 0, 0, 5, 0, 0, 
	5, 0, 0, 5, 17, 5, 5, 44, 
	5, 47, 47, 0, 0, 0, 5, 5, 
	44, 5, 44, 0, 44, 19, 5, 5, 
	0, 5, 0, 0, 0, 5, 5, 5, 
	5, 0, 5, 5, 0, 5, 5, 0, 
	5, 5, 5, 0, 5, 5, 5, 5, 
	0, 5, 5, 5, 0, 5, 5, 5, 
	5, 0, 5, 5, 5, 0, 5, 5, 
	5, 5, 0, 5, 5, 5, 0, 5, 
	0, 0, 7, 0, 0, 0, 0, 5, 
	0, 5, 0, 0, 5, 0, 0, 5, 
	0, 0, 5, 0, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 21, 5, 5, 
	0, 5, 0, 0, 0, 5, 5, 5, 
	5, 0, 5, 5, 0, 5, 5, 0, 
	5, 5, 5, 0, 5, 5, 5, 5, 
	0, 5, 5, 5, 0, 5, 5, 5, 
	5, 0, 5, 5, 5, 0, 5, 5, 
	5, 5, 0, 5, 5, 5, 0, 5, 
	0, 0, 9, 0, 0, 0, 0, 5, 
	0, 5, 0, 0, 5, 0, 0, 5, 
	0, 0, 5, 0, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 27, 44, 0, 
	44, 44, 0, 44, 5, 0, 44, 5, 
	44, 0, 44, 44, 44, 5, 0, 44, 
	5, 44, 0, 44, 44, 44, 5, 0, 
	44, 5, 44, 0, 44, 44, 44, 5, 
	0, 44, 5, 44, 0, 44, 0, 0, 
	15, 0, 0, 0, 0, 5, 0, 5, 
	0, 0, 5, 0, 0, 5, 0, 0, 
	5, 0, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 29, 23, 5, 5, 0, 
	0, 0, 0, 0, 5, 5, 5, 5, 
	5, 5, 0, 5, 5, 0, 5, 5, 
	5, 0, 5, 5, 5, 5, 0, 5, 
	5, 5, 0, 5, 5, 5, 5, 0, 
	5, 5, 5, 0, 5, 5, 5, 5, 
	0, 5, 5, 5, 0, 5, 0, 0, 
	11, 0, 0, 0, 0, 5, 0, 5, 
	0, 0, 5, 0, 0, 5, 0, 0, 
	5, 0, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 0, 0, 41, 5, 0, 
	0, 0, 5, 5, 41, 41, 0, 41, 
	41, 0, 0, 0, 0, 0, 5, 0, 
	0, 0, 5, 0, 0, 5, 0, 0, 
	5, 0, 0, 0, 5, 25, 0, 0, 
	0, 0, 0, 0, 13, 0, 0
};

static const char _indic_syllable_machine_to_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0
};

static const char _indic_syllable_machine_from_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 3, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0
};

static const short _indic_syllable_machine_eof_trans[] = {
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 39, 39, 39, 39, 
	39, 39, 39, 39, 39, 39, 39, 39, 
	39, 39, 39, 39, 39, 39, 39, 39, 
	39, 39, 39, 39, 39, 39, 39, 39, 
	39, 39, 39, 39, 39, 39, 39, 39, 
	77, 77, 77, 83, 83, 77, 77, 77, 
	77, 77, 77, 77, 77, 77, 77, 77, 
	77, 77, 77, 77, 77, 77, 77, 77, 
	77, 77, 77, 77, 77, 77, 77, 77, 
	83, 77, 77, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 77, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 0, 198, 198, 198, 198, 198, 
	198, 198, 198, 198, 198, 198, 198, 198, 
	198, 198, 198, 198, 198, 198, 198, 198, 
	198, 198, 198, 198, 198, 198, 198, 198, 
	198, 198, 198, 198, 198, 198, 198, 198, 
	198, 198, 198, 198, 198, 198, 198, 198, 
	198, 198, 198, 198, 198, 198, 198, 198, 
	198, 198, 198, 198, 198, 198, 198, 198, 
	198, 198, 198, 198, 198, 198, 198, 198, 
	198, 198, 198, 198, 198, 198, 198, 198, 
	198, 198, 198, 278, 278, 278, 278, 278, 
	278, 278, 278, 278, 278, 278, 278, 278, 
	278, 278, 278, 278, 278, 278, 278, 278, 
	278, 278, 278, 278, 278, 278, 278, 278, 
	278, 278, 278, 278, 278, 278, 278, 278, 
	278, 278, 278, 278, 278, 278, 278, 278, 
	278, 278, 278, 278, 278, 278, 278, 278, 
	278, 278, 278, 278, 278, 278, 278, 278, 
	278, 278, 278, 278, 278, 278, 278, 278, 
	278, 278, 278, 278, 278, 278, 278, 278, 
	278, 278, 278, 358, 358, 358, 358, 358, 
	358, 358, 358, 358, 358, 358, 358, 358, 
	358, 358, 358, 358, 358, 358, 358, 358, 
	358, 358, 358, 358, 358, 358, 358, 358, 
	358, 358, 358, 358, 358, 358, 358, 358, 
	358, 358, 358, 358, 358, 358, 358, 358, 
	358, 358, 358, 358, 358, 358, 358, 358, 
	358, 358, 358, 358, 358, 358, 358, 358, 
	358, 358, 358, 358, 358, 358, 358, 358, 
	358, 358, 358, 358, 358, 358, 358, 358, 
	428, 358, 428, 429, 429, 429, 429, 429, 
	429, 429, 429, 429, 429, 429, 429, 429, 
	429, 429, 429, 429, 429, 429, 429, 429, 
	429, 429, 429, 429, 429, 429, 429, 429, 
	429, 429, 429, 429, 429, 429, 429, 429, 
	429, 429, 429, 429, 429, 429, 429, 429, 
	429, 429, 429, 429, 429, 429, 429, 429, 
	429, 429, 429, 429, 429, 429, 429, 429, 
	429, 429, 429, 429, 429, 429, 429, 429, 
	429, 429, 429, 429, 429, 429, 429, 429, 
	429, 429, 358, 198, 198, 198, 358, 198, 
	198, 198, 198, 198, 198, 198, 198, 198, 
	198, 198, 198, 198, 198, 198, 198, 198, 
	198, 198, 198, 198, 198, 198, 198, 198, 
	198, 198, 198, 198, 198, 358, 542, 542, 
	542, 542, 542, 542, 542, 542, 542
};

static const int indic_syllable_machine_start = 170;
static const int indic_syllable_machine_first_final = 170;
static const int indic_syllable_machine_error = -1;

static const int indic_syllable_machine_en_main = 170;


#line 36 "hb-ot-shape-complex-indic-machine.rl"



#line 97 "hb-ot-shape-complex-indic-machine.rl"


#define found_syllable(syllable_type) \
  HB_STMT_START { \
    if (0) fprintf (stderr, "syllable %d..%d %s\n", last, p+1, #syllable_type); \
    for (unsigned int i = last; i < p+1; i++) \
      info[i].syllable() = (syllable_serial << 4) | syllable_type; \
    last = p+1; \
    syllable_serial++; \
    if (unlikely (syllable_serial == 16)) syllable_serial = 1; \
  } HB_STMT_END

static void
find_syllables (hb_buffer_t *buffer)
{
  unsigned int p, pe, eof, ts HB_UNUSED, te HB_UNUSED, act HB_UNUSED;
  int cs;
  hb_glyph_info_t *info = buffer->info;
  
#line 1588 "hb-ot-shape-complex-indic-machine.c"
	{
	cs = indic_syllable_machine_start;
	ts = 0;
	te = 0;
	act = 0;
	}

#line 118 "hb-ot-shape-complex-indic-machine.rl"


  p = 0;
  pe = eof = buffer->len;

  unsigned int last = 0;
  unsigned int syllable_serial = 1;
  
#line 1601 "hb-ot-shape-complex-indic-machine.c"
	{
	int _klen;
	unsigned int _trans;
	const char *_acts;
	unsigned int _nacts;
	const unsigned char *_keys;

	if ( p == pe )
		goto _test_eof;
_resume:
	_acts = _indic_syllable_machine_actions + _indic_syllable_machine_from_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 1:
#line 1 "NONE"
	{ts = p;}
	break;
#line 1618 "hb-ot-shape-complex-indic-machine.c"
		}
	}

	_keys = _indic_syllable_machine_trans_keys + _indic_syllable_machine_key_offsets[cs];
	_trans = _indic_syllable_machine_index_offsets[cs];

	_klen = _indic_syllable_machine_single_lengths[cs];
	if ( _klen > 0 ) {
		const unsigned char *_lower = _keys;
		const unsigned char *_mid;
		const unsigned char *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( ( info[p].indic_category()) < *_mid )
				_upper = _mid - 1;
			else if ( ( info[p].indic_category()) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _indic_syllable_machine_range_lengths[cs];
	if ( _klen > 0 ) {
		const unsigned char *_lower = _keys;
		const unsigned char *_mid;
		const unsigned char *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( ( info[p].indic_category()) < _mid[0] )
				_upper = _mid - 2;
			else if ( ( info[p].indic_category()) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _indic_syllable_machine_indicies[_trans];
_eof_trans:
	cs = _indic_syllable_machine_trans_targs[_trans];

	if ( _indic_syllable_machine_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _indic_syllable_machine_actions + _indic_syllable_machine_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 2:
#line 1 "NONE"
	{te = p+1;}
	break;
	case 3:
#line 88 "hb-ot-shape-complex-indic-machine.rl"
	{act = 1;}
	break;
	case 4:
#line 92 "hb-ot-shape-complex-indic-machine.rl"
	{act = 5;}
	break;
	case 5:
#line 93 "hb-ot-shape-complex-indic-machine.rl"
	{act = 6;}
	break;
	case 6:
#line 88 "hb-ot-shape-complex-indic-machine.rl"
	{te = p+1;{ found_syllable (consonant_syllable); }}
	break;
	case 7:
#line 89 "hb-ot-shape-complex-indic-machine.rl"
	{te = p+1;{ found_syllable (vowel_syllable); }}
	break;
	case 8:
#line 90 "hb-ot-shape-complex-indic-machine.rl"
	{te = p+1;{ found_syllable (standalone_cluster); }}
	break;
	case 9:
#line 91 "hb-ot-shape-complex-indic-machine.rl"
	{te = p+1;{ found_syllable (symbol_cluster); }}
	break;
	case 10:
#line 92 "hb-ot-shape-complex-indic-machine.rl"
	{te = p+1;{ found_syllable (broken_cluster); }}
	break;
	case 11:
#line 93 "hb-ot-shape-complex-indic-machine.rl"
	{te = p+1;{ found_syllable (non_indic_cluster); }}
	break;
	case 12:
#line 88 "hb-ot-shape-complex-indic-machine.rl"
	{te = p;p--;{ found_syllable (consonant_syllable); }}
	break;
	case 13:
#line 89 "hb-ot-shape-complex-indic-machine.rl"
	{te = p;p--;{ found_syllable (vowel_syllable); }}
	break;
	case 14:
#line 90 "hb-ot-shape-complex-indic-machine.rl"
	{te = p;p--;{ found_syllable (standalone_cluster); }}
	break;
	case 15:
#line 91 "hb-ot-shape-complex-indic-machine.rl"
	{te = p;p--;{ found_syllable (symbol_cluster); }}
	break;
	case 16:
#line 92 "hb-ot-shape-complex-indic-machine.rl"
	{te = p;p--;{ found_syllable (broken_cluster); }}
	break;
	case 17:
#line 93 "hb-ot-shape-complex-indic-machine.rl"
	{te = p;p--;{ found_syllable (non_indic_cluster); }}
	break;
	case 18:
#line 88 "hb-ot-shape-complex-indic-machine.rl"
	{{p = ((te))-1;}{ found_syllable (consonant_syllable); }}
	break;
	case 19:
#line 89 "hb-ot-shape-complex-indic-machine.rl"
	{{p = ((te))-1;}{ found_syllable (vowel_syllable); }}
	break;
	case 20:
#line 90 "hb-ot-shape-complex-indic-machine.rl"
	{{p = ((te))-1;}{ found_syllable (standalone_cluster); }}
	break;
	case 21:
#line 92 "hb-ot-shape-complex-indic-machine.rl"
	{{p = ((te))-1;}{ found_syllable (broken_cluster); }}
	break;
	case 22:
#line 1 "NONE"
	{	switch( act ) {
	case 1:
	{{p = ((te))-1;} found_syllable (consonant_syllable); }
	break;
	case 5:
	{{p = ((te))-1;} found_syllable (broken_cluster); }
	break;
	case 6:
	{{p = ((te))-1;} found_syllable (non_indic_cluster); }
	break;
	}
	}
	break;
#line 1757 "hb-ot-shape-complex-indic-machine.c"
		}
	}

_again:
	_acts = _indic_syllable_machine_actions + _indic_syllable_machine_to_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 0:
#line 1 "NONE"
	{ts = 0;}
	break;
#line 1768 "hb-ot-shape-complex-indic-machine.c"
		}
	}

	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	if ( _indic_syllable_machine_eof_trans[cs] > 0 ) {
		_trans = _indic_syllable_machine_eof_trans[cs] - 1;
		goto _eof_trans;
	}
	}

	}

#line 127 "hb-ot-shape-complex-indic-machine.rl"

}

#endif /* HB_OT_SHAPE_COMPLEX_INDIC_MACHINE_HH */
