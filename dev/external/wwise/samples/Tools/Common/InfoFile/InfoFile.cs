// Copyright 2004, Microsoft Corporation
// Sample Code - Use restricted to terms of use defined in the accompanying license agreement (EULA.doc)

//--------------------------------------------------------------
// Autogenerated by XSDObjectGen version 1.4.4.1
// Schema file: SoundBanksInfo.xsd
// Creation Date: 19/05/2011 11:43:05 AM
//--------------------------------------------------------------

using System;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;

namespace AK.Wwise.InfoFile
{

	public struct Declarations
	{
		public const string SchemaVersion = "";
	}

	[Serializable]
	public enum Platform
	{
		[XmlEnum(Name="PS3")] PS3,
		[XmlEnum(Name="Wii")] Wii,
		[XmlEnum(Name="Windows")] Windows,
		[XmlEnum(Name="XBox360")] XBox360,
		[XmlEnum(Name="Mac")] Mac,
		[XmlEnum(Name="VitaSW")] VitaSW,
		[XmlEnum(Name="VitaHW")] VitaHW,
		[XmlEnum(Name="PS4")] PS4,
		[XmlEnum(Name="iOS")] iOS,
		[XmlEnum(Name="3DS")] _3DS,
        [XmlEnum(Name="WiiUHW")] WiiUHW,
        [XmlEnum(Name="WiiUSW")] WiiUSW,
        [XmlEnum(Name="Android")] Android,
        [XmlEnum(Name="XboxOne")] XboxOne
	}


	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class IncludedDialogueEventsDialogueEventCollection : ArrayList
	{
		public IncludedDialogueEventsDialogueEvent Add(IncludedDialogueEventsDialogueEvent obj)
		{
			base.Add(obj);
			return obj;
		}

		public IncludedDialogueEventsDialogueEvent Add()
		{
			return Add(new IncludedDialogueEventsDialogueEvent());
		}

		public void Insert(int index, IncludedDialogueEventsDialogueEvent obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(IncludedDialogueEventsDialogueEvent obj)
		{
			base.Remove(obj);
		}

		new public IncludedDialogueEventsDialogueEvent this[int index]
		{
			get { return (IncludedDialogueEventsDialogueEvent) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class IncludedPrefetchFilesFileCollection : ArrayList
	{
		public IncludedPrefetchFilesFile Add(IncludedPrefetchFilesFile obj)
		{
			base.Add(obj);
			return obj;
		}

		public IncludedPrefetchFilesFile Add()
		{
			return Add(new IncludedPrefetchFilesFile());
		}

		public void Insert(int index, IncludedPrefetchFilesFile obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(IncludedPrefetchFilesFile obj)
		{
			base.Remove(obj);
		}

		new public IncludedPrefetchFilesFile this[int index]
		{
			get { return (IncludedPrefetchFilesFile) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class DialogueEventCollection : ArrayList
	{
		public DialogueEvent Add(DialogueEvent obj)
		{
			base.Add(obj);
			return obj;
		}

		public DialogueEvent Add()
		{
			return Add(new DialogueEvent());
		}

		public void Insert(int index, DialogueEvent obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(DialogueEvent obj)
		{
			base.Remove(obj);
		}

		new public DialogueEvent this[int index]
		{
			get { return (DialogueEvent) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class ArgumentCollection : ArrayList
	{
		public Argument Add(Argument obj)
		{
			base.Add(obj);
			return obj;
		}

		public Argument Add()
		{
			return Add(new Argument());
		}

		public void Insert(int index, Argument obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(Argument obj)
		{
			base.Remove(obj);
		}

		new public Argument this[int index]
		{
			get { return (Argument) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class FileCollection : ArrayList
	{
		public File Add(File obj)
		{
			base.Add(obj);
			return obj;
		}

		public File Add()
		{
			return Add(new File());
		}

		public void Insert(int index, File obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(File obj)
		{
			base.Remove(obj);
		}

		new public File this[int index]
		{
			get { return (File) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class EventCollection : ArrayList
	{
		public @Event Add(@Event obj)
		{
			base.Add(obj);
			return obj;
		}

		public @Event Add()
		{
			return Add(new @Event());
		}

		public void Insert(int index, @Event obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(@Event obj)
		{
			base.Remove(obj);
		}

		new public @Event this[int index]
		{
			get { return (@Event) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class NameIDCollection : ArrayList
	{
		public AK.Wwise.InfoFile.NameID Add(AK.Wwise.InfoFile.NameID obj)
		{
			base.Add(obj);
			return obj;
		}

		public AK.Wwise.InfoFile.NameID Add()
		{
			return Add(new AK.Wwise.InfoFile.NameID());
		}

		public void Insert(int index, AK.Wwise.InfoFile.NameID obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(AK.Wwise.InfoFile.NameID obj)
		{
			base.Remove(obj);
		}

		new public AK.Wwise.InfoFile.NameID this[int index]
		{
			get { return (AK.Wwise.InfoFile.NameID) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class IncludedFullFilesFileCollection : ArrayList
	{
		public IncludedFullFilesFile Add(IncludedFullFilesFile obj)
		{
			base.Add(obj);
			return obj;
		}

		public IncludedFullFilesFile Add()
		{
			return Add(new IncludedFullFilesFile());
		}

		public void Insert(int index, IncludedFullFilesFile obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(IncludedFullFilesFile obj)
		{
			base.Remove(obj);
		}

		new public IncludedFullFilesFile this[int index]
		{
			get { return (IncludedFullFilesFile) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class SourceCollection : ArrayList
	{
		public Source Add(Source obj)
		{
			base.Add(obj);
			return obj;
		}

		public Source Add()
		{
			return Add(new Source());
		}

		public void Insert(int index, Source obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(Source obj)
		{
			base.Remove(obj);
		}

		new public Source this[int index]
		{
			get { return (Source) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class SoundBankCollection : ArrayList
	{
		public SoundBank Add(SoundBank obj)
		{
			base.Add(obj);
			return obj;
		}

		public SoundBank Add()
		{
			return Add(new SoundBank());
		}

		public void Insert(int index, SoundBank obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(SoundBank obj)
		{
			base.Remove(obj);
		}

		new public SoundBank this[int index]
		{
			get { return (SoundBank) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class ReferencedStreamedFilesFileCollection : ArrayList
	{
		public ReferencedStreamedFilesFile Add(ReferencedStreamedFilesFile obj)
		{
			base.Add(obj);
			return obj;
		}

		public ReferencedStreamedFilesFile Add()
		{
			return Add(new ReferencedStreamedFilesFile());
		}

		public void Insert(int index, ReferencedStreamedFilesFile obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(ReferencedStreamedFilesFile obj)
		{
			base.Remove(obj);
		}

		new public ReferencedStreamedFilesFile this[int index]
		{
			get { return (ReferencedStreamedFilesFile) base[index]; }
			set { base[index] = value; }
		}
	}



	[XmlType(TypeName="NameID"),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class NameID
	{

		[XmlAttribute(AttributeName="Id",Form=XmlSchemaForm.Unqualified,DataType="unsignedInt")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public uint __Id;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __IdSpecified;
		
		[XmlIgnore]
		public uint Id
		{ 
			get { return __Id; }
			set { __Id = value; __IdSpecified = true; }
		}

		[XmlAttribute(AttributeName="Name",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Name;
		
		[XmlIgnore]
		public string Name
		{ 
			get { return __Name; }
			set { __Name = value; }
		}

		public NameID()
		{
		}
	}


	[XmlType(TypeName="FileDescriptorType"),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class FileDescriptorType
	{

		[XmlAttribute(AttributeName="Id",Form=XmlSchemaForm.Unqualified,DataType="unsignedInt")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public uint __Id;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __IdSpecified;
		
		[XmlIgnore]
		public uint Id
		{ 
			get { return __Id; }
			set { __Id = value; __IdSpecified = true; }
		}

		[XmlAttribute(AttributeName="Language",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Language;
		
		[XmlIgnore]
		public string Language
		{ 
			get { return __Language; }
			set { __Language = value; }
		}

		[XmlElement(ElementName="ShortName",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __ShortName;
		
		[XmlIgnore]
		public string ShortName
		{ 
			get { return __ShortName; }
			set { __ShortName = value; }
		}

		[XmlElement(ElementName="Path",IsNullable=true,Form=XmlSchemaForm.Qualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Path;
		
		[XmlIgnore]
		public string Path
		{ 
			get { return __Path; }
			set { __Path = value; }
		}

		public FileDescriptorType()
		{
		}
	}


	[XmlRoot(ElementName="SoundBanksInfo",IsNullable=false),Serializable]
	public class SoundBanksInfo
	{

		[XmlAttribute(AttributeName="Platform",Form=XmlSchemaForm.Unqualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Platform __Platform;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __PlatformSpecified;
		
		[XmlIgnore]
		public Platform Platform
		{ 
			get { return __Platform; }
			set { __Platform = value; __PlatformSpecified = true; }
		}

		[XmlAttribute(AttributeName="SchemaVersion",Form=XmlSchemaForm.Unqualified,DataType="unsignedInt")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public uint __SchemaVersion;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __SchemaVersionSpecified;
		
		[XmlIgnore]
		public uint SchemaVersion
		{ 
			get { return __SchemaVersion; }
			set { __SchemaVersion = value; __SchemaVersionSpecified = true; }
		}

		[XmlElement(Type=typeof(RootPaths),ElementName="RootPaths",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public RootPaths __RootPaths;
		
		[XmlIgnore]
		public RootPaths RootPaths
		{
			get
			{
				if (__RootPaths == null) __RootPaths = new RootPaths();		
				return __RootPaths;
			}
			set {__RootPaths = value;}
		}

		[XmlElement(Type=typeof(Arguments),ElementName="Arguments",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Arguments __Arguments;
		
		[XmlIgnore]
		public Arguments Arguments
		{
			get
			{
				if (__Arguments == null) __Arguments = new Arguments();		
				return __Arguments;
			}
			set {__Arguments = value;}
		}

		[XmlElement(Type=typeof(DialogueEvents),ElementName="DialogueEvents",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public DialogueEvents __DialogueEvents;
		
		[XmlIgnore]
		public DialogueEvents DialogueEvents
		{
			get
			{
				if (__DialogueEvents == null) __DialogueEvents = new DialogueEvents();		
				return __DialogueEvents;
			}
			set {__DialogueEvents = value;}
		}

		[XmlElement(Type=typeof(StreamedFiles),ElementName="StreamedFiles",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public StreamedFiles __StreamedFiles;
		
		[XmlIgnore]
		public StreamedFiles StreamedFiles
		{
			get
			{
				if (__StreamedFiles == null) __StreamedFiles = new StreamedFiles();		
				return __StreamedFiles;
			}
			set {__StreamedFiles = value;}
		}

		[XmlElement(Type=typeof(SoundBanks),ElementName="SoundBanks",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public SoundBanks __SoundBanks;
		
		[XmlIgnore]
		public SoundBanks SoundBanks
		{
			get
			{
				if (__SoundBanks == null) __SoundBanks = new SoundBanks();		
				return __SoundBanks;
			}
			set {__SoundBanks = value;}
		}

		public SoundBanksInfo()
		{
		}
	}


	[XmlType(TypeName="RootPaths"),Serializable]
	public class RootPaths
	{

		[XmlElement(ElementName="ProjectRoot",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __ProjectRoot;
		
		[XmlIgnore]
		public string ProjectRoot
		{ 
			get { return __ProjectRoot; }
			set { __ProjectRoot = value; }
		}

		[XmlElement(ElementName="SourceFilesRoot",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __SourceFilesRoot;
		
		[XmlIgnore]
		public string SourceFilesRoot
		{ 
			get { return __SourceFilesRoot; }
			set { __SourceFilesRoot = value; }
		}

		[XmlElement(ElementName="SoundBanksRoot",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __SoundBanksRoot;
		
		[XmlIgnore]
		public string SoundBanksRoot
		{ 
			get { return __SoundBanksRoot; }
			set { __SoundBanksRoot = value; }
		}

		[XmlElement(ElementName="ExternalSourcesInputFile",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __ExternalSourcesInputFile;
		
		[XmlIgnore]
		public string ExternalSourcesInputFile
		{ 
			get { return __ExternalSourcesInputFile; }
			set { __ExternalSourcesInputFile = value; }
		}

		[XmlElement(ElementName="ExternalSourcesOutputRoot",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __ExternalSourcesOutputRoot;
		
		[XmlIgnore]
		public string ExternalSourcesOutputRoot
		{ 
			get { return __ExternalSourcesOutputRoot; }
			set { __ExternalSourcesOutputRoot = value; }
		}

		public RootPaths()
		{
		}
	}


	[XmlType(TypeName="Arguments"),Serializable]
	public class Arguments
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return ArgumentCollection.GetEnumerator();
		}

		public Argument Add(Argument obj)
		{
			return ArgumentCollection.Add(obj);
		}

		[XmlIgnore]
		public Argument this[int index]
		{
			get { return (Argument) ArgumentCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return ArgumentCollection.Count; }
        }

        public void Clear()
		{
			ArgumentCollection.Clear();
        }

		public Argument Remove(int index) 
		{ 
            Argument obj = ArgumentCollection[index];
            ArgumentCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            ArgumentCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(Argument),ElementName="Argument",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public ArgumentCollection __ArgumentCollection;
		
		[XmlIgnore]
		public ArgumentCollection ArgumentCollection
		{
			get
			{
				if (__ArgumentCollection == null) __ArgumentCollection = new ArgumentCollection();
				return __ArgumentCollection;
			}
			set {__ArgumentCollection = value;}
		}

		public Arguments()
		{
		}
	}


	[XmlType(TypeName="Argument"),Serializable]
	public class Argument : AK.Wwise.InfoFile.NameID
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return ValueCollection.GetEnumerator();
		}

		public AK.Wwise.InfoFile.NameID Add(AK.Wwise.InfoFile.NameID obj)
		{
			return ValueCollection.Add(obj);
		}

		[XmlIgnore]
		public AK.Wwise.InfoFile.NameID this[int index]
		{
			get { return (AK.Wwise.InfoFile.NameID) ValueCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return ValueCollection.Count; }
        }

        public void Clear()
		{
			ValueCollection.Clear();
        }

		public AK.Wwise.InfoFile.NameID Remove(int index) 
		{ 
            AK.Wwise.InfoFile.NameID obj = ValueCollection[index];
            ValueCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            ValueCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(AK.Wwise.InfoFile.NameID),ElementName="Value",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public NameIDCollection __ValueCollection;
		
		[XmlIgnore]
		public NameIDCollection ValueCollection
		{
			get
			{
				if (__ValueCollection == null) __ValueCollection = new NameIDCollection();
				return __ValueCollection;
			}
			set {__ValueCollection = value;}
		}

		public Argument() : base()
		{
		}
	}


	[XmlType(TypeName="DialogueEvents"),Serializable]
	public class DialogueEvents
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return DialogueEventCollection.GetEnumerator();
		}

		public DialogueEvent Add(DialogueEvent obj)
		{
			return DialogueEventCollection.Add(obj);
		}

		[XmlIgnore]
		public DialogueEvent this[int index]
		{
			get { return (DialogueEvent) DialogueEventCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return DialogueEventCollection.Count; }
        }

        public void Clear()
		{
			DialogueEventCollection.Clear();
        }

		public DialogueEvent Remove(int index) 
		{ 
            DialogueEvent obj = DialogueEventCollection[index];
            DialogueEventCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            DialogueEventCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(DialogueEvent),ElementName="DialogueEvent",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public DialogueEventCollection __DialogueEventCollection;
		
		[XmlIgnore]
		public DialogueEventCollection DialogueEventCollection
		{
			get
			{
				if (__DialogueEventCollection == null) __DialogueEventCollection = new DialogueEventCollection();
				return __DialogueEventCollection;
			}
			set {__DialogueEventCollection = value;}
		}

		public DialogueEvents()
		{
		}
	}


	[XmlType(TypeName="DialogueEvent"),Serializable]
	public class DialogueEvent : AK.Wwise.InfoFile.NameID
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return ArgumentCollection.GetEnumerator();
		}

		public AK.Wwise.InfoFile.NameID Add(AK.Wwise.InfoFile.NameID obj)
		{
			return ArgumentCollection.Add(obj);
		}

		[XmlIgnore]
		public AK.Wwise.InfoFile.NameID this[int index]
		{
			get { return (AK.Wwise.InfoFile.NameID) ArgumentCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return ArgumentCollection.Count; }
        }

        public void Clear()
		{
			ArgumentCollection.Clear();
        }

		public AK.Wwise.InfoFile.NameID Remove(int index) 
		{ 
            AK.Wwise.InfoFile.NameID obj = ArgumentCollection[index];
            ArgumentCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            ArgumentCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(AK.Wwise.InfoFile.NameID),ElementName="Argument",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public NameIDCollection __ArgumentCollection;
		
		[XmlIgnore]
		public NameIDCollection ArgumentCollection
		{
			get
			{
				if (__ArgumentCollection == null) __ArgumentCollection = new NameIDCollection();
				return __ArgumentCollection;
			}
			set {__ArgumentCollection = value;}
		}

		public DialogueEvent() : base()
		{
		}
	}


	[XmlType(TypeName="StreamedFiles"),Serializable]
	public class StreamedFiles
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return FileCollection.GetEnumerator();
		}

		public File Add(File obj)
		{
			return FileCollection.Add(obj);
		}

		[XmlIgnore]
		public File this[int index]
		{
			get { return (File) FileCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return FileCollection.Count; }
        }

        public void Clear()
		{
			FileCollection.Clear();
        }

		public File Remove(int index) 
		{ 
            File obj = FileCollection[index];
            FileCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            FileCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(File),ElementName="File",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public FileCollection __FileCollection;
		
		[XmlIgnore]
		public FileCollection FileCollection
		{
			get
			{
				if (__FileCollection == null) __FileCollection = new FileCollection();
				return __FileCollection;
			}
			set {__FileCollection = value;}
		}

		public StreamedFiles()
		{
		}
	}


	[XmlType(TypeName="File"),Serializable]
	public class File : AK.Wwise.InfoFile.FileDescriptorType
	{

		[XmlAttribute(AttributeName="UsingReferenceLanguageAsStandIn",Form=XmlSchemaForm.Unqualified,DataType="boolean")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __UsingReferenceLanguageAsStandIn;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __UsingReferenceLanguageAsStandInSpecified;
		
		[XmlIgnore]
		public bool UsingReferenceLanguageAsStandIn
		{ 
			get { return __UsingReferenceLanguageAsStandIn; }
			set { __UsingReferenceLanguageAsStandIn = value; __UsingReferenceLanguageAsStandInSpecified = true; }
		}

		[XmlAttribute(AttributeName="RSX",Form=XmlSchemaForm.Unqualified,DataType="boolean")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __RSX;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __RSXSpecified;
		
		[XmlIgnore]
		public bool RSX
		{ 
			get { return __RSX; }
			set { __RSX = value; __RSXSpecified = true; }
		}

		public File() : base()
		{
		}
	}


	[XmlType(TypeName="SoundBanks"),Serializable]
	public class SoundBanks
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return SoundBankCollection.GetEnumerator();
		}

		public SoundBank Add(SoundBank obj)
		{
			return SoundBankCollection.Add(obj);
		}

		[XmlIgnore]
		public SoundBank this[int index]
		{
			get { return (SoundBank) SoundBankCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return SoundBankCollection.Count; }
        }

        public void Clear()
		{
			SoundBankCollection.Clear();
        }

		public SoundBank Remove(int index) 
		{ 
            SoundBank obj = SoundBankCollection[index];
            SoundBankCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            SoundBankCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(SoundBank),ElementName="SoundBank",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public SoundBankCollection __SoundBankCollection;
		
		[XmlIgnore]
		public SoundBankCollection SoundBankCollection
		{
			get
			{
				if (__SoundBankCollection == null) __SoundBankCollection = new SoundBankCollection();
				return __SoundBankCollection;
			}
			set {__SoundBankCollection = value;}
		}

		public SoundBanks()
		{
		}
	}


	[XmlType(TypeName="SoundBank"),Serializable]
	public class SoundBank : AK.Wwise.InfoFile.FileDescriptorType
	{

		[XmlElement(Type=typeof(IncludedEvents),ElementName="IncludedEvents",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public IncludedEvents __IncludedEvents;
		
		[XmlIgnore]
		public IncludedEvents IncludedEvents
		{
			get
			{
				if (__IncludedEvents == null) __IncludedEvents = new IncludedEvents();		
				return __IncludedEvents;
			}
			set {__IncludedEvents = value;}
		}

		[XmlElement(Type=typeof(IncludedDialogueEvents),ElementName="IncludedDialogueEvents",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public IncludedDialogueEvents __IncludedDialogueEvents;
		
		[XmlIgnore]
		public IncludedDialogueEvents IncludedDialogueEvents
		{
			get
			{
				if (__IncludedDialogueEvents == null) __IncludedDialogueEvents = new IncludedDialogueEvents();		
				return __IncludedDialogueEvents;
			}
			set {__IncludedDialogueEvents = value;}
		}

		[XmlElement(Type=typeof(ReferencedStreamedFiles),ElementName="ReferencedStreamedFiles",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public ReferencedStreamedFiles __ReferencedStreamedFiles;
		
		[XmlIgnore]
		public ReferencedStreamedFiles ReferencedStreamedFiles
		{
			get
			{
				if (__ReferencedStreamedFiles == null) __ReferencedStreamedFiles = new ReferencedStreamedFiles();		
				return __ReferencedStreamedFiles;
			}
			set {__ReferencedStreamedFiles = value;}
		}

		[XmlElement(Type=typeof(IncludedFullFiles),ElementName="IncludedFullFiles",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public IncludedFullFiles __IncludedFullFiles;
		
		[XmlIgnore]
		public IncludedFullFiles IncludedFullFiles
		{
			get
			{
				if (__IncludedFullFiles == null) __IncludedFullFiles = new IncludedFullFiles();		
				return __IncludedFullFiles;
			}
			set {__IncludedFullFiles = value;}
		}

		[XmlElement(Type=typeof(IncludedPrefetchFiles),ElementName="IncludedPrefetchFiles",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public IncludedPrefetchFiles __IncludedPrefetchFiles;
		
		[XmlIgnore]
		public IncludedPrefetchFiles IncludedPrefetchFiles
		{
			get
			{
				if (__IncludedPrefetchFiles == null) __IncludedPrefetchFiles = new IncludedPrefetchFiles();		
				return __IncludedPrefetchFiles;
			}
			set {__IncludedPrefetchFiles = value;}
		}

		[XmlElement(Type=typeof(ExternalSources),ElementName="ExternalSources",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public ExternalSources __ExternalSources;
		
		[XmlIgnore]
		public ExternalSources ExternalSources
		{
			get
			{
				if (__ExternalSources == null) __ExternalSources = new ExternalSources();		
				return __ExternalSources;
			}
			set {__ExternalSources = value;}
		}

		public SoundBank() : base()
		{
		}
	}


	[XmlType(TypeName="IncludedEvents"),Serializable]
	public class IncludedEvents
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return EventCollection.GetEnumerator();
		}

		public @Event Add(@Event obj)
		{
			return EventCollection.Add(obj);
		}

		[XmlIgnore]
		public @Event this[int index]
		{
			get { return (@Event) EventCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return EventCollection.Count; }
        }

        public void Clear()
		{
			EventCollection.Clear();
        }

		public @Event Remove(int index) 
		{ 
            @Event obj = EventCollection[index];
            EventCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            EventCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(@Event),ElementName="Event",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public EventCollection __EventCollection;
		
		[XmlIgnore]
		public EventCollection EventCollection
		{
			get
			{
				if (__EventCollection == null) __EventCollection = new EventCollection();
				return __EventCollection;
			}
			set {__EventCollection = value;}
		}

		public IncludedEvents()
		{
		}
	}


	[XmlType(TypeName="Event"),Serializable]
	public class @Event : AK.Wwise.InfoFile.NameID
	{

		[XmlAttribute(AttributeName="MaxAttenuation",Form=XmlSchemaForm.Unqualified,DataType="double")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public double __MaxAttenuation;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __MaxAttenuationSpecified;
		
		[XmlIgnore]
		public double MaxAttenuation
		{ 
			get { return __MaxAttenuation; }
			set { __MaxAttenuation = value; __MaxAttenuationSpecified = true; }
		}

		public @Event() : base()
		{
		}
	}


	[XmlType(TypeName="IncludedDialogueEvents"),Serializable]
	public class IncludedDialogueEvents
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return DialogueEventCollection.GetEnumerator();
		}

		public IncludedDialogueEventsDialogueEvent Add(IncludedDialogueEventsDialogueEvent obj)
		{
			return DialogueEventCollection.Add(obj);
		}

		[XmlIgnore]
		public IncludedDialogueEventsDialogueEvent this[int index]
		{
			get { return (IncludedDialogueEventsDialogueEvent) DialogueEventCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return DialogueEventCollection.Count; }
        }

        public void Clear()
		{
			DialogueEventCollection.Clear();
        }

		public IncludedDialogueEventsDialogueEvent Remove(int index) 
		{ 
            IncludedDialogueEventsDialogueEvent obj = DialogueEventCollection[index];
            DialogueEventCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            DialogueEventCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(IncludedDialogueEventsDialogueEvent),ElementName="DialogueEvent",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public IncludedDialogueEventsDialogueEventCollection __DialogueEventCollection;
		
		[XmlIgnore]
		public IncludedDialogueEventsDialogueEventCollection DialogueEventCollection
		{
			get
			{
				if (__DialogueEventCollection == null) __DialogueEventCollection = new IncludedDialogueEventsDialogueEventCollection();
				return __DialogueEventCollection;
			}
			set {__DialogueEventCollection = value;}
		}

		public IncludedDialogueEvents()
		{
		}
	}


	[XmlType(TypeName="IncludedDialogueEventsDialogueEvent"),Serializable]
	public class IncludedDialogueEventsDialogueEvent : AK.Wwise.InfoFile.NameID
	{

		public IncludedDialogueEventsDialogueEvent() : base()
		{
		}
	}


	[XmlType(TypeName="ReferencedStreamedFiles"),Serializable]
	public class ReferencedStreamedFiles
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return FileCollection.GetEnumerator();
		}

		public ReferencedStreamedFilesFile Add(ReferencedStreamedFilesFile obj)
		{
			return FileCollection.Add(obj);
		}

		[XmlIgnore]
		public ReferencedStreamedFilesFile this[int index]
		{
			get { return (ReferencedStreamedFilesFile) FileCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return FileCollection.Count; }
        }

        public void Clear()
		{
			FileCollection.Clear();
        }

		public ReferencedStreamedFilesFile Remove(int index) 
		{ 
            ReferencedStreamedFilesFile obj = FileCollection[index];
            FileCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            FileCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(ReferencedStreamedFilesFile),ElementName="File",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public ReferencedStreamedFilesFileCollection __FileCollection;
		
		[XmlIgnore]
		public ReferencedStreamedFilesFileCollection FileCollection
		{
			get
			{
				if (__FileCollection == null) __FileCollection = new ReferencedStreamedFilesFileCollection();
				return __FileCollection;
			}
			set {__FileCollection = value;}
		}

		public ReferencedStreamedFiles()
		{
		}
	}


	[XmlType(TypeName="ReferencedStreamedFilesFile"),Serializable]
	public class ReferencedStreamedFilesFile
	{

		[XmlAttribute(AttributeName="Id",Form=XmlSchemaForm.Unqualified,DataType="unsignedInt")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public uint __Id;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __IdSpecified;
		
		[XmlIgnore]
		public uint Id
		{ 
			get { return __Id; }
			set { __Id = value; __IdSpecified = true; }
		}

		public ReferencedStreamedFilesFile()
		{
		}
	}


	[XmlType(TypeName="IncludedFullFiles"),Serializable]
	public class IncludedFullFiles
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return FileCollection.GetEnumerator();
		}

		public IncludedFullFilesFile Add(IncludedFullFilesFile obj)
		{
			return FileCollection.Add(obj);
		}

		[XmlIgnore]
		public IncludedFullFilesFile this[int index]
		{
			get { return (IncludedFullFilesFile) FileCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return FileCollection.Count; }
        }

        public void Clear()
		{
			FileCollection.Clear();
        }

		public IncludedFullFilesFile Remove(int index) 
		{ 
            IncludedFullFilesFile obj = FileCollection[index];
            FileCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            FileCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(IncludedFullFilesFile),ElementName="File",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public IncludedFullFilesFileCollection __FileCollection;
		
		[XmlIgnore]
		public IncludedFullFilesFileCollection FileCollection
		{
			get
			{
				if (__FileCollection == null) __FileCollection = new IncludedFullFilesFileCollection();
				return __FileCollection;
			}
			set {__FileCollection = value;}
		}

		public IncludedFullFiles()
		{
		}
	}


	[XmlType(TypeName="IncludedFullFilesFile"),Serializable]
	public class IncludedFullFilesFile : AK.Wwise.InfoFile.FileDescriptorType
	{

		[XmlAttribute(AttributeName="UsingReferenceLanguageAsStandIn",Form=XmlSchemaForm.Unqualified,DataType="boolean")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __UsingReferenceLanguageAsStandIn;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __UsingReferenceLanguageAsStandInSpecified;
		
		[XmlIgnore]
		public bool UsingReferenceLanguageAsStandIn
		{ 
			get { return __UsingReferenceLanguageAsStandIn; }
			set { __UsingReferenceLanguageAsStandIn = value; __UsingReferenceLanguageAsStandInSpecified = true; }
		}

		public IncludedFullFilesFile() : base()
		{
		}
	}


	[XmlType(TypeName="IncludedPrefetchFiles"),Serializable]
	public class IncludedPrefetchFiles
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return FileCollection.GetEnumerator();
		}

		public IncludedPrefetchFilesFile Add(IncludedPrefetchFilesFile obj)
		{
			return FileCollection.Add(obj);
		}

		[XmlIgnore]
		public IncludedPrefetchFilesFile this[int index]
		{
			get { return (IncludedPrefetchFilesFile) FileCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return FileCollection.Count; }
        }

        public void Clear()
		{
			FileCollection.Clear();
        }

		public IncludedPrefetchFilesFile Remove(int index) 
		{ 
            IncludedPrefetchFilesFile obj = FileCollection[index];
            FileCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            FileCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(IncludedPrefetchFilesFile),ElementName="File",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public IncludedPrefetchFilesFileCollection __FileCollection;
		
		[XmlIgnore]
		public IncludedPrefetchFilesFileCollection FileCollection
		{
			get
			{
				if (__FileCollection == null) __FileCollection = new IncludedPrefetchFilesFileCollection();
				return __FileCollection;
			}
			set {__FileCollection = value;}
		}

		public IncludedPrefetchFiles()
		{
		}
	}


	[XmlType(TypeName="IncludedPrefetchFilesFile"),Serializable]
	public class IncludedPrefetchFilesFile : AK.Wwise.InfoFile.FileDescriptorType
	{

		[XmlAttribute(AttributeName="PrefetchMilliseconds",Form=XmlSchemaForm.Unqualified,DataType="unsignedInt")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public uint __PrefetchMilliseconds;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __PrefetchMillisecondsSpecified;
		
		[XmlIgnore]
		public uint PrefetchMilliseconds
		{ 
			get { return __PrefetchMilliseconds; }
			set { __PrefetchMilliseconds = value; __PrefetchMillisecondsSpecified = true; }
		}

		[XmlAttribute(AttributeName="UsingReferenceLanguageAsStandIn",Form=XmlSchemaForm.Unqualified,DataType="boolean")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __UsingReferenceLanguageAsStandIn;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __UsingReferenceLanguageAsStandInSpecified;
		
		[XmlIgnore]
		public bool UsingReferenceLanguageAsStandIn
		{ 
			get { return __UsingReferenceLanguageAsStandIn; }
			set { __UsingReferenceLanguageAsStandIn = value; __UsingReferenceLanguageAsStandInSpecified = true; }
		}

		public IncludedPrefetchFilesFile() : base()
		{
		}
	}


	[XmlType(TypeName="ExternalSources"),Serializable]
	public class ExternalSources
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return SourceCollection.GetEnumerator();
		}

		public Source Add(Source obj)
		{
			return SourceCollection.Add(obj);
		}

		[XmlIgnore]
		public Source this[int index]
		{
			get { return (Source) SourceCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return SourceCollection.Count; }
        }

        public void Clear()
		{
			SourceCollection.Clear();
        }

		public Source Remove(int index) 
		{ 
            Source obj = SourceCollection[index];
            SourceCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            SourceCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(Source),ElementName="Source",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public SourceCollection __SourceCollection;
		
		[XmlIgnore]
		public SourceCollection SourceCollection
		{
			get
			{
				if (__SourceCollection == null) __SourceCollection = new SourceCollection();
				return __SourceCollection;
			}
			set {__SourceCollection = value;}
		}

		public ExternalSources()
		{
		}
	}


	[XmlType(TypeName="Source"),Serializable]
	public class Source : AK.Wwise.InfoFile.NameID
	{

		public Source() : base()
		{
		}
	}
}
