/**************************************************************************

    PublicHeader:   Render
    Filename    :   D3D9_Shipping_ShaderBinary.cpp
    Content     :   D3D9 Shader descriptors
    Created     :   2/24/2014
    Authors     :   Automatically generated.

    Copyright   :   Copyright 2014 Autodesk, Inc. All Rights reserved.

    Use of this software is subject to the terms of the Autodesk license
    agreement provided at the time of installation or download, or which
    otherwise accompanies this software in either electronic or hard copy form.

**************************************************************************/


#include <windows.h> // BYTE


namespace Scaleform { namespace Render { namespace D3D9 {


#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//   texgen       c2       2
//

    vs_2_0
    def c4, 0, 1, 0, 0
    dcl_position v0
    dp4 oPos.x, v0, c0
    dp4 oPos.y, v0, c1
    dp4 oT0.x, v0, c2
    dp4 oT0.y, v0, c3
    mov oPos.zw, c4.xyxy

// approximately 5 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VTexTG[] =
{
      0,   2, 254, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   2,   0,  72,   0, 
      0,   0,   0,   0,   0,   0, 
     88,   0,   0,   0,   2,   0, 
      2,   0,   2,   0,  10,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 109, 118, 112,   0, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   4,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,   9,   0, 
      0,   3,   0,   0,   1, 192, 
      0,   0, 228, 144,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   2, 192,   0,   0, 
    228, 144,   1,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      1, 224,   0,   0, 228, 144, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   2, 224, 
      0,   0, 228, 144,   3,   0, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  12, 192,   4,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    mov oC0, r0

// approximately 2 instruction slots used (1 texture, 1 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTG[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 3 instruction slots used (1 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    mov r0, r0.w
    mov oC0, r0

// approximately 3 instruction slots used (1 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   0,   0, 255, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//   texgen       c2       2
//

    vs_2_0
    def c4, 0, 1, 0, 0
    dcl_color v0
    dcl_position v1
    dp4 oPos.x, v1, c0
    dp4 oPos.y, v1, c1
    dp4 oT0.x, v1, c2
    dp4 oT0.y, v1, c3
    mov oD0, v0
    mov oPos.zw, c4.xyxy

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VTexTGEAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   2,   0,  72,   0, 
      0,   0,   0,   0,   0,   0, 
     88,   0,   0,   0,   2,   0, 
      2,   0,   2,   0,  10,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 109, 118, 112,   0, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   4,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   9,   0, 
      0,   3,   0,   0,   1, 192, 
      1,   0, 228, 144,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   2, 192,   1,   0, 
    228, 144,   1,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      1, 224,   1,   0, 228, 144, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   2, 224, 
      1,   0, 228, 144,   3,   0, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  15, 208,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,  12, 192,   4,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    mul r0.w, r0.w, v0.w
    mov oC0, r0

// approximately 3 instruction slots used (1 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    mul r1.w, r0.w, v0.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      5,   0,   0,   3,   1,   0, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   1,   0,   7, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   1,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    mul r0, r0.w, v0.w
    mov oC0, r0

// approximately 3 instruction slots used (1 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGEAlphaInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//   texgen       c4       2
//

    vs_2_0
    def c6, 0, 1, 0, 0
    dcl_position v0
    dp4 oPos.x, v0, c2
    dp4 oPos.y, v0, c3
    dp4 oT2.x, v0, c4
    dp4 oT2.y, v0, c5
    mov oT0, c0
    mov oT1, c1
    mov oPos.zw, c6.xyxy

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VTexTGCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     62,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 191,   0, 
      0,   0,   0,   2, 254, 255, 
      4,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    184,   0,   0,   0, 108,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
    132,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 138,   0,   0,   0, 
      2,   0,   2,   0,   2,   0, 
     10,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 160,   0, 
      0,   0,   2,   0,   4,   0, 
      2,   0,  18,   0, 168,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120,  97, 100, 100,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    109, 118, 112,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   6,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,   9,   0, 
      0,   3,   0,   0,   1, 192, 
      0,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   2, 192,   0,   0, 
    228, 144,   3,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      1, 224,   0,   0, 228, 144, 
      4,   0, 228, 160,   9,   0, 
      0,   3,   2,   0,   2, 224, 
      0,   0, 228, 144,   5,   0, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 160,   1,   0,   0,   2, 
      1,   0,  15, 224,   1,   0, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  12, 192,   6,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mov r1, t1
    mad r0, r0, r1, t0
    mov oC0, r0

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGCxform[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 176,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mov r1, t1
    mad r0, r0, r1, t0
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 5 instruction slots used (1 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGCxformMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 176,   5,   0,   0,   3, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mov r1.w, t1.w
    mad r0, r0.w, r1.w, t0.w
    mov oC0, r0

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGCxformInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   1,   0, 255, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 255, 128, 
      1,   0, 255, 128,   0,   0, 
    255, 176,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//   texgen       c4       2
//

    vs_2_0
    def c6, 0, 1, 0, 0
    dcl_color v0
    dcl_position v1
    dp4 oPos.x, v1, c2
    dp4 oPos.y, v1, c3
    dp4 oT2.x, v1, c4
    dp4 oT2.y, v1, c5
    mov oD0, v0
    mov oT0, c0
    mov oT1, c1
    mov oPos.zw, c6.xyxy

// approximately 8 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VTexTGCxformEAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     62,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 191,   0, 
      0,   0,   0,   2, 254, 255, 
      4,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    184,   0,   0,   0, 108,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
    132,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 138,   0,   0,   0, 
      2,   0,   2,   0,   2,   0, 
     10,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 160,   0, 
      0,   0,   2,   0,   4,   0, 
      2,   0,  18,   0, 168,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120,  97, 100, 100,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    109, 118, 112,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   6,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   9,   0, 
      0,   3,   0,   0,   1, 192, 
      1,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   2, 192,   1,   0, 
    228, 144,   3,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      1, 224,   1,   0, 228, 144, 
      4,   0, 228, 160,   9,   0, 
      0,   3,   2,   0,   2, 224, 
      1,   0, 228, 144,   5,   0, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  15, 208,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 160,   1,   0,   0,   2, 
      1,   0,  15, 224,   1,   0, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  12, 192,   6,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mov r1, t1
    mad r0, r0, r1, t0
    mul r0.w, r0.w, v0.w
    mov oC0, r0

// approximately 5 instruction slots used (1 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGCxformEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 176,   5,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mov r1, t1
    mad r0, r0, r1, t0
    mul r1.w, r0.w, v0.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 6 instruction slots used (1 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGCxformEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 176,   5,   0,   0,   3, 
      1,   0,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      5,   0,   0,   3,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 255, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      1,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mov r1.w, t1.w
    mad r0.x, r0.w, r1.w, t0.w
    mul r0, r0.x, v0.w
    mov oC0, r0

// approximately 5 instruction slots used (1 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGCxformEAlphaInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   1,   0, 255, 176, 
      4,   0,   0,   4,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      1,   0, 255, 128,   0,   0, 
    255, 176,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
      0, 128,   0,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mov r1.xyz, t1
    mov r1.w, c0.x
    mul r0, r0, r1
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mov oC0, r0

// approximately 7 instruction slots used (1 texture, 6 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGCxformAc[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      7, 128,   1,   0, 228, 176, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   0,   0,   0, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mov r1.xyz, t1
    mov r1.w, c0.x
    mul r0, r0, r1
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 8 instruction slots used (1 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGCxformAcMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      7, 128,   1,   0, 228, 176, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   0,   0,   0, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mul r0.x, r0.w, t1.w
    mad r0, t0.w, r0.x, r0.x
    mov oC0, r0

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGCxformAcInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      1,   0, 255, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 255, 176,   0,   0, 
      0, 128,   0,   0,   0, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl v0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mov r1.xyz, t1
    mov r1.w, c0.x
    mul r0, r0, r1
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r0.w, r0.w, v0.w
    mov oC0, r0

// approximately 8 instruction slots used (1 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGCxformAcEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      7, 128,   1,   0, 228, 176, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   0,   0,   0, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   8, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl v0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mov r1.xyz, t1
    mov r1.w, c0.x
    mul r0, r0, r1
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r1.w, r0.w, v0.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 9 instruction slots used (1 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGCxformAcEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      7, 128,   1,   0, 228, 176, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   0,   0,   0, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   1,   0,   8, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 144,   5,   0,   0,   3, 
      1,   0,   7, 128,   0,   0, 
    228, 128,   1,   0, 255, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   1,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mul r0.x, r0.w, t1.w
    mad r0.x, t0.w, r0.x, r0.x
    mul r0, r0.x, v0.w
    mov oC0, r0

// approximately 5 instruction slots used (1 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGCxformAcEAlphaInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      1,   0, 255, 176,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 255, 176,   0,   0, 
      0, 128,   0,   0,   0, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0,   0, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//

    vs_2_0
    def c2, 0, 1, 0, 0
    dcl_color v0
    dcl_position v1
    dp4 oPos.x, v1, c0
    dp4 oPos.y, v1, c1
    mov oD0, v0
    mov oPos.zw, c2.xyxy

// approximately 4 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VVertex[] =
{
      0,   2, 254, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    109, 118, 112,   0,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,   9,   0,   0,   3, 
      0,   0,   1, 192,   1,   0, 
    228, 144,   0,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 192,   1,   0, 228, 144, 
      1,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 208, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   0,   0,  12, 192, 
      2,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    dcl v0
    mov oC0, v0

// approximately 1 instruction slot used
#endif

extern const BYTE pBinary_D3D9SM20_FVertex[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    dcl v0
    mul r0.xyz, v0.w, v0
    mov r0.w, v0.w
    mov oC0, r0

// approximately 3 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexMul[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 255, 144,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,   8, 128,   0,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    dcl v0
    mov r0, v0.w
    mov oC0, r0

// approximately 2 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexInv[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,   1,   0, 
      0,   2,   0,   0,  15, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//

    vs_2_0
    def c2, 0, 1, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dp4 oPos.x, v2, c0
    dp4 oPos.y, v2, c1
    mov oD0, v0
    mov oD1, v1
    mov oPos.zw, c2.xyxy

// approximately 5 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VVertexEAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    109, 118, 112,   0,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     15, 144,   9,   0,   0,   3, 
      0,   0,   1, 192,   2,   0, 
    228, 144,   0,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 192,   2,   0, 228, 144, 
      1,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 208, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 208, 
      1,   0, 228, 144,   1,   0, 
      0,   2,   0,   0,  12, 192, 
      2,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    dcl v0
    dcl v1
    mov r0, v0
    mul r0.w, r0.w, v1.w
    mov oC0, r0

// approximately 3 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   1,   0, 
      0,   2,   0,   0,  15, 128, 
      0,   0, 228, 144,   5,   0, 
      0,   3,   0,   0,   8, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    dcl v0
    dcl v1
    mov r0.w, v0.w
    mul r0.w, r0.w, v1.w
    mul r0.xyz, r0.w, v0
    mov oC0, r0

// approximately 4 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   0,   8, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 144,   5,   0,   0,   3, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 144, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    dcl v0
    dcl v1
    mov r0.w, v0.w
    mul r0, r0.w, v1.w
    mov oC0, r0

// approximately 3 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexEAlphaInv[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//

    vs_2_0
    def c4, 0, 1, 0, 0
    dcl_color v0
    dcl_position v1
    dp4 oPos.x, v1, c2
    dp4 oPos.y, v1, c3
    mov oD0, v0
    mov oT0, c0
    mov oT1, c1
    mov oPos.zw, c4.xyxy

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VVertexCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   2, 254, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 118,   0,   0,   0, 
      2,   0,   2,   0,   2,   0, 
     10,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 109, 118, 
    112,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,   9,   0,   0,   3, 
      0,   0,   1, 192,   1,   0, 
    228, 144,   2,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 192,   1,   0, 228, 144, 
      3,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 208, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 160,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  12, 192, 
      4,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    dcl v0
    dcl t0
    dcl t1
    mov r0, v0
    mov r1, t1
    mad r0, r0, r1, t0
    mov oC0, r0

// approximately 4 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexCxform[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 176,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 176,   1,   0, 
      0,   2,   0,   0,  15, 128, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      1,   0, 228, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   0,   0, 228, 176, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    dcl v0
    dcl t0
    dcl t1
    mov r0, v0
    mov r1, t1
    mad r0, r0, r1, t0
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 5 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexCxformMul[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 176,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 176,   1,   0, 
      0,   2,   0,   0,  15, 128, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      1,   0, 228, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   0,   0, 228, 176, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    dcl v0
    dcl t0
    dcl t1
    mov r0.w, v0.w
    mov r1.w, t1.w
    mad r0, r0.w, r1.w, t0.w
    mov oC0, r0

// approximately 4 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexCxformInv[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 176,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 176,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   1,   0,   8, 128, 
      1,   0, 255, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 128,   0,   0, 255, 176, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//

    vs_2_0
    def c4, 0, 1, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dp4 oPos.x, v2, c2
    dp4 oPos.y, v2, c3
    mov oD0, v0
    mov oD1, v1
    mov oT0, c0
    mov oT1, c1
    mov oPos.zw, c4.xyxy

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VVertexCxformEAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   2, 254, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 118,   0,   0,   0, 
      2,   0,   2,   0,   2,   0, 
     10,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 109, 118, 
    112,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     15, 144,   9,   0,   0,   3, 
      0,   0,   1, 192,   2,   0, 
    228, 144,   2,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 192,   2,   0, 228, 144, 
      3,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 208, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 208, 
      1,   0, 228, 144,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 160,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  12, 192, 
      4,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    dcl v0
    dcl v1
    dcl t0
    dcl t1
    mov r0, v0
    mov r1, t1
    mad r0, r0, r1, t0
    mul r0.w, r0.w, v1.w
    mov oC0, r0

// approximately 5 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexCxformEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 176,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 176,   1,   0, 
      0,   2,   0,   0,  15, 128, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      1,   0, 228, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   0,   0, 228, 176, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      1,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    dcl v0
    dcl v1
    dcl t0
    dcl t1
    mov r0, v0
    mov r1, t1
    mad r0, r0, r1, t0
    mul r1.w, r0.w, v1.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexCxformEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 176,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 176,   1,   0, 
      0,   2,   0,   0,  15, 128, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      1,   0, 228, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   0,   0, 228, 176, 
      5,   0,   0,   3,   1,   0, 
      8, 128,   0,   0, 255, 128, 
      1,   0, 255, 144,   5,   0, 
      0,   3,   1,   0,   7, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   1,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    dcl v0
    dcl v1
    dcl t0
    dcl t1
    mov r0.w, v0.w
    mov r1.w, t1.w
    mad r0.x, r0.w, r1.w, t0.w
    mul r0, r0.x, v1.w
    mov oC0, r0

// approximately 5 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexCxformEAlphaInv[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 176,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 176,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   1,   0,   8, 128, 
      1,   0, 255, 176,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 128,   0,   0, 255, 176, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0,   0, 128, 
      1,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    def c0, 1, 0, 0, 0
    dcl v0
    dcl t0
    dcl t1
    mov r0.xyz, t1
    mov r0.w, c0.x
    mul r0, r0, v0
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mov oC0, r0

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexCxformAc[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   0,   0,  15, 160, 
      0,   0, 128,  63,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 176,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 176,   1,   0, 
      0,   2,   0,   0,   7, 128, 
      1,   0, 228, 176,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0,   0, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 144,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    def c0, 1, 0, 0, 0
    dcl v0
    dcl t0
    dcl t1
    mov r0.xyz, t1
    mov r0.w, c0.x
    mul r0, r0, v0
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexCxformAcMul[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   0,   0,  15, 160, 
      0,   0, 128,  63,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 176,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 176,   1,   0, 
      0,   2,   0,   0,   7, 128, 
      1,   0, 228, 176,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0,   0, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 144,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    dcl v0
    dcl t0
    dcl t1
    mov r0.w, v0.w
    mul r0.x, r0.w, t1.w
    mad r0, t0.w, r0.x, r0.x
    mov oC0, r0

// approximately 4 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexCxformAcInv[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 176,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 176,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    255, 176,   0,   0,   0, 128, 
      0,   0,   0, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    def c0, 1, 0, 0, 0
    dcl v0
    dcl v1
    dcl t0
    dcl t1
    mov r0.xyz, t1
    mov r0.w, c0.x
    mul r0, r0, v0
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r0.w, r0.w, v1.w
    mov oC0, r0

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexCxformAcEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   0,   0,  15, 160, 
      0,   0, 128,  63,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 176,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 176,   1,   0, 
      0,   2,   0,   0,   7, 128, 
      1,   0, 228, 176,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0,   0, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 144,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128,   1,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    def c0, 1, 0, 0, 0
    dcl v0
    dcl v1
    dcl t0
    dcl t1
    mov r0.xyz, t1
    mov r0.w, c0.x
    mul r0, r0, v0
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r1.w, r0.w, v1.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 8 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexCxformAcEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   0,   0,  15, 160, 
      0,   0, 128,  63,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 176,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 176,   1,   0, 
      0,   2,   0,   0,   7, 128, 
      1,   0, 228, 176,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0,   0, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 144,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      1,   0,   8, 128,   0,   0, 
    255, 128,   1,   0, 255, 144, 
      5,   0,   0,   3,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 255, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      1,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_2_0
    dcl v0
    dcl v1
    dcl t0
    dcl t1
    mov r0.w, v0.w
    mul r0.x, r0.w, t1.w
    mad r0.x, t0.w, r0.x, r0.x
    mul r0, r0.x, v1.w
    mov oC0, r0

// approximately 5 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FVertexCxformAcEAlphaInv[] =
{
      0,   2, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   2, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 176,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 176,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,   1, 128,   0,   0, 
    255, 176,   0,   0,   0, 128, 
      0,   0,   0, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0,   0, 128,   1,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 mvp[2];
//   float4 texgen[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//   texgen       c2       4
//

    vs_2_0
    def c6, 0, 1, 0, 0
    dcl_color v0
    dcl_position v1
    dp4 oPos.x, v1, c0
    dp4 oPos.y, v1, c1
    dp4 oT0.x, v1, c2
    dp4 oT0.y, v1, c3
    dp4 oT1.x, v1, c4
    dp4 oT1.y, v1, c5
    mov oD0, v0
    mov oPos.zw, c6.xyxy

// approximately 8 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VTexTGTexTG[] =
{
      0,   2, 254, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   2,   0,  72,   0, 
      0,   0,   0,   0,   0,   0, 
     88,   0,   0,   0,   2,   0, 
      2,   0,   4,   0,  10,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 109, 118, 112,   0, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   4,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   6,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   9,   0, 
      0,   3,   0,   0,   1, 192, 
      1,   0, 228, 144,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   2, 192,   1,   0, 
    228, 144,   1,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      1, 224,   1,   0, 228, 144, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   2, 224, 
      1,   0, 228, 144,   3,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   1, 224,   1,   0, 
    228, 144,   4,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      2, 224,   1,   0, 228, 144, 
      5,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 208, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   0,   0,  12, 192, 
      6,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    dcl v0.x
    dcl_pp t0.xy
    dcl_pp t1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s0
    texld r1, t1, s1
    lrp r2, v0.x, r0, r1
    mov oC0, r2

// approximately 4 instruction slots used (2 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTG[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   2,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    dcl v0.x
    dcl_pp t0.xy
    dcl_pp t1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s0
    texld r1, t1, s1
    lrp r2, v0.x, r0, r1
    mul r2.xyz, r2.w, r2
    mov oC0, r2

// approximately 5 instruction slots used (2 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   2,   0, 
      7, 128,   2,   0, 255, 128, 
      2,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      2,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    dcl v0.x
    dcl_pp t0.xy
    dcl_pp t1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s0
    texld r1, t1, s1
    lrp r2, v0.x, r0.w, r1.w
    mov oC0, r2

// approximately 4 instruction slots used (2 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    255, 128,   1,   0, 255, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   2,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    dcl v0
    dcl_pp t0.xy
    dcl_pp t1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s0
    texld r1, t1, s1
    lrp r2, v0.x, r0, r1
    mul r2.w, r2.w, v0.w
    mov oC0, r2

// approximately 5 instruction slots used (2 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   2,   0, 
      8, 128,   2,   0, 255, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      2,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    dcl v0
    dcl_pp t0.xy
    dcl_pp t1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s0
    texld r1, t1, s1
    lrp r2, v0.x, r0, r1
    mul r0.w, r2.w, v0.w
    mul r0.xyz, r0.w, r2
    mov oC0, r0

// approximately 6 instruction slots used (2 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   2,   0, 255, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 255, 128,   2,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    dcl v0
    dcl_pp t0.xy
    dcl_pp t1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s0
    texld r1, t1, s1
    lrp r2.w, v0.x, r0.w, r1.w
    mul r0, r2.w, v0.w
    mov oC0, r0

// approximately 5 instruction slots used (2 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGEAlphaInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,   8, 128, 
      0,   0,   0, 144,   0,   0, 
    255, 128,   1,   0, 255, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   2,   0, 255, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//   float4 texgen[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//   texgen       c4       4
//

    vs_2_0
    def c8, 0, 1, 0, 0
    dcl_color v0
    dcl_position v1
    dp4 oPos.x, v1, c2
    dp4 oPos.y, v1, c3
    dp4 oT2.x, v1, c4
    dp4 oT2.y, v1, c5
    dp4 oT3.x, v1, c6
    dp4 oT3.y, v1, c7
    mov oD0, v0
    mov oT0, c0
    mov oT1, c1
    mov oPos.zw, c8.xyxy

// approximately 10 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VTexTGTexTGCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     62,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 191,   0, 
      0,   0,   0,   2, 254, 255, 
      4,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    184,   0,   0,   0, 108,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
    132,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 138,   0,   0,   0, 
      2,   0,   2,   0,   2,   0, 
     10,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 160,   0, 
      0,   0,   2,   0,   4,   0, 
      4,   0,  18,   0, 168,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120,  97, 100, 100,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    109, 118, 112,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   4,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   8,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   9,   0, 
      0,   3,   0,   0,   1, 192, 
      1,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   2, 192,   1,   0, 
    228, 144,   3,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      1, 224,   1,   0, 228, 144, 
      4,   0, 228, 160,   9,   0, 
      0,   3,   2,   0,   2, 224, 
      1,   0, 228, 144,   5,   0, 
    228, 160,   9,   0,   0,   3, 
      3,   0,   1, 224,   1,   0, 
    228, 144,   6,   0, 228, 160, 
      9,   0,   0,   3,   3,   0, 
      2, 224,   1,   0, 228, 144, 
      7,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 208, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 160,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  12, 192, 
      8,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    dcl v0.x
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_pp t3.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t2, s0
    texld r1, t3, s1
    lrp r2, v0.x, r0, r1
    mov r0, t1
    mad r0, r2, r0, t0
    mov oC0, r0

// approximately 6 instruction slots used (2 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGCxform[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   3,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   1,   0, 228, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 176,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    dcl v0.x
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_pp t3.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t2, s0
    texld r1, t3, s1
    lrp r2, v0.x, r0, r1
    mov r0, t1
    mad r0, r2, r0, t0
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 7 instruction slots used (2 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGCxformMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   3,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   1,   0, 228, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 176,   5,   0,   0,   3, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    dcl v0.x
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_pp t3.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t2, s0
    texld r1, t3, s1
    lrp r2.w, v0.x, r0.w, r1.w
    mov r0.w, t1.w
    mad r0, r2.w, r0.w, t0.w
    mov oC0, r0

// approximately 6 instruction slots used (2 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGCxformInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   3,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,   8, 128, 
      0,   0,   0, 144,   0,   0, 
    255, 128,   1,   0, 255, 128, 
      1,   0,   0,   2,   0,   0, 
      8, 128,   1,   0, 255, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0, 255, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 176,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    dcl v0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_pp t3.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t2, s0
    texld r1, t3, s1
    lrp r2, v0.x, r0, r1
    mov r0, t1
    mad r0, r2, r0, t0
    mul r0.w, r0.w, v0.w
    mov oC0, r0

// approximately 7 instruction slots used (2 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGCxformEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   3,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   1,   0, 228, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 176,   5,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    dcl v0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_pp t3.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t2, s0
    texld r1, t3, s1
    lrp r2, v0.x, r0, r1
    mov r0, t1
    mad r0, r2, r0, t0
    mul r1.w, r0.w, v0.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 8 instruction slots used (2 texture, 6 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGCxformEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   3,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   1,   0, 228, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 176,   5,   0,   0,   3, 
      1,   0,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      5,   0,   0,   3,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 255, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      1,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    dcl v0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_pp t3.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t2, s0
    texld r1, t3, s1
    lrp r2.w, v0.x, r0.w, r1.w
    mov r0.w, t1.w
    mad r0.x, r2.w, r0.w, t0.w
    mul r0, r0.x, v0.w
    mov oC0, r0

// approximately 7 instruction slots used (2 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGCxformEAlphaInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   3,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,   8, 128, 
      0,   0,   0, 144,   0,   0, 
    255, 128,   1,   0, 255, 128, 
      1,   0,   0,   2,   0,   0, 
      8, 128,   1,   0, 255, 176, 
      4,   0,   0,   4,   0,   0, 
      1, 128,   2,   0, 255, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 176,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
      0, 128,   0,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl v0.x
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_pp t3.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t2, s0
    texld r1, t3, s1
    lrp r2, v0.x, r0, r1
    mov r0.xyz, t1
    mov r0.w, c0.x
    mul r0, r0, r2
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mov oC0, r0

// approximately 9 instruction slots used (2 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGCxformAc[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   3,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   0,   0, 
      7, 128,   1,   0, 228, 176, 
      1,   0,   0,   2,   0,   0, 
      8, 128,   0,   0,   0, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl v0.x
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_pp t3.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t2, s0
    texld r1, t3, s1
    lrp r2, v0.x, r0, r1
    mov r0.xyz, t1
    mov r0.w, c0.x
    mul r0, r0, r2
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 10 instruction slots used (2 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGCxformAcMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   3,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   0,   0, 
      7, 128,   1,   0, 228, 176, 
      1,   0,   0,   2,   0,   0, 
      8, 128,   0,   0,   0, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    dcl v0.x
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_pp t3.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t2, s0
    texld r1, t3, s1
    lrp r2.w, v0.x, r0.w, r1.w
    mul r0.x, r2.w, t1.w
    mad r0, t0.w, r0.x, r0.x
    mov oC0, r0

// approximately 6 instruction slots used (2 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGCxformAcInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   3,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,   8, 128, 
      0,   0,   0, 144,   0,   0, 
    255, 128,   1,   0, 255, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   2,   0, 255, 128, 
      1,   0, 255, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 255, 176,   0,   0, 
      0, 128,   0,   0,   0, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl v0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_pp t3.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t2, s0
    texld r1, t3, s1
    lrp r2, v0.x, r0, r1
    mov r0.xyz, t1
    mov r0.w, c0.x
    mul r0, r0, r2
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r0.w, r0.w, v0.w
    mov oC0, r0

// approximately 10 instruction slots used (2 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGCxformAcEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   3,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   0,   0, 
      7, 128,   1,   0, 228, 176, 
      1,   0,   0,   2,   0,   0, 
      8, 128,   0,   0,   0, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   8, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl v0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_pp t3.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t2, s0
    texld r1, t3, s1
    lrp r2, v0.x, r0, r1
    mov r0.xyz, t1
    mov r0.w, c0.x
    mul r0, r0, r2
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r1.w, r0.w, v0.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 11 instruction slots used (2 texture, 9 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGCxformAcEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   3,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   0,   0, 
      7, 128,   1,   0, 228, 176, 
      1,   0,   0,   2,   0,   0, 
      8, 128,   0,   0,   0, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   1,   0,   8, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 144,   5,   0,   0,   3, 
      1,   0,   7, 128,   0,   0, 
    228, 128,   1,   0, 255, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   1,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    dcl v0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_pp t3.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t2, s0
    texld r1, t3, s1
    lrp r2.w, v0.x, r0.w, r1.w
    mul r0.x, r2.w, t1.w
    mad r0.x, t0.w, r0.x, r0.x
    mul r0, r0.x, v0.w
    mov oC0, r0

// approximately 7 instruction slots used (2 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGTexTGCxformAcEAlphaInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   3,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,   8, 128, 
      0,   0,   0, 144,   0,   0, 
    255, 128,   1,   0, 255, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   2,   0, 255, 128, 
      1,   0, 255, 176,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 255, 176,   0,   0, 
      0, 128,   0,   0,   0, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0,   0, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//   texgen       c2       2
//

    vs_2_0
    def c4, 0, 1, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dp4 oPos.x, v2, c0
    dp4 oPos.y, v2, c1
    dp4 oT0.x, v2, c2
    dp4 oT0.y, v2, c3
    mov oD0, v0
    mov oD1, v1
    mov oPos.zw, c4.xyxy

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VTexTGVertex[] =
{
      0,   2, 254, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   2,   0,  72,   0, 
      0,   0,   0,   0,   0,   0, 
     88,   0,   0,   0,   2,   0, 
      2,   0,   2,   0,  10,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 109, 118, 112,   0, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   4,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,   9,   0, 
      0,   3,   0,   0,   1, 192, 
      2,   0, 228, 144,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   2, 192,   2,   0, 
    228, 144,   1,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      1, 224,   2,   0, 228, 144, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   2, 224, 
      2,   0, 228, 144,   3,   0, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  15, 208,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  15, 208,   1,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,  12, 192,   4,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl v1.x
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mov oC0, r0

// approximately 5 instruction slots used (1 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertex[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl v1.x
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 6 instruction slots used (1 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl v1.x
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    add r0.x, r0.w, -v0.w
    mov r0.w, v0.w
    mad r0, v1.x, r0.x, r0.w
    mov oC0, r0

// approximately 5 instruction slots used (1 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0, 255, 145,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
      0, 128,   0,   0, 255, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl v1
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mul r0.w, r0.w, v1.w
    mov oC0, r0

// approximately 6 instruction slots used (1 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      1,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl v1
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mul r1.w, r0.w, v1.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 7 instruction slots used (1 texture, 6 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   1,   0, 
      8, 128,   0,   0, 255, 128, 
      1,   0, 255, 144,   5,   0, 
      0,   3,   1,   0,   7, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   1,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl v1
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    mov r0.x, v1.x
    lrp r1.w, r0.x, r0.w, v0.w
    mul r0, r1.w, v1.w
    mov oC0, r0

// approximately 5 instruction slots used (1 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexEAlphaInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   0,   0, 
      1, 128,   1,   0,   0, 144, 
     18,   0,   0,   4,   1,   0, 
      8, 128,   0,   0,   0, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 144,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    255, 128,   1,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//   texgen       c4       2
//

    vs_2_0
    def c6, 0, 1, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dp4 oPos.x, v2, c2
    dp4 oPos.y, v2, c3
    dp4 oT2.x, v2, c4
    dp4 oT2.y, v2, c5
    mov oD0, v0
    mov oD1, v1
    mov oT0, c0
    mov oT1, c1
    mov oPos.zw, c6.xyxy

// approximately 9 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VTexTGVertexCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     62,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 191,   0, 
      0,   0,   0,   2, 254, 255, 
      4,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    184,   0,   0,   0, 108,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
    132,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 138,   0,   0,   0, 
      2,   0,   2,   0,   2,   0, 
     10,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 160,   0, 
      0,   0,   2,   0,   4,   0, 
      2,   0,  18,   0, 168,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120,  97, 100, 100,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    109, 118, 112,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   6,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,   9,   0, 
      0,   3,   0,   0,   1, 192, 
      2,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   2, 192,   2,   0, 
    228, 144,   3,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      1, 224,   2,   0, 228, 144, 
      4,   0, 228, 160,   9,   0, 
      0,   3,   2,   0,   2, 224, 
      2,   0, 228, 144,   5,   0, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  15, 208,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  15, 208,   1,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 160,   1,   0,   0,   2, 
      1,   0,  15, 224,   1,   0, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  12, 192,   6,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl v1.x
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mov r1, t1
    mad r0, r0, r1, t0
    mov oC0, r0

// approximately 7 instruction slots used (1 texture, 6 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexCxform[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 176,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl v1.x
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mov r1, t1
    mad r0, r0, r1, t0
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 8 instruction slots used (1 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexCxformMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 176,   5,   0,   0,   3, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl v1.x
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    add r0.x, r0.w, -v0.w
    mov r0.w, v0.w
    mad r0.x, v1.x, r0.x, r0.w
    mov r0.w, t1.w
    mad r0, r0.x, r0.w, t0.w
    mov oC0, r0

// approximately 7 instruction slots used (1 texture, 6 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexCxformInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0, 255, 145,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      1,   0,   0, 144,   0,   0, 
      0, 128,   0,   0, 255, 128, 
      1,   0,   0,   2,   0,   0, 
      8, 128,   1,   0, 255, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0,   0, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 176,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl v1
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mov r1, t1
    mad r0, r0, r1, t0
    mul r0.w, r0.w, v1.w
    mov oC0, r0

// approximately 8 instruction slots used (1 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexCxformEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 176,   5,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128,   1,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl v1
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mov r1, t1
    mad r0, r0, r1, t0
    mul r1.w, r0.w, v1.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 9 instruction slots used (1 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexCxformEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 176,   5,   0,   0,   3, 
      1,   0,   8, 128,   0,   0, 
    255, 128,   1,   0, 255, 144, 
      5,   0,   0,   3,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 255, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      1,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl v1
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mov r0.x, v1.x
    lrp r1.w, r0.x, r0.w, v0.w
    mov r0.w, t1.w
    mad r0.x, r1.w, r0.w, t0.w
    mul r0, r0.x, v1.w
    mov oC0, r0

// approximately 7 instruction slots used (1 texture, 6 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexCxformEAlphaInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   0,   0, 
      1, 128,   1,   0,   0, 144, 
     18,   0,   0,   4,   1,   0, 
      8, 128,   0,   0,   0, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   0,   8, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,   1, 128,   1,   0, 
    255, 128,   0,   0, 255, 128, 
      0,   0, 255, 176,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0,   0, 128,   1,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl v0
    dcl v1.x
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mov r1.xyz, t1
    mov r1.w, c0.x
    mul r0, r0, r1
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mov oC0, r0

// approximately 10 instruction slots used (1 texture, 9 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexCxformAc[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   1,   0, 
      7, 128,   1,   0, 228, 176, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   0,   0,   0, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl v0
    dcl v1.x
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mov r1.xyz, t1
    mov r1.w, c0.x
    mul r0, r0, r1
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 11 instruction slots used (1 texture, 10 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexCxformAcMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   1,   0, 
      7, 128,   1,   0, 228, 176, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   0,   0,   0, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl v1.x
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    add r0.x, r0.w, -v0.w
    mov r0.w, v0.w
    mad r0.x, v1.x, r0.x, r0.w
    mul r0.x, r0.x, t1.w
    mad r0, t0.w, r0.x, r0.x
    mov oC0, r0

// approximately 7 instruction slots used (1 texture, 6 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexCxformAcInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0, 255, 145,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      1,   0,   0, 144,   0,   0, 
      0, 128,   0,   0, 255, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      1,   0, 255, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 255, 176,   0,   0, 
      0, 128,   0,   0,   0, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl v0
    dcl v1
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mov r1.xyz, t1
    mov r1.w, c0.x
    mul r0, r0, r1
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r0.w, r0.w, v1.w
    mov oC0, r0

// approximately 11 instruction slots used (1 texture, 10 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexCxformAcEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   1,   0, 
      7, 128,   1,   0, 228, 176, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   0,   0,   0, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   8, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl v0
    dcl v1
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mov r1.xyz, t1
    mov r1.w, c0.x
    mul r0, r0, r1
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r1.w, r0.w, v1.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 12 instruction slots used (1 texture, 11 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexCxformAcEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   1,   0, 
      7, 128,   1,   0, 228, 176, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   0,   0,   0, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   1,   0,   8, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 144,   5,   0,   0,   3, 
      1,   0,   7, 128,   0,   0, 
    228, 128,   1,   0, 255, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   1,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl v1
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mov r0.x, v1.x
    lrp r1.w, r0.x, r0.w, v0.w
    mul r0.x, r1.w, t1.w
    mad r0.x, t0.w, r0.x, r0.x
    mul r0, r0.x, v1.w
    mov oC0, r0

// approximately 7 instruction slots used (1 texture, 6 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGVertexCxformAcEAlphaInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   0,   0, 
      1, 128,   1,   0,   0, 144, 
     18,   0,   0,   4,   1,   0, 
      8, 128,   0,   0,   0, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 144,   5,   0,   0,   3, 
      0,   0,   1, 128,   1,   0, 
    255, 128,   1,   0, 255, 176, 
      4,   0,   0,   4,   0,   0, 
      1, 128,   0,   0, 255, 176, 
      0,   0,   0, 128,   0,   0, 
      0, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
      0, 128,   1,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//   texgen       c4       2
//

    vs_2_0
    dcl_position v0
    dp4 oPos.x, v0, c0
    dp4 oPos.y, v0, c1
    dp4 oPos.z, v0, c2
    dp4 oPos.w, v0, c3
    dp4 oT0.x, v0, c4
    dp4 oT0.y, v0, c5

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VPosition3dTexTG[] =
{
      0,   2, 254, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  72,   0, 
      0,   0,   0,   0,   0,   0, 
     88,   0,   0,   0,   2,   0, 
      4,   0,   2,   0,  18,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 109, 118, 112,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,   9,   0, 
      0,   3,   0,   0,   1, 192, 
      0,   0, 228, 144,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   2, 192,   0,   0, 
    228, 144,   1,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      4, 192,   0,   0, 228, 144, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   8, 192, 
      0,   0, 228, 144,   3,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   1, 224,   0,   0, 
    228, 144,   4,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 224,   0,   0, 228, 144, 
      5,   0, 228, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//   texgen       c4       2
//

    vs_2_0
    dcl_color v0
    dcl_position v1
    dp4 oPos.x, v1, c0
    dp4 oPos.y, v1, c1
    dp4 oPos.z, v1, c2
    dp4 oPos.w, v1, c3
    dp4 oT0.x, v1, c4
    dp4 oT0.y, v1, c5
    mov oD0, v0

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VPosition3dTexTGEAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  72,   0, 
      0,   0,   0,   0,   0,   0, 
     88,   0,   0,   0,   2,   0, 
      4,   0,   2,   0,  18,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 109, 118, 112,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   9,   0, 
      0,   3,   0,   0,   1, 192, 
      1,   0, 228, 144,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   2, 192,   1,   0, 
    228, 144,   1,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      4, 192,   1,   0, 228, 144, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   8, 192, 
      1,   0, 228, 144,   3,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   1, 224,   1,   0, 
    228, 144,   4,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 224,   1,   0, 228, 144, 
      5,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 208, 
      0,   0, 228, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//   texgen       c6       2
//

    vs_2_0
    dcl_position v0
    dp4 oPos.x, v0, c2
    dp4 oPos.y, v0, c3
    dp4 oPos.z, v0, c4
    dp4 oPos.w, v0, c5
    dp4 oT2.x, v0, c6
    dp4 oT2.y, v0, c7
    mov oT0, c0
    mov oT1, c1

// approximately 8 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VPosition3dTexTGCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     62,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 191,   0, 
      0,   0,   0,   2, 254, 255, 
      4,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    184,   0,   0,   0, 108,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
    132,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 138,   0,   0,   0, 
      2,   0,   2,   0,   4,   0, 
     10,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 160,   0, 
      0,   0,   2,   0,   6,   0, 
      2,   0,  26,   0, 168,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120,  97, 100, 100,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    109, 118, 112,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,   9,   0, 
      0,   3,   0,   0,   1, 192, 
      0,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   2, 192,   0,   0, 
    228, 144,   3,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      4, 192,   0,   0, 228, 144, 
      4,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   8, 192, 
      0,   0, 228, 144,   5,   0, 
    228, 160,   9,   0,   0,   3, 
      2,   0,   1, 224,   0,   0, 
    228, 144,   6,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      2, 224,   0,   0, 228, 144, 
      7,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 160,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//   texgen       c6       2
//

    vs_2_0
    dcl_color v0
    dcl_position v1
    dp4 oPos.x, v1, c2
    dp4 oPos.y, v1, c3
    dp4 oPos.z, v1, c4
    dp4 oPos.w, v1, c5
    dp4 oT2.x, v1, c6
    dp4 oT2.y, v1, c7
    mov oD0, v0
    mov oT0, c0
    mov oT1, c1

// approximately 9 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VPosition3dTexTGCxformEAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     62,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 191,   0, 
      0,   0,   0,   2, 254, 255, 
      4,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    184,   0,   0,   0, 108,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
    132,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 138,   0,   0,   0, 
      2,   0,   2,   0,   4,   0, 
     10,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 160,   0, 
      0,   0,   2,   0,   6,   0, 
      2,   0,  26,   0, 168,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120,  97, 100, 100,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    109, 118, 112,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   9,   0, 
      0,   3,   0,   0,   1, 192, 
      1,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   2, 192,   1,   0, 
    228, 144,   3,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      4, 192,   1,   0, 228, 144, 
      4,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   8, 192, 
      1,   0, 228, 144,   5,   0, 
    228, 160,   9,   0,   0,   3, 
      2,   0,   1, 224,   1,   0, 
    228, 144,   6,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      2, 224,   1,   0, 228, 144, 
      7,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 208, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 160,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//

    vs_2_0
    dcl_color v0
    dcl_position v1
    dp4 oPos.x, v1, c0
    dp4 oPos.y, v1, c1
    dp4 oPos.z, v1, c2
    dp4 oPos.w, v1, c3
    mov oD0, v0

// approximately 5 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VPosition3dVertex[] =
{
      0,   2, 254, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    109, 118, 112,   0,   3,   0, 
      3,   0,   4,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,   9,   0,   0,   3, 
      0,   0,   1, 192,   1,   0, 
    228, 144,   0,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 192,   1,   0, 228, 144, 
      1,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   4, 192, 
      1,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   8, 192,   1,   0, 
    228, 144,   3,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 208,   0,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//

    vs_2_0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dp4 oPos.x, v2, c0
    dp4 oPos.y, v2, c1
    dp4 oPos.z, v2, c2
    dp4 oPos.w, v2, c3
    mov oD0, v0
    mov oD1, v1

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VPosition3dVertexEAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    109, 118, 112,   0,   3,   0, 
      3,   0,   4,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     15, 144,   9,   0,   0,   3, 
      0,   0,   1, 192,   2,   0, 
    228, 144,   0,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 192,   2,   0, 228, 144, 
      1,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   4, 192, 
      2,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   8, 192,   2,   0, 
    228, 144,   3,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 208,   0,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     15, 208,   1,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//

    vs_2_0
    dcl_color v0
    dcl_position v1
    dp4 oPos.x, v1, c2
    dp4 oPos.y, v1, c3
    dp4 oPos.z, v1, c4
    dp4 oPos.w, v1, c5
    mov oD0, v0
    mov oT0, c0
    mov oT1, c1

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VPosition3dVertexCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   2, 254, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 118,   0,   0,   0, 
      2,   0,   2,   0,   4,   0, 
     10,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 109, 118, 
    112,   0, 171, 171,   3,   0, 
      3,   0,   4,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,   9,   0,   0,   3, 
      0,   0,   1, 192,   1,   0, 
    228, 144,   2,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 192,   1,   0, 228, 144, 
      3,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   4, 192, 
      1,   0, 228, 144,   4,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   8, 192,   1,   0, 
    228, 144,   5,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 208,   0,   0, 228, 144, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     15, 224,   1,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//

    vs_2_0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dp4 oPos.x, v2, c2
    dp4 oPos.y, v2, c3
    dp4 oPos.z, v2, c4
    dp4 oPos.w, v2, c5
    mov oD0, v0
    mov oD1, v1
    mov oT0, c0
    mov oT1, c1

// approximately 8 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VPosition3dVertexCxformEAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   2, 254, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 118,   0,   0,   0, 
      2,   0,   2,   0,   4,   0, 
     10,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 109, 118, 
    112,   0, 171, 171,   3,   0, 
      3,   0,   4,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     15, 144,   9,   0,   0,   3, 
      0,   0,   1, 192,   2,   0, 
    228, 144,   2,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 192,   2,   0, 228, 144, 
      3,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   4, 192, 
      2,   0, 228, 144,   4,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   8, 192,   2,   0, 
    228, 144,   5,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 208,   0,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     15, 208,   1,   0, 228, 144, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     15, 224,   1,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 mvp;
//   float4 texgen[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//   texgen       c4       4
//

    vs_2_0
    dcl_color v0
    dcl_position v1
    dp4 oPos.x, v1, c0
    dp4 oPos.y, v1, c1
    dp4 oPos.z, v1, c2
    dp4 oPos.w, v1, c3
    dp4 oT0.x, v1, c4
    dp4 oT0.y, v1, c5
    dp4 oT1.x, v1, c6
    dp4 oT1.y, v1, c7
    mov oD0, v0

// approximately 9 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VPosition3dTexTGTexTG[] =
{
      0,   2, 254, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  72,   0, 
      0,   0,   0,   0,   0,   0, 
     88,   0,   0,   0,   2,   0, 
      4,   0,   4,   0,  18,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 109, 118, 112,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   4,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   9,   0, 
      0,   3,   0,   0,   1, 192, 
      1,   0, 228, 144,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   2, 192,   1,   0, 
    228, 144,   1,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      4, 192,   1,   0, 228, 144, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   8, 192, 
      1,   0, 228, 144,   3,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   1, 224,   1,   0, 
    228, 144,   4,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 224,   1,   0, 228, 144, 
      5,   0, 228, 160,   9,   0, 
      0,   3,   1,   0,   1, 224, 
      1,   0, 228, 144,   6,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   2, 224,   1,   0, 
    228, 144,   7,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 208,   0,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//   float4 texgen[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//   texgen       c6       4
//

    vs_2_0
    dcl_color v0
    dcl_position v1
    dp4 oPos.x, v1, c2
    dp4 oPos.y, v1, c3
    dp4 oPos.z, v1, c4
    dp4 oPos.w, v1, c5
    dp4 oT2.x, v1, c6
    dp4 oT2.y, v1, c7
    dp4 oT3.x, v1, c8
    dp4 oT3.y, v1, c9
    mov oD0, v0
    mov oT0, c0
    mov oT1, c1

// approximately 11 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VPosition3dTexTGTexTGCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     62,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 191,   0, 
      0,   0,   0,   2, 254, 255, 
      4,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    184,   0,   0,   0, 108,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
    132,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 138,   0,   0,   0, 
      2,   0,   2,   0,   4,   0, 
     10,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 160,   0, 
      0,   0,   2,   0,   6,   0, 
      4,   0,  26,   0, 168,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120,  97, 100, 100,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    109, 118, 112,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   4,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   9,   0, 
      0,   3,   0,   0,   1, 192, 
      1,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   2, 192,   1,   0, 
    228, 144,   3,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      4, 192,   1,   0, 228, 144, 
      4,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   8, 192, 
      1,   0, 228, 144,   5,   0, 
    228, 160,   9,   0,   0,   3, 
      2,   0,   1, 224,   1,   0, 
    228, 144,   6,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      2, 224,   1,   0, 228, 144, 
      7,   0, 228, 160,   9,   0, 
      0,   3,   3,   0,   1, 224, 
      1,   0, 228, 144,   8,   0, 
    228, 160,   9,   0,   0,   3, 
      3,   0,   2, 224,   1,   0, 
    228, 144,   9,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 208,   0,   0, 228, 144, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     15, 224,   1,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//   texgen       c4       2
//

    vs_2_0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dp4 oPos.x, v2, c0
    dp4 oPos.y, v2, c1
    dp4 oPos.z, v2, c2
    dp4 oPos.w, v2, c3
    dp4 oT0.x, v2, c4
    dp4 oT0.y, v2, c5
    mov oD0, v0
    mov oD1, v1

// approximately 8 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VPosition3dTexTGVertex[] =
{
      0,   2, 254, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  72,   0, 
      0,   0,   0,   0,   0,   0, 
     88,   0,   0,   0,   2,   0, 
      4,   0,   2,   0,  18,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 109, 118, 112,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,   9,   0, 
      0,   3,   0,   0,   1, 192, 
      2,   0, 228, 144,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   2, 192,   2,   0, 
    228, 144,   1,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      4, 192,   2,   0, 228, 144, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   8, 192, 
      2,   0, 228, 144,   3,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   1, 224,   2,   0, 
    228, 144,   4,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 224,   2,   0, 228, 144, 
      5,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 208, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 208, 
      1,   0, 228, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//   texgen       c6       2
//

    vs_2_0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dp4 oPos.x, v2, c2
    dp4 oPos.y, v2, c3
    dp4 oPos.z, v2, c4
    dp4 oPos.w, v2, c5
    dp4 oT2.x, v2, c6
    dp4 oT2.y, v2, c7
    mov oD0, v0
    mov oD1, v1
    mov oT0, c0
    mov oT1, c1

// approximately 10 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VPosition3dTexTGVertexCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     62,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 191,   0, 
      0,   0,   0,   2, 254, 255, 
      4,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    184,   0,   0,   0, 108,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
    132,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 138,   0,   0,   0, 
      2,   0,   2,   0,   4,   0, 
     10,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 160,   0, 
      0,   0,   2,   0,   6,   0, 
      2,   0,  26,   0, 168,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120,  97, 100, 100,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    109, 118, 112,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,   9,   0, 
      0,   3,   0,   0,   1, 192, 
      2,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   2, 192,   2,   0, 
    228, 144,   3,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      4, 192,   2,   0, 228, 144, 
      4,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   8, 192, 
      2,   0, 228, 144,   5,   0, 
    228, 160,   9,   0,   0,   3, 
      2,   0,   1, 224,   2,   0, 
    228, 144,   6,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      2, 224,   2,   0, 228, 144, 
      7,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 208, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 208, 
      1,   0, 228, 144,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 160,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_2_0
    def c96, 1.10000002, 3.0999999, 0, 1
    def c97, 4, 0.100000001, 2.0999999, 0
    dcl_position v0
    dcl_color1 v1
    mad r0.xy, v1.x, c97.x, c97.yzzw
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mad r0.zw, v1.x, c97.x, -r0
    add r0.zw, r0, c96.xyxy
    mova a0.xy, r0
    dp4 oT0.x, v0, c0[a0.y]
    dp4 oPos.x, v0, c0[a0.x]
    mova a0.xy, r0.zwzw
    dp4 oT0.y, v0, c0[a0.y]
    dp4 oPos.y, v0, c0[a0.x]
    mov oPos.zw, c96

// approximately 12 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchTexTG[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
     70,  64,   0,   0,   0,   0, 
      0,   0, 128,  63,  81,   0, 
      0,   5,  97,   0,  15, 160, 
      0,   0, 128,  64, 205, 204, 
    204,  61, 102, 102,   6,  64, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      1,   0,   0, 144,  97,   0, 
      0, 160,  97,   0, 233, 160, 
     19,   0,   0,   2,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      0,   0, 238, 129,   4,   0, 
      0,   4,   0,   0,  12, 128, 
      1,   0,   0, 144,  97,   0, 
      0, 160,   0,   0, 228, 129, 
      2,   0,   0,   3,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     96,   0,  68, 160,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 228, 128,   9,   0, 
      0,   4,   0,   0,   1, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   0,   0, 
      1, 192,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    238, 128,   9,   0,   0,   4, 
      0,   0,   2, 224,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,  85, 176,   9,   0, 
      0,   4,   0,   0,   2, 192, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     12, 192,  96,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_2_0
    def c96, 1020.03998, 0.100000001, 2.0999999, 0
    def c97, 1.10000002, 3.0999999, 0, 1
    dcl_color v0
    dcl_position v1
    mad r0.xy, v0.z, c96.x, c96.yzzw
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mad r0.zw, v0.z, c96.x, -r0
    add r0.zw, r0, c97.xyxy
    mova a0.xy, r0
    dp4 oT0.x, v1, c0[a0.y]
    dp4 oPos.x, v1, c0[a0.x]
    mova a0.xy, r0.zwzw
    dp4 oT0.y, v1, c0[a0.y]
    dp4 oPos.y, v1, c0[a0.x]
    mov oD0, v0
    mov oPos.zw, c97

// approximately 13 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchTexTGEAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    143,   2, 127,  68, 205, 204, 
    204,  61, 102, 102,   6,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5,  97,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
     70,  64,   0,   0,   0,   0, 
      0,   0, 128,  63,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 170, 144,  96,   0, 
      0, 160,  96,   0, 233, 160, 
     19,   0,   0,   2,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      0,   0, 238, 129,   4,   0, 
      0,   4,   0,   0,  12, 128, 
      0,   0, 170, 144,  96,   0, 
      0, 160,   0,   0, 228, 129, 
      2,   0,   0,   3,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     97,   0,  68, 160,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 228, 128,   9,   0, 
      0,   4,   0,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   0,   0, 
      1, 192,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    238, 128,   9,   0,   0,   4, 
      0,   0,   2, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,  85, 176,   9,   0, 
      0,   4,   0,   0,   2, 192, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 208,   0,   0, 228, 144, 
      1,   0,   0,   2,   0,   0, 
     12, 192,  97,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

    vs_2_0
    def c144, 2.0999999, 4.0999999, 0.100000001, 1.10000002
    def c145, 6, 3.0999999, 5.0999999, 0
    def c146, 0, 1, 0, 0
    dcl_position v0
    dcl_color1 v1
    mov r0.x, c145.x
    mad r0, v1.x, r0.x, c144
    frc r1, r0
    add r0, r0, -r1
    mad r1.xy, v1.x, c145.x, -r1
    add r1.xy, r1, c145.yzzw
    mova a0.x, r0.x
    dp4 oPos.x, v0, c0[a0.x]
    mova a0.xy, r1
    dp4 oT2.y, v0, c0[a0.y]
    dp4 oPos.y, v0, c0[a0.x]
    mova a0.x, r0.y
    dp4 oT2.x, v0, c0[a0.x]
    mova a0.xy, r0.zwzw
    mov oT1, c0[a0.y]
    mov oT0, c0[a0.x]
    mov oPos.zw, c146.xyxy

// approximately 17 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchTexTGCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    144,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    102, 102,   6,  64,  51,  51, 
    131,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 145,   0,  15, 160, 
      0,   0, 192,  64, 102, 102, 
     70,  64,  51,  51, 163,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 146,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,   1,   0, 
      0,   2,   0,   0,   1, 128, 
    145,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
      0, 128, 144,   0, 228, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,   3, 128, 
      1,   0,   0, 144, 145,   0, 
      0, 160,   1,   0, 228, 129, 
      2,   0,   0,   3,   1,   0, 
      3, 128,   1,   0, 228, 128, 
    145,   0, 233, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 192, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 228, 128, 
      9,   0,   0,   4,   2,   0, 
      2, 224,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      0,   0,   2, 192,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   2,   0,   1, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 238, 128, 
      1,   0,   0,   3,   1,   0, 
     15, 224,   0,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   3,   0,   0,  15, 224, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  12, 192, 146,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

    vs_2_0
    def c144, 2.0999999, 4.0999999, 0.100000001, 1.10000002
    def c145, 0, 1, 0, 0
    def c146, 1530.05994, 3.0999999, 5.0999999, 0
    dcl_color v0
    dcl_position v1
    mov r0.x, c146.x
    mad r0, v0.z, r0.x, c144
    frc r1, r0
    add r0, r0, -r1
    mad r1.xy, v0.z, c146.x, -r1
    add r1.xy, r1, c146.yzzw
    mova a0.x, r0.x
    dp4 oPos.x, v1, c0[a0.x]
    mova a0.xy, r1
    dp4 oT2.y, v1, c0[a0.y]
    dp4 oPos.y, v1, c0[a0.x]
    mova a0.x, r0.y
    dp4 oT2.x, v1, c0[a0.x]
    mov oD0, v0
    mova a0.xy, r0.zwzw
    mov oT1, c0[a0.y]
    mov oT0, c0[a0.x]
    mov oPos.zw, c145.xyxy

// approximately 18 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchTexTGCxformEAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    144,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    102, 102,   6,  64,  51,  51, 
    131,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 145,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 146,   0,  15, 160, 
    235,  65, 191,  68, 102, 102, 
     70,  64,  51,  51, 163,  64, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   1,   0, 
      0,   2,   0,   0,   1, 128, 
    146,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 170, 144,   0,   0, 
      0, 128, 144,   0, 228, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,   3, 128, 
      0,   0, 170, 144, 146,   0, 
      0, 160,   1,   0, 228, 129, 
      2,   0,   0,   3,   1,   0, 
      3, 128,   1,   0, 228, 128, 
    146,   0, 233, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 192, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 228, 128, 
      9,   0,   0,   4,   2,   0, 
      2, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      0,   0,   2, 192,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   2,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 208,   0,   0, 228, 144, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 238, 128, 
      1,   0,   0,   3,   1,   0, 
     15, 224,   0,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   3,   0,   0,  15, 224, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  12, 192, 145,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      48
//

    vs_2_0
    def c48, 2, 0.100000001, 1.10000002, 0
    def c49, 0, 1, 0, 0
    dcl_color v0
    dcl_position v1
    dcl_color2 v2
    mad r0.x, v2.x, c48.x, c48.y
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mad r0.y, v2.x, c48.x, -r0.y
    add r0.y, r0.y, c48.z
    mova a0.x, r0.y
    dp4 oPos.y, v1, c0[a0.x]
    mova a0.x, r0.x
    dp4 oPos.x, v1, c0[a0.x]
    mov oD0, v0
    mov oPos.zw, c49.xyxy

// approximately 11 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchVertex[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     48,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  48,   0,  15, 160, 
      0,   0,   0,  64, 205, 204, 
    204,  61, 205, 204, 140,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5,  49,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      2,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      2,   0,   0, 144,  48,   0, 
      0, 160,  48,   0,  85, 160, 
     19,   0,   0,   2,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0,  85, 129,   4,   0, 
      0,   4,   0,   0,   2, 128, 
      2,   0,   0, 144,  48,   0, 
      0, 160,   0,   0,  85, 129, 
      2,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
     48,   0, 170, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   0,   0,   2, 192, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   0,   0, 
      1, 192,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 208,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,  12, 192,  49,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      48
//

    vs_2_0
    def c48, 510.019989, 0.100000001, 1.10000002, 0
    def c49, 0, 1, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    mad r0.x, v1.z, c48.x, c48.y
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mad r0.y, v1.z, c48.x, -r0.y
    add r0.y, r0.y, c48.z
    mova a0.x, r0.y
    dp4 oPos.y, v2, c0[a0.x]
    mova a0.x, r0.x
    dp4 oPos.x, v2, c0[a0.x]
    mov oD0, v0
    mov oD1, v1
    mov oPos.zw, c49.xyxy

// approximately 12 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchVertexEAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     48,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  48,   0,  15, 160, 
    143,   2, 255,  67, 205, 204, 
    204,  61, 205, 204, 140,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5,  49,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      1,   0, 170, 144,  48,   0, 
      0, 160,  48,   0,  85, 160, 
     19,   0,   0,   2,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0,  85, 129,   4,   0, 
      0,   4,   0,   0,   2, 128, 
      1,   0, 170, 144,  48,   0, 
      0, 160,   0,   0,  85, 129, 
      2,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
     48,   0, 170, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   0,   0,   2, 192, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   0,   0, 
      1, 192,   2,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 208,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  15, 208,   1,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,  12, 192,  49,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_2_0
    def c96, 4, 2.0999999, 0.100000001, 1.10000002
    def c97, 3.0999999, 0, 1, 0
    dcl_color v0
    dcl_position v1
    dcl_color2 v2
    mad r0.xyz, v2.x, c96.x, c96.yzww
    frc r1.xyz, r0
    add r0.xyz, r0, -r1
    mad r0.w, v2.x, c96.x, -r1.x
    add r0.w, r0.w, c97.x
    mova a0.x, r0.w
    dp4 oPos.y, v1, c0[a0.x]
    mova a0.x, r0.x
    dp4 oPos.x, v1, c0[a0.x]
    mov oD0, v0
    mova a0.xy, r0.yzzw
    mov oT1, c0[a0.y]
    mov oT0, c0[a0.x]
    mov oPos.zw, c97.xyyz

// approximately 14 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchVertexCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
      0,   0, 128,  64, 102, 102, 
      6,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5,  97,   0,  15, 160, 
    102, 102,  70,  64,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      2,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      2,   0,   0, 144,  96,   0, 
      0, 160,  96,   0, 249, 160, 
     19,   0,   0,   2,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      2,   0,   0, 144,  96,   0, 
      0, 160,   1,   0,   0, 129, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
     97,   0,   0, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0, 255, 128,   9,   0, 
      0,   4,   0,   0,   2, 192, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   0,   0, 
      1, 192,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 208,   0,   0, 
    228, 144,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    233, 128,   1,   0,   0,   3, 
      1,   0,  15, 224,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      1,   0,   0,   3,   0,   0, 
     15, 224,   0,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  12, 192, 
     97,   0, 148, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_2_0
    def c96, 1020.03998, 2.0999999, 0.100000001, 1.10000002
    def c97, 3.0999999, 0, 1, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    mad r0.xyz, v1.z, c96.x, c96.yzww
    frc r1.xyz, r0
    add r0.xyz, r0, -r1
    mad r0.w, v1.z, c96.x, -r1.x
    add r0.w, r0.w, c97.x
    mova a0.x, r0.w
    dp4 oPos.y, v2, c0[a0.x]
    mova a0.x, r0.x
    dp4 oPos.x, v2, c0[a0.x]
    mov oD0, v0
    mov oD1, v1
    mova a0.xy, r0.yzzw
    mov oT1, c0[a0.y]
    mov oT0, c0[a0.x]
    mov oPos.zw, c97.xyyz

// approximately 15 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchVertexCxformEAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    143,   2, 127,  68, 102, 102, 
      6,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5,  97,   0,  15, 160, 
    102, 102,  70,  64,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      1,   0, 170, 144,  96,   0, 
      0, 160,  96,   0, 249, 160, 
     19,   0,   0,   2,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      1,   0, 170, 144,  96,   0, 
      0, 160,   1,   0,   0, 129, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
     97,   0,   0, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0, 255, 128,   9,   0, 
      0,   4,   0,   0,   2, 192, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   0,   0, 
      1, 192,   2,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 208,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  15, 208,   1,   0, 
    228, 144,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    233, 128,   1,   0,   0,   3, 
      1,   0,  15, 224,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      1,   0,   0,   3,   0,   0, 
     15, 224,   0,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  12, 192, 
     97,   0, 148, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

    vs_2_0
    def c144, 1530.05994, 0.100000001, 2.0999999, 0
    def c145, 0, 1, 0, 0
    def c146, 1.10000002, 3.0999999, 4.0999999, 5.0999999
    dcl_color v0
    dcl_position v1
    mad r0.xy, v0.z, c144.x, c144.yzzw
    frc r1, r0.xyyy
    add r0.xy, r0, -r1.xwzw
    mad r1, v0.z, c144.x, -r1
    add r1, r1, c146
    mova a0.xy, r0
    dp4 oT0.x, v1, c0[a0.y]
    dp4 oPos.x, v1, c0[a0.x]
    mova a0.x, r1.x
    dp4 oPos.y, v1, c0[a0.x]
    mova a0.x, r1.y
    dp4 oT0.y, v1, c0[a0.x]
    mova a0.xy, r1.zwzw
    dp4 oT1.y, v1, c0[a0.y]
    dp4 oT1.x, v1, c0[a0.x]
    mov oD0, v0
    mov oPos.zw, c145.xyxy

// approximately 17 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchTexTGTexTG[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    144,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    235,  65, 191,  68, 205, 204, 
    204,  61, 102, 102,   6,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 145,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 146,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
     70,  64,  51,  51, 131,  64, 
     51,  51, 163,  64,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 170, 144, 144,   0, 
      0, 160, 144,   0, 233, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0,  84, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      1,   0, 236, 129,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      0,   0, 170, 144, 144,   0, 
      0, 160,   1,   0, 228, 129, 
      2,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
    146,   0, 228, 160,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 228, 128,   9,   0, 
      0,   4,   0,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   0,   0, 
      1, 192,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   1,   0, 
      0, 128,   9,   0,   0,   4, 
      0,   0,   2, 192,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      1,   0,  85, 128,   9,   0, 
      0,   4,   0,   0,   2, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 238, 128, 
      9,   0,   0,   4,   1,   0, 
      2, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      1,   0,   1, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  15, 208, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   0,   0,  12, 192, 
    145,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[192];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     192
//

    vs_2_0
    def c192, 2.0999999, 4.0999999, 0.100000001, 1.10000002
    def c193, 2040.07996, 0, 1, 0
    def c194, 3.0999999, 5.0999999, 6.0999999, 7.0999999
    dcl_color v0
    dcl_position v1
    mov r0.x, c193.x
    mad r0, v0.z, r0.x, c192
    frc r1, r0
    add r0, r0, -r1
    mad r1, v0.z, c193.x, -r1.xyyy
    add r1, r1, c194
    mova a0.x, r0.x
    dp4 oPos.x, v1, c0[a0.x]
    mova a0.x, r1.x
    dp4 oPos.y, v1, c0[a0.x]
    mova a0.x, r0.y
    dp4 oT2.x, v1, c0[a0.x]
    mova a0.x, r1.y
    dp4 oT2.y, v1, c0[a0.x]
    mova a0.xy, r1.zwzw
    dp4 oT3.y, v1, c0[a0.y]
    dp4 oT3.x, v1, c0[a0.x]
    mov oD0, v0
    mova a0.xy, r0.zwzw
    mov oT1, c0[a0.y]
    mov oT0, c0[a0.x]
    mov oPos.zw, c193.xyyz

// approximately 22 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchTexTGTexTGCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    192,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 192,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
    102, 102,   6,  64,  51,  51, 
    131,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 193,   0,  15, 160, 
    143,   2, 255,  68,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 194,   0,  15, 160, 
    102, 102,  70,  64,  51,  51, 
    163,  64,  51,  51, 195,  64, 
     51,  51, 227,  64,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   1,   0, 
      0,   2,   0,   0,   1, 128, 
    193,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 170, 144,   0,   0, 
      0, 128, 192,   0, 228, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      0,   0, 170, 144, 193,   0, 
      0, 160,   1,   0,  84, 129, 
      2,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
    194,   0, 228, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 192, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   1,   0,   0, 128, 
      9,   0,   0,   4,   0,   0, 
      2, 192,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
     85, 128,   9,   0,   0,   4, 
      2,   0,   1, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      1,   0,  85, 128,   9,   0, 
      0,   4,   2,   0,   2, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 238, 128, 
      9,   0,   0,   4,   3,   0, 
      2, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      3,   0,   1, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  15, 208, 
      0,   0, 228, 144,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 238, 128,   1,   0, 
      0,   3,   1,   0,  15, 224, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   1,   0,   0,   3, 
      0,   0,  15, 224,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     12, 192, 193,   0, 148, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_2_0
    def c96, 1020.03998, 0.100000001, 2.0999999, 0
    def c97, 1.10000002, 3.0999999, 0, 1
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    mad r0.xy, v1.z, c96.x, c96.yzzw
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mad r0.zw, v1.z, c96.x, -r0
    add r0.zw, r0, c97.xyxy
    mova a0.xy, r0
    dp4 oT0.x, v2, c0[a0.y]
    dp4 oPos.x, v2, c0[a0.x]
    mova a0.xy, r0.zwzw
    dp4 oT0.y, v2, c0[a0.y]
    dp4 oPos.y, v2, c0[a0.x]
    mov oD0, v0
    mov oD1, v1
    mov oPos.zw, c97

// approximately 14 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchTexTGVertex[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    143,   2, 127,  68, 205, 204, 
    204,  61, 102, 102,   6,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5,  97,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
     70,  64,   0,   0,   0,   0, 
      0,   0, 128,  63,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      1,   0, 170, 144,  96,   0, 
      0, 160,  96,   0, 233, 160, 
     19,   0,   0,   2,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      0,   0, 238, 129,   4,   0, 
      0,   4,   0,   0,  12, 128, 
      1,   0, 170, 144,  96,   0, 
      0, 160,   0,   0, 228, 129, 
      2,   0,   0,   3,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     97,   0,  68, 160,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 228, 128,   9,   0, 
      0,   4,   0,   0,   1, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   0,   0, 
      1, 192,   2,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    238, 128,   9,   0,   0,   4, 
      0,   0,   2, 224,   2,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,  85, 176,   9,   0, 
      0,   4,   0,   0,   2, 192, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 208,   0,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     15, 208,   1,   0, 228, 144, 
      1,   0,   0,   2,   0,   0, 
     12, 192,  97,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

    vs_2_0
    def c144, 2.0999999, 4.0999999, 0.100000001, 1.10000002
    def c145, 0, 1, 0, 0
    def c146, 1530.05994, 3.0999999, 5.0999999, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    mov r0.x, c146.x
    mad r0, v1.z, r0.x, c144
    frc r1, r0
    add r0, r0, -r1
    mad r1.xy, v1.z, c146.x, -r1
    add r1.xy, r1, c146.yzzw
    mova a0.x, r0.x
    dp4 oPos.x, v2, c0[a0.x]
    mova a0.xy, r1
    dp4 oT2.y, v2, c0[a0.y]
    dp4 oPos.y, v2, c0[a0.x]
    mova a0.x, r0.y
    dp4 oT2.x, v2, c0[a0.x]
    mov oD0, v0
    mov oD1, v1
    mova a0.xy, r0.zwzw
    mov oT1, c0[a0.y]
    mov oT0, c0[a0.x]
    mov oPos.zw, c145.xyxy

// approximately 19 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchTexTGVertexCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    144,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    102, 102,   6,  64,  51,  51, 
    131,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 145,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 146,   0,  15, 160, 
    235,  65, 191,  68, 102, 102, 
     70,  64,  51,  51, 163,  64, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,   1,   0, 
      0,   2,   0,   0,   1, 128, 
    146,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0, 170, 144,   0,   0, 
      0, 128, 144,   0, 228, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,   3, 128, 
      1,   0, 170, 144, 146,   0, 
      0, 160,   1,   0, 228, 129, 
      2,   0,   0,   3,   1,   0, 
      3, 128,   1,   0, 228, 128, 
    146,   0, 233, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 192, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 228, 128, 
      9,   0,   0,   4,   2,   0, 
      2, 224,   2,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      0,   0,   2, 192,   2,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   2,   0,   1, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 208,   0,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     15, 208,   1,   0, 228, 144, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 238, 128, 
      1,   0,   0,   3,   1,   0, 
     15, 224,   0,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   3,   0,   0,  15, 224, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  12, 192, 145,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_2_0
    def c144, 0.100000001, 4, 2, 1.10000002
    dcl_position v0
    dcl_color1 v1
    add r0.x, v1.x, c144.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c144.y
    mova a0.x, r0.x
    dp4 oPos.x, v0, c0[a0.x]
    dp4 oPos.y, v0, c1[a0.x]
    dp4 oPos.z, v0, c2[a0.x]
    dp4 oPos.w, v0, c3[a0.x]
    mad r0.x, v1.x, c144.z, c144.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mad r0.y, v1.x, c144.z, -r0.y
    add r0.y, r0.y, c144.w
    mova a0.x, r0.y
    dp4 oT0.y, v0, c96[a0.x]
    mova a0.x, r0.x
    dp4 oT0.x, v0, c96[a0.x]

// approximately 18 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchPosition3dTexTG[] =
{
      0,   2, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,  64, 
    205, 204, 140,  63,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0,   0, 144, 144,   0, 
      0, 160,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    144,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 192, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      2, 192,   0,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   4, 192,   0,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   8, 192, 
      0,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      4,   0,   0,   4,   0,   0, 
      1, 128,   1,   0,   0, 144, 
    144,   0, 170, 160, 144,   0, 
      0, 160,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      4,   0,   0,   4,   0,   0, 
      2, 128,   1,   0,   0, 144, 
    144,   0, 170, 160,   0,   0, 
     85, 129,   2,   0,   0,   3, 
      0,   0,   2, 128,   0,   0, 
     85, 128, 144,   0, 255, 160, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,  85, 128, 
      9,   0,   0,   4,   0,   0, 
      2, 224,   0,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
      0, 128,   9,   0,   0,   4, 
      0,   0,   1, 224,   0,   0, 
    228, 144,  96,  32, 228, 160, 
      0,   0,   0, 176, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_2_0
    def c144, 255.009995, 510.019989, 0.100000001, 4
    def c145, 1.10000002, 0, 0, 0
    dcl_color v0
    dcl_position v1
    mad r0.xy, v0.z, c144, c144.z
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mad r0.z, v0.z, c144.y, -r0.w
    add r0.z, r0.z, c145.x
    mova a0.x, r0.z
    dp4 oT0.y, v1, c96[a0.x]
    mul r0.x, r0.x, c144.w
    mova a0.x, r0.y
    dp4 oT0.x, v1, c96[a0.x]
    mova a0.x, r0.x
    dp4 oPos.x, v1, c0[a0.x]
    dp4 oPos.y, v1, c1[a0.x]
    dp4 oPos.z, v1, c2[a0.x]
    dp4 oPos.w, v1, c3[a0.x]
    mov oD0, v0

// approximately 16 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchPosition3dTexTGEAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    143,   2, 127,  67, 143,   2, 
    255,  67, 205, 204, 204,  61, 
      0,   0, 128,  64,  81,   0, 
      0,   5, 145,   0,  15, 160, 
    205, 204, 140,  63,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 170, 144, 144,   0, 
    228, 160, 144,   0, 170, 160, 
     19,   0,   0,   2,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      0,   0, 238, 129,   4,   0, 
      0,   4,   0,   0,   4, 128, 
      0,   0, 170, 144, 144,   0, 
     85, 160,   0,   0, 255, 129, 
      2,   0,   0,   3,   0,   0, 
      4, 128,   0,   0, 170, 128, 
    145,   0,   0, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0, 170, 128,   9,   0, 
      0,   4,   0,   0,   2, 224, 
      1,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    144,   0, 255, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   0,   0,   1, 224, 
      1,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   0,   0, 
      1, 192,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   2, 192,   1,   0, 
    228, 144,   1,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   4, 192, 
      1,   0, 228, 144,   2,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      8, 192,   1,   0, 228, 144, 
      3,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 208,   0,   0, 
    228, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     96
//

    vs_2_0
    def c192, 0.100000001, 4, 2.0999999, 1.10000002
    def c193, 3.0999999, 0, 0, 0
    dcl_position v0
    dcl_color1 v1
    add r0.x, v1.x, c192.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c192.y
    mova a0.x, r0.x
    dp4 oPos.x, v0, c0[a0.x]
    dp4 oPos.y, v0, c1[a0.x]
    dp4 oPos.z, v0, c2[a0.x]
    dp4 oPos.w, v0, c3[a0.x]
    mad r0.xyz, v1.x, c192.y, c192.zxww
    frc r1.xyz, r0
    add r0.xyz, r0, -r1
    mad r0.w, v1.x, c192.y, -r1.x
    add r0.w, r0.w, c193.x
    mova a0.x, r0.w
    dp4 oT2.y, v0, c96[a0.x]
    mova a0.x, r0.x
    dp4 oT2.x, v0, c96[a0.x]
    mova a0.xy, r0.yzzw
    mov oT1, c96[a0.y]
    mov oT0, c96[a0.x]

// approximately 21 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchPosition3dTexTGCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  96,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64, 102, 102,   6,  64, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 193,   0,  15, 160, 
    102, 102,  70,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0,   0, 144, 192,   0, 
      0, 160,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    192,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 192, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      2, 192,   0,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   4, 192,   0,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   8, 192, 
      0,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   1,   0,   0, 144, 
    192,   0,  85, 160, 192,   0, 
    242, 160,  19,   0,   0,   2, 
      1,   0,   7, 128,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   7, 128,   0,   0, 
    228, 128,   1,   0, 228, 129, 
      4,   0,   0,   4,   0,   0, 
      8, 128,   1,   0,   0, 144, 
    192,   0,  85, 160,   1,   0, 
      0, 129,   2,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128, 193,   0,   0, 160, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0, 255, 128, 
      9,   0,   0,   4,   2,   0, 
      2, 224,   0,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
      0, 128,   9,   0,   0,   4, 
      2,   0,   1, 224,   0,   0, 
    228, 144,  96,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 233, 128,   1,   0, 
      0,   3,   1,   0,  15, 224, 
     96,  32, 228, 160,   0,   0, 
     85, 176,   1,   0,   0,   3, 
      0,   0,  15, 224,  96,  32, 
    228, 160,   0,   0,   0, 176, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     96
//

    vs_2_0
    def c192, 255.009995, 1020.03998, 4, 3.0999999
    def c193, 0.100000001, 2.0999999, 1.10000002, 0
    dcl_color v0
    dcl_position v1
    mov r0.xy, c192
    mad r0, v0.z, r0.xyyy, c193.xyxz
    frc r1, r0
    add r0, r0, -r1
    mad r1.x, v0.z, c192.y, -r1.y
    add r1.x, r1.x, c192.w
    mova a0.x, r1.x
    dp4 oT2.y, v1, c96[a0.x]
    mul r0.x, r0.x, c192.z
    mova a0.x, r0.x
    dp4 oPos.x, v1, c0[a0.x]
    dp4 oPos.y, v1, c1[a0.x]
    dp4 oPos.z, v1, c2[a0.x]
    dp4 oPos.w, v1, c3[a0.x]
    mova a0.x, r0.y
    dp4 oT2.x, v1, c96[a0.x]
    mov oD0, v0
    mova a0.xy, r0.zwzw
    mov oT1, c96[a0.y]
    mov oT0, c96[a0.x]

// approximately 20 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchPosition3dTexTGCxformEAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  96,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
    143,   2, 127,  67, 143,   2, 
    127,  68,   0,   0, 128,  64, 
    102, 102,  70,  64,  81,   0, 
      0,   5, 193,   0,  15, 160, 
    205, 204, 204,  61, 102, 102, 
      6,  64, 205, 204, 140,  63, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   1,   0, 
      0,   2,   0,   0,   3, 128, 
    192,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 170, 144,   0,   0, 
     84, 128, 193,   0, 132, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,   1, 128, 
      0,   0, 170, 144, 192,   0, 
     85, 160,   1,   0,  85, 129, 
      2,   0,   0,   3,   1,   0, 
      1, 128,   1,   0,   0, 128, 
    192,   0, 255, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      1,   0,   0, 128,   9,   0, 
      0,   4,   2,   0,   2, 224, 
      1,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    192,   0, 170, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 192, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      2, 192,   1,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   4, 192,   1,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   8, 192, 
      1,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,  85, 128, 
      9,   0,   0,   4,   2,   0, 
      1, 224,   1,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 208,   0,   0, 
    228, 144,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    238, 128,   1,   0,   0,   3, 
      1,   0,  15, 224,  96,  32, 
    228, 160,   0,   0,  85, 176, 
      1,   0,   0,   3,   0,   0, 
     15, 224,  96,  32, 228, 160, 
      0,   0,   0, 176, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//

    vs_2_0
    def c96, 0.100000001, 4, 0, 0
    dcl_color v0
    dcl_position v1
    dcl_color2 v2
    add r0.x, v2.x, c96.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c96.y
    mova a0.x, r0.x
    dp4 oPos.x, v1, c0[a0.x]
    dp4 oPos.y, v1, c1[a0.x]
    dp4 oPos.z, v1, c2[a0.x]
    dp4 oPos.w, v1, c3[a0.x]
    mov oD0, v0

// approximately 10 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchPosition3dVertex[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 109, 117, 110, 105, 
    102, 111, 114, 109, 115,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,  24,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      2,   0,  15, 144,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      2,   0,   0, 144,  96,   0, 
      0, 160,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
     96,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 192, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      2, 192,   1,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   4, 192,   1,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   8, 192, 
      1,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 208,   0,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//

    vs_2_0
    def c96, 255.009995, 0.100000001, 4, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    mad r0.x, v1.z, c96.x, c96.y
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c96.z
    mova a0.x, r0.x
    dp4 oPos.x, v2, c0[a0.x]
    dp4 oPos.y, v2, c1[a0.x]
    dp4 oPos.z, v2, c2[a0.x]
    dp4 oPos.w, v2, c3[a0.x]
    mov oD0, v0
    mov oD1, v1

// approximately 11 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchPosition3dVertexEAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 109, 117, 110, 105, 
    102, 111, 114, 109, 115,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,  24,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    143,   2, 127,  67, 205, 204, 
    204,  61,   0,   0, 128,  64, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      1,   0, 170, 144,  96,   0, 
      0, 160,  96,   0,  85, 160, 
     19,   0,   0,   2,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0,  85, 129,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 128,  96,   0, 
    170, 160,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
      0, 128,   9,   0,   0,   4, 
      0,   0,   1, 192,   2,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   2, 192, 
      2,   0, 228, 144,   1,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      4, 192,   2,   0, 228, 144, 
      2,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   8, 192,   2,   0, 
    228, 144,   3,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  15, 208, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 208, 
      1,   0, 228, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_2_0
    def c144, 0.100000001, 4, 2, 1.10000002
    dcl_color v0
    dcl_position v1
    dcl_color2 v2
    add r0.x, v2.x, c144.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c144.y
    mova a0.x, r0.x
    dp4 oPos.x, v1, c0[a0.x]
    dp4 oPos.y, v1, c1[a0.x]
    dp4 oPos.z, v1, c2[a0.x]
    dp4 oPos.w, v1, c3[a0.x]
    mov oD0, v0
    mad r0.xy, v2.x, c144.z, c144.xwzw
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mova a0.xy, r0
    mov oT1, c96[a0.y]
    mov oT0, c96[a0.x]

// approximately 16 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchPosition3dVertexCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,  64, 
    205, 204, 140,  63,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      2,   0,  15, 144,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      2,   0,   0, 144, 144,   0, 
      0, 160,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    144,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 192, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      2, 192,   1,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   4, 192,   1,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   8, 192, 
      1,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 208,   0,   0, 228, 144, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0,   0, 144, 
    144,   0, 170, 160, 144,   0, 
    236, 160,  19,   0,   0,   2, 
      0,   0,  12, 128,   0,   0, 
     68, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    228, 128,   0,   0, 238, 129, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 228, 128, 
      1,   0,   0,   3,   1,   0, 
     15, 224,  96,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   3,   0,   0,  15, 224, 
     96,  32, 228, 160,   0,   0, 
      0, 176, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_2_0
    def c144, 255.009995, 510.019989, 0.100000001, 1.10000002
    def c145, 4, 0, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    mad r0.xyz, v1.z, c144.xyyw, c144.zzww
    frc r1.xyz, r0
    add r0.xyz, r0, -r1
    mul r0.x, r0.x, c145.x
    mova a0.x, r0.x
    dp4 oPos.x, v2, c0[a0.x]
    dp4 oPos.y, v2, c1[a0.x]
    dp4 oPos.z, v2, c2[a0.x]
    dp4 oPos.w, v2, c3[a0.x]
    mov oD0, v0
    mov oD1, v1
    mova a0.xy, r0.yzzw
    mov oT1, c96[a0.y]
    mov oT0, c96[a0.x]

// approximately 14 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchPosition3dVertexCxformEAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    143,   2, 127,  67, 143,   2, 
    255,  67, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 145,   0,  15, 160, 
      0,   0, 128,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      1,   0, 170, 144, 144,   0, 
    212, 160, 144,   0, 250, 160, 
     19,   0,   0,   2,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 128, 145,   0, 
      0, 160,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
      0, 128,   9,   0,   0,   4, 
      0,   0,   1, 192,   2,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   2, 192, 
      2,   0, 228, 144,   1,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      4, 192,   2,   0, 228, 144, 
      2,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   8, 192,   2,   0, 
    228, 144,   3,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  15, 208, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 208, 
      1,   0, 228, 144,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 233, 128,   1,   0, 
      0,   3,   1,   0,  15, 224, 
     96,  32, 228, 160,   0,   0, 
     85, 176,   1,   0,   0,   3, 
      0,   0,  15, 224,  96,  32, 
    228, 160,   0,   0,   0, 176, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     96
//

    vs_2_0
    def c192, 255.009995, 1020.03998, 0.100000001, 4
    def c193, 1.10000002, 2.0999999, 3.0999999, 0
    dcl_color v0
    dcl_position v1
    mad r0.xy, v0.z, c192, c192.z
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mad r0.z, v0.z, c192.y, -r0.w
    add r1.xyz, r0.z, c193
    mul r0.x, r0.x, c192.w
    mova a0.x, r0.y
    dp4 oT0.x, v1, c96[a0.x]
    mova a0.x, r0.x
    dp4 oPos.x, v1, c0[a0.x]
    dp4 oPos.y, v1, c1[a0.x]
    dp4 oPos.z, v1, c2[a0.x]
    dp4 oPos.w, v1, c3[a0.x]
    mova a0.x, r1.x
    dp4 oT0.y, v1, c96[a0.x]
    mova a0.xy, r1.yzzw
    dp4 oT1.y, v1, c96[a0.y]
    dp4 oT1.x, v1, c96[a0.x]
    mov oD0, v0

// approximately 19 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchPosition3dTexTGTexTG[] =
{
      0,   2, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  96,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
    143,   2, 127,  67, 143,   2, 
    127,  68, 205, 204, 204,  61, 
      0,   0, 128,  64,  81,   0, 
      0,   5, 193,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
      6,  64, 102, 102,  70,  64, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 170, 144, 192,   0, 
    228, 160, 192,   0, 170, 160, 
     19,   0,   0,   2,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      0,   0, 238, 129,   4,   0, 
      0,   4,   0,   0,   4, 128, 
      0,   0, 170, 144, 192,   0, 
     85, 160,   0,   0, 255, 129, 
      2,   0,   0,   3,   1,   0, 
      7, 128,   0,   0, 170, 128, 
    193,   0, 228, 160,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 128, 192,   0, 
    255, 160,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
     85, 128,   9,   0,   0,   4, 
      0,   0,   1, 224,   1,   0, 
    228, 144,  96,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 192, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      2, 192,   1,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   4, 192,   1,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   8, 192, 
      1,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   1,   0,   0, 128, 
      9,   0,   0,   4,   0,   0, 
      2, 224,   1,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   1,   0, 
    233, 128,   9,   0,   0,   4, 
      1,   0,   2, 224,   1,   0, 
    228, 144,  96,  32, 228, 160, 
      0,   0,  85, 176,   9,   0, 
      0,   4,   1,   0,   1, 224, 
      1,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 208,   0,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96    144
//

    vs_2_0
    def c240, 255.009995, 1530.05994, 4, 0
    def c241, 0.100000001, 2.0999999, 1.10000002, 0
    def c242, 3.0999999, 4.0999999, 5.0999999, 0
    dcl_color v0
    dcl_position v1
    mov r0.xy, c240
    mad r0, v0.z, r0.xyyy, c241.xyxz
    frc r1, r0
    add r0, r0, -r1
    mad r1.x, v0.z, c240.y, -r1.y
    add r1.xyz, r1.x, c242
    mul r0.x, r0.x, c240.z
    mova a0.x, r0.x
    dp4 oPos.x, v1, c0[a0.x]
    dp4 oPos.y, v1, c1[a0.x]
    dp4 oPos.z, v1, c2[a0.x]
    dp4 oPos.w, v1, c3[a0.x]
    mova a0.x, r0.y
    dp4 oT2.x, v1, c96[a0.x]
    mova a0.x, r1.x
    dp4 oT2.y, v1, c96[a0.x]
    mova a0.xy, r1.yzzw
    dp4 oT3.y, v1, c96[a0.y]
    dp4 oT3.x, v1, c96[a0.x]
    mov oD0, v0
    mova a0.xy, r0.zwzw
    mov oT1, c96[a0.y]
    mov oT0, c96[a0.x]

// approximately 23 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchPosition3dTexTGTexTGCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0, 144,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 240,   0,  15, 160, 
    143,   2, 127,  67, 235,  65, 
    191,  68,   0,   0, 128,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 241,   0,  15, 160, 
    205, 204, 204,  61, 102, 102, 
      6,  64, 205, 204, 140,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 242,   0,  15, 160, 
    102, 102,  70,  64,  51,  51, 
    131,  64,  51,  51, 163,  64, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,   1,   0, 
      0,   2,   0,   0,   3, 128, 
    240,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 170, 144,   0,   0, 
     84, 128, 241,   0, 132, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,   1, 128, 
      0,   0, 170, 144, 240,   0, 
     85, 160,   1,   0,  85, 129, 
      2,   0,   0,   3,   1,   0, 
      7, 128,   1,   0,   0, 128, 
    242,   0, 228, 160,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 128, 240,   0, 
    170, 160,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
      0, 128,   9,   0,   0,   4, 
      0,   0,   1, 192,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   2, 192, 
      1,   0, 228, 144,   1,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      4, 192,   1,   0, 228, 144, 
      2,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   8, 192,   1,   0, 
    228, 144,   3,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   2,   0,   1, 224, 
      1,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   1,   0,   0, 128, 
      9,   0,   0,   4,   2,   0, 
      2, 224,   1,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   1,   0, 
    233, 128,   9,   0,   0,   4, 
      3,   0,   2, 224,   1,   0, 
    228, 144,  96,  32, 228, 160, 
      0,   0,  85, 176,   9,   0, 
      0,   4,   3,   0,   1, 224, 
      1,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 208,   0,   0, 228, 144, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 238, 128, 
      1,   0,   0,   3,   1,   0, 
     15, 224,  96,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   3,   0,   0,  15, 224, 
     96,  32, 228, 160,   0,   0, 
      0, 176, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_2_0
    def c144, 255.009995, 510.019989, 0.100000001, 4
    def c145, 1.10000002, 0, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    mad r0.xy, v1.z, c144, c144.z
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mad r0.z, v1.z, c144.y, -r0.w
    add r0.z, r0.z, c145.x
    mova a0.x, r0.z
    dp4 oT0.y, v2, c96[a0.x]
    mul r0.x, r0.x, c144.w
    mova a0.x, r0.y
    dp4 oT0.x, v2, c96[a0.x]
    mova a0.x, r0.x
    dp4 oPos.x, v2, c0[a0.x]
    dp4 oPos.y, v2, c1[a0.x]
    dp4 oPos.z, v2, c2[a0.x]
    dp4 oPos.w, v2, c3[a0.x]
    mov oD0, v0
    mov oD1, v1

// approximately 17 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchPosition3dTexTGVertex[] =
{
      0,   2, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    143,   2, 127,  67, 143,   2, 
    255,  67, 205, 204, 204,  61, 
      0,   0, 128,  64,  81,   0, 
      0,   5, 145,   0,  15, 160, 
    205, 204, 140,  63,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      1,   0, 170, 144, 144,   0, 
    228, 160, 144,   0, 170, 160, 
     19,   0,   0,   2,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      0,   0, 238, 129,   4,   0, 
      0,   4,   0,   0,   4, 128, 
      1,   0, 170, 144, 144,   0, 
     85, 160,   0,   0, 255, 129, 
      2,   0,   0,   3,   0,   0, 
      4, 128,   0,   0, 170, 128, 
    145,   0,   0, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0, 170, 128,   9,   0, 
      0,   4,   0,   0,   2, 224, 
      2,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    144,   0, 255, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   0,   0,   1, 224, 
      2,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   0,   0, 
      1, 192,   2,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   2, 192,   2,   0, 
    228, 144,   1,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   4, 192, 
      2,   0, 228, 144,   2,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      8, 192,   2,   0, 228, 144, 
      3,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 208,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  15, 208,   1,   0, 
    228, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     96
//

    vs_2_0
    def c192, 255.009995, 1020.03998, 4, 3.0999999
    def c193, 0.100000001, 2.0999999, 1.10000002, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    mov r0.xy, c192
    mad r0, v1.z, r0.xyyy, c193.xyxz
    frc r1, r0
    add r0, r0, -r1
    mad r1.x, v1.z, c192.y, -r1.y
    add r1.x, r1.x, c192.w
    mova a0.x, r1.x
    dp4 oT2.y, v2, c96[a0.x]
    mul r0.x, r0.x, c192.z
    mova a0.x, r0.x
    dp4 oPos.x, v2, c0[a0.x]
    dp4 oPos.y, v2, c1[a0.x]
    dp4 oPos.z, v2, c2[a0.x]
    dp4 oPos.w, v2, c3[a0.x]
    mova a0.x, r0.y
    dp4 oT2.x, v2, c96[a0.x]
    mov oD0, v0
    mov oD1, v1
    mova a0.xy, r0.zwzw
    mov oT1, c96[a0.y]
    mov oT0, c96[a0.x]

// approximately 21 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchPosition3dTexTGVertexCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  96,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
    143,   2, 127,  67, 143,   2, 
    127,  68,   0,   0, 128,  64, 
    102, 102,  70,  64,  81,   0, 
      0,   5, 193,   0,  15, 160, 
    205, 204, 204,  61, 102, 102, 
      6,  64, 205, 204, 140,  63, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,   1,   0, 
      0,   2,   0,   0,   3, 128, 
    192,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0, 170, 144,   0,   0, 
     84, 128, 193,   0, 132, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,   1, 128, 
      1,   0, 170, 144, 192,   0, 
     85, 160,   1,   0,  85, 129, 
      2,   0,   0,   3,   1,   0, 
      1, 128,   1,   0,   0, 128, 
    192,   0, 255, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      1,   0,   0, 128,   9,   0, 
      0,   4,   2,   0,   2, 224, 
      2,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    192,   0, 170, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 192, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      2, 192,   2,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   4, 192,   2,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   8, 192, 
      2,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,  85, 128, 
      9,   0,   0,   4,   2,   0, 
      1, 224,   2,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 208,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  15, 208,   1,   0, 
    228, 144,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    238, 128,   1,   0,   0,   3, 
      1,   0,  15, 224,  96,  32, 
    228, 160,   0,   0,  85, 176, 
      1,   0,   0,   3,   0,   0, 
     15, 224,  96,  32, 228, 160, 
      0,   0,   0, 176, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//

    vs_2_0
    def c2, 0, 1, 0, 0
    dcl_position v0
    dp4 oPos.x, v0, c0
    dp4 oPos.y, v0, c1
    mov oPos.zw, c2.xyxy

// approximately 3 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VSolid[] =
{
      0,   2, 254, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    109, 118, 112,   0,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,   9,   0,   0,   3, 
      0,   0,   1, 192,   0,   0, 
    228, 144,   0,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 192,   0,   0, 228, 144, 
      1,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  12, 192, 
      2,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxmul;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxmul        c0       1
//

    ps_2_0
    mov oC0, c0

// approximately 1 instruction slot used
#endif

extern const BYTE pBinary_D3D9SM20_FSolid[] =
{
      0,   2, 255, 255, 254, 255, 
     34,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  79,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     72,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  56,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    112, 115,  95,  50,  95,  48, 
      0,  77, 105,  99, 114, 111, 
    115, 111, 102, 116,  32,  40, 
     82,  41,  32,  72,  76,  83, 
     76,  32,  83, 104,  97, 100, 
    101, 114,  32,  67, 111, 109, 
    112, 105, 108, 101, 114,  32, 
     57,  46,  51,  48,  46,  57, 
     50,  48,  48,  46,  49,  54, 
     51,  56,  52,   0, 171, 171, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxmul;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxmul        c0       1
//

    ps_2_0
    mul r0.xyz, c0.w, c0
    mov r0.w, c0.w
    mov oC0, r0

// approximately 3 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FSolidMul[] =
{
      0,   2, 255, 255, 254, 255, 
     34,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  79,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     72,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  56,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    112, 115,  95,  50,  95,  48, 
      0,  77, 105,  99, 114, 111, 
    115, 111, 102, 116,  32,  40, 
     82,  41,  32,  72,  76,  83, 
     76,  32,  83, 104,  97, 100, 
    101, 114,  32,  67, 111, 109, 
    112, 105, 108, 101, 114,  32, 
     57,  46,  51,  48,  46,  57, 
     50,  48,  48,  46,  49,  54, 
     51,  56,  52,   0, 171, 171, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 255, 160, 
      0,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxmul;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxmul        c0       1
//

    ps_2_0
    mov r0, c0.w
    mov oC0, r0

// approximately 2 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_FSolidInv[] =
{
      0,   2, 255, 255, 254, 255, 
     34,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  79,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     72,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  56,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    112, 115,  95,  50,  95,  48, 
      0,  77, 105,  99, 114, 111, 
    115, 111, 102, 116,  32,  40, 
     82,  41,  32,  72,  76,  83, 
     76,  32,  83, 104,  97, 100, 
    101, 114,  32,  67, 111, 109, 
    112, 105, 108, 101, 114,  32, 
     57,  46,  51,  48,  46,  57, 
     50,  48,  48,  46,  49,  54, 
     51,  56,  52,   0, 171, 171, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   0,   0, 255, 160, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//

    vs_2_0
    def c4, 0, 1, 0, 0
    dcl_color v0
    dcl_texcoord v1
    dcl_position v2
    dp4 oPos.x, v2, c2
    dp4 oPos.y, v2, c3
    mov r0, c1
    mad oD0, v0, r0, c0
    mov oT0.xy, v1
    mov oPos.zw, c4.xyxy

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VText[] =
{
      0,   2, 254, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   2, 254, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 118,   0,   0,   0, 
      2,   0,   2,   0,   2,   0, 
     10,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 109, 118, 
    112,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     15, 144,   9,   0,   0,   3, 
      0,   0,   1, 192,   2,   0, 
    228, 144,   2,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 192,   2,   0, 228, 144, 
      3,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 128, 
      1,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,  15, 208, 
      0,   0, 228, 144,   0,   0, 
    228, 128,   0,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
      3, 224,   1,   0, 228, 144, 
      1,   0,   0,   2,   0,   0, 
     12, 192,   4,   0,  68, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl_pp t0.xy
    dcl v0
    dcl_2d s0
    texld r0, t0, s0
    mul r0.w, r0.w, v0.w
    mov r0.xyz, v0
    mov oC0, r0

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FText[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   0,   7, 128, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl_pp t0.xy
    dcl v0
    dcl_2d s0
    texld r0, t0, s0
    mul r0.w, r0.w, v0.w
    mul r0.xyz, r0.w, v0
    mov oC0, r0

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTextMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    dcl_pp t0.xy
    dcl v0
    dcl_2d s0
    texld r0, t0, s0
    mul r0, r0.w, v0.w
    mov oC0, r0

// approximately 3 instruction slots used (1 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTextInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//

    vs_2_0
    def c2, 0, 1, 0, 0
    dcl_texcoord v0
    dcl_position v1
    dp4 oPos.x, v1, c0
    dp4 oPos.y, v1, c1
    mov oT0.xy, v0
    mov oPos.zw, c2.xyxy

// approximately 4 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VTexUV[] =
{
      0,   2, 254, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    109, 118, 112,   0,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,   9,   0,   0,   3, 
      0,   0,   1, 192,   1,   0, 
    228, 144,   0,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 192,   1,   0, 228, 144, 
      1,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,   3, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   0,   0,  12, 192, 
      2,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//

    vs_2_0
    def c4, 0, 1, 0, 0
    dcl_texcoord v0
    dcl_position v1
    dp4 oPos.x, v1, c2
    dp4 oPos.y, v1, c3
    mov oT0, c0
    mov oT1, c1
    mov oT2.xy, v0
    mov oPos.zw, c4.xyxy

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VTexUVCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   2, 254, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 118,   0,   0,   0, 
      2,   0,   2,   0,   2,   0, 
     10,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 109, 118, 
    112,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,   9,   0,   0,   3, 
      0,   0,   1, 192,   1,   0, 
    228, 144,   2,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 192,   1,   0, 228, 144, 
      3,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 160,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 160,   1,   0, 
      0,   2,   2,   0,   3, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   0,   0,  12, 192, 
      4,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//

    vs_2_0
    dcl_position v0
    dp4 oPos.x, v0, c0
    dp4 oPos.y, v0, c1
    dp4 oPos.z, v0, c2
    dp4 oPos.w, v0, c3

// approximately 4 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VPosition3dSolid[] =
{
      0,   2, 254, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    109, 118, 112,   0,   3,   0, 
      3,   0,   4,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,   9,   0,   0,   3, 
      0,   0,   1, 192,   0,   0, 
    228, 144,   0,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 192,   0,   0, 228, 144, 
      1,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   4, 192, 
      0,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   8, 192,   0,   0, 
    228, 144,   3,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//

    vs_2_0
    dcl_color v0
    dcl_texcoord v1
    dcl_position v2
    dp4 oPos.x, v2, c2
    dp4 oPos.y, v2, c3
    dp4 oPos.z, v2, c4
    dp4 oPos.w, v2, c5
    mov r0, c1
    mad oD0, v0, r0, c0
    mov oT0.xy, v1

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VPosition3dText[] =
{
      0,   2, 254, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   2, 254, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 118,   0,   0,   0, 
      2,   0,   2,   0,   4,   0, 
     10,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 109, 118, 
    112,   0, 171, 171,   3,   0, 
      3,   0,   4,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     15, 144,   9,   0,   0,   3, 
      0,   0,   1, 192,   2,   0, 
    228, 144,   2,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 192,   2,   0, 228, 144, 
      3,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   4, 192, 
      2,   0, 228, 144,   4,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   8, 192,   2,   0, 
    228, 144,   5,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   1,   0, 228, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 208,   0,   0, 228, 144, 
      0,   0, 228, 128,   0,   0, 
    228, 160,   1,   0,   0,   2, 
      0,   0,   3, 224,   1,   0, 
    228, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//

    vs_2_0
    dcl_texcoord v0
    dcl_position v1
    dp4 oPos.x, v1, c0
    dp4 oPos.y, v1, c1
    dp4 oPos.z, v1, c2
    dp4 oPos.w, v1, c3
    mov oT0.xy, v0

// approximately 5 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VPosition3dTexUV[] =
{
      0,   2, 254, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    109, 118, 112,   0,   3,   0, 
      3,   0,   4,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,   9,   0,   0,   3, 
      0,   0,   1, 192,   1,   0, 
    228, 144,   0,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 192,   1,   0, 228, 144, 
      1,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   4, 192, 
      1,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   8, 192,   1,   0, 
    228, 144,   3,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
      3, 224,   0,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//

    vs_2_0
    dcl_texcoord v0
    dcl_position v1
    dp4 oPos.x, v1, c2
    dp4 oPos.y, v1, c3
    dp4 oPos.z, v1, c4
    dp4 oPos.w, v1, c5
    mov oT0, c0
    mov oT1, c1
    mov oT2.xy, v0

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VPosition3dTexUVCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   2, 254, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 118,   0,   0,   0, 
      2,   0,   2,   0,   4,   0, 
     10,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 109, 118, 
    112,   0, 171, 171,   3,   0, 
      3,   0,   4,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,   9,   0,   0,   3, 
      0,   0,   1, 192,   1,   0, 
    228, 144,   2,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 192,   1,   0, 228, 144, 
      3,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   4, 192, 
      1,   0, 228, 144,   4,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   8, 192,   1,   0, 
    228, 144,   5,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     15, 224,   1,   0, 228, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 224,   0,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      48
//

    vs_2_0
    def c48, 2, 0.100000001, 1.10000002, 0
    def c49, 0, 1, 0, 0
    dcl_position v0
    dcl_color1 v1
    mad r0.x, v1.x, c48.x, c48.y
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mad r0.y, v1.x, c48.x, -r0.y
    add r0.y, r0.y, c48.z
    mova a0.x, r0.y
    dp4 oPos.y, v0, c0[a0.x]
    mova a0.x, r0.x
    dp4 oPos.x, v0, c0[a0.x]
    mov oPos.zw, c49.xyxy

// approximately 10 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchSolid[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     48,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  48,   0,  15, 160, 
      0,   0,   0,  64, 205, 204, 
    204,  61, 205, 204, 140,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5,  49,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      1,   0,   0, 144,  48,   0, 
      0, 160,  48,   0,  85, 160, 
     19,   0,   0,   2,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0,  85, 129,   4,   0, 
      0,   4,   0,   0,   2, 128, 
      1,   0,   0, 144,  48,   0, 
      0, 160,   0,   0,  85, 129, 
      2,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
     48,   0, 170, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   0,   0,   2, 192, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   0,   0, 
      1, 192,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  12, 192,  49,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_2_0
    def c96, 3.0999999, 0, 1, 0
    def c97, 4, 2.0999999, 1.10000002, 0.100000001
    dcl_color v0
    dcl_texcoord v1
    dcl_position v2
    dcl_color2 v3
    mad r0.xyz, v3.x, c97.x, c97.yzww
    frc r1.xyz, r0
    add r0.xyz, r0, -r1
    mad r0.w, v3.x, c97.x, -r1.x
    add r0.w, r0.w, c96.x
    mova a0.x, r0.w
    dp4 oPos.y, v2, c0[a0.x]
    mova a0.x, r0.x
    dp4 oPos.x, v2, c0[a0.x]
    mova a0.xy, r0.yzzw
    mov r0, c0[a0.x]
    mad oD0, v0, r0, c0[a0.y]
    mov oT0.xy, v1
    mov oPos.zw, c96.xyyz

// approximately 14 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchText[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    102, 102,  70,  64,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5,  97,   0,  15, 160, 
      0,   0, 128,  64, 102, 102, 
      6,  64, 205, 204, 140,  63, 
    205, 204, 204,  61,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      3,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      3,   0,   0, 144,  97,   0, 
      0, 160,  97,   0, 249, 160, 
     19,   0,   0,   2,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      3,   0,   0, 144,  97,   0, 
      0, 160,   1,   0,   0, 129, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
     96,   0,   0, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0, 255, 128,   9,   0, 
      0,   4,   0,   0,   2, 192, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   0,   0, 
      1, 192,   2,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    233, 128,   1,   0,   0,   3, 
      0,   0,  15, 128,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      4,   0,   0,   5,   0,   0, 
     15, 208,   0,   0, 228, 144, 
      0,   0, 228, 128,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      1,   0,   0,   2,   0,   0, 
      3, 224,   1,   0, 228, 144, 
      1,   0,   0,   2,   0,   0, 
     12, 192,  96,   0, 148, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      48
//

    vs_2_0
    def c48, 2, 0.100000001, 1.10000002, 0
    def c49, 0, 1, 0, 0
    dcl_texcoord v0
    dcl_position v1
    dcl_color1 v2
    mad r0.x, v2.x, c48.x, c48.y
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mad r0.y, v2.x, c48.x, -r0.y
    add r0.y, r0.y, c48.z
    mova a0.x, r0.y
    dp4 oPos.y, v1, c0[a0.x]
    mova a0.x, r0.x
    dp4 oPos.x, v1, c0[a0.x]
    mov oT0.xy, v0
    mov oPos.zw, c49.xyxy

// approximately 11 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchTexUV[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     48,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  48,   0,  15, 160, 
      0,   0,   0,  64, 205, 204, 
    204,  61, 205, 204, 140,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5,  49,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      2,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      2,   0,   0, 144,  48,   0, 
      0, 160,  48,   0,  85, 160, 
     19,   0,   0,   2,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0,  85, 129,   4,   0, 
      0,   4,   0,   0,   2, 128, 
      2,   0,   0, 144,  48,   0, 
      0, 160,   0,   0,  85, 129, 
      2,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
     48,   0, 170, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   0,   0,   2, 192, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   0,   0, 
      1, 192,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,   3, 224,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,  12, 192,  49,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_2_0
    def c96, 4, 2.0999999, 0.100000001, 1.10000002
    def c97, 3.0999999, 0, 1, 0
    dcl_texcoord v0
    dcl_position v1
    dcl_color1 v2
    mad r0.xyz, v2.x, c96.x, c96.yzww
    frc r1.xyz, r0
    add r0.xyz, r0, -r1
    mad r0.w, v2.x, c96.x, -r1.x
    add r0.w, r0.w, c97.x
    mova a0.x, r0.w
    dp4 oPos.y, v1, c0[a0.x]
    mova a0.x, r0.x
    dp4 oPos.x, v1, c0[a0.x]
    mova a0.xy, r0.yzzw
    mov oT1, c0[a0.y]
    mov oT0, c0[a0.x]
    mov oT2.xy, v0
    mov oPos.zw, c97.xyyz

// approximately 14 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchTexUVCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
      0,   0, 128,  64, 102, 102, 
      6,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5,  97,   0,  15, 160, 
    102, 102,  70,  64,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      2,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      2,   0,   0, 144,  96,   0, 
      0, 160,  96,   0, 249, 160, 
     19,   0,   0,   2,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      2,   0,   0, 144,  96,   0, 
      0, 160,   1,   0,   0, 129, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
     97,   0,   0, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0, 255, 128,   9,   0, 
      0,   4,   0,   0,   2, 192, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   0,   0, 
      1, 192,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    233, 128,   1,   0,   0,   3, 
      1,   0,  15, 224,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      1,   0,   0,   3,   0,   0, 
     15, 224,   0,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   2,   0,   3, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   0,   0,  12, 192, 
     97,   0, 148, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//

    vs_2_0
    def c96, 0.100000001, 4, 0, 0
    dcl_position v0
    dcl_color1 v1
    add r0.x, v1.x, c96.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c96.y
    mova a0.x, r0.x
    dp4 oPos.x, v0, c0[a0.x]
    dp4 oPos.y, v0, c1[a0.x]
    dp4 oPos.z, v0, c2[a0.x]
    dp4 oPos.w, v0, c3[a0.x]

// approximately 9 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchPosition3dSolid[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 109, 117, 110, 105, 
    102, 111, 114, 109, 115,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,  24,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0,   0, 144,  96,   0, 
      0, 160,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
     96,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 192, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      2, 192,   0,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   4, 192,   0,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   8, 192, 
      0,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_2_0
    def c144, 0.100000001, 4, 2, 1.10000002
    dcl_color v0
    dcl_texcoord v1
    dcl_position v2
    dcl_color2 v3
    add r0.x, v3.x, c144.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c144.y
    mova a0.x, r0.x
    dp4 oPos.x, v2, c0[a0.x]
    dp4 oPos.y, v2, c1[a0.x]
    dp4 oPos.z, v2, c2[a0.x]
    dp4 oPos.w, v2, c3[a0.x]
    mad r0.xy, v3.x, c144.z, c144.wxzw
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mova a0.xy, r0
    mov r0, c96[a0.x]
    mad oD0, v0, r0, c96[a0.y]
    mov oT0.xy, v1

// approximately 16 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchPosition3dText[] =
{
      0,   2, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,  64, 
    205, 204, 140,  63,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      3,   0,  15, 144,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      3,   0,   0, 144, 144,   0, 
      0, 160,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    144,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 192, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      2, 192,   2,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   4, 192,   2,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   8, 192, 
      2,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0,   0, 144, 
    144,   0, 170, 160, 144,   0, 
    227, 160,  19,   0,   0,   2, 
      0,   0,  12, 128,   0,   0, 
     68, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    228, 128,   0,   0, 238, 129, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 228, 128, 
      1,   0,   0,   3,   0,   0, 
     15, 128,  96,  32, 228, 160, 
      0,   0,   0, 176,   4,   0, 
      0,   5,   0,   0,  15, 208, 
      0,   0, 228, 144,   0,   0, 
    228, 128,  96,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   2,   0,   0,   3, 224, 
      1,   0, 228, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//

    vs_2_0
    def c96, 0.100000001, 4, 0, 0
    dcl_texcoord v0
    dcl_position v1
    dcl_color1 v2
    add r0.x, v2.x, c96.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c96.y
    mova a0.x, r0.x
    dp4 oPos.x, v1, c0[a0.x]
    dp4 oPos.y, v1, c1[a0.x]
    dp4 oPos.z, v1, c2[a0.x]
    dp4 oPos.w, v1, c3[a0.x]
    mov oT0.xy, v0

// approximately 10 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchPosition3dTexUV[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 109, 117, 110, 105, 
    102, 111, 114, 109, 115,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,  24,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      2,   0,  15, 144,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      2,   0,   0, 144,  96,   0, 
      0, 160,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
     96,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 192, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      2, 192,   1,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   4, 192,   1,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   8, 192, 
      1,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
      3, 224,   0,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_2_0
    def c144, 0.100000001, 4, 2, 1.10000002
    dcl_texcoord v0
    dcl_position v1
    dcl_color1 v2
    add r0.x, v2.x, c144.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c144.y
    mova a0.x, r0.x
    dp4 oPos.x, v1, c0[a0.x]
    dp4 oPos.y, v1, c1[a0.x]
    dp4 oPos.z, v1, c2[a0.x]
    dp4 oPos.w, v1, c3[a0.x]
    mad r0.xy, v2.x, c144.z, c144.xwzw
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mova a0.xy, r0
    mov oT1, c96[a0.y]
    mov oT0, c96[a0.x]
    mov oT2.xy, v0

// approximately 16 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBatchPosition3dTexUVCxform[] =
{
      0,   2, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   2, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,  64, 
    205, 204, 140,  63,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      2,   0,  15, 144,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      2,   0,   0, 144, 144,   0, 
      0, 160,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    144,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 192, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      2, 192,   1,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   4, 192,   1,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   8, 192, 
      1,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0,   0, 144, 
    144,   0, 170, 160, 144,   0, 
    236, 160,  19,   0,   0,   2, 
      0,   0,  12, 128,   0,   0, 
     68, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    228, 128,   0,   0, 238, 129, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 228, 128, 
      1,   0,   0,   3,   1,   0, 
     15, 224,  96,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   3,   0,   0,  15, 224, 
     96,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      2,   0,   3, 224,   0,   0, 
    228, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl t0.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t0, s2
    texld r1, t0, s0
    texld r2, t0, s1
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mov r0.w, c0.w
    mov oC0, r0

// approximately 11 instruction slots used (3 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUV[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 176,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0,  85, 160, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0,   0, 128, 
      1,   0, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 170, 160, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      2,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl t0.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t0, s2
    texld r1, t0, s0
    texld r2, t0, s1
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mov r0.w, c0.w
    mov oC0, r0

// approximately 11 instruction slots used (3 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 176,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0,  85, 160, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0,   0, 128, 
      1,   0, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 170, 160, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      2,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl v0
    dcl t0.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t0, s2
    texld r1, t0, s0
    texld r2, t0, s1
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mov r0.w, v0.w
    mov oC0, r0

// approximately 11 instruction slots used (3 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 176,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0,  85, 160, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0,   0, 128, 
      1,   0, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 170, 160, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      2,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl v0
    dcl t0.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t0, s2
    texld r1, t0, s0
    texld r2, t0, s1
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mul r0.xyz, r0, v0.w
    mov r0.w, v0.w
    mov oC0, r0

// approximately 12 instruction slots used (3 texture, 9 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 176,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0,  85, 160, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0,   0, 128, 
      1,   0, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 170, 160, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      2,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 228, 128,   0,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   0,   8, 128,   0,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t2, s2
    texld r1, t2, s0
    texld r2, t2, s1
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mov r0.w, c0.w
    mov r1, t1
    mad r0, r0, r1, t0
    mov oC0, r0

// approximately 13 instruction slots used (3 texture, 10 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVCxform[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0,  85, 160, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0,   0, 128, 
      1,   0, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 170, 160, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      2,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      1,   0, 228, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   0,   0, 228, 176, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t2, s2
    texld r1, t2, s0
    texld r2, t2, s1
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mov r0.w, c0.w
    mov r1, t1
    mad r0, r0, r1, t0
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 14 instruction slots used (3 texture, 11 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVCxformMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0,  85, 160, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0,   0, 128, 
      1,   0, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 170, 160, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      2,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      1,   0, 228, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   0,   0, 228, 176, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl v0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t2, s2
    texld r1, t2, s0
    texld r2, t2, s1
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mov r0.w, c0.w
    mov r1, t1
    mad r0, r0, r1, t0
    mul r0.w, r0.w, v0.w
    mov oC0, r0

// approximately 14 instruction slots used (3 texture, 11 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVCxformEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0,  85, 160, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0,   0, 128, 
      1,   0, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 170, 160, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      2,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      1,   0, 228, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   0,   0, 228, 176, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl v0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t2, s2
    texld r1, t2, s0
    texld r2, t2, s1
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mov r0.w, c0.w
    mov r1, t1
    mad r0, r0, r1, t0
    mul r1.w, r0.w, v0.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 15 instruction slots used (3 texture, 12 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVCxformEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0,  85, 160, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0,   0, 128, 
      1,   0, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 170, 160, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      2,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      1,   0, 228, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   0,   0, 228, 176, 
      5,   0,   0,   3,   1,   0, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   1,   0,   7, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   1,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t2, s2
    texld r1, t2, s0
    texld r2, t2, s1
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mul r0.xyz, r0, t1
    mov r0.w, c0.w
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mov oC0, r0

// approximately 14 instruction slots used (3 texture, 11 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVCxformAc[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0,  85, 160, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0,   0, 128, 
      1,   0, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 170, 160, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      2,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 176,   1,   0,   0,   2, 
      0,   0,   8, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t2, s2
    texld r1, t2, s0
    texld r2, t2, s1
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mul r0.xyz, r0, t1
    mov r0.w, c0.w
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 15 instruction slots used (3 texture, 12 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVCxformAcMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0,  85, 160, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0,   0, 128, 
      1,   0, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 170, 160, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      2,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 176,   1,   0,   0,   2, 
      0,   0,   8, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl v0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t2, s2
    texld r1, t2, s0
    texld r2, t2, s1
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mul r0.xyz, r0, t1
    mov r0.w, c0.w
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r0.w, r0.w, v0.w
    mov oC0, r0

// approximately 15 instruction slots used (3 texture, 12 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVCxformAcEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0,  85, 160, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0,   0, 128, 
      1,   0, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 170, 160, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      2,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 176,   1,   0,   0,   2, 
      0,   0,   8, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl v0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t2, s2
    texld r1, t2, s0
    texld r2, t2, s1
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mul r0.xyz, r0, t1
    mov r0.w, c0.w
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r1.w, r0.w, v0.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 16 instruction slots used (3 texture, 13 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVCxformAcEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0,  85, 160, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0,   0, 128, 
      1,   0, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 170, 160, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      2,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 176,   1,   0,   0,   2, 
      0,   0,   8, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      1,   0,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      5,   0,   0,   3,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 255, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      1,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl t0.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t0, s2
    texld r1, t0, s0
    texld r2, t0, s1
    texld r3, t0, s3
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r3.xyz, r0.w, c2, r0
    mov oC0, r3

// approximately 11 instruction slots used (4 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVA[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 176,   1,   8, 
    228, 160,  66,   0,   0,   3, 
      3,   0,  15, 128,   0,   0, 
    228, 176,   3,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 170, 160,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   8, 128,   2,   0, 
    255, 128,   0,   0,  85, 160, 
      4,   0,   0,   4,   3,   0, 
      7, 128,   0,   0, 255, 128, 
      2,   0, 228, 160,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   3,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl t0.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t0, s2
    texld r1, t0, s0
    texld r2, t0, s1
    texld r3, t0, s3
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mul r3.xyz, r3.w, r0
    mov oC0, r3

// approximately 12 instruction slots used (4 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVAMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 176,   1,   8, 
    228, 160,  66,   0,   0,   3, 
      3,   0,  15, 128,   0,   0, 
    228, 176,   3,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 170, 160,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   8, 128,   2,   0, 
    255, 128,   0,   0,  85, 160, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      2,   0, 228, 160,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      3,   0,   7, 128,   3,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   3,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    dcl t0.xy
    dcl_2d s3
    texld r0, t0, s3
    mov r0, r0.w
    mov oC0, r0

// approximately 3 instruction slots used (1 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVAInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,  14,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   3,   8, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   0,   0, 255, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl v0
    dcl t0.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t0, s2
    texld r1, t0, s0
    texld r2, t0, s1
    texld r3, t0, s3
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mul r0.w, r3.w, v0.w
    mov oC0, r0

// approximately 12 instruction slots used (4 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVAEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 176,   1,   8, 
    228, 160,  66,   0,   0,   3, 
      3,   0,  15, 128,   0,   0, 
    228, 176,   3,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 170, 160,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   8, 128,   2,   0, 
    255, 128,   0,   0,  85, 160, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      2,   0, 228, 160,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,   8, 128,   3,   0, 
    255, 128,   0,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl v0
    dcl t0.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t0, s2
    texld r1, t0, s0
    texld r2, t0, s1
    texld r3, t0, s3
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mul r1.w, r3.w, v0.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 13 instruction slots used (4 texture, 9 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVAEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 176,   1,   8, 
    228, 160,  66,   0,   0,   3, 
      3,   0,  15, 128,   0,   0, 
    228, 176,   3,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 170, 160,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   8, 128,   2,   0, 
    255, 128,   0,   0,  85, 160, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      2,   0, 228, 160,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      1,   0,   8, 128,   3,   0, 
    255, 128,   0,   0, 255, 144, 
      5,   0,   0,   3,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 255, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      1,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    dcl v0
    dcl t0.xy
    dcl_2d s3
    texld r0, t0, s3
    mul r0, r0.w, v0.w
    mov oC0, r0

// approximately 3 instruction slots used (1 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVAEAlphaInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,  14,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   3,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t2, s2
    texld r1, t2, s0
    texld r2, t2, s1
    texld r3, t2, s3
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r3.xyz, r0.w, c2, r0
    mov r0, t1
    mad r0, r3, r0, t0
    mov oC0, r0

// approximately 13 instruction slots used (4 texture, 9 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVACxform[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,  66,   0,   0,   3, 
      3,   0,  15, 128,   2,   0, 
    228, 176,   3,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 170, 160,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   8, 128,   2,   0, 
    255, 128,   0,   0,  85, 160, 
      4,   0,   0,   4,   3,   0, 
      7, 128,   0,   0, 255, 128, 
      2,   0, 228, 160,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   0,  15, 128,   1,   0, 
    228, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   3,   0, 
    228, 128,   0,   0, 228, 128, 
      0,   0, 228, 176,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t2, s2
    texld r1, t2, s0
    texld r2, t2, s1
    texld r3, t2, s3
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r3.xyz, r0.w, c2, r0
    mov r0, t1
    mad r0, r3, r0, t0
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 14 instruction slots used (4 texture, 10 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVACxformMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,  66,   0,   0,   3, 
      3,   0,  15, 128,   2,   0, 
    228, 176,   3,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 170, 160,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   8, 128,   2,   0, 
    255, 128,   0,   0,  85, 160, 
      4,   0,   0,   4,   3,   0, 
      7, 128,   0,   0, 255, 128, 
      2,   0, 228, 160,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   0,  15, 128,   1,   0, 
    228, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   3,   0, 
    228, 128,   0,   0, 228, 128, 
      0,   0, 228, 176,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s3
    texld r0, t2, s3
    mov r1.w, t1.w
    mad r0, r0.w, r1.w, t0.w
    mov oC0, r0

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVACxformInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,  14,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   3,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   1,   0, 255, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 255, 128, 
      1,   0, 255, 128,   0,   0, 
    255, 176,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl v0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t2, s2
    texld r1, t2, s0
    texld r2, t2, s1
    texld r3, t2, s3
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r3.xyz, r0.w, c2, r0
    mov r0, t1
    mad r0, r3, r0, t0
    mul r0.w, r0.w, v0.w
    mov oC0, r0

// approximately 14 instruction slots used (4 texture, 10 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVACxformEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,  66,   0,   0,   3, 
      3,   0,  15, 128,   2,   0, 
    228, 176,   3,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 170, 160,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   8, 128,   2,   0, 
    255, 128,   0,   0,  85, 160, 
      4,   0,   0,   4,   3,   0, 
      7, 128,   0,   0, 255, 128, 
      2,   0, 228, 160,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   0,  15, 128,   1,   0, 
    228, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   3,   0, 
    228, 128,   0,   0, 228, 128, 
      0,   0, 228, 176,   5,   0, 
      0,   3,   0,   0,   8, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl v0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t2, s2
    texld r1, t2, s0
    texld r2, t2, s1
    texld r3, t2, s3
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r3.xyz, r0.w, c2, r0
    mov r0, t1
    mad r0, r3, r0, t0
    mul r1.w, r0.w, v0.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 15 instruction slots used (4 texture, 11 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVACxformEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,  66,   0,   0,   3, 
      3,   0,  15, 128,   2,   0, 
    228, 176,   3,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 170, 160,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   8, 128,   2,   0, 
    255, 128,   0,   0,  85, 160, 
      4,   0,   0,   4,   3,   0, 
      7, 128,   0,   0, 255, 128, 
      2,   0, 228, 160,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   0,  15, 128,   1,   0, 
    228, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   3,   0, 
    228, 128,   0,   0, 228, 128, 
      0,   0, 228, 176,   5,   0, 
      0,   3,   1,   0,   8, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 144,   5,   0,   0,   3, 
      1,   0,   7, 128,   0,   0, 
    228, 128,   1,   0, 255, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   1,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    dcl v0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s3
    texld r0, t2, s3
    mov r1.w, t1.w
    mad r0.x, r0.w, r1.w, t0.w
    mul r0, r0.x, v0.w
    mov oC0, r0

// approximately 5 instruction slots used (1 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVACxformEAlphaInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,  14,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   3,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   1,   0, 255, 176, 
      4,   0,   0,   4,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      1,   0, 255, 128,   0,   0, 
    255, 176,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
      0, 128,   0,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t2, s2
    texld r1, t2, s0
    texld r2, t2, s1
    texld r3, t2, s3
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r3.xyz, r0.w, c2, r0
    mov r0.xyz, t1
    mov r0.w, c0.w
    mul r0, r0, r3
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mov oC0, r0

// approximately 16 instruction slots used (4 texture, 12 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVACxformAc[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,  66,   0,   0,   3, 
      3,   0,  15, 128,   2,   0, 
    228, 176,   3,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 170, 160,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   8, 128,   2,   0, 
    255, 128,   0,   0,  85, 160, 
      4,   0,   0,   4,   3,   0, 
      7, 128,   0,   0, 255, 128, 
      2,   0, 228, 160,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   0,   7, 128,   1,   0, 
    228, 176,   1,   0,   0,   2, 
      0,   0,   8, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   3,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 176,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t2, s2
    texld r1, t2, s0
    texld r2, t2, s1
    texld r3, t2, s3
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r3.xyz, r0.w, c2, r0
    mov r0.xyz, t1
    mov r0.w, c0.w
    mul r0, r0, r3
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 17 instruction slots used (4 texture, 13 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVACxformAcMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,  66,   0,   0,   3, 
      3,   0,  15, 128,   2,   0, 
    228, 176,   3,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 170, 160,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   8, 128,   2,   0, 
    255, 128,   0,   0,  85, 160, 
      4,   0,   0,   4,   3,   0, 
      7, 128,   0,   0, 255, 128, 
      2,   0, 228, 160,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   0,   7, 128,   1,   0, 
    228, 176,   1,   0,   0,   2, 
      0,   0,   8, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   3,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 176,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s3
    texld r0, t2, s3
    mul r0.x, r0.w, t1.w
    mad r0, t0.w, r0.x, r0.x
    mov oC0, r0

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVACxformAcInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,  14,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   3,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      1,   0, 255, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 255, 176,   0,   0, 
      0, 128,   0,   0,   0, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl v0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t2, s2
    texld r1, t2, s0
    texld r2, t2, s1
    texld r3, t2, s3
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r3.xyz, r0.w, c2, r0
    mov r0.xyz, t1
    mov r0.w, c0.w
    mul r0, r0, r3
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r0.w, r0.w, v0.w
    mov oC0, r0

// approximately 17 instruction slots used (4 texture, 13 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVACxformAcEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,  66,   0,   0,   3, 
      3,   0,  15, 128,   2,   0, 
    228, 176,   3,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 170, 160,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   8, 128,   2,   0, 
    255, 128,   0,   0,  85, 160, 
      4,   0,   0,   4,   3,   0, 
      7, 128,   0,   0, 255, 128, 
      2,   0, 228, 160,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   0,   7, 128,   1,   0, 
    228, 176,   1,   0,   0,   2, 
      0,   0,   8, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   3,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 176,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl v0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t2, s2
    texld r1, t2, s0
    texld r2, t2, s1
    texld r3, t2, s3
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    add r0.w, r2.w, c0.y
    mad r3.xyz, r0.w, c2, r0
    mov r0.xyz, t1
    mov r0.w, c0.w
    mul r0, r0, r3
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r1.w, r0.w, v0.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 18 instruction slots used (4 texture, 14 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVACxformAcEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,  66,   0,   0,   3, 
      3,   0,  15, 128,   2,   0, 
    228, 176,   3,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 170, 160,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   8, 128,   2,   0, 
    255, 128,   0,   0,  85, 160, 
      4,   0,   0,   4,   3,   0, 
      7, 128,   0,   0, 255, 128, 
      2,   0, 228, 160,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   0,   7, 128,   1,   0, 
    228, 176,   1,   0,   0,   2, 
      0,   0,   8, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   3,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 176,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 176,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   1,   0, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   1,   0,   7, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   1,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_2_0
    dcl v0
    dcl t0
    dcl t1
    dcl t2.xy
    dcl_2d s3
    texld r0, t2, s3
    mul r0.x, r0.w, t1.w
    mad r0.x, t0.w, r0.x, r0.x
    mul r0, r0.x, v0.w
    mov oC0, r0

// approximately 5 instruction slots used (1 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUVACxformAcEAlphaInv[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,  14,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   3,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      1,   0, 255, 176,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 255, 176,   0,   0, 
      0, 128,   0,   0,   0, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0,   0, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, -0.501960993, -0, -0.501960993, 1.56864798
    def c1, 0.186592996, 0.466295987, 1.84835196, 1
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    mov r1.w, c1.w
    add r0.xyz, r0, c0
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.x, r0.z, c0.w, r0.y
    mad_sat r1.z, r0.x, c1.z, r0.y
    mov oC0, r1

// approximately 8 instruction slots used (1 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUY2[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    132, 128,   0, 191, 117, 201, 
    200,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
    204, 150, 236,  63,   0,   0, 
    128,  63,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   1,   0, 255, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  17, 128,   0,   0, 
    170, 128,   0,   0, 255, 160, 
      0,   0,  85, 128,   4,   0, 
      0,   4,   1,   0,  20, 128, 
      0,   0,   0, 128,   1,   0, 
    170, 160,   0,   0,  85, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   1,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, -0.501960993, -0, -0.501960993, 1.56864798
    def c1, 0.186592996, 0.466295987, 1.84835196, 1
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    mov r1.w, c1.w
    add r0.xyz, r0, c0
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.x, r0.z, c0.w, r0.y
    mad_sat r1.z, r0.x, c1.z, r0.y
    mov oC0, r1

// approximately 8 instruction slots used (1 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUY2Mul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    132, 128,   0, 191, 117, 201, 
    200,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
    204, 150, 236,  63,   0,   0, 
    128,  63,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   1,   0, 255, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  17, 128,   0,   0, 
    170, 128,   0,   0, 255, 160, 
      0,   0,  85, 128,   4,   0, 
      0,   4,   1,   0,  20, 128, 
      0,   0,   0, 128,   1,   0, 
    170, 160,   0,   0,  85, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   1,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, -0.501960993, -0, -0.501960993, 1.56864798
    def c1, 0.186592996, 0.466295987, 1.84835196, 0
    dcl v0
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    mov r1.w, v0.w
    add r0.xyz, r0, c0
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.x, r0.z, c0.w, r0.y
    mad_sat r1.z, r0.x, c1.z, r0.y
    mov oC0, r1

// approximately 8 instruction slots used (1 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUY2EAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    132, 128,   0, 191, 117, 201, 
    200,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
    204, 150, 236,  63,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   0,   0, 255, 144, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  17, 128,   0,   0, 
    170, 128,   0,   0, 255, 160, 
      0,   0,  85, 128,   4,   0, 
      0,   4,   1,   0,  20, 128, 
      0,   0,   0, 128,   1,   0, 
    170, 160,   0,   0,  85, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   1,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, -0.501960993, -0, -0.501960993, 1.56864798
    def c1, 0.186592996, 0.466295987, 1.84835196, 0
    dcl v0
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    add r0.xyz, r0, c0
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.x, r0.z, c0.w, r0.y
    mad_sat r1.z, r0.x, c1.z, r0.y
    mul r0.xyz, r1, v0.w
    mov r0.w, v0.w
    mov oC0, r0

// approximately 9 instruction slots used (1 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUY2EAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    132, 128,   0, 191, 117, 201, 
    200,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
    204, 150, 236,  63,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  17, 128,   0,   0, 
    170, 128,   0,   0, 255, 160, 
      0,   0,  85, 128,   4,   0, 
      0,   4,   1,   0,  20, 128, 
      0,   0,   0, 128,   1,   0, 
    170, 160,   0,   0,  85, 128, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   1,   0, 228, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, -0.501960993, -0, -0.501960993, 1.56864798
    def c1, 0.186592996, 0.466295987, 1.84835196, 1
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mov r1.w, c1.w
    add r0.xyz, r0, c0
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.x, r0.z, c0.w, r0.y
    mad_sat r1.z, r0.x, c1.z, r0.y
    mov r0, t1
    mad r0, r1, r0, t0
    mov oC0, r0

// approximately 10 instruction slots used (1 texture, 9 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUY2Cxform[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    132, 128,   0, 191, 117, 201, 
    200,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
    204, 150, 236,  63,   0,   0, 
    128,  63,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   1,   0, 255, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  17, 128,   0,   0, 
    170, 128,   0,   0, 255, 160, 
      0,   0,  85, 128,   4,   0, 
      0,   4,   1,   0,  20, 128, 
      0,   0,   0, 128,   1,   0, 
    170, 160,   0,   0,  85, 128, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   1,   0, 228, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   1,   0, 228, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 176,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, -0.501960993, -0, -0.501960993, 1.56864798
    def c1, 0.186592996, 0.466295987, 1.84835196, 1
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mov r1.w, c1.w
    add r0.xyz, r0, c0
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.x, r0.z, c0.w, r0.y
    mad_sat r1.z, r0.x, c1.z, r0.y
    mov r0, t1
    mad r0, r1, r0, t0
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 11 instruction slots used (1 texture, 10 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUY2CxformMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    132, 128,   0, 191, 117, 201, 
    200,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
    204, 150, 236,  63,   0,   0, 
    128,  63,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   1,   0, 255, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  17, 128,   0,   0, 
    170, 128,   0,   0, 255, 160, 
      0,   0,  85, 128,   4,   0, 
      0,   4,   1,   0,  20, 128, 
      0,   0,   0, 128,   1,   0, 
    170, 160,   0,   0,  85, 128, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   1,   0, 228, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   1,   0, 228, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 176,   5,   0,   0,   3, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, -0.501960993, -0, -0.501960993, 1.56864798
    def c1, 0.186592996, 0.466295987, 1.84835196, 1
    dcl v0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mov r1.w, c1.w
    add r0.xyz, r0, c0
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.x, r0.z, c0.w, r0.y
    mad_sat r1.z, r0.x, c1.z, r0.y
    mov r0, t1
    mad r0, r1, r0, t0
    mul r0.w, r0.w, v0.w
    mov oC0, r0

// approximately 11 instruction slots used (1 texture, 10 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUY2CxformEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    132, 128,   0, 191, 117, 201, 
    200,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
    204, 150, 236,  63,   0,   0, 
    128,  63,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   1,   0, 255, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  17, 128,   0,   0, 
    170, 128,   0,   0, 255, 160, 
      0,   0,  85, 128,   4,   0, 
      0,   4,   1,   0,  20, 128, 
      0,   0,   0, 128,   1,   0, 
    170, 160,   0,   0,  85, 128, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   1,   0, 228, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   1,   0, 228, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 176,   5,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, -0.501960993, -0, -0.501960993, 1.56864798
    def c1, 0.186592996, 0.466295987, 1.84835196, 1
    dcl v0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    mov r1.w, c1.w
    add r0.xyz, r0, c0
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.x, r0.z, c0.w, r0.y
    mad_sat r1.z, r0.x, c1.z, r0.y
    mov r0, t1
    mad r0, r1, r0, t0
    mul r1.w, r0.w, v0.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 12 instruction slots used (1 texture, 11 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUY2CxformEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    132, 128,   0, 191, 117, 201, 
    200,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
    204, 150, 236,  63,   0,   0, 
    128,  63,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   1,   0, 255, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  17, 128,   0,   0, 
    170, 128,   0,   0, 255, 160, 
      0,   0,  85, 128,   4,   0, 
      0,   4,   1,   0,  20, 128, 
      0,   0,   0, 128,   1,   0, 
    170, 160,   0,   0,  85, 128, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   1,   0, 228, 176, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   1,   0, 228, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 176,   5,   0,   0,   3, 
      1,   0,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      5,   0,   0,   3,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 255, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      1,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, -0.501960993, -0, -0.501960993, 1.56864798
    def c1, 0.186592996, 0.466295987, 1.84835196, 1
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    add r0.xyz, r0, c0
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.x, r0.z, c0.w, r0.y
    mad_sat r1.z, r0.x, c1.z, r0.y
    mul r0.xyz, r1, t1
    mov r0.w, c1.w
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mov oC0, r0

// approximately 11 instruction slots used (1 texture, 10 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUY2CxformAc[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    132, 128,   0, 191, 117, 201, 
    200,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
    204, 150, 236,  63,   0,   0, 
    128,  63,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  17, 128,   0,   0, 
    170, 128,   0,   0, 255, 160, 
      0,   0,  85, 128,   4,   0, 
      0,   4,   1,   0,  20, 128, 
      0,   0,   0, 128,   1,   0, 
    170, 160,   0,   0,  85, 128, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   1,   0, 228, 128, 
      1,   0, 228, 176,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      1,   0, 255, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, -0.501960993, -0, -0.501960993, 1.56864798
    def c1, 0.186592996, 0.466295987, 1.84835196, 1
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    add r0.xyz, r0, c0
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.x, r0.z, c0.w, r0.y
    mad_sat r1.z, r0.x, c1.z, r0.y
    mul r0.xyz, r1, t1
    mov r0.w, c1.w
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 12 instruction slots used (1 texture, 11 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUY2CxformAcMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    132, 128,   0, 191, 117, 201, 
    200,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
    204, 150, 236,  63,   0,   0, 
    128,  63,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  17, 128,   0,   0, 
    170, 128,   0,   0, 255, 160, 
      0,   0,  85, 128,   4,   0, 
      0,   4,   1,   0,  20, 128, 
      0,   0,   0, 128,   1,   0, 
    170, 160,   0,   0,  85, 128, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   1,   0, 228, 128, 
      1,   0, 228, 176,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      1,   0, 255, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, -0.501960993, -0, -0.501960993, 1.56864798
    def c1, 0.186592996, 0.466295987, 1.84835196, 1
    dcl v0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    add r0.xyz, r0, c0
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.x, r0.z, c0.w, r0.y
    mad_sat r1.z, r0.x, c1.z, r0.y
    mul r0.xyz, r1, t1
    mov r0.w, c1.w
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r0.w, r0.w, v0.w
    mov oC0, r0

// approximately 12 instruction slots used (1 texture, 11 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUY2CxformAcEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    132, 128,   0, 191, 117, 201, 
    200,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
    204, 150, 236,  63,   0,   0, 
    128,  63,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  17, 128,   0,   0, 
    170, 128,   0,   0, 255, 160, 
      0,   0,  85, 128,   4,   0, 
      0,   4,   1,   0,  20, 128, 
      0,   0,   0, 128,   1,   0, 
    170, 160,   0,   0,  85, 128, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   1,   0, 228, 128, 
      1,   0, 228, 176,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      1,   0, 255, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   8, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_2_0
    def c0, -0.501960993, -0, -0.501960993, 1.56864798
    def c1, 0.186592996, 0.466295987, 1.84835196, 1
    dcl v0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_2d s0
    texld r0, t2, s0
    add r0.xyz, r0, c0
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.x, r0.z, c0.w, r0.y
    mad_sat r1.z, r0.x, c1.z, r0.y
    mul r0.xyz, r1, t1
    mov r0.w, c1.w
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mul r1.w, r0.w, v0.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 13 instruction slots used (1 texture, 12 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FYUY2CxformAcEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    132, 128,   0, 191, 117, 201, 
    200,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
    204, 150, 236,  63,   0,   0, 
    128,  63,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  17, 128,   0,   0, 
    170, 128,   0,   0, 255, 160, 
      0,   0,  85, 128,   4,   0, 
      0,   4,   1,   0,  20, 128, 
      0,   0,   0, 128,   1,   0, 
    170, 160,   0,   0,  85, 128, 
      5,   0,   0,   3,   0,   0, 
      7, 128,   1,   0, 228, 128, 
      1,   0, 228, 176,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      1,   0, 255, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   1,   0,   8, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 144,   5,   0,   0,   3, 
      1,   0,   7, 128,   0,   0, 
    228, 128,   1,   0, 255, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   1,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4x4 cxmul;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       4
//   tex          s0       1
//

    ps_2_0
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    dp4 r1.x, r0, c1
    dp4 r1.y, r0, c2
    dp4 r1.z, r0, c3
    dp4 r1.w, r0, c4
    add r0.x, r0.w, c0.w
    mad r0, c0, r0.x, r1
    mov oC0, r0

// approximately 8 instruction slots used (1 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGCMatrixAc[] =
{
      0,   2, 255, 255, 254, 255, 
     55,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 163,   0, 
      0,   0,   0,   2, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    156,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   4,   0,   6,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      2,   0, 140,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    112, 115,  95,  50,  95,  48, 
      0,  77, 105,  99, 114, 111, 
    115, 111, 102, 116,  32,  40, 
     82,  41,  32,  72,  76,  83, 
     76,  32,  83, 104,  97, 100, 
    101, 114,  32,  67, 111, 109, 
    112, 105, 108, 101, 114,  32, 
     57,  46,  51,  48,  46,  57, 
     50,  48,  48,  46,  49,  54, 
     51,  56,  52,   0, 171, 171, 
     31,   0,   0,   2,   0,   0, 
      0, 128,   0,   0,  35, 176, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     66,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   8, 228, 160,   9,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   2, 128,   0,   0, 
    228, 128,   2,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      4, 128,   0,   0, 228, 128, 
      3,   0, 228, 160,   9,   0, 
      0,   3,   1,   0,   8, 128, 
      0,   0, 228, 128,   4,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 160, 
      0,   0,   0, 128,   1,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4x4 cxmul;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       4
//   tex          s0       1
//

    ps_2_0
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    dp4 r1.x, r0, c1
    dp4 r1.y, r0, c2
    dp4 r1.z, r0, c3
    dp4 r1.w, r0, c4
    add r0.x, r0.w, c0.w
    mad r0, c0, r0.x, r1
    mul r0.xyz, r0.w, r0
    mov oC0, r0

// approximately 9 instruction slots used (1 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGCMatrixAcMul[] =
{
      0,   2, 255, 255, 254, 255, 
     55,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 163,   0, 
      0,   0,   0,   2, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    156,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   4,   0,   6,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      2,   0, 140,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    112, 115,  95,  50,  95,  48, 
      0,  77, 105,  99, 114, 111, 
    115, 111, 102, 116,  32,  40, 
     82,  41,  32,  72,  76,  83, 
     76,  32,  83, 104,  97, 100, 
    101, 114,  32,  67, 111, 109, 
    112, 105, 108, 101, 114,  32, 
     57,  46,  51,  48,  46,  57, 
     50,  48,  48,  46,  49,  54, 
     51,  56,  52,   0, 171, 171, 
     31,   0,   0,   2,   0,   0, 
      0, 128,   0,   0,  35, 176, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     66,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   8, 228, 160,   9,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   2, 128,   0,   0, 
    228, 128,   2,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      4, 128,   0,   0, 228, 128, 
      3,   0, 228, 160,   9,   0, 
      0,   3,   1,   0,   8, 128, 
      0,   0, 228, 128,   4,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 160, 
      0,   0,   0, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4x4 cxmul;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       4
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    dp4 r1.x, r0, c1
    dp4 r1.y, r0, c2
    dp4 r1.z, r0, c3
    dp4 r1.w, r0, c4
    add r0.x, r0.w, c0.w
    mad r0, c0, r0.x, r1
    mul r0.w, r0.w, v0.w
    mov oC0, r0

// approximately 9 instruction slots used (1 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGCMatrixAcEAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     55,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 163,   0, 
      0,   0,   0,   2, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    156,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   4,   0,   6,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      2,   0, 140,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    112, 115,  95,  50,  95,  48, 
      0,  77, 105,  99, 114, 111, 
    115, 111, 102, 116,  32,  40, 
     82,  41,  32,  72,  76,  83, 
     76,  32,  83, 104,  97, 100, 
    101, 114,  32,  67, 111, 109, 
    112, 105, 108, 101, 114,  32, 
     57,  46,  51,  48,  46,  57, 
     50,  48,  48,  46,  49,  54, 
     51,  56,  52,   0, 171, 171, 
     31,   0,   0,   2,   0,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 128,   0,   0,  35, 176, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     66,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   8, 228, 160,   9,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   2, 128,   0,   0, 
    228, 128,   2,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      4, 128,   0,   0, 228, 128, 
      3,   0, 228, 160,   9,   0, 
      0,   3,   1,   0,   8, 128, 
      0,   0, 228, 128,   4,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 160, 
      0,   0,   0, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4x4 cxmul;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       4
//   tex          s0       1
//

    ps_2_0
    dcl v0
    dcl_pp t0.xy
    dcl_2d s0
    texld r0, t0, s0
    dp4 r1.x, r0, c1
    dp4 r1.y, r0, c2
    dp4 r1.z, r0, c3
    dp4 r1.w, r0, c4
    add r0.x, r0.w, c0.w
    mad r0, c0, r0.x, r1
    mul r1.w, r0.w, v0.w
    mul r1.xyz, r0, r1.w
    mov oC0, r1

// approximately 10 instruction slots used (1 texture, 9 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FTexTGCMatrixAcEAlphaMul[] =
{
      0,   2, 255, 255, 254, 255, 
     55,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 163,   0, 
      0,   0,   0,   2, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    156,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   4,   0,   6,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      2,   0, 140,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    112, 115,  95,  50,  95,  48, 
      0,  77, 105,  99, 114, 111, 
    115, 111, 102, 116,  32,  40, 
     82,  41,  32,  72,  76,  83, 
     76,  32,  83, 104,  97, 100, 
    101, 114,  32,  67, 111, 109, 
    112, 105, 108, 101, 114,  32, 
     57,  46,  51,  48,  46,  57, 
     50,  48,  48,  46,  49,  54, 
     51,  56,  52,   0, 171, 171, 
     31,   0,   0,   2,   0,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 128,   0,   0,  35, 176, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     66,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 176, 
      0,   8, 228, 160,   9,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   2, 128,   0,   0, 
    228, 128,   2,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      4, 128,   0,   0, 228, 128, 
      3,   0, 228, 160,   9,   0, 
      0,   3,   1,   0,   8, 128, 
      0,   0, 228, 128,   4,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 160, 
      0,   0,   0, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      1,   0,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      5,   0,   0,   3,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 255, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      1,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 compx;
//   float4 compy;
//   float4 mapScale;
//   sampler2D maptex;
//   float2 scale;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   compx        c0       1
//   compy        c1       1
//   mapScale     c2       1
//   scale        c3       1
//   maptex       s0       1
//   tex          s1       1
//

    ps_2_0
    def c4, 1, 0, -1, 0.5
    dcl t0.xy
    dcl_2d s0
    dcl_2d s1
    mad r0.x, t0.x, c2.x, -c2.z
    mad r0.y, t0.y, c2.y, -c2.w
    add r0.zw, r0.wzyx, c4.z
    cmp r1.xy, r0.wzyx, c4.x, c4.y
    dp2add r0.z, r1, c4.x, c4.y
    cmp r1.xy, -r0, c4.x, c4.y
    texld r2, r0, s0
    dp2add_sat r0.x, r1, c4.x, r0.z
    add r0.x, -r0.x, c4.x
    lrp r1, r0.x, r2, c4.w
    mul r0, r1, c0
    mul r1, r1, c1
    dp4 r1.y, c4.x, r1
    dp4 r1.x, c4.x, r0
    add r0.xy, r1, -c4.w
    mad r0.xy, r0, c3, t0
    texld r0, r0, s1
    mov oC0, r0

// approximately 20 instruction slots used (2 texture, 18 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FDisplacementMap[] =
{
      0,   2, 255, 255, 254, 255, 
     80,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,   7,   1, 
      0,   0,   0,   2, 255, 255, 
      6,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
      0,   1,   0,   0, 148,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 156,   0, 
      0,   0,   0,   0,   0,   0, 
    172,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    156,   0,   0,   0,   0,   0, 
      0,   0, 178,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 156,   0,   0,   0, 
      0,   0,   0,   0, 187,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    212,   0,   0,   0,   2,   0, 
      3,   0,   1,   0,  14,   0, 
    220,   0,   0,   0,   0,   0, 
      0,   0, 236,   0,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      6,   0, 240,   0,   0,   0, 
      0,   0,   0,   0,  99, 111, 
    109, 112, 120,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 111, 
    109, 112, 121,   0, 109,  97, 
    112,  83,  99,  97, 108, 101, 
      0, 109,  97, 112, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115,  99,  97, 108, 
    101,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   4,   0,  15, 160, 
      0,   0, 128,  63,   0,   0, 
      0,   0,   0,   0, 128, 191, 
      0,   0,   0,  63,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,   3, 176,  31,   0, 
      0,   2,   0,   0,   0, 144, 
      0,   8,  15, 160,  31,   0, 
      0,   2,   0,   0,   0, 144, 
      1,   8,  15, 160,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 176,   2,   0, 
      0, 160,   2,   0, 170, 161, 
      4,   0,   0,   4,   0,   0, 
      2, 128,   0,   0,  85, 176, 
      2,   0,  85, 160,   2,   0, 
    255, 161,   2,   0,   0,   3, 
      0,   0,  12, 128,   0,   0, 
     27, 128,   4,   0, 170, 160, 
     88,   0,   0,   4,   1,   0, 
      3, 128,   0,   0,  27, 128, 
      4,   0,   0, 160,   4,   0, 
     85, 160,  90,   0,   0,   4, 
      0,   0,   4, 128,   1,   0, 
    228, 128,   4,   0,   0, 160, 
      4,   0,  85, 160,  88,   0, 
      0,   4,   1,   0,   3, 128, 
      0,   0, 228, 129,   4,   0, 
      0, 160,   4,   0,  85, 160, 
     66,   0,   0,   3,   2,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   8, 228, 160,  90,   0, 
      0,   4,   0,   0,  17, 128, 
      1,   0, 228, 128,   4,   0, 
      0, 160,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 129, 
      4,   0,   0, 160,  18,   0, 
      0,   4,   1,   0,  15, 128, 
      0,   0,   0, 128,   2,   0, 
    228, 128,   4,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   1,   0, 228, 128, 
      0,   0, 228, 160,   5,   0, 
      0,   3,   1,   0,  15, 128, 
      1,   0, 228, 128,   1,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   2, 128,   4,   0, 
      0, 160,   1,   0, 228, 128, 
      9,   0,   0,   3,   1,   0, 
      1, 128,   4,   0,   0, 160, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   3, 128, 
      1,   0, 228, 128,   4,   0, 
    255, 161,   4,   0,   0,   4, 
      0,   0,   3, 128,   0,   0, 
    228, 128,   3,   0, 228, 160, 
      0,   0, 228, 176,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 compx;
//   float4 compy;
//   float4 mapScale;
//   sampler2D maptex;
//   float2 scale;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   compx        c0       1
//   compy        c1       1
//   mapScale     c2       1
//   scale        c3       1
//   maptex       s0       1
//   tex          s1       1
//

    ps_2_0
    def c4, 1, 0, -1, 0.5
    dcl_pp t0.xy
    dcl_2d s0
    dcl_2d s1
    mad r0.x, t0.x, c2.x, -c2.z
    mad r0.y, t0.y, c2.y, -c2.w
    add r0.zw, r0.wzyx, c4.z
    cmp r1.xy, r0.wzyx, c4.x, c4.y
    dp2add r0.z, r1, c4.x, c4.y
    cmp r1.xy, -r0, c4.x, c4.y
    texld r2, r0, s0
    dp2add_sat r0.x, r1, c4.x, r0.z
    add r0.x, -r0.x, c4.x
    lrp r1, r0.x, r2, c4.w
    mul r0, r1, c0
    mul r1, r1, c1
    dp4 r1.y, c4.x, r1
    dp4 r1.x, c4.x, r0
    add r0.xy, r1, -c4.w
    mad r0.xy, r0, c3, t0
    add r0.zw, r0.wzyx, c4.z
    cmp r1.xy, r0.wzyx, c4.x, c4.y
    dp2add r0.z, r1, c4.x, c4.y
    cmp r1.xy, -r0, c4.x, c4.y
    texld r2, r0, s1
    texld r3, t0, s1
    dp2add_sat r0.x, r1, c4.x, r0.z
    add r0.x, -r0.x, c4.x
    lrp r1, r0.x, r2, r3
    mov oC0, r1

// approximately 30 instruction slots used (3 texture, 27 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FDisplacementMapDMIgnore[] =
{
      0,   2, 255, 255, 254, 255, 
     80,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,   7,   1, 
      0,   0,   0,   2, 255, 255, 
      6,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
      0,   1,   0,   0, 148,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 156,   0, 
      0,   0,   0,   0,   0,   0, 
    172,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    156,   0,   0,   0,   0,   0, 
      0,   0, 178,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 156,   0,   0,   0, 
      0,   0,   0,   0, 187,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    212,   0,   0,   0,   2,   0, 
      3,   0,   1,   0,  14,   0, 
    220,   0,   0,   0,   0,   0, 
      0,   0, 236,   0,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      6,   0, 240,   0,   0,   0, 
      0,   0,   0,   0,  99, 111, 
    109, 112, 120,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 111, 
    109, 112, 121,   0, 109,  97, 
    112,  83,  99,  97, 108, 101, 
      0, 109,  97, 112, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115,  99,  97, 108, 
    101,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   4,   0,  15, 160, 
      0,   0, 128,  63,   0,   0, 
      0,   0,   0,   0, 128, 191, 
      0,   0,   0,  63,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  35, 176,  31,   0, 
      0,   2,   0,   0,   0, 144, 
      0,   8,  15, 160,  31,   0, 
      0,   2,   0,   0,   0, 144, 
      1,   8,  15, 160,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 176,   2,   0, 
      0, 160,   2,   0, 170, 161, 
      4,   0,   0,   4,   0,   0, 
      2, 128,   0,   0,  85, 176, 
      2,   0,  85, 160,   2,   0, 
    255, 161,   2,   0,   0,   3, 
      0,   0,  12, 128,   0,   0, 
     27, 128,   4,   0, 170, 160, 
     88,   0,   0,   4,   1,   0, 
      3, 128,   0,   0,  27, 128, 
      4,   0,   0, 160,   4,   0, 
     85, 160,  90,   0,   0,   4, 
      0,   0,   4, 128,   1,   0, 
    228, 128,   4,   0,   0, 160, 
      4,   0,  85, 160,  88,   0, 
      0,   4,   1,   0,   3, 128, 
      0,   0, 228, 129,   4,   0, 
      0, 160,   4,   0,  85, 160, 
     66,   0,   0,   3,   2,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   8, 228, 160,  90,   0, 
      0,   4,   0,   0,  17, 128, 
      1,   0, 228, 128,   4,   0, 
      0, 160,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 129, 
      4,   0,   0, 160,  18,   0, 
      0,   4,   1,   0,  15, 128, 
      0,   0,   0, 128,   2,   0, 
    228, 128,   4,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   1,   0, 228, 128, 
      0,   0, 228, 160,   5,   0, 
      0,   3,   1,   0,  15, 128, 
      1,   0, 228, 128,   1,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   2, 128,   4,   0, 
      0, 160,   1,   0, 228, 128, 
      9,   0,   0,   3,   1,   0, 
      1, 128,   4,   0,   0, 160, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   3, 128, 
      1,   0, 228, 128,   4,   0, 
    255, 161,   4,   0,   0,   4, 
      0,   0,   3, 128,   0,   0, 
    228, 128,   3,   0, 228, 160, 
      0,   0, 228, 176,   2,   0, 
      0,   3,   0,   0,  12, 128, 
      0,   0,  27, 128,   4,   0, 
    170, 160,  88,   0,   0,   4, 
      1,   0,   3, 128,   0,   0, 
     27, 128,   4,   0,   0, 160, 
      4,   0,  85, 160,  90,   0, 
      0,   4,   0,   0,   4, 128, 
      1,   0, 228, 128,   4,   0, 
      0, 160,   4,   0,  85, 160, 
     88,   0,   0,   4,   1,   0, 
      3, 128,   0,   0, 228, 129, 
      4,   0,   0, 160,   4,   0, 
     85, 160,  66,   0,   0,   3, 
      2,   0,  15, 128,   0,   0, 
    228, 128,   1,   8, 228, 160, 
     66,   0,   0,   3,   3,   0, 
     15, 128,   0,   0, 228, 176, 
      1,   8, 228, 160,  90,   0, 
      0,   4,   0,   0,  17, 128, 
      1,   0, 228, 128,   4,   0, 
      0, 160,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 129, 
      4,   0,   0, 160,  18,   0, 
      0,   4,   1,   0,  15, 128, 
      0,   0,   0, 128,   2,   0, 
    228, 128,   3,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   1,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 boundColor;
//   float4 compx;
//   float4 compy;
//   float4 mapScale;
//   sampler2D maptex;
//   float2 scale;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   boundColor   c0       1
//   compx        c1       1
//   compy        c2       1
//   mapScale     c3       1
//   scale        c4       1
//   maptex       s0       1
//   tex          s1       1
//

    ps_2_0
    def c5, 1, 0, -1, 0.5
    dcl t0.xy
    dcl_2d s0
    dcl_2d s1
    mad r0.x, t0.x, c3.x, -c3.z
    mad r0.y, t0.y, c3.y, -c3.w
    add r0.zw, r0.wzyx, c5.z
    cmp r1.xy, r0.wzyx, c5.x, c5.y
    dp2add r0.z, r1, c5.x, c5.y
    cmp r1.xy, -r0, c5.x, c5.y
    texld r2, r0, s0
    dp2add_sat r0.x, r1, c5.x, r0.z
    add r0.x, -r0.x, c5.x
    lrp r1, r0.x, r2, c5.w
    mul r0, r1, c1
    mul r1, r1, c2
    dp4 r1.y, c5.x, r1
    dp4 r1.x, c5.x, r0
    add r0.xy, r1, -c5.w
    mad r0.xy, r0, c4, t0
    add r0.zw, r0.wzyx, c5.z
    cmp r1.xy, r0.wzyx, c5.x, c5.y
    dp2add r0.z, r1, c5.x, c5.y
    cmp r1.xy, -r0, c5.x, c5.y
    texld r2, r0, s1
    dp2add_sat r0.x, r1, c5.x, r0.z
    add r0.x, -r0.x, c5.x
    lrp r1, r0.x, r2, c0
    mov oC0, r1

// approximately 29 instruction slots used (2 texture, 27 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FDisplacementMapDMColor[] =
{
      0,   2, 255, 255, 254, 255, 
     87,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   1, 
      0,   0,   0,   2, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 180,   0, 
      0,   0,   0,   0,   0,   0, 
    196,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    180,   0,   0,   0,   0,   0, 
      0,   0, 202,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 180,   0,   0,   0, 
      0,   0,   0,   0, 208,   0, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 180,   0, 
      0,   0,   0,   0,   0,   0, 
    217,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    224,   0,   0,   0,   0,   0, 
      0,   0, 240,   0,   0,   0, 
      2,   0,   4,   0,   1,   0, 
     18,   0, 248,   0,   0,   0, 
      0,   0,   0,   0,   8,   1, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0,  12,   1, 
      0,   0,   0,   0,   0,   0, 
     98, 111, 117, 110, 100,  67, 
    111, 108, 111, 114,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 111, 
    109, 112, 120,   0,  99, 111, 
    109, 112, 121,   0, 109,  97, 
    112,  83,  99,  97, 108, 101, 
      0, 109,  97, 112, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    115,  99,  97, 108, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   2,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0, 128, 191,   0,   0, 
      0,  63,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,   4,   0,   0,   4, 
      0,   0,   1, 128,   0,   0, 
      0, 176,   3,   0,   0, 160, 
      3,   0, 170, 161,   4,   0, 
      0,   4,   0,   0,   2, 128, 
      0,   0,  85, 176,   3,   0, 
     85, 160,   3,   0, 255, 161, 
      2,   0,   0,   3,   0,   0, 
     12, 128,   0,   0,  27, 128, 
      5,   0, 170, 160,  88,   0, 
      0,   4,   1,   0,   3, 128, 
      0,   0,  27, 128,   5,   0, 
      0, 160,   5,   0,  85, 160, 
     90,   0,   0,   4,   0,   0, 
      4, 128,   1,   0, 228, 128, 
      5,   0,   0, 160,   5,   0, 
     85, 160,  88,   0,   0,   4, 
      1,   0,   3, 128,   0,   0, 
    228, 129,   5,   0,   0, 160, 
      5,   0,  85, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 128,   0,   8, 
    228, 160,  90,   0,   0,   4, 
      0,   0,  17, 128,   1,   0, 
    228, 128,   5,   0,   0, 160, 
      0,   0, 170, 128,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 129,   5,   0, 
      0, 160,  18,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
      0, 128,   2,   0, 228, 128, 
      5,   0, 255, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      1,   0, 228, 128,   1,   0, 
    228, 160,   5,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   2,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      2, 128,   5,   0,   0, 160, 
      1,   0, 228, 128,   9,   0, 
      0,   3,   1,   0,   1, 128, 
      5,   0,   0, 160,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   1,   0, 
    228, 128,   5,   0, 255, 161, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      4,   0, 228, 160,   0,   0, 
    228, 176,   2,   0,   0,   3, 
      0,   0,  12, 128,   0,   0, 
     27, 128,   5,   0, 170, 160, 
     88,   0,   0,   4,   1,   0, 
      3, 128,   0,   0,  27, 128, 
      5,   0,   0, 160,   5,   0, 
     85, 160,  90,   0,   0,   4, 
      0,   0,   4, 128,   1,   0, 
    228, 128,   5,   0,   0, 160, 
      5,   0,  85, 160,  88,   0, 
      0,   4,   1,   0,   3, 128, 
      0,   0, 228, 129,   5,   0, 
      0, 160,   5,   0,  85, 160, 
     66,   0,   0,   3,   2,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   8, 228, 160,  90,   0, 
      0,   4,   0,   0,  17, 128, 
      1,   0, 228, 128,   5,   0, 
      0, 160,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 129, 
      5,   0,   0, 160,  18,   0, 
      0,   4,   1,   0,  15, 128, 
      0,   0,   0, 128,   2,   0, 
    228, 128,   0,   0, 228, 160, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   1,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

    vs_2_0
    def c144, 6, 0.100000001, 2.0999999, 0
    def c145, 0, 1, 0, 0
    def c146, 1.10000002, 3.0999999, 4.0999999, 5.0999999
    dcl_position v0
    dcl_color1 v1
    mad r0.xy, v1.x, c144.x, c144.yzzw
    frc r1, r0.xyyy
    add r0.xy, r0, -r1.xwzw
    mad r1, v1.x, c144.x, -r1
    add r1, r1, c146
    mova a0.xy, r0
    dp4 oT0.x, v0, c0[a0.y]
    dp4 oPos.x, v0, c0[a0.x]
    mova a0.x, r1.x
    dp4 oPos.y, v0, c0[a0.x]
    mova a0.x, r1.y
    dp4 oT0.y, v0, c0[a0.x]
    mova a0.xy, r1.zwzw
    dp4 oT1.y, v0, c0[a0.y]
    dp4 oT1.x, v0, c0[a0.x]
    mov oPos.zw, c145.xyxy

// approximately 16 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VDrawableCopyPixels[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    144,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
      0,   0, 192,  64, 205, 204, 
    204,  61, 102, 102,   6,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 145,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 146,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
     70,  64,  51,  51, 131,  64, 
     51,  51, 163,  64,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      1,   0,   0, 144, 144,   0, 
      0, 160, 144,   0, 233, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0,  84, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      1,   0, 236, 129,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,   0, 144, 144,   0, 
      0, 160,   1,   0, 228, 129, 
      2,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
    146,   0, 228, 160,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 228, 128,   9,   0, 
      0,   4,   0,   0,   1, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   0,   0, 
      1, 192,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   1,   0, 
      0, 128,   9,   0,   0,   4, 
      0,   0,   2, 192,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      1,   0,  85, 128,   9,   0, 
      0,   4,   0,   0,   2, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 238, 128, 
      9,   0,   0,   4,   1,   0, 
      2, 224,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      1,   0,   1, 224,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  12, 192, 
    145,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    dcl t1.xy
    dcl_2d s1
    texld r0, t1, s1
    mov oC0, r0

// approximately 2 instruction slots used (1 texture, 1 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FDrawableCopyPixels[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   6,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 176,   1,   8, 228, 160, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl t0.xy
    dcl t1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s0
    texld r1, t1, s1
    lrp r2.w, r0.w, c0.x, r1.w
    rcp r0.w, r2.w
    mul r0.w, r0.w, r1.w
    lrp r2.xyz, r0.w, r1, r0
    mov oC0, r2

// approximately 7 instruction slots used (2 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FDrawableCopyPixelsMergeAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,   8, 128, 
      0,   0, 255, 128,   0,   0, 
      0, 160,   1,   0, 255, 128, 
      6,   0,   0,   2,   0,   0, 
      8, 128,   2,   0, 255, 128, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      1,   0, 255, 128,  18,   0, 
      0,   4,   2,   0,   7, 128, 
      0,   0, 255, 128,   1,   0, 
    228, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   2,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl t0.xy
    dcl t1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s0
    texld r1, t1, s1
    lrp r2.xyz, r1.w, r1, r0
    mov r2.w, c0.x
    mov oC0, r2

// approximately 5 instruction slots used (2 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FDrawableCopyPixelsNoDestAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,   7, 128, 
      1,   0, 255, 128,   1,   0, 
    228, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   2,   0, 
      8, 128,   0,   0,   0, 160, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   2,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[192];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     192
//

    vs_2_0
    def c192, 8, 0.100000001, 2.0999999, 0
    def c193, 6.0999999, 7.0999999, 0, 1
    def c194, 1.10000002, 3.0999999, 4.0999999, 5.0999999
    dcl_position v0
    dcl_color1 v1
    mad r0.xy, v1.x, c192.x, c192.yzzw
    frc r1, r0.xyyy
    add r0.xy, r0, -r1.xwzw
    mad r1, v1.x, c192.x, -r1
    mova a0.xy, r0
    dp4 oT0.x, v0, c0[a0.y]
    dp4 oPos.x, v0, c0[a0.x]
    add r0, r1, c194
    add r1.xy, r1.w, c193
    mova a0.x, r0.x
    dp4 oPos.y, v0, c0[a0.x]
    mova a0.x, r0.y
    dp4 oT0.y, v0, c0[a0.x]
    mova a0.xy, r0.zwzw
    dp4 oT1.y, v0, c0[a0.y]
    dp4 oT1.x, v0, c0[a0.x]
    mova a0.xy, r1
    dp4 oT2.y, v0, c0[a0.y]
    dp4 oT2.x, v0, c0[a0.x]
    mov oPos.zw, c193

// approximately 20 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VDrawableCopyPixelsAlpha[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    192,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 192,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
      0,   0,   0,  65, 205, 204, 
    204,  61, 102, 102,   6,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 193,   0,  15, 160, 
     51,  51, 195,  64,  51,  51, 
    227,  64,   0,   0,   0,   0, 
      0,   0, 128,  63,  81,   0, 
      0,   5, 194,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
     70,  64,  51,  51, 131,  64, 
     51,  51, 163,  64,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      1,   0,   0, 144, 192,   0, 
      0, 160, 192,   0, 233, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0,  84, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      1,   0, 236, 129,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,   0, 144, 192,   0, 
      0, 160,   1,   0, 228, 129, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 228, 128, 
      9,   0,   0,   4,   0,   0, 
      1, 224,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      0,   0,   1, 192,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,   2,   0, 
      0,   3,   0,   0,  15, 128, 
      1,   0, 228, 128, 194,   0, 
    228, 160,   2,   0,   0,   3, 
      1,   0,   3, 128,   1,   0, 
    255, 128, 193,   0, 228, 160, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   0,   0, 
      2, 192,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
     85, 128,   9,   0,   0,   4, 
      0,   0,   2, 224,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 238, 128,   9,   0, 
      0,   4,   1,   0,   2, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   1,   0, 
      1, 224,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   1,   0, 
    228, 128,   9,   0,   0,   4, 
      2,   0,   2, 224,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,  85, 176,   9,   0, 
      0,   4,   2,   0,   1, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     12, 192, 193,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_2_0
    dcl t1.xy
    dcl t2.xy
    dcl_2d s1
    dcl_2d s2
    texld r0, t2, s2
    texld r1, t1, s1
    mul r1.w, r0.w, r1.w
    mov oC0, r1

// approximately 4 instruction slots used (2 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FDrawableCopyPixelsAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   6,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 176,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      1,   8, 228, 160,   5,   0, 
      0,   3,   1,   0,   8, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   1,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl t0.xy
    dcl t1.xy
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t0, s0
    texld r1, t2, s2
    texld r2, t1, s1
    mad r1.x, r2.w, -r1.w, c0.x
    mul r2.w, r1.w, r2.w
    mad r1.w, r0.w, r1.x, r2.w
    rcp r0.w, r1.w
    mul r0.w, r0.w, r2.w
    lrp r1.xyz, r0.w, r2, r0
    mov oC0, r1

// approximately 10 instruction slots used (3 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FDrawableCopyPixelsAlphaMergeAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      2,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      1,   0, 228, 176,   1,   8, 
    228, 160,   4,   0,   0,   4, 
      1,   0,   1, 128,   2,   0, 
    255, 128,   1,   0, 255, 129, 
      0,   0,   0, 160,   5,   0, 
      0,   3,   2,   0,   8, 128, 
      1,   0, 255, 128,   2,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,   8, 128,   0,   0, 
    255, 128,   1,   0,   0, 128, 
      2,   0, 255, 128,   6,   0, 
      0,   2,   0,   0,   8, 128, 
      1,   0, 255, 128,   5,   0, 
      0,   3,   0,   0,   8, 128, 
      0,   0, 255, 128,   2,   0, 
    255, 128,  18,   0,   0,   4, 
      1,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      1,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl t0.xy
    dcl t1.xy
    dcl t2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t0, s0
    texld r1, t2, s2
    texld r2, t1, s1
    mul r0.w, r1.w, r2.w
    lrp r1.xyz, r0.w, r2, r0
    mov r1.w, c0.x
    mov oC0, r1

// approximately 7 instruction slots used (3 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FDrawableCopyPixelsAlphaNoDestAlpha[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 176, 
      2,   8, 228, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      1,   0, 228, 176,   1,   8, 
    228, 160,   5,   0,   0,   3, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   2,   0, 255, 128, 
     18,   0,   0,   4,   1,   0, 
      7, 128,   0,   0, 255, 128, 
      2,   0, 228, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      1,   0,   8, 128,   0,   0, 
      0, 160,   1,   0,   0,   2, 
      0,   8,  15, 128,   1,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 cxmul;
//   float4x4 cxmul1;
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxmul        c0       4
//   cxmul1       c4       4
//   tex          s0       2
//

    ps_2_0
    dcl t0.xy
    dcl t1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s0
    texld r1, t1, s1
    dp4 r2.x, r0, c0
    dp4 r2.y, r0, c1
    dp4 r2.z, r0, c2
    dp4 r2.w, r0, c3
    dp4 r0.x, r1, c4
    dp4 r0.y, r1, c5
    dp4 r0.z, r1, c6
    dp4 r0.w, r1, c7
    add r0, r0, r2
    mov oC0, r0

// approximately 12 instruction slots used (2 texture, 10 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FDrawableMerge[] =
{
      0,   2, 255, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   2, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      4,   0,   4,   0,  18,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 119,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      2,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,  49,   0, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      1,   8, 228, 160,   9,   0, 
      0,   3,   2,   0,   1, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      2,   0,   2, 128,   0,   0, 
    228, 128,   1,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      4, 128,   0,   0, 228, 128, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   2,   0,   8, 128, 
      0,   0, 228, 128,   3,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   1, 128,   1,   0, 
    228, 128,   4,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 128,   1,   0, 228, 128, 
      5,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   4, 128, 
      1,   0, 228, 128,   6,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   8, 128,   1,   0, 
    228, 128,   7,   0, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_2_0
    def c0, 0, 1, -0, -1
    def c1, 0.00392156886, 0, 0, 0
    dcl t0.xy
    dcl t1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s0
    texld r1, t1, s1
    add r0, r0, -r1
    cmp r1, -r0, c0.x, c0.y
    cmp r2, r0, c0.z, c0.w
    frc r0, r0
    add r1, r1, r2
    add r1, r1, c0.y
    cmp r1, -r1, c1.x, c1.y
    add r0, r0, r1
    dp3 r1.x, r0, c0.y
    mov r2.w, r0.w
    mov r2.xyz, c0.y
    mov r0.w, c0.y
    cmp r0, -r1.x, r2, r0
    mov oC0, r0

// approximately 16 instruction slots used (2 texture, 14 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FDrawableCompare[] =
{
      0,   2, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   2, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0, 128,   0,   0, 
    128, 191,  81,   0,   0,   5, 
      1,   0,  15, 160, 129, 128, 
    128,  59,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
      3, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 129,  88,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
    228, 129,   0,   0,   0, 160, 
      0,   0,  85, 160,  88,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0, 228, 128,   0,   0, 
    170, 160,   0,   0, 255, 160, 
     19,   0,   0,   2,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
      2,   0, 228, 128,   2,   0, 
      0,   3,   1,   0,  15, 128, 
      1,   0, 228, 128,   0,   0, 
     85, 160,  88,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
    228, 129,   1,   0,   0, 160, 
      1,   0,  85, 160,   2,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   8,   0,   0,   3, 
      1,   0,   1, 128,   0,   0, 
    228, 128,   0,   0,  85, 160, 
      1,   0,   0,   2,   2,   0, 
      8, 128,   0,   0, 255, 128, 
      1,   0,   0,   2,   2,   0, 
      7, 128,   0,   0,  85, 160, 
      1,   0,   0,   2,   0,   0, 
      8, 128,   0,   0,  85, 160, 
     88,   0,   0,   4,   0,   0, 
     15, 128,   1,   0,   0, 129, 
      2,   0, 228, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,  15, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D srctex;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   srctex       s0       1
//   tex          s1       1
//

    ps_2_0
    def c0, 0.125, 0.375, 0.625, 0.875
    dcl t0.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s1
    mov r1.y, c0.x
    mov r1.x, r0.x
    mov r2.y, c0.y
    mov r2.x, r0.y
    mov r0.x, r0.z
    mov r3.x, r0.w
    mov r0.y, c0.z
    mov r3.y, c0.w
    texld r1, r1, s0
    texld r2, r2, s0
    texld r0, r0, s0
    texld r3, r3, s0
    add r1, r1, r2
    add r0, r0, r1
    add r0, r3, r0
    mov oC0, r0

// approximately 17 instruction slots used (5 texture, 12 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FDrawablePaletteMap[] =
{
      0,   2, 255, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   2, 255, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  76,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   3,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 112, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   0,   0,  15, 160, 
      0,   0,   0,  62,   0,   0, 
    192,  62,   0,   0,  32,  63, 
      0,   0,  96,  63,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,   3, 176,  31,   0, 
      0,   2,   0,   0,   0, 144, 
      0,   8,  15, 160,  31,   0, 
      0,   2,   0,   0,   0, 144, 
      1,   8,  15, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 176,   1,   8, 
    228, 160,   1,   0,   0,   2, 
      1,   0,   2, 128,   0,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   1, 128,   0,   0, 
      0, 128,   1,   0,   0,   2, 
      2,   0,   2, 128,   0,   0, 
     85, 160,   1,   0,   0,   2, 
      2,   0,   1, 128,   0,   0, 
     85, 128,   1,   0,   0,   2, 
      0,   0,   1, 128,   0,   0, 
    170, 128,   1,   0,   0,   2, 
      3,   0,   1, 128,   0,   0, 
    255, 128,   1,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
    170, 160,   1,   0,   0,   2, 
      3,   0,   2, 128,   0,   0, 
    255, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   0,   8, 228, 160, 
     66,   0,   0,   3,   2,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   0,   8, 
    228, 160,  66,   0,   0,   3, 
      3,   0,  15, 128,   3,   0, 
    228, 128,   0,   8, 228, 160, 
      2,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
      2,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D dsttex;
//   sampler2D srctex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   dsttex       s0       1
//   srctex       s1       1
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl_pp t0.xy
    dcl_pp t1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s1
    texld r1, t1, s0
    max r2.xyz, r0, r1
    lrp r3.xyz, r0.w, r2, r1
    lrp r3.w, r1.w, c0.x, r0.w
    mov oC0, r3

// approximately 6 instruction slots used (2 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FBlendLighten[] =
{
      0,   2, 255, 255, 254, 255, 
     45,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 123,   0, 
      0,   0,   0,   2, 255, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    116,   0,   0,   0,  68,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  76,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   3,   0, 
      1,   0,   1,   0,   6,   0, 
    100,   0,   0,   0,   0,   0, 
      0,   0, 100, 115, 116, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   1,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      0,   8, 228, 160,  11,   0, 
      0,   3,   2,   0,   7, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,  18,   0,   0,   4, 
      3,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 128, 
      1,   0, 228, 128,  18,   0, 
      0,   4,   3,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
      0, 160,   0,   0, 255, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   3,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D dsttex;
//   sampler2D srctex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   dsttex       s0       1
//   srctex       s1       1
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl_pp t0.xy
    dcl_pp t1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s1
    texld r1, t1, s0
    min r2.xyz, r1, r0
    lrp r3.xyz, r1.w, r2, r0
    add r3.w, -r0.w, c0.x
    mad r0.w, r3.w, r1.w, r0.w
    mad r0.xyz, r1, r3.w, r3
    mov oC0, r0

// approximately 8 instruction slots used (2 texture, 6 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FBlendDarken[] =
{
      0,   2, 255, 255, 254, 255, 
     45,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 123,   0, 
      0,   0,   0,   2, 255, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    116,   0,   0,   0,  68,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  76,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   3,   0, 
      1,   0,   1,   0,   6,   0, 
    100,   0,   0,   0,   0,   0, 
      0,   0, 100, 115, 116, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   1,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      0,   8, 228, 160,  10,   0, 
      0,   3,   2,   0,   7, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 128,  18,   0,   0,   4, 
      3,   0,   7, 128,   1,   0, 
    255, 128,   2,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   3,   0,   8, 128, 
      0,   0, 255, 129,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   0,   8, 128,   3,   0, 
    255, 128,   1,   0, 255, 128, 
      0,   0, 255, 128,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      1,   0, 228, 128,   3,   0, 
    255, 128,   3,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D dsttex;
//   sampler2D srctex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   dsttex       s0       1
//   srctex       s1       1
//

    ps_2_0
    def c0, 1, -0.5, 0, 0
    dcl_pp t0.xy
    dcl_pp t1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t1, s0
    texld r1, t0, s1
    add r2.xyz, r0, c0.y
    cmp r3.xyz, r2, c0.z, c0.x
    cmp r2.xyz, r2, c0.x, c0.z
    mul r4.xyz, r0, r1
    add r4.xyz, r4, r4
    mul r3.xyz, r3, r4
    add r4.xyz, -r1, c0.x
    add r4.xyz, r4, r4
    add r5.xyz, -r0, c0.x
    mad r4.xyz, r4, -r5, c0.x
    mad r2.xyz, r4, r2, r3
    add r2.w, -r0.w, c0.x
    mul r1.xyz, r1, r2.w
    mad r1.xyz, r2, r1.w, r1
    add r2.x, -r1.w, c0.x
    mad r3.w, r2.x, r0.w, r1.w
    mad r3.xyz, r0, r2.x, r1
    mov oC0, r3

// approximately 20 instruction slots used (2 texture, 18 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FBlendOverlay[] =
{
      0,   2, 255, 255, 254, 255, 
     45,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 123,   0, 
      0,   0,   0,   2, 255, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    116,   0,   0,   0,  68,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  76,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   3,   0, 
      1,   0,   1,   0,   6,   0, 
    100,   0,   0,   0,   0,   0, 
      0,   0, 100, 115, 116, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 176,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   0,   0, 228, 176, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   2,   0,   7, 128, 
      0,   0, 228, 128,   0,   0, 
     85, 160,  88,   0,   0,   4, 
      3,   0,   7, 128,   2,   0, 
    228, 128,   0,   0, 170, 160, 
      0,   0,   0, 160,  88,   0, 
      0,   4,   2,   0,   7, 128, 
      2,   0, 228, 128,   0,   0, 
      0, 160,   0,   0, 170, 160, 
      5,   0,   0,   3,   4,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   2,   0, 
      0,   3,   4,   0,   7, 128, 
      4,   0, 228, 128,   4,   0, 
    228, 128,   5,   0,   0,   3, 
      3,   0,   7, 128,   3,   0, 
    228, 128,   4,   0, 228, 128, 
      2,   0,   0,   3,   4,   0, 
      7, 128,   1,   0, 228, 129, 
      0,   0,   0, 160,   2,   0, 
      0,   3,   4,   0,   7, 128, 
      4,   0, 228, 128,   4,   0, 
    228, 128,   2,   0,   0,   3, 
      5,   0,   7, 128,   0,   0, 
    228, 129,   0,   0,   0, 160, 
      4,   0,   0,   4,   4,   0, 
      7, 128,   4,   0, 228, 128, 
      5,   0, 228, 129,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      2,   0,   7, 128,   4,   0, 
    228, 128,   2,   0, 228, 128, 
      3,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   8, 128, 
      0,   0, 255, 129,   0,   0, 
      0, 160,   5,   0,   0,   3, 
      1,   0,   7, 128,   1,   0, 
    228, 128,   2,   0, 255, 128, 
      4,   0,   0,   4,   1,   0, 
      7, 128,   2,   0, 228, 128, 
      1,   0, 255, 128,   1,   0, 
    228, 128,   2,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
    255, 129,   0,   0,   0, 160, 
      4,   0,   0,   4,   3,   0, 
      8, 128,   2,   0,   0, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 128,   4,   0,   0,   4, 
      3,   0,   7, 128,   0,   0, 
    228, 128,   2,   0,   0, 128, 
      1,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      3,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D dsttex;
//   sampler2D srctex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   dsttex       s0       1
//   srctex       s1       1
//

    ps_2_0
    def c0, 1, -0.5, 0, 0
    dcl_pp t0.xy
    dcl_pp t1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s1
    texld r1, t1, s0
    add r2.xyz, -r0, c0.x
    add r2.xyz, r2, r2
    add r3.xyz, -r1, c0.x
    mad r2.xyz, r2, -r3, c0.x
    add r3.xyz, r1, c0.y
    cmp r4.xyz, r3, c0.z, c0.x
    cmp r3.xyz, r3, c0.x, c0.z
    mul r2.xyz, r2, r4
    mul r4.xyz, r0, r1
    add r4.xyz, r4, r4
    mad r2.xyz, r4, r3, r2
    add r2.w, -r1.w, c0.x
    mul r0.xyz, r0, r2.w
    mad r0.xyz, r2, r0.w, r0
    add r2.x, -r0.w, c0.x
    mad r3.w, r2.x, r1.w, r0.w
    mad r3.xyz, r1, r2.x, r0
    mov oC0, r3

// approximately 20 instruction slots used (2 texture, 18 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FBlendHardlight[] =
{
      0,   2, 255, 255, 254, 255, 
     45,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 123,   0, 
      0,   0,   0,   2, 255, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    116,   0,   0,   0,  68,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  76,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   3,   0, 
      1,   0,   1,   0,   6,   0, 
    100,   0,   0,   0,   0,   0, 
      0,   0, 100, 115, 116, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   1,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      0,   8, 228, 160,   2,   0, 
      0,   3,   2,   0,   7, 128, 
      0,   0, 228, 129,   0,   0, 
      0, 160,   2,   0,   0,   3, 
      2,   0,   7, 128,   2,   0, 
    228, 128,   2,   0, 228, 128, 
      2,   0,   0,   3,   3,   0, 
      7, 128,   1,   0, 228, 129, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   2,   0,   7, 128, 
      2,   0, 228, 128,   3,   0, 
    228, 129,   0,   0,   0, 160, 
      2,   0,   0,   3,   3,   0, 
      7, 128,   1,   0, 228, 128, 
      0,   0,  85, 160,  88,   0, 
      0,   4,   4,   0,   7, 128, 
      3,   0, 228, 128,   0,   0, 
    170, 160,   0,   0,   0, 160, 
     88,   0,   0,   4,   3,   0, 
      7, 128,   3,   0, 228, 128, 
      0,   0,   0, 160,   0,   0, 
    170, 160,   5,   0,   0,   3, 
      2,   0,   7, 128,   2,   0, 
    228, 128,   4,   0, 228, 128, 
      5,   0,   0,   3,   4,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   2,   0, 
      0,   3,   4,   0,   7, 128, 
      4,   0, 228, 128,   4,   0, 
    228, 128,   4,   0,   0,   4, 
      2,   0,   7, 128,   4,   0, 
    228, 128,   3,   0, 228, 128, 
      2,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   8, 128, 
      1,   0, 255, 129,   0,   0, 
      0, 160,   5,   0,   0,   3, 
      0,   0,   7, 128,   0,   0, 
    228, 128,   2,   0, 255, 128, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   2,   0, 228, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      2,   0,   1, 128,   0,   0, 
    255, 129,   0,   0,   0, 160, 
      4,   0,   0,   4,   3,   0, 
      8, 128,   2,   0,   0, 128, 
      1,   0, 255, 128,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      3,   0,   7, 128,   1,   0, 
    228, 128,   2,   0,   0, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      3,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D dsttex;
//   sampler2D srctex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   dsttex       s0       1
//   srctex       s1       1
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl_pp t0.xy
    dcl_pp t1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s1
    texld r1, t1, s0
    add r2.xyz, r0, -r1
    add r0.xyz, -r0, r1
    lrp r3.w, r1.w, c0.x, r0.w
    max r3.xyz, r2, r0
    mov oC0, r3

// approximately 7 instruction slots used (2 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FBlendDifference[] =
{
      0,   2, 255, 255, 254, 255, 
     45,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 123,   0, 
      0,   0,   0,   2, 255, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    116,   0,   0,   0,  68,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  76,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   3,   0, 
      1,   0,   1,   0,   6,   0, 
    100,   0,   0,   0,   0,   0, 
      0,   0, 100, 115, 116, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  50, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     35, 176,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   1,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 176, 
      0,   8, 228, 160,   2,   0, 
      0,   3,   2,   0,   7, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 129,   2,   0,   0,   3, 
      0,   0,   7, 128,   0,   0, 
    228, 129,   1,   0, 228, 128, 
     18,   0,   0,   4,   3,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   0,   0, 
    255, 128,  11,   0,   0,   3, 
      3,   0,   7, 128,   2,   0, 
    228, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   3,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[192];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     192
//

    vs_2_0
    def c192, 8, 0, 1, 0
    def c193, 2.0999999, 4.0999999, 0.100000001, 1.10000002
    def c194, 3.0999999, 5.0999999, 6.0999999, 7.0999999
    dcl_position v0
    dcl_color1 v1
    mov r0.x, c192.x
    mad r0, v1.x, r0.x, c193
    frc r1, r0
    add r0, r0, -r1
    mad r1, v1.x, c192.x, -r1.xyyy
    add r1, r1, c194
    mova a0.x, r0.x
    dp4 oPos.x, v0, c0[a0.x]
    mova a0.x, r1.x
    dp4 oPos.y, v0, c0[a0.x]
    mova a0.x, r0.y
    dp4 oT2.x, v0, c0[a0.x]
    mova a0.x, r1.y
    dp4 oT2.y, v0, c0[a0.x]
    mova a0.xy, r1.zwzw
    dp4 oT3.y, v0, c0[a0.y]
    dp4 oT3.x, v0, c0[a0.x]
    mova a0.xy, r0.zwzw
    mov oT1, c0[a0.y]
    mov oT0, c0[a0.x]
    mov oPos.zw, c192.xyyz

// approximately 21 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM20_VBlendLayer[] =
{
      0,   2, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   2, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    192,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 192,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  50,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
      0,   0,   0,  65,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 193,   0,  15, 160, 
    102, 102,   6,  64,  51,  51, 
    131,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 194,   0,  15, 160, 
    102, 102,  70,  64,  51,  51, 
    163,  64,  51,  51, 195,  64, 
     51,  51, 227,  64,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,   1,   0, 
      0,   2,   0,   0,   1, 128, 
    192,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
      0, 128, 193,   0, 228, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,   0, 144, 192,   0, 
      0, 160,   1,   0,  84, 129, 
      2,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
    194,   0, 228, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 192, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   1,   0,   0, 128, 
      9,   0,   0,   4,   0,   0, 
      2, 192,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
     85, 128,   9,   0,   0,   4, 
      2,   0,   1, 224,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      1,   0,  85, 128,   9,   0, 
      0,   4,   2,   0,   2, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 238, 128, 
      9,   0,   0,   4,   3,   0, 
      2, 224,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      3,   0,   1, 224,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 238, 128,   1,   0, 
      0,   3,   1,   0,  15, 224, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   1,   0,   0,   3, 
      0,   0,  15, 224,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     12, 192, 192,   0, 148, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D alphatex;
//   sampler2D srctex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   alphatex     s0       1
//   srctex       s1       1
//

    ps_2_0
    def c0, 1, 0, 0, 0
    dcl t0
    dcl t1
    dcl_pp t2.xy
    dcl_pp t3.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, t3, s0
    texld r1, t2, s1
    mul r0, r0.w, r1
    mov r1.xyz, t1
    mov r1.w, c0.x
    mul r0, r0, r1
    mul r0, r0, t1.w
    mad r0, t0, r0.w, r0
    mov oC0, r0

// approximately 9 instruction slots used (2 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM20_FBlendLayer[] =
{
      0,   2, 255, 255, 254, 255, 
     46,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 127,   0, 
      0,   0,   0,   2, 255, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    120,   0,   0,   0,  68,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   3,   0, 
      1,   0,   1,   0,   6,   0, 
    104,   0,   0,   0,   0,   0, 
      0,   0,  97, 108, 112, 104, 
     97, 116, 101, 120,   0, 171, 
    171, 171,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    115, 114,  99, 116, 101, 120, 
      0, 171,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    112, 115,  95,  50,  95,  48, 
      0,  77, 105,  99, 114, 111, 
    115, 111, 102, 116,  32,  40, 
     82,  41,  32,  72,  76,  83, 
     76,  32,  83, 104,  97, 100, 
    101, 114,  32,  67, 111, 109, 
    112, 105, 108, 101, 114,  32, 
     57,  46,  51,  48,  46,  57, 
     50,  48,  48,  46,  49,  54, 
     51,  56,  52,   0, 171, 171, 
     81,   0,   0,   5,   0,   0, 
     15, 160,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   0,   0, 
      0, 128,   0,   0,  15, 176, 
     31,   0,   0,   2,   0,   0, 
      0, 128,   1,   0,  15, 176, 
     31,   0,   0,   2,   0,   0, 
      0, 128,   2,   0,  35, 176, 
     31,   0,   0,   2,   0,   0, 
      0, 128,   3,   0,  35, 176, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     66,   0,   0,   3,   0,   0, 
     15, 128,   3,   0, 228, 176, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   1,   0,  15, 128, 
      2,   0, 228, 176,   1,   8, 
    228, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    255, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   1,   0, 
      7, 128,   1,   0, 228, 176, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   0,   0,   0, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 176,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 176,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//   texgen       c2       2
//

    vs_3_0
    def c4, 0, 1, 0, 0
    dcl_position v0
    dcl_texcoord o0.xy
    dcl_position o1
    dp4 o1.x, v0, c0
    dp4 o1.y, v0, c1
    dp4 o0.x, v0, c2
    dp4 o0.y, v0, c3
    mov o1.zw, c4.xyxy

// approximately 5 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VTexTG[] =
{
      0,   3, 254, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   2,   0,  72,   0, 
      0,   0,   0,   0,   0,   0, 
     88,   0,   0,   0,   2,   0, 
      2,   0,   2,   0,  10,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 109, 118, 112,   0, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   4,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 224,   9,   0, 
      0,   3,   1,   0,   1, 224, 
      0,   0, 228, 144,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   2, 224,   0,   0, 
    228, 144,   1,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      1, 224,   0,   0, 228, 144, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   2, 224, 
      0,   0, 228, 144,   3,   0, 
    228, 160,   1,   0,   0,   2, 
      1,   0,  12, 224,   4,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_texcoord_pp v0.xy
    dcl_2d s0
    texld oC0, v0, s0

// approximately 1 instruction slot used (1 texture, 0 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTG[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   8,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float mipLevels;
//   sampler2D tex;
//   float2 textureDims;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mipLevels    c0       1
//   textureDims  c1       1
//   tex          s0       1
//

    ps_3_0
    def c2, 0, 0.5, -1, 1
    def c3, 1.88235307, 0.00100000005, 0, 0
    def c4, -1, 1, 2, -2
    dcl_texcoord v0.xy
    dcl_2d s0
    mul r0, c1.xxyy, v0.xyxy
    dsx r0.xy, r0
    dsy r0.zw, r0
    dp2add r1.x, r0, r0, c2.x
    dp2add r1.y, r0.zwzw, r0.zwzw, c2.x
    max r2.x, r1.x, r1.y
    log r1.x, r2.x
    mad r1.x, r1.x, c2.y, c2.z
    max r2.x, r1.x, c2.x
    mov r1.z, c2.z
    add r1.x, r1.z, c0.x
    min r3.x, r1.x, r2.x
    exp r1.x, r3.x
    rcp r1.x, r1.x
    mul r0, r0, r1.x
    dp2add r0.z, r0.zwzw, r0.zwzw, c2.x
    dp2add r0.x, r0, r0, c2.x
    max r1.x, r0.x, r0.z
    rsq r0.x, r1.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, -c2.y, c2.w
    mul r0.y, r0.x, c3.x
    cmp r0.y, r0.x, r0.y, c2.x
    mad r0.xz, r0.y, c4.xyyw, c4.zyww
    mov_sat r0.xyz, r0
    texld r1, v0, s0
    mov r0.w, c2.w
    mad oC0, r1, c3.y, r0

// approximately 34 instruction slots used (1 texture, 33 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexDensity[] =
{
      0,   3, 255, 255, 254, 255, 
     57,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 171,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    164,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 100,   0, 
      0,   0,   0,   0,   0,   0, 
    116,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 148,   0,   0,   0, 
      0,   0,   0,   0, 109, 105, 
    112,  76, 101, 118, 101, 108, 
    115,   0, 171, 171,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 116, 117, 114, 101,  68, 
    105, 109, 115,   0,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,  63, 
      0,   0, 128, 191,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      3,   0,  15, 160, 242, 240, 
    240,  63, 111,  18, 131,  58, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
    128, 191,   0,   0, 128,  63, 
      0,   0,   0,  64,   0,   0, 
      0, 192,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
     80, 160,   0,   0,  68, 144, 
     91,   0,   0,   2,   0,   0, 
      3, 128,   0,   0, 228, 128, 
     92,   0,   0,   2,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     90,   0,   0,   4,   1,   0, 
      1, 128,   0,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
      0, 160,  90,   0,   0,   4, 
      1,   0,   2, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,   0, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   1,   0, 
     85, 128,  15,   0,   0,   2, 
      1,   0,   1, 128,   2,   0, 
      0, 128,   4,   0,   0,   4, 
      1,   0,   1, 128,   1,   0, 
      0, 128,   2,   0,  85, 160, 
      2,   0, 170, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   2,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   4, 128,   2,   0, 
    170, 160,   2,   0,   0,   3, 
      1,   0,   1, 128,   1,   0, 
    170, 128,   0,   0,   0, 160, 
     10,   0,   0,   3,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      2,   0,   0, 128,  14,   0, 
      0,   2,   1,   0,   1, 128, 
      3,   0,   0, 128,   6,   0, 
      0,   2,   1,   0,   1, 128, 
      1,   0,   0, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
      0, 128,  90,   0,   0,   4, 
      0,   0,   4, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,   0, 160,  90,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 128,   2,   0,   0, 160, 
     11,   0,   0,   3,   1,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0, 170, 128,   7,   0, 
      0,   2,   0,   0,   1, 128, 
      1,   0,   0, 128,   6,   0, 
      0,   2,   0,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   2,   0, 
     85, 161,   2,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      3,   0,   0, 160,  88,   0, 
      0,   4,   0,   0,   2, 128, 
      0,   0,   0, 128,   0,   0, 
     85, 128,   2,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      5, 128,   0,   0,  85, 128, 
      4,   0, 212, 160,   4,   0, 
    246, 160,   1,   0,   0,   2, 
      0,   0,  23, 128,   0,   0, 
    228, 128,  66,   0,   0,   3, 
      1,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      1,   0,   0,   2,   0,   0, 
      8, 128,   2,   0, 255, 160, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   1,   0, 228, 128, 
      3,   0,  85, 160,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_texcoord_pp v0.xy
    dcl_2d s0
    texld r0, v0, s0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 3 instruction slots used (1 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_texcoord_pp v0.xy
    dcl_2d s0
    texld r0, v0, s0
    mov oC0, r0.w

// approximately 2 instruction slots used (1 texture, 1 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//   texgen       c2       2
//

    vs_3_0
    def c4, 0, 1, 0, 0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1.xy
    dcl_position o2
    dp4 o2.x, v1, c0
    dp4 o2.y, v1, c1
    dp4 o1.x, v1, c2
    dp4 o1.y, v1, c3
    mov o0, v0
    mov o2.zw, c4.xyxy

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VTexTGEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   2,   0,  72,   0, 
      0,   0,   0,   0,   0,   0, 
     88,   0,   0,   0,   2,   0, 
      2,   0,   2,   0,  10,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 109, 118, 112,   0, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   4,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 224,   9,   0, 
      0,   3,   2,   0,   1, 224, 
      1,   0, 228, 144,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      2,   0,   2, 224,   1,   0, 
    228, 144,   1,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      1, 224,   1,   0, 228, 144, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   1,   0,   2, 224, 
      1,   0, 228, 144,   3,   0, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      2,   0,  12, 224,   4,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0.w
    dcl_texcoord_pp v1.xy
    dcl_2d s0
    texld r0, v1, s0
    mul oC0.w, r0.w, v0.w
    mov oC0.xyz, r0

// approximately 3 instruction slots used (1 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   8, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,   7, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float mipLevels;
//   sampler2D tex;
//   float2 textureDims;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mipLevels    c0       1
//   textureDims  c1       1
//   tex          s0       1
//

    ps_3_0
    def c2, 0, 0.5, -1, 1
    def c3, 1.88235307, 0.00100000005, 0, 0
    def c4, -1, 1, 2, -2
    dcl_color v0.w
    dcl_texcoord v1.xy
    dcl_2d s0
    mul r0, c1.xxyy, v1.xyxy
    dsx r0.xy, r0
    dsy r0.zw, r0
    dp2add r1.x, r0, r0, c2.x
    dp2add r1.y, r0.zwzw, r0.zwzw, c2.x
    max r2.x, r1.x, r1.y
    log r1.x, r2.x
    mad r1.x, r1.x, c2.y, c2.z
    max r2.x, r1.x, c2.x
    mov r1.z, c2.z
    add r1.x, r1.z, c0.x
    min r3.x, r1.x, r2.x
    exp r1.x, r3.x
    rcp r1.x, r1.x
    mul r0, r0, r1.x
    dp2add r0.z, r0.zwzw, r0.zwzw, c2.x
    dp2add r0.x, r0, r0, c2.x
    max r1.x, r0.x, r0.z
    rsq r0.x, r1.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, -c2.y, c2.w
    mul r0.y, r0.x, c3.x
    cmp r0.y, r0.x, r0.y, c2.x
    mad r0.xz, r0.y, c4.xyyw, c4.zyww
    mov_sat r0.xyz, r0
    mov r0.w, c2.w
    texld r1, v1, s0
    mul r1.w, r1.w, v0.w
    mad oC0, r1, c3.y, r0

// approximately 35 instruction slots used (1 texture, 34 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGEAlphaTexDensity[] =
{
      0,   3, 255, 255, 254, 255, 
     57,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 171,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    164,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 100,   0, 
      0,   0,   0,   0,   0,   0, 
    116,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 148,   0,   0,   0, 
      0,   0,   0,   0, 109, 105, 
    112,  76, 101, 118, 101, 108, 
    115,   0, 171, 171,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 116, 117, 114, 101,  68, 
    105, 109, 115,   0,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,  63, 
      0,   0, 128, 191,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      3,   0,  15, 160, 242, 240, 
    240,  63, 111,  18, 131,  58, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
    128, 191,   0,   0, 128,  63, 
      0,   0,   0,  64,   0,   0, 
      0, 192,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
     80, 160,   1,   0,  68, 144, 
     91,   0,   0,   2,   0,   0, 
      3, 128,   0,   0, 228, 128, 
     92,   0,   0,   2,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     90,   0,   0,   4,   1,   0, 
      1, 128,   0,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
      0, 160,  90,   0,   0,   4, 
      1,   0,   2, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,   0, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   1,   0, 
     85, 128,  15,   0,   0,   2, 
      1,   0,   1, 128,   2,   0, 
      0, 128,   4,   0,   0,   4, 
      1,   0,   1, 128,   1,   0, 
      0, 128,   2,   0,  85, 160, 
      2,   0, 170, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   2,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   4, 128,   2,   0, 
    170, 160,   2,   0,   0,   3, 
      1,   0,   1, 128,   1,   0, 
    170, 128,   0,   0,   0, 160, 
     10,   0,   0,   3,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      2,   0,   0, 128,  14,   0, 
      0,   2,   1,   0,   1, 128, 
      3,   0,   0, 128,   6,   0, 
      0,   2,   1,   0,   1, 128, 
      1,   0,   0, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
      0, 128,  90,   0,   0,   4, 
      0,   0,   4, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,   0, 160,  90,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 128,   2,   0,   0, 160, 
     11,   0,   0,   3,   1,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0, 170, 128,   7,   0, 
      0,   2,   0,   0,   1, 128, 
      1,   0,   0, 128,   6,   0, 
      0,   2,   0,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   2,   0, 
     85, 161,   2,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      3,   0,   0, 160,  88,   0, 
      0,   4,   0,   0,   2, 128, 
      0,   0,   0, 128,   0,   0, 
     85, 128,   2,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      5, 128,   0,   0,  85, 128, 
      4,   0, 212, 160,   4,   0, 
    246, 160,   1,   0,   0,   2, 
      0,   0,  23, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   0,   8, 128,   2,   0, 
    255, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
      5,   0,   0,   3,   1,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      1,   0, 228, 128,   3,   0, 
     85, 160,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0.w
    dcl_texcoord_pp v1.xy
    dcl_2d s0
    texld r0, v1, s0
    mul r0.w, r0.w, v0.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0.w
    dcl_texcoord_pp v1.xy
    dcl_2d s0
    texld r0, v1, s0
    mul oC0, r0.w, v0.w

// approximately 2 instruction slots used (1 texture, 1 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGEAlphaInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   8, 
     15, 128,   0,   0, 255, 128, 
      0,   0, 255, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//   texgen       c4       2
//

    vs_3_0
    def c6, 0, 1, 0, 0
    dcl_position v0
    dcl_texcoord o0
    dcl_texcoord1 o1
    dcl_texcoord2 o2.xy
    dcl_position o3
    dp4 o3.x, v0, c2
    dp4 o3.y, v0, c3
    dp4 o2.x, v0, c4
    dp4 o2.y, v0, c5
    mov o0, c0
    mov o1, c1
    mov o3.zw, c6.xyxy

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VTexTGCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     62,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 191,   0, 
      0,   0,   0,   3, 254, 255, 
      4,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    184,   0,   0,   0, 108,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
    132,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 138,   0,   0,   0, 
      2,   0,   2,   0,   2,   0, 
     10,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 160,   0, 
      0,   0,   2,   0,   4,   0, 
      2,   0,  18,   0, 168,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120,  97, 100, 100,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    109, 118, 112,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   6,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   9,   0, 
      0,   3,   3,   0,   1, 224, 
      0,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      3,   0,   2, 224,   0,   0, 
    228, 144,   3,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      1, 224,   0,   0, 228, 144, 
      4,   0, 228, 160,   9,   0, 
      0,   3,   2,   0,   2, 224, 
      0,   0, 228, 144,   5,   0, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 160,   1,   0,   0,   2, 
      1,   0,  15, 224,   1,   0, 
    228, 160,   1,   0,   0,   2, 
      3,   0,  12, 224,   6,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2_pp v2.xy
    dcl_2d s0
    texld r0, v2, s0
    mov r1, v1
    mad oC0, r0, r1, v0

// approximately 3 instruction slots used (1 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGCxform[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   1,   0, 228, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2_pp v2.xy
    dcl_2d s0
    texld r0, v2, s0
    mov r1, v1
    mad r0, r0, r1, v0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 5 instruction slots used (1 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGCxformMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   1,   0, 228, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 144,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_texcoord v0.w
    dcl_texcoord1 v1.w
    dcl_texcoord2_pp v2.xy
    dcl_2d s0
    texld r0, v2, s0
    mov r1.w, v1.w
    mad oC0, r0.w, r1.w, v0.w

// approximately 3 instruction slots used (1 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGCxformInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 255, 128, 
      1,   0, 255, 128,   0,   0, 
    255, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//   texgen       c4       2
//

    vs_3_0
    def c6, 0, 1, 0, 0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3.xy
    dcl_position o4
    dp4 o4.x, v1, c2
    dp4 o4.y, v1, c3
    dp4 o3.x, v1, c4
    dp4 o3.y, v1, c5
    mov o0, v0
    mov o1, c0
    mov o2, c1
    mov o4.zw, c6.xyxy

// approximately 8 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VTexTGCxformEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     62,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 191,   0, 
      0,   0,   0,   3, 254, 255, 
      4,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    184,   0,   0,   0, 108,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
    132,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 138,   0,   0,   0, 
      2,   0,   2,   0,   2,   0, 
     10,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 160,   0, 
      0,   0,   2,   0,   4,   0, 
      2,   0,  18,   0, 168,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120,  97, 100, 100,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    109, 118, 112,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   6,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      3,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      4,   0,  15, 224,   9,   0, 
      0,   3,   4,   0,   1, 224, 
      1,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      4,   0,   2, 224,   1,   0, 
    228, 144,   3,   0, 228, 160, 
      9,   0,   0,   3,   3,   0, 
      1, 224,   1,   0, 228, 144, 
      4,   0, 228, 160,   9,   0, 
      0,   3,   3,   0,   2, 224, 
      1,   0, 228, 144,   5,   0, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  15, 224,   0,   0, 
    228, 160,   1,   0,   0,   2, 
      2,   0,  15, 224,   1,   0, 
    228, 160,   1,   0,   0,   2, 
      4,   0,  12, 224,   6,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0.w
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2_pp v3.xy
    dcl_2d s0
    texld r0, v3, s0
    mov r1, v2
    mad r0, r0, r1, v1
    mul oC0.w, r0.w, v0.w
    mov oC0.xyz, r0

// approximately 5 instruction slots used (1 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGCxformEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   2,   0, 228, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   1,   0, 
    228, 144,   5,   0,   0,   3, 
      0,   8,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
      7, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0.w
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2_pp v3.xy
    dcl_2d s0
    texld r0, v3, s0
    mov r1, v2
    mad r0, r0, r1, v1
    mul r0.w, r0.w, v0.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 6 instruction slots used (1 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGCxformEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   2,   0, 228, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   1,   0, 
    228, 144,   5,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0.w
    dcl_texcoord v1.w
    dcl_texcoord1 v2.w
    dcl_texcoord2_pp v3.xy
    dcl_2d s0
    texld r0, v3, s0
    mov r1.w, v2.w
    mad r0.x, r0.w, r1.w, v1.w
    mul oC0, r0.x, v0.w

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGCxformEAlphaInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   2,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      1,   0, 255, 128,   1,   0, 
    255, 144,   5,   0,   0,   3, 
      0,   8,  15, 128,   0,   0, 
      0, 128,   0,   0, 255, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2_pp v2.xy
    dcl_2d s0
    texld r0, v2, s0
    mad r1, v1.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 5 instruction slots used (1 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGCxformAc[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   1,   0,  36, 144, 
      0,   0,  64, 160,   0,   0, 
     21, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2_pp v2.xy
    dcl_2d s0
    texld r0, v2, s0
    mad r1, v1.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 7 instruction slots used (1 texture, 6 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGCxformAcMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   1,   0,  36, 144, 
      0,   0,  64, 160,   0,   0, 
     21, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_texcoord v0.w
    dcl_texcoord1 v1.w
    dcl_texcoord2_pp v2.xy
    dcl_2d s0
    texld r0, v2, s0
    mul r0.x, r0.w, v1.w
    mad oC0, v0.w, r0.x, r0.x

// approximately 3 instruction slots used (1 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGCxformAcInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      0,   0, 255, 144,   0,   0, 
      0, 128,   0,   0,   0, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_color v0.w
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2_pp v3.xy
    dcl_2d s0
    texld r0, v3, s0
    mad r1, v2.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, r1
    mul r0, r0, v2.w
    mad r0, v1, r0.w, r0
    mul oC0.w, r0.w, v0.w
    mov oC0.xyz, r0

// approximately 7 instruction slots used (1 texture, 6 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGCxformAcEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   2,   0,  36, 144, 
      0,   0,  64, 160,   0,   0, 
     21, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,   7, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_color v0.w
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2_pp v3.xy
    dcl_2d s0
    texld r0, v3, s0
    mad r1, v2.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, r1
    mul r0, r0, v2.w
    mad r0, v1, r0.w, r0
    mul r0.w, r0.w, v0.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 8 instruction slots used (1 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGCxformAcEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   2,   0,  36, 144, 
      0,   0,  64, 160,   0,   0, 
     21, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0.w
    dcl_texcoord v1.w
    dcl_texcoord1 v2.w
    dcl_texcoord2_pp v3.xy
    dcl_2d s0
    texld r0, v3, s0
    mul r0.x, r0.w, v2.w
    mad r0.x, v1.w, r0.x, r0.x
    mul oC0, r0.x, v0.w

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGCxformAcEAlphaInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      2,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      1,   0, 255, 144,   0,   0, 
      0, 128,   0,   0,   0, 128, 
      5,   0,   0,   3,   0,   8, 
     15, 128,   0,   0,   0, 128, 
      0,   0, 255, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//

    vs_3_0
    def c2, 0, 1, 0, 0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_position o1
    dp4 o1.x, v1, c0
    dp4 o1.y, v1, c1
    mov o0, v0
    mov o1.zw, c2.xyxy

// approximately 4 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VVertex[] =
{
      0,   3, 254, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    109, 118, 112,   0,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 224,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 224,   9,   0,   0,   3, 
      1,   0,   1, 224,   1,   0, 
    228, 144,   0,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      2, 224,   1,   0, 228, 144, 
      1,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  12, 224, 
      2,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    dcl_color v0
    mov oC0, v0

// approximately 1 instruction slot used
#endif

extern const BYTE pBinary_D3D9SM30_FVertex[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 228, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    dcl_color v0
    mul oC0.xyz, v0.w, v0
    mov oC0.w, v0.w

// approximately 2 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexMul[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 144,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    dcl_color v0.w
    mov oC0, v0.w

// approximately 1 instruction slot used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexInv[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,   8, 144,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      0,   0, 255, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//

    vs_3_0
    def c2, 0, 1, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color o0
    dcl_color1 o1
    dcl_position o2
    dp4 o2.x, v2, c0
    dp4 o2.y, v2, c1
    mov o0, v0
    mov o1, v1
    mov o2.zw, c2.xyxy

// approximately 5 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VVertexEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    109, 118, 112,   0,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 224,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
     15, 224,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     15, 224,   9,   0,   0,   3, 
      2,   0,   1, 224,   2,   0, 
    228, 144,   0,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      2, 224,   2,   0, 228, 144, 
      1,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 144,   1,   0, 
      0,   2,   2,   0,  12, 224, 
      2,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    dcl_color v0
    dcl_color1 v1.w
    mov r0.w, v0.w
    mul oC0.w, r0.w, v1.w
    mov oC0.xyz, v0

// approximately 3 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,   8, 144,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   8,   8, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   8,   7, 128,   0,   0, 
    228, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    dcl_color v0
    dcl_color1 v1.w
    mov r0.w, v0.w
    mul r0.x, r0.w, v1.w
    mul oC0.xyz, r0.x, v0
    mov oC0.w, r0.x

// approximately 4 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,   8, 144,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 144,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
      0, 128,   0,   0, 228, 144, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0,   0, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    dcl_color v0.w
    dcl_color1 v1.w
    mov r0.w, v0.w
    mul oC0, r0.w, v1.w

// approximately 2 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexEAlphaInv[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,   8, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,   8, 144,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   8,  15, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//

    vs_3_0
    def c4, 0, 1, 0, 0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_position o3
    dp4 o3.x, v1, c2
    dp4 o3.y, v1, c3
    mov o0, v0
    mov o1, c0
    mov o2, c1
    mov o3.zw, c4.xyxy

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VVertexCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   3, 254, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 118,   0,   0,   0, 
      2,   0,   2,   0,   2,   0, 
     10,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 109, 118, 
    112,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 224,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 224,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 224,  31,   0,   0,   2, 
      0,   0,   0, 128,   3,   0, 
     15, 224,   9,   0,   0,   3, 
      3,   0,   1, 224,   1,   0, 
    228, 144,   2,   0, 228, 160, 
      9,   0,   0,   3,   3,   0, 
      2, 224,   1,   0, 228, 144, 
      3,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      0,   0, 228, 160,   1,   0, 
      0,   2,   2,   0,  15, 224, 
      1,   0, 228, 160,   1,   0, 
      0,   2,   3,   0,  12, 224, 
      4,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    dcl_color v0
    dcl_texcoord v1
    dcl_texcoord1 v2
    mov r0, v0
    mov r1, v2
    mad oC0, r0, r1, v1

// approximately 3 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexCxform[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 144,   1,   0, 
      0,   2,   0,   0,  15, 128, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      2,   0, 228, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   1,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    dcl_color v0
    dcl_texcoord v1
    dcl_texcoord1 v2
    mov r0, v0
    mov r1, v2
    mad r0, r0, r1, v1
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 5 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexCxformMul[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 144,   1,   0, 
      0,   2,   0,   0,  15, 128, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      2,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   1,   0, 228, 144, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    dcl_color v0.w
    dcl_texcoord v1.w
    dcl_texcoord1 v2.w
    mov r0.w, v0.w
    mov r1.w, v2.w
    mad oC0, r0.w, r1.w, v1.w

// approximately 3 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexCxformInv[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,   8, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,   8, 144,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,   8, 144,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   1,   0,   8, 128, 
      2,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 128,   1,   0, 255, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//

    vs_3_0
    def c4, 0, 1, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2
    dcl_texcoord1 o3
    dcl_position o4
    dp4 o4.x, v2, c2
    dp4 o4.y, v2, c3
    mov o0, v0
    mov o1, v1
    mov o2, c0
    mov o3, c1
    mov o4.zw, c4.xyxy

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VVertexCxformEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   3, 254, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 118,   0,   0,   0, 
      2,   0,   2,   0,   2,   0, 
     10,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 109, 118, 
    112,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 224,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
     15, 224,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
     15, 224,  31,   0,   0,   2, 
      5,   0,   1, 128,   3,   0, 
     15, 224,  31,   0,   0,   2, 
      0,   0,   0, 128,   4,   0, 
     15, 224,   9,   0,   0,   3, 
      4,   0,   1, 224,   2,   0, 
    228, 144,   2,   0, 228, 160, 
      9,   0,   0,   3,   4,   0, 
      2, 224,   2,   0, 228, 144, 
      3,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 144,   1,   0, 
      0,   2,   2,   0,  15, 224, 
      0,   0, 228, 160,   1,   0, 
      0,   2,   3,   0,  15, 224, 
      1,   0, 228, 160,   1,   0, 
      0,   2,   4,   0,  12, 224, 
      4,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    dcl_color v0
    dcl_color1 v1.w
    dcl_texcoord v2
    dcl_texcoord1 v3
    mov r0, v0
    mov r1, v3
    mad r0, r0, r1, v2
    mul oC0.w, r0.w, v1.w
    mov oC0.xyz, r0

// approximately 5 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexCxformEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,   8, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      3,   0,  15, 144,   1,   0, 
      0,   2,   0,   0,  15, 128, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      3,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   2,   0, 228, 144, 
      5,   0,   0,   3,   0,   8, 
      8, 128,   0,   0, 255, 128, 
      1,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,   7, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    dcl_color v0
    dcl_color1 v1.w
    dcl_texcoord v2
    dcl_texcoord1 v3
    mov r0, v0
    mov r1, v3
    mad r0, r0, r1, v2
    mul r0.w, r0.w, v1.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexCxformEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,   8, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      3,   0,  15, 144,   1,   0, 
      0,   2,   0,   0,  15, 128, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      3,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   2,   0, 228, 144, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      1,   0, 255, 144,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    dcl_color v0.w
    dcl_color1 v1.w
    dcl_texcoord v2.w
    dcl_texcoord1 v3.w
    mov r0.w, v0.w
    mov r1.w, v3.w
    mad r0.x, r0.w, r1.w, v2.w
    mul oC0, r0.x, v1.w

// approximately 4 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexCxformEAlphaInv[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,   8, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,   8, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,   8, 144,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      3,   0,   8, 144,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   1,   0,   8, 128, 
      3,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 128,   2,   0, 255, 144, 
      5,   0,   0,   3,   0,   8, 
     15, 128,   0,   0,   0, 128, 
      1,   0, 255, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_color v0
    dcl_texcoord v1
    dcl_texcoord1 v2
    mad r0, v2.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, v0
    mul r0, r0, v2.w
    mad oC0, v1, r0.w, r0

// approximately 4 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexCxformAc[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   0,   0,  15, 160, 
      0,   0, 128,  63,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      2,   0,  36, 144,   0,   0, 
     64, 160,   0,   0,  21, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 144,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   2,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   8,  15, 128,   1,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_color v0
    dcl_texcoord v1
    dcl_texcoord1 v2
    mad r0, v2.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, v0
    mul r0, r0, v2.w
    mad r0, v1, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexCxformAcMul[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   0,   0,  15, 160, 
      0,   0, 128,  63,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      2,   0,  36, 144,   0,   0, 
     64, 160,   0,   0,  21, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 144,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   2,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    dcl_color v0.w
    dcl_texcoord v1.w
    dcl_texcoord1 v2.w
    mov r0.w, v0.w
    mul r0.x, r0.w, v2.w
    mad oC0, v1.w, r0.x, r0.x

// approximately 3 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexCxformAcInv[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,   8, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,   8, 144,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,   8, 144,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0, 255, 128,   2,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   8,  15, 128,   1,   0, 
    255, 144,   0,   0,   0, 128, 
      0,   0,   0, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_color v0
    dcl_color1 v1.w
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v3.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, v0
    mul r0, r0, v3.w
    mad r0, v2, r0.w, r0
    mul oC0.w, r0.w, v1.w
    mov oC0.xyz, r0

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexCxformAcEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   0,   0,  15, 160, 
      0,   0, 128,  63,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,   8, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      3,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      3,   0,  36, 144,   0,   0, 
     64, 160,   0,   0,  21, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 144,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   3,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   8,   8, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   8,   7, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_color v0
    dcl_color1 v1.w
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v3.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, v0
    mul r0, r0, v3.w
    mad r0, v2, r0.w, r0
    mul r0.w, r0.w, v1.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexCxformAcEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   0,   0,  15, 160, 
      0,   0, 128,  63,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,   8, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      3,   0,  15, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      3,   0,  36, 144,   0,   0, 
     64, 160,   0,   0,  21, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 144,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   3,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   8, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 144,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
/    ps_3_0
    dcl_color v0.w
    dcl_color1 v1.w
    dcl_texcoord v2.w
    dcl_texcoord1 v3.w
    mov r0.w, v0.w
    mul r0.x, r0.w, v3.w
    mad r0.x, v2.w, r0.x, r0.x
    mul oC0, r0.x, v1.w

// approximately 4 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FVertexCxformAcEAlphaInv[] =
{
      0,   3, 255, 255, 254, 255, 
     23,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   0, 
      0,   0,   0,   3, 255, 255, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,   8, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,   8, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,   8, 144,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      3,   0,   8, 144,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0, 255, 128,   3,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   0,   1, 128,   2,   0, 
    255, 144,   0,   0,   0, 128, 
      0,   0,   0, 128,   5,   0, 
      0,   3,   0,   8,  15, 128, 
      0,   0,   0, 128,   1,   0, 
    255, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 mvp[2];
//   float4 texgen[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//   texgen       c2       4
//

    vs_3_0
    def c6, 0, 1, 0, 0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xy
    dcl_position o3
    dp4 o3.x, v1, c0
    dp4 o3.y, v1, c1
    dp4 o1.x, v1, c2
    dp4 o1.y, v1, c3
    dp4 o2.x, v1, c4
    dp4 o2.y, v1, c5
    mov o0, v0
    mov o3.zw, c6.xyxy

// approximately 8 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VTexTGTexTG[] =
{
      0,   3, 254, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   2,   0,  72,   0, 
      0,   0,   0,   0,   0,   0, 
     88,   0,   0,   0,   2,   0, 
      2,   0,   4,   0,  10,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 109, 118, 112,   0, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   4,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   6,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,   3, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   9,   0, 
      0,   3,   3,   0,   1, 224, 
      1,   0, 228, 144,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      3,   0,   2, 224,   1,   0, 
    228, 144,   1,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      1, 224,   1,   0, 228, 144, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   1,   0,   2, 224, 
      1,   0, 228, 144,   3,   0, 
    228, 160,   9,   0,   0,   3, 
      2,   0,   1, 224,   1,   0, 
    228, 144,   4,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      2, 224,   1,   0, 228, 144, 
      5,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   3,   0,  12, 224, 
      6,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    dcl_color v0.x
    dcl_texcoord_pp v1.xy
    dcl_texcoord1_pp v2.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v1, s0
    texld r1, v2, s1
    add r0, r0, -r1
    mad oC0, v0.x, r0, r1

// approximately 4 instruction slots used (2 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTG[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 129,   4,   0,   0,   4, 
      0,   8,  15, 128,   0,   0, 
      0, 144,   0,   0, 228, 128, 
      1,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float mipLevels;
//   sampler2D tex[2];
//   float2 textureDims;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mipLevels    c0       1
//   textureDims  c1       1
//   tex          s0       2
//

    ps_3_0
    def c2, 0, 0.5, -1, 1
    def c3, 1.88235307, 0.00100000005, 0, 0
    def c4, -1, 1, 2, -2
    dcl_color v0.x
    dcl_texcoord v1.xy
    dcl_texcoord1_pp v2.xy
    dcl_2d s0
    dcl_2d s1
    mul r0, c1.xxyy, v1.xyxy
    dsx r0.xy, r0
    dsy r0.zw, r0
    dp2add r1.x, r0, r0, c2.x
    dp2add r1.y, r0.zwzw, r0.zwzw, c2.x
    max r2.x, r1.x, r1.y
    log r1.x, r2.x
    mad r1.x, r1.x, c2.y, c2.z
    max r2.x, r1.x, c2.x
    mov r1.z, c2.z
    add r1.x, r1.z, c0.x
    min r3.x, r1.x, r2.x
    exp r1.x, r3.x
    rcp r1.x, r1.x
    mul r0, r0, r1.x
    dp2add r0.z, r0.zwzw, r0.zwzw, c2.x
    dp2add r0.x, r0, r0, c2.x
    max r1.x, r0.x, r0.z
    rsq r0.x, r1.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, -c2.y, c2.w
    mul r0.y, r0.x, c3.x
    cmp r0.y, r0.x, r0.y, c2.x
    mad r0.xz, r0.y, c4.xyyw, c4.zyww
    mov_sat r0.xyz, r0
    texld r1, v1, s0
    texld r2, v2, s1
    lrp r3, v0.x, r1, r2
    mov r0.w, c2.w
    mad oC0, r3, c3.y, r0

// approximately 36 instruction slots used (2 texture, 34 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGTexDensity[] =
{
      0,   3, 255, 255, 254, 255, 
     57,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 171,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    164,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 100,   0, 
      0,   0,   0,   0,   0,   0, 
    116,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   2,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 148,   0,   0,   0, 
      0,   0,   0,   0, 109, 105, 
    112,  76, 101, 118, 101, 108, 
    115,   0, 171, 171,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 116, 117, 114, 101,  68, 
    105, 109, 115,   0,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,  63, 
      0,   0, 128, 191,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      3,   0,  15, 160, 242, 240, 
    240,  63, 111,  18, 131,  58, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
    128, 191,   0,   0, 128,  63, 
      0,   0,   0,  64,   0,   0, 
      0, 192,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
     80, 160,   1,   0,  68, 144, 
     91,   0,   0,   2,   0,   0, 
      3, 128,   0,   0, 228, 128, 
     92,   0,   0,   2,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     90,   0,   0,   4,   1,   0, 
      1, 128,   0,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
      0, 160,  90,   0,   0,   4, 
      1,   0,   2, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,   0, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   1,   0, 
     85, 128,  15,   0,   0,   2, 
      1,   0,   1, 128,   2,   0, 
      0, 128,   4,   0,   0,   4, 
      1,   0,   1, 128,   1,   0, 
      0, 128,   2,   0,  85, 160, 
      2,   0, 170, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   2,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   4, 128,   2,   0, 
    170, 160,   2,   0,   0,   3, 
      1,   0,   1, 128,   1,   0, 
    170, 128,   0,   0,   0, 160, 
     10,   0,   0,   3,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      2,   0,   0, 128,  14,   0, 
      0,   2,   1,   0,   1, 128, 
      3,   0,   0, 128,   6,   0, 
      0,   2,   1,   0,   1, 128, 
      1,   0,   0, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
      0, 128,  90,   0,   0,   4, 
      0,   0,   4, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,   0, 160,  90,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 128,   2,   0,   0, 160, 
     11,   0,   0,   3,   1,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0, 170, 128,   7,   0, 
      0,   2,   0,   0,   1, 128, 
      1,   0,   0, 128,   6,   0, 
      0,   2,   0,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   2,   0, 
     85, 161,   2,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      3,   0,   0, 160,  88,   0, 
      0,   4,   0,   0,   2, 128, 
      0,   0,   0, 128,   0,   0, 
     85, 128,   2,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      5, 128,   0,   0,  85, 128, 
      4,   0, 212, 160,   4,   0, 
    246, 160,   1,   0,   0,   2, 
      0,   0,  23, 128,   0,   0, 
    228, 128,  66,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   2,   0, 
     15, 128,   2,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   3,   0,  15, 128, 
      0,   0,   0, 144,   1,   0, 
    228, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   0,   0, 
      8, 128,   2,   0, 255, 160, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   3,   0, 228, 128, 
      3,   0,  85, 160,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    dcl_color v0.x
    dcl_texcoord_pp v1.xy
    dcl_texcoord1_pp v2.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v1, s0
    texld r1, v2, s1
    lrp r2, v0.x, r0, r1
    mul oC0.xyz, r2.w, r2
    mov oC0.w, r2.w

// approximately 5 instruction slots used (2 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   2,   0, 255, 128, 
      2,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      2,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    dcl_color v0.x
    dcl_texcoord_pp v1.xy
    dcl_texcoord1_pp v2.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v1, s0
    texld r1, v2, s1
    add r0.x, r0.w, -r1.w
    mad oC0, v0.x, r0.x, r1.w

// approximately 4 instruction slots used (2 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 129,   4,   0,   0,   4, 
      0,   8,  15, 128,   0,   0, 
      0, 144,   0,   0,   0, 128, 
      1,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    dcl_color v0.xw
    dcl_texcoord_pp v1.xy
    dcl_texcoord1_pp v2.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v1, s0
    texld r1, v2, s1
    lrp r2, v0.x, r0, r1
    mul oC0.w, r2.w, v0.w
    mov oC0.xyz, r2

// approximately 5 instruction slots used (2 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      8, 128,   2,   0, 255, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,   7, 128, 
      2,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float mipLevels;
//   sampler2D tex[2];
//   float2 textureDims;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mipLevels    c0       1
//   textureDims  c1       1
//   tex          s0       2
//

    ps_3_0
    def c2, 0, 0.5, -1, 1
    def c3, 1.88235307, 0.00100000005, 0, 0
    def c4, -1, 1, 2, -2
    dcl_color v0.xw
    dcl_texcoord v1.xy
    dcl_texcoord1_pp v2.xy
    dcl_2d s0
    dcl_2d s1
    mul r0, c1.xxyy, v1.xyxy
    dsx r0.xy, r0
    dsy r0.zw, r0
    dp2add r1.x, r0, r0, c2.x
    dp2add r1.y, r0.zwzw, r0.zwzw, c2.x
    max r2.x, r1.x, r1.y
    log r1.x, r2.x
    mad r1.x, r1.x, c2.y, c2.z
    max r2.x, r1.x, c2.x
    mov r1.z, c2.z
    add r1.x, r1.z, c0.x
    min r3.x, r1.x, r2.x
    exp r1.x, r3.x
    rcp r1.x, r1.x
    mul r0, r0, r1.x
    dp2add r0.z, r0.zwzw, r0.zwzw, c2.x
    dp2add r0.x, r0, r0, c2.x
    max r1.x, r0.x, r0.z
    rsq r0.x, r1.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, -c2.y, c2.w
    mul r0.y, r0.x, c3.x
    cmp r0.y, r0.x, r0.y, c2.x
    mad r0.xz, r0.y, c4.xyyw, c4.zyww
    mov_sat r0.xyz, r0
    texld r1, v1, s0
    texld r2, v2, s1
    lrp r3, v0.x, r1, r2
    mul r3.w, r3.w, v0.w
    mov r0.w, c2.w
    mad oC0, r3, c3.y, r0

// approximately 37 instruction slots used (2 texture, 35 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGEAlphaTexDensity[] =
{
      0,   3, 255, 255, 254, 255, 
     57,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 171,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    164,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 100,   0, 
      0,   0,   0,   0,   0,   0, 
    116,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   2,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 148,   0,   0,   0, 
      0,   0,   0,   0, 109, 105, 
    112,  76, 101, 118, 101, 108, 
    115,   0, 171, 171,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 116, 117, 114, 101,  68, 
    105, 109, 115,   0,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,  63, 
      0,   0, 128, 191,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      3,   0,  15, 160, 242, 240, 
    240,  63, 111,  18, 131,  58, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
    128, 191,   0,   0, 128,  63, 
      0,   0,   0,  64,   0,   0, 
      0, 192,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
     80, 160,   1,   0,  68, 144, 
     91,   0,   0,   2,   0,   0, 
      3, 128,   0,   0, 228, 128, 
     92,   0,   0,   2,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     90,   0,   0,   4,   1,   0, 
      1, 128,   0,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
      0, 160,  90,   0,   0,   4, 
      1,   0,   2, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,   0, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   1,   0, 
     85, 128,  15,   0,   0,   2, 
      1,   0,   1, 128,   2,   0, 
      0, 128,   4,   0,   0,   4, 
      1,   0,   1, 128,   1,   0, 
      0, 128,   2,   0,  85, 160, 
      2,   0, 170, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   2,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   4, 128,   2,   0, 
    170, 160,   2,   0,   0,   3, 
      1,   0,   1, 128,   1,   0, 
    170, 128,   0,   0,   0, 160, 
     10,   0,   0,   3,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      2,   0,   0, 128,  14,   0, 
      0,   2,   1,   0,   1, 128, 
      3,   0,   0, 128,   6,   0, 
      0,   2,   1,   0,   1, 128, 
      1,   0,   0, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
      0, 128,  90,   0,   0,   4, 
      0,   0,   4, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,   0, 160,  90,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 128,   2,   0,   0, 160, 
     11,   0,   0,   3,   1,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0, 170, 128,   7,   0, 
      0,   2,   0,   0,   1, 128, 
      1,   0,   0, 128,   6,   0, 
      0,   2,   0,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   2,   0, 
     85, 161,   2,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      3,   0,   0, 160,  88,   0, 
      0,   4,   0,   0,   2, 128, 
      0,   0,   0, 128,   0,   0, 
     85, 128,   2,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      5, 128,   0,   0,  85, 128, 
      4,   0, 212, 160,   4,   0, 
    246, 160,   1,   0,   0,   2, 
      0,   0,  23, 128,   0,   0, 
    228, 128,  66,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   2,   0, 
     15, 128,   2,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   3,   0,  15, 128, 
      0,   0,   0, 144,   1,   0, 
    228, 128,   2,   0, 228, 128, 
      5,   0,   0,   3,   3,   0, 
      8, 128,   3,   0, 255, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      2,   0, 255, 160,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      3,   0, 228, 128,   3,   0, 
     85, 160,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    dcl_color v0.xw
    dcl_texcoord_pp v1.xy
    dcl_texcoord1_pp v2.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v1, s0
    texld r1, v2, s1
    lrp r2, v0.x, r0, r1
    mul r0.x, r2.w, v0.w
    mul oC0.xyz, r0.x, r2
    mov oC0.w, r0.x

// approximately 6 instruction slots used (2 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   2,   0, 255, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0,   0, 128,   2,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
      0, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    dcl_color v0.xw
    dcl_texcoord_pp v1.xy
    dcl_texcoord1_pp v2.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v1, s0
    texld r1, v2, s1
    lrp r2.x, v0.x, r0.w, r1.w
    mul oC0, r2.x, v0.w

// approximately 4 instruction slots used (2 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGEAlphaInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,   1, 128, 
      0,   0,   0, 144,   0,   0, 
    255, 128,   1,   0, 255, 128, 
      5,   0,   0,   3,   0,   8, 
     15, 128,   2,   0,   0, 128, 
      0,   0, 255, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//   float4 texgen[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//   texgen       c4       4
//

    vs_3_0
    def c8, 0, 1, 0, 0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3.xy
    dcl_texcoord3 o4.xy
    dcl_position o5
    dp4 o5.x, v1, c2
    dp4 o5.y, v1, c3
    dp4 o3.x, v1, c4
    dp4 o3.y, v1, c5
    dp4 o4.x, v1, c6
    dp4 o4.y, v1, c7
    mov o0, v0
    mov o1, c0
    mov o2, c1
    mov o5.zw, c8.xyxy

// approximately 10 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VTexTGTexTGCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     62,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 191,   0, 
      0,   0,   0,   3, 254, 255, 
      4,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    184,   0,   0,   0, 108,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
    132,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 138,   0,   0,   0, 
      2,   0,   2,   0,   2,   0, 
     10,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 160,   0, 
      0,   0,   2,   0,   4,   0, 
      4,   0,  18,   0, 168,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120,  97, 100, 100,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    109, 118, 112,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   4,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   8,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      3,   0,   3, 224,  31,   0, 
      0,   2,   5,   0,   3, 128, 
      4,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      5,   0,  15, 224,   9,   0, 
      0,   3,   5,   0,   1, 224, 
      1,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      5,   0,   2, 224,   1,   0, 
    228, 144,   3,   0, 228, 160, 
      9,   0,   0,   3,   3,   0, 
      1, 224,   1,   0, 228, 144, 
      4,   0, 228, 160,   9,   0, 
      0,   3,   3,   0,   2, 224, 
      1,   0, 228, 144,   5,   0, 
    228, 160,   9,   0,   0,   3, 
      4,   0,   1, 224,   1,   0, 
    228, 144,   6,   0, 228, 160, 
      9,   0,   0,   3,   4,   0, 
      2, 224,   1,   0, 228, 144, 
      7,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      0,   0, 228, 160,   1,   0, 
      0,   2,   2,   0,  15, 224, 
      1,   0, 228, 160,   1,   0, 
      0,   2,   5,   0,  12, 224, 
      8,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    dcl_color v0.x
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2_pp v3.xy
    dcl_texcoord3_pp v4.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v3, s0
    texld r1, v4, s1
    lrp r2, v0.x, r0, r1
    mov r0, v2
    mad oC0, r2, r0, v1

// approximately 5 instruction slots used (2 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGCxform[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   3, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   4,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   2,   0, 228, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   2,   0, 228, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    dcl_color v0.x
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2_pp v3.xy
    dcl_texcoord3_pp v4.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v3, s0
    texld r1, v4, s1
    lrp r2, v0.x, r0, r1
    mov r0, v2
    mad r0, r2, r0, v1
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 7 instruction slots used (2 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGCxformMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   3, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   4,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   2,   0, 228, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 144,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    dcl_color v0.x
    dcl_texcoord v1.w
    dcl_texcoord1 v2.w
    dcl_texcoord2_pp v3.xy
    dcl_texcoord3_pp v4.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v3, s0
    texld r1, v4, s1
    lrp r2.x, v0.x, r0.w, r1.w
    mov r0.w, v2.w
    mad oC0, r2.x, r0.w, v1.w

// approximately 5 instruction slots used (2 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGCxformInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   3, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   4,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,   1, 128, 
      0,   0,   0, 144,   0,   0, 
    255, 128,   1,   0, 255, 128, 
      1,   0,   0,   2,   0,   0, 
      8, 128,   2,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   2,   0,   0, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    dcl_color v0.xw
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2_pp v3.xy
    dcl_texcoord3_pp v4.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v3, s0
    texld r1, v4, s1
    lrp r2, v0.x, r0, r1
    mov r0, v2
    mad r0, r2, r0, v1
    mul oC0.w, r0.w, v0.w
    mov oC0.xyz, r0

// approximately 7 instruction slots used (2 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGCxformEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   3, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   4,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   2,   0, 228, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 144,   5,   0,   0,   3, 
      0,   8,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
      7, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    dcl_color v0.xw
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2_pp v3.xy
    dcl_texcoord3_pp v4.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v3, s0
    texld r1, v4, s1
    lrp r2, v0.x, r0, r1
    mov r0, v2
    mad r0, r2, r0, v1
    mul r0.w, r0.w, v0.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 8 instruction slots used (2 texture, 6 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGCxformEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   3, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   4,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   2,   0, 228, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 144,   5,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    dcl_color v0.xw
    dcl_texcoord v1.w
    dcl_texcoord1 v2.w
    dcl_texcoord2_pp v3.xy
    dcl_texcoord3_pp v4.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v3, s0
    texld r1, v4, s1
    lrp r2.x, v0.x, r0.w, r1.w
    mov r0.w, v2.w
    mad r0.x, r2.x, r0.w, v1.w
    mul oC0, r0.x, v0.w

// approximately 6 instruction slots used (2 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGCxformEAlphaInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   3, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   4,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,   1, 128, 
      0,   0,   0, 144,   0,   0, 
    255, 128,   1,   0, 255, 128, 
      1,   0,   0,   2,   0,   0, 
      8, 128,   2,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
      1, 128,   2,   0,   0, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 144,   5,   0,   0,   3, 
      0,   8,  15, 128,   0,   0, 
      0, 128,   0,   0, 255, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_color v0.x
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2_pp v3.xy
    dcl_texcoord3_pp v4.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v3, s0
    texld r1, v4, s1
    lrp r2, v0.x, r0, r1
    mad r0, v2.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, r2
    mul r0, r0, v2.w
    mad oC0, v1, r0.w, r0

// approximately 7 instruction slots used (2 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGCxformAc[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   3, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   4,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0,  36, 144, 
      0,   0,  64, 160,   0,   0, 
     21, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   2,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      1,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_color v0.x
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2_pp v3.xy
    dcl_texcoord3_pp v4.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v3, s0
    texld r1, v4, s1
    lrp r2, v0.x, r0, r1
    mad r0, v2.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, r2
    mul r0, r0, v2.w
    mad r0, v1, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 9 instruction slots used (2 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGCxformAcMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   3, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   4,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0,  36, 144, 
      0,   0,  64, 160,   0,   0, 
     21, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   2,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    dcl_color v0.x
    dcl_texcoord v1.w
    dcl_texcoord1 v2.w
    dcl_texcoord2_pp v3.xy
    dcl_texcoord3_pp v4.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v3, s0
    texld r1, v4, s1
    lrp r2.x, v0.x, r0.w, r1.w
    mul r0.x, r2.x, v2.w
    mad oC0, v1.w, r0.x, r0.x

// approximately 5 instruction slots used (2 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGCxformAcInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   3, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   4,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,   1, 128, 
      0,   0,   0, 144,   0,   0, 
    255, 128,   1,   0, 255, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   2,   0,   0, 128, 
      2,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      1,   0, 255, 144,   0,   0, 
      0, 128,   0,   0,   0, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_color v0.xw
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2_pp v3.xy
    dcl_texcoord3_pp v4.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v3, s0
    texld r1, v4, s1
    lrp r2, v0.x, r0, r1
    mad r0, v2.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, r2
    mul r0, r0, v2.w
    mad r0, v1, r0.w, r0
    mul oC0.w, r0.w, v0.w
    mov oC0.xyz, r0

// approximately 9 instruction slots used (2 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGCxformAcEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   3, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   4,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0,  36, 144, 
      0,   0,  64, 160,   0,   0, 
     21, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   2,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,   7, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_color v0.xw
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2_pp v3.xy
    dcl_texcoord3_pp v4.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v3, s0
    texld r1, v4, s1
    lrp r2, v0.x, r0, r1
    mad r0, v2.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, r2
    mul r0, r0, v2.w
    mad r0, v1, r0.w, r0
    mul r0.w, r0.w, v0.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 10 instruction slots used (2 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGCxformAcEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   3, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   4,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0,  36, 144, 
      0,   0,  64, 160,   0,   0, 
     21, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   2,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    dcl_color v0.xw
    dcl_texcoord v1.w
    dcl_texcoord1 v2.w
    dcl_texcoord2_pp v3.xy
    dcl_texcoord3_pp v4.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v3, s0
    texld r1, v4, s1
    lrp r2.x, v0.x, r0.w, r1.w
    mul r0.x, r2.x, v2.w
    mad r0.x, v1.w, r0.x, r0.x
    mul oC0, r0.x, v0.w

// approximately 6 instruction slots used (2 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGTexTGCxformAcEAlphaInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   3, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   4,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,   1, 128, 
      0,   0,   0, 144,   0,   0, 
    255, 128,   1,   0, 255, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   2,   0,   0, 128, 
      2,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      1,   0, 255, 144,   0,   0, 
      0, 128,   0,   0,   0, 128, 
      5,   0,   0,   3,   0,   8, 
     15, 128,   0,   0,   0, 128, 
      0,   0, 255, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//   texgen       c2       2
//

    vs_3_0
    def c4, 0, 1, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2.xy
    dcl_position o3
    dp4 o3.x, v2, c0
    dp4 o3.y, v2, c1
    dp4 o2.x, v2, c2
    dp4 o2.y, v2, c3
    mov o0, v0
    mov o1, v1
    mov o3.zw, c4.xyxy

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VTexTGVertex[] =
{
      0,   3, 254, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   2,   0,  72,   0, 
      0,   0,   0,   0,   0,   0, 
     88,   0,   0,   0,   2,   0, 
      2,   0,   2,   0,  10,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 109, 118, 112,   0, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   4,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   9,   0, 
      0,   3,   3,   0,   1, 224, 
      2,   0, 228, 144,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      3,   0,   2, 224,   2,   0, 
    228, 144,   1,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      1, 224,   2,   0, 228, 144, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   2,   0,   2, 224, 
      2,   0, 228, 144,   3,   0, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  15, 224,   1,   0, 
    228, 144,   1,   0,   0,   2, 
      3,   0,  12, 224,   4,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0
    dcl_color1 v1.x
    dcl_texcoord_pp v2.xy
    dcl_2d s0
    texld r0, v2, s0
    add r0, r0, -v0
    mov r1, v0
    mad oC0, v1.x, r0, r1

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertex[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float mipLevels;
//   sampler2D tex;
//   float2 textureDims;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mipLevels    c0       1
//   textureDims  c1       1
//   tex          s0       1
//

    ps_3_0
    def c2, 0, 0.5, -1, 1
    def c3, 1.88235307, 0.00100000005, 0, 0
    def c4, -1, 1, 2, -2
    dcl_color v0
    dcl_color1 v1.x
    dcl_texcoord v2.xy
    dcl_2d s0
    mul r0, c1.xxyy, v2.xyxy
    dsx r0.xy, r0
    dsy r0.zw, r0
    dp2add r1.x, r0, r0, c2.x
    dp2add r1.y, r0.zwzw, r0.zwzw, c2.x
    max r2.x, r1.x, r1.y
    log r1.x, r2.x
    mad r1.x, r1.x, c2.y, c2.z
    max r2.x, r1.x, c2.x
    mov r1.z, c2.z
    add r1.x, r1.z, c0.x
    min r3.x, r1.x, r2.x
    exp r1.x, r3.x
    rcp r1.x, r1.x
    mul r0, r0, r1.x
    dp2add r0.z, r0.zwzw, r0.zwzw, c2.x
    dp2add r0.x, r0, r0, c2.x
    max r1.x, r0.x, r0.z
    rsq r0.x, r1.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, -c2.y, c2.w
    mul r0.y, r0.x, c3.x
    cmp r0.y, r0.x, r0.y, c2.x
    mad r0.xz, r0.y, c4.xyyw, c4.zyww
    mov_sat r0.xyz, r0
    texld r1, v2, s0
    add r1, r1, -v0
    mov r2, v0
    mad r1, v1.x, r1, r2
    mov r0.w, c2.w
    mad oC0, r1, c3.y, r0

// approximately 37 instruction slots used (1 texture, 36 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexTexDensity[] =
{
      0,   3, 255, 255, 254, 255, 
     57,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 171,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    164,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 100,   0, 
      0,   0,   0,   0,   0,   0, 
    116,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 148,   0,   0,   0, 
      0,   0,   0,   0, 109, 105, 
    112,  76, 101, 118, 101, 108, 
    115,   0, 171, 171,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 116, 117, 114, 101,  68, 
    105, 109, 115,   0,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,  63, 
      0,   0, 128, 191,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      3,   0,  15, 160, 242, 240, 
    240,  63, 111,  18, 131,  58, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
    128, 191,   0,   0, 128,  63, 
      0,   0,   0,  64,   0,   0, 
      0, 192,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
     80, 160,   2,   0,  68, 144, 
     91,   0,   0,   2,   0,   0, 
      3, 128,   0,   0, 228, 128, 
     92,   0,   0,   2,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     90,   0,   0,   4,   1,   0, 
      1, 128,   0,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
      0, 160,  90,   0,   0,   4, 
      1,   0,   2, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,   0, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   1,   0, 
     85, 128,  15,   0,   0,   2, 
      1,   0,   1, 128,   2,   0, 
      0, 128,   4,   0,   0,   4, 
      1,   0,   1, 128,   1,   0, 
      0, 128,   2,   0,  85, 160, 
      2,   0, 170, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   2,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   4, 128,   2,   0, 
    170, 160,   2,   0,   0,   3, 
      1,   0,   1, 128,   1,   0, 
    170, 128,   0,   0,   0, 160, 
     10,   0,   0,   3,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      2,   0,   0, 128,  14,   0, 
      0,   2,   1,   0,   1, 128, 
      3,   0,   0, 128,   6,   0, 
      0,   2,   1,   0,   1, 128, 
      1,   0,   0, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
      0, 128,  90,   0,   0,   4, 
      0,   0,   4, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,   0, 160,  90,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 128,   2,   0,   0, 160, 
     11,   0,   0,   3,   1,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0, 170, 128,   7,   0, 
      0,   2,   0,   0,   1, 128, 
      1,   0,   0, 128,   6,   0, 
      0,   2,   0,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   2,   0, 
     85, 161,   2,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      3,   0,   0, 160,  88,   0, 
      0,   4,   0,   0,   2, 128, 
      0,   0,   0, 128,   0,   0, 
     85, 128,   2,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      5, 128,   0,   0,  85, 128, 
      4,   0, 212, 160,   4,   0, 
    246, 160,   1,   0,   0,   2, 
      0,   0,  23, 128,   0,   0, 
    228, 128,  66,   0,   0,   3, 
      1,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   2,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,   0, 144,   1,   0, 
    228, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   0,   0, 
      8, 128,   2,   0, 255, 160, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   1,   0, 228, 128, 
      3,   0,  85, 160,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0
    dcl_color1 v1.x
    dcl_texcoord_pp v2.xy
    dcl_2d s0
    texld r0, v2, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 6 instruction slots used (1 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0.w
    dcl_color1 v1.x
    dcl_texcoord_pp v2.xy
    dcl_2d s0
    texld r0, v2, s0
    add r0.x, r0.w, -v0.w
    mov r0.w, v0.w
    mad oC0, v1.x, r0.x, r0.w

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0, 255, 145,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      1,   0,   0, 144,   0,   0, 
      0, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0
    dcl_color1 v1.xw
    dcl_texcoord_pp v2.xy
    dcl_2d s0
    texld r0, v2, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mul oC0.w, r0.w, v1.w
    mov oC0.xyz, r0

// approximately 6 instruction slots used (1 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      8, 128,   0,   0, 255, 128, 
      1,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,   7, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float mipLevels;
//   sampler2D tex;
//   float2 textureDims;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mipLevels    c0       1
//   textureDims  c1       1
//   tex          s0       1
//

    ps_3_0
    def c2, 0, 0.5, -1, 1
    def c3, 1.88235307, 0.00100000005, 0, 0
    def c4, -1, 1, 2, -2
    dcl_color v0
    dcl_color1 v1.xw
    dcl_texcoord v2.xy
    dcl_2d s0
    mul r0, c1.xxyy, v2.xyxy
    dsx r0.xy, r0
    dsy r0.zw, r0
    dp2add r1.x, r0, r0, c2.x
    dp2add r1.y, r0.zwzw, r0.zwzw, c2.x
    max r2.x, r1.x, r1.y
    log r1.x, r2.x
    mad r1.x, r1.x, c2.y, c2.z
    max r2.x, r1.x, c2.x
    mov r1.z, c2.z
    add r1.x, r1.z, c0.x
    min r3.x, r1.x, r2.x
    exp r1.x, r3.x
    rcp r1.x, r1.x
    mul r0, r0, r1.x
    dp2add r0.z, r0.zwzw, r0.zwzw, c2.x
    dp2add r0.x, r0, r0, c2.x
    max r1.x, r0.x, r0.z
    rsq r0.x, r1.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, -c2.y, c2.w
    mul r0.y, r0.x, c3.x
    cmp r0.y, r0.x, r0.y, c2.x
    mad r0.xz, r0.y, c4.xyyw, c4.zyww
    mov_sat r0.xyz, r0
    texld r1, v2, s0
    add r1, r1, -v0
    mov r2, v0
    mad r1, v1.x, r1, r2
    mul r1.w, r1.w, v1.w
    mov r0.w, c2.w
    mad oC0, r1, c3.y, r0

// approximately 38 instruction slots used (1 texture, 37 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexEAlphaTexDensity[] =
{
      0,   3, 255, 255, 254, 255, 
     57,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 171,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    164,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 100,   0, 
      0,   0,   0,   0,   0,   0, 
    116,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 148,   0,   0,   0, 
      0,   0,   0,   0, 109, 105, 
    112,  76, 101, 118, 101, 108, 
    115,   0, 171, 171,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 116, 117, 114, 101,  68, 
    105, 109, 115,   0,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,  63, 
      0,   0, 128, 191,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      3,   0,  15, 160, 242, 240, 
    240,  63, 111,  18, 131,  58, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
    128, 191,   0,   0, 128,  63, 
      0,   0,   0,  64,   0,   0, 
      0, 192,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
     80, 160,   2,   0,  68, 144, 
     91,   0,   0,   2,   0,   0, 
      3, 128,   0,   0, 228, 128, 
     92,   0,   0,   2,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     90,   0,   0,   4,   1,   0, 
      1, 128,   0,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
      0, 160,  90,   0,   0,   4, 
      1,   0,   2, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,   0, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   1,   0, 
     85, 128,  15,   0,   0,   2, 
      1,   0,   1, 128,   2,   0, 
      0, 128,   4,   0,   0,   4, 
      1,   0,   1, 128,   1,   0, 
      0, 128,   2,   0,  85, 160, 
      2,   0, 170, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   2,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   4, 128,   2,   0, 
    170, 160,   2,   0,   0,   3, 
      1,   0,   1, 128,   1,   0, 
    170, 128,   0,   0,   0, 160, 
     10,   0,   0,   3,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      2,   0,   0, 128,  14,   0, 
      0,   2,   1,   0,   1, 128, 
      3,   0,   0, 128,   6,   0, 
      0,   2,   1,   0,   1, 128, 
      1,   0,   0, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
      0, 128,  90,   0,   0,   4, 
      0,   0,   4, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,   0, 160,  90,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 128,   2,   0,   0, 160, 
     11,   0,   0,   3,   1,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0, 170, 128,   7,   0, 
      0,   2,   0,   0,   1, 128, 
      1,   0,   0, 128,   6,   0, 
      0,   2,   0,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   2,   0, 
     85, 161,   2,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      3,   0,   0, 160,  88,   0, 
      0,   4,   0,   0,   2, 128, 
      0,   0,   0, 128,   0,   0, 
     85, 128,   2,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      5, 128,   0,   0,  85, 128, 
      4,   0, 212, 160,   4,   0, 
    246, 160,   1,   0,   0,   2, 
      0,   0,  23, 128,   0,   0, 
    228, 128,  66,   0,   0,   3, 
      1,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   2,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,   0, 144,   1,   0, 
    228, 128,   2,   0, 228, 128, 
      5,   0,   0,   3,   1,   0, 
      8, 128,   1,   0, 255, 128, 
      1,   0, 255, 144,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      2,   0, 255, 160,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      1,   0, 228, 128,   3,   0, 
     85, 160,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0
    dcl_color1 v1.xw
    dcl_texcoord_pp v2.xy
    dcl_2d s0
    texld r0, v2, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mul r0.w, r0.w, v1.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 7 instruction slots used (1 texture, 6 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      1,   0, 255, 144,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0.w
    dcl_color1 v1.xw
    dcl_texcoord_pp v2.xy
    dcl_2d s0
    texld r0, v2, s0
    mov r0.x, v1.x
    lrp r1.x, r0.x, r0.w, v0.w
    mul oC0, r1.x, v1.w

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexEAlphaInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      1,   0,   0,   2,   0,   0, 
      1, 128,   1,   0,   0, 144, 
     18,   0,   0,   4,   1,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 144,   5,   0,   0,   3, 
      0,   8,  15, 128,   1,   0, 
      0, 128,   1,   0, 255, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//   texgen       c4       2
//

    vs_3_0
    def c6, 0, 1, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2
    dcl_texcoord1 o3
    dcl_texcoord2 o4.xy
    dcl_position o5
    dp4 o5.x, v2, c2
    dp4 o5.y, v2, c3
    dp4 o4.x, v2, c4
    dp4 o4.y, v2, c5
    mov o0, v0
    mov o1, v1
    mov o2, c0
    mov o3, c1
    mov o5.zw, c6.xyxy

// approximately 9 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VTexTGVertexCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     62,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 191,   0, 
      0,   0,   0,   3, 254, 255, 
      4,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    184,   0,   0,   0, 108,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
    132,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 138,   0,   0,   0, 
      2,   0,   2,   0,   2,   0, 
     10,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 160,   0, 
      0,   0,   2,   0,   4,   0, 
      2,   0,  18,   0, 168,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120,  97, 100, 100,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    109, 118, 112,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   6,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      3,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      4,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      5,   0,  15, 224,   9,   0, 
      0,   3,   5,   0,   1, 224, 
      2,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      5,   0,   2, 224,   2,   0, 
    228, 144,   3,   0, 228, 160, 
      9,   0,   0,   3,   4,   0, 
      1, 224,   2,   0, 228, 144, 
      4,   0, 228, 160,   9,   0, 
      0,   3,   4,   0,   2, 224, 
      2,   0, 228, 144,   5,   0, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  15, 224,   1,   0, 
    228, 144,   1,   0,   0,   2, 
      2,   0,  15, 224,   0,   0, 
    228, 160,   1,   0,   0,   2, 
      3,   0,  15, 224,   1,   0, 
    228, 160,   1,   0,   0,   2, 
      5,   0,  12, 224,   6,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0
    dcl_color1 v1.x
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_texcoord2_pp v4.xy
    dcl_2d s0
    texld r0, v4, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mov r1, v3
    mad oC0, r0, r1, v2

// approximately 6 instruction slots used (1 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexCxform[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   3,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   4,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   3,   0, 228, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   2,   0, 
    228, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0
    dcl_color1 v1.x
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_texcoord2_pp v4.xy
    dcl_2d s0
    texld r0, v4, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mov r1, v3
    mad r0, r0, r1, v2
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 8 instruction slots used (1 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexCxformMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   3,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   4,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   3,   0, 228, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   2,   0, 
    228, 144,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0.w
    dcl_color1 v1.x
    dcl_texcoord v2.w
    dcl_texcoord1 v3.w
    dcl_texcoord2_pp v4.xy
    dcl_2d s0
    texld r0, v4, s0
    add r0.x, r0.w, -v0.w
    mov r0.w, v0.w
    mad r0.x, v1.x, r0.x, r0.w
    mov r0.w, v3.w
    mad oC0, r0.x, r0.w, v2.w

// approximately 6 instruction slots used (1 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexCxformInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   3,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   4,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0, 255, 145,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      1,   0,   0, 144,   0,   0, 
      0, 128,   0,   0, 255, 128, 
      1,   0,   0,   2,   0,   0, 
      8, 128,   3,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0,   0, 128, 
      0,   0, 255, 128,   2,   0, 
    255, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0
    dcl_color1 v1.xw
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_texcoord2_pp v4.xy
    dcl_2d s0
    texld r0, v4, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mov r1, v3
    mad r0, r0, r1, v2
    mul oC0.w, r0.w, v1.w
    mov oC0.xyz, r0

// approximately 8 instruction slots used (1 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexCxformEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   3,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   4,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   3,   0, 228, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   2,   0, 
    228, 144,   5,   0,   0,   3, 
      0,   8,   8, 128,   0,   0, 
    255, 128,   1,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
      7, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0
    dcl_color1 v1.xw
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_texcoord2_pp v4.xy
    dcl_2d s0
    texld r0, v4, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mov r1, v3
    mad r0, r0, r1, v2
    mul r0.w, r0.w, v1.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 9 instruction slots used (1 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexCxformEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   3,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   4,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   3,   0, 228, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   2,   0, 
    228, 144,   5,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128,   1,   0, 255, 144, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0.w
    dcl_color1 v1.xw
    dcl_texcoord v2.w
    dcl_texcoord1 v3.w
    dcl_texcoord2_pp v4.xy
    dcl_2d s0
    texld r0, v4, s0
    mov r0.x, v1.x
    lrp r1.x, r0.x, r0.w, v0.w
    mov r0.w, v3.w
    mad r0.x, r1.x, r0.w, v2.w
    mul oC0, r0.x, v1.w

// approximately 6 instruction slots used (1 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexCxformEAlphaInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   3,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   4,   0, 
    228, 144,   0,   8, 228, 160, 
      1,   0,   0,   2,   0,   0, 
      1, 128,   1,   0,   0, 144, 
     18,   0,   0,   4,   1,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   0,   8, 128,   3,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   0,   1, 128,   1,   0, 
      0, 128,   0,   0, 255, 128, 
      2,   0, 255, 144,   5,   0, 
      0,   3,   0,   8,  15, 128, 
      0,   0,   0, 128,   1,   0, 
    255, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_color v0
    dcl_color1 v1.x
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_texcoord2_pp v4.xy
    dcl_2d s0
    texld r0, v4, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mad r1, v3.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, r1
    mul r0, r0, v3.w
    mad oC0, v2, r0.w, r0

// approximately 8 instruction slots used (1 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexCxformAc[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   3,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   4,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   3,   0,  36, 144, 
      0,   0,  64, 160,   0,   0, 
     21, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      3,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      2,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_color v0
    dcl_color1 v1.x
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_texcoord2_pp v4.xy
    dcl_2d s0
    texld r0, v4, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mad r1, v3.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, r1
    mul r0, r0, v3.w
    mad r0, v2, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 10 instruction slots used (1 texture, 9 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexCxformAcMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   3,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   4,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   3,   0,  36, 144, 
      0,   0,  64, 160,   0,   0, 
     21, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      3,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      2,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0.w
    dcl_color1 v1.x
    dcl_texcoord v2.w
    dcl_texcoord1 v3.w
    dcl_texcoord2_pp v4.xy
    dcl_2d s0
    texld r0, v4, s0
    add r0.x, r0.w, -v0.w
    mov r0.w, v0.w
    mad r0.x, v1.x, r0.x, r0.w
    mul r0.x, r0.x, v3.w
    mad oC0, v2.w, r0.x, r0.x

// approximately 6 instruction slots used (1 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexCxformAcInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      1, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   3,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   4,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0, 255, 145,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      1,   0,   0, 144,   0,   0, 
      0, 128,   0,   0, 255, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      3,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      2,   0, 255, 144,   0,   0, 
      0, 128,   0,   0,   0, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_color v0
    dcl_color1 v1.xw
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_texcoord2_pp v4.xy
    dcl_2d s0
    texld r0, v4, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mad r1, v3.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, r1
    mul r0, r0, v3.w
    mad r0, v2, r0.w, r0
    mul oC0.w, r0.w, v1.w
    mov oC0.xyz, r0

// approximately 10 instruction slots used (1 texture, 9 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexCxformAcEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   3,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   4,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   3,   0,  36, 144, 
      0,   0,  64, 160,   0,   0, 
     21, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      3,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      2,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      8, 128,   0,   0, 255, 128, 
      1,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,   7, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_color v0
    dcl_color1 v1.xw
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_texcoord2_pp v4.xy
    dcl_2d s0
    texld r0, v4, s0
    add r0, r0, -v0
    mov r1, v0
    mad r0, v1.x, r0, r1
    mad r1, v3.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, r1
    mul r0, r0, v3.w
    mad r0, v2, r0.w, r0
    mul r0.w, r0.w, v1.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 11 instruction slots used (1 texture, 10 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexCxformAcEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   3,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   4,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   0, 228, 145,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      0,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   3,   0,  36, 144, 
      0,   0,  64, 160,   0,   0, 
     21, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      3,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      2,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      1,   0, 255, 144,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_color v0.w
    dcl_color1 v1.xw
    dcl_texcoord v2.w
    dcl_texcoord1 v3.w
    dcl_texcoord2_pp v4.xy
    dcl_2d s0
    texld r0, v4, s0
    mov r0.x, v1.x
    lrp r1.x, r0.x, r0.w, v0.w
    mul r0.x, r1.x, v3.w
    mad r0.x, v2.w, r0.x, r0.x
    mul oC0, r0.x, v1.w

// approximately 6 instruction slots used (1 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGVertexCxformAcEAlphaInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
      9, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   3,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   4,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   4,   0, 
    228, 144,   0,   8, 228, 160, 
      1,   0,   0,   2,   0,   0, 
      1, 128,   1,   0,   0, 144, 
     18,   0,   0,   4,   1,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 144,   5,   0,   0,   3, 
      0,   0,   1, 128,   1,   0, 
      0, 128,   3,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
      1, 128,   2,   0, 255, 144, 
      0,   0,   0, 128,   0,   0, 
      0, 128,   5,   0,   0,   3, 
      0,   8,  15, 128,   0,   0, 
      0, 128,   1,   0, 255, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//   texgen       c4       2
//

    vs_3_0
    dcl_position v0
    dcl_texcoord o0.xy
    dcl_position o1
    dp4 o1.x, v0, c0
    dp4 o1.y, v0, c1
    dp4 o1.z, v0, c2
    dp4 o1.w, v0, c3
    dp4 o0.x, v0, c4
    dp4 o0.y, v0, c5

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VPosition3dTexTG[] =
{
      0,   3, 254, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  72,   0, 
      0,   0,   0,   0,   0,   0, 
     88,   0,   0,   0,   2,   0, 
      4,   0,   2,   0,  18,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 109, 118, 112,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 224,   9,   0, 
      0,   3,   1,   0,   1, 224, 
      0,   0, 228, 144,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   2, 224,   0,   0, 
    228, 144,   1,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      4, 224,   0,   0, 228, 144, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   1,   0,   8, 224, 
      0,   0, 228, 144,   3,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   1, 224,   0,   0, 
    228, 144,   4,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 224,   0,   0, 228, 144, 
      5,   0, 228, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//   texgen       c4       2
//

    vs_3_0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1.xy
    dcl_position o2
    dp4 o2.x, v1, c0
    dp4 o2.y, v1, c1
    dp4 o2.z, v1, c2
    dp4 o2.w, v1, c3
    dp4 o1.x, v1, c4
    dp4 o1.y, v1, c5
    mov o0, v0

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VPosition3dTexTGEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  72,   0, 
      0,   0,   0,   0,   0,   0, 
     88,   0,   0,   0,   2,   0, 
      4,   0,   2,   0,  18,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 109, 118, 112,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 224,   9,   0, 
      0,   3,   2,   0,   1, 224, 
      1,   0, 228, 144,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      2,   0,   2, 224,   1,   0, 
    228, 144,   1,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      4, 224,   1,   0, 228, 144, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   2,   0,   8, 224, 
      1,   0, 228, 144,   3,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   1, 224,   1,   0, 
    228, 144,   4,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      2, 224,   1,   0, 228, 144, 
      5,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//   texgen       c6       2
//

    vs_3_0
    dcl_position v0
    dcl_texcoord o0
    dcl_texcoord1 o1
    dcl_texcoord2 o2.xy
    dcl_position o3
    dp4 o3.x, v0, c2
    dp4 o3.y, v0, c3
    dp4 o3.z, v0, c4
    dp4 o3.w, v0, c5
    dp4 o2.x, v0, c6
    dp4 o2.y, v0, c7
    mov o0, c0
    mov o1, c1

// approximately 8 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VPosition3dTexTGCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     62,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 191,   0, 
      0,   0,   0,   3, 254, 255, 
      4,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    184,   0,   0,   0, 108,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
    132,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 138,   0,   0,   0, 
      2,   0,   2,   0,   4,   0, 
     10,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 160,   0, 
      0,   0,   2,   0,   6,   0, 
      2,   0,  26,   0, 168,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120,  97, 100, 100,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    109, 118, 112,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   9,   0, 
      0,   3,   3,   0,   1, 224, 
      0,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      3,   0,   2, 224,   0,   0, 
    228, 144,   3,   0, 228, 160, 
      9,   0,   0,   3,   3,   0, 
      4, 224,   0,   0, 228, 144, 
      4,   0, 228, 160,   9,   0, 
      0,   3,   3,   0,   8, 224, 
      0,   0, 228, 144,   5,   0, 
    228, 160,   9,   0,   0,   3, 
      2,   0,   1, 224,   0,   0, 
    228, 144,   6,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      2, 224,   0,   0, 228, 144, 
      7,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 160,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//   texgen       c6       2
//

    vs_3_0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3.xy
    dcl_position o4
    dp4 o4.x, v1, c2
    dp4 o4.y, v1, c3
    dp4 o4.z, v1, c4
    dp4 o4.w, v1, c5
    dp4 o3.x, v1, c6
    dp4 o3.y, v1, c7
    mov o0, v0
    mov o1, c0
    mov o2, c1

// approximately 9 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VPosition3dTexTGCxformEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     62,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 191,   0, 
      0,   0,   0,   3, 254, 255, 
      4,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    184,   0,   0,   0, 108,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
    132,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 138,   0,   0,   0, 
      2,   0,   2,   0,   4,   0, 
     10,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 160,   0, 
      0,   0,   2,   0,   6,   0, 
      2,   0,  26,   0, 168,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120,  97, 100, 100,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    109, 118, 112,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      3,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      4,   0,  15, 224,   9,   0, 
      0,   3,   4,   0,   1, 224, 
      1,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      4,   0,   2, 224,   1,   0, 
    228, 144,   3,   0, 228, 160, 
      9,   0,   0,   3,   4,   0, 
      4, 224,   1,   0, 228, 144, 
      4,   0, 228, 160,   9,   0, 
      0,   3,   4,   0,   8, 224, 
      1,   0, 228, 144,   5,   0, 
    228, 160,   9,   0,   0,   3, 
      3,   0,   1, 224,   1,   0, 
    228, 144,   6,   0, 228, 160, 
      9,   0,   0,   3,   3,   0, 
      2, 224,   1,   0, 228, 144, 
      7,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      0,   0, 228, 160,   1,   0, 
      0,   2,   2,   0,  15, 224, 
      1,   0, 228, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//

    vs_3_0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_position o1
    dp4 o1.x, v1, c0
    dp4 o1.y, v1, c1
    dp4 o1.z, v1, c2
    dp4 o1.w, v1, c3
    mov o0, v0

// approximately 5 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VPosition3dVertex[] =
{
      0,   3, 254, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    109, 118, 112,   0,   3,   0, 
      3,   0,   4,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 224,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 224,   9,   0,   0,   3, 
      1,   0,   1, 224,   1,   0, 
    228, 144,   0,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      2, 224,   1,   0, 228, 144, 
      1,   0, 228, 160,   9,   0, 
      0,   3,   1,   0,   4, 224, 
      1,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   8, 224,   1,   0, 
    228, 144,   3,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//

    vs_3_0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color o0
    dcl_color1 o1
    dcl_position o2
    dp4 o2.x, v2, c0
    dp4 o2.y, v2, c1
    dp4 o2.z, v2, c2
    dp4 o2.w, v2, c3
    mov o0, v0
    mov o1, v1

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VPosition3dVertexEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    109, 118, 112,   0,   3,   0, 
      3,   0,   4,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 224,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
     15, 224,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     15, 224,   9,   0,   0,   3, 
      2,   0,   1, 224,   2,   0, 
    228, 144,   0,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      2, 224,   2,   0, 228, 144, 
      1,   0, 228, 160,   9,   0, 
      0,   3,   2,   0,   4, 224, 
      2,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      2,   0,   8, 224,   2,   0, 
    228, 144,   3,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     15, 224,   1,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//

    vs_3_0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_position o3
    dp4 o3.x, v1, c2
    dp4 o3.y, v1, c3
    dp4 o3.z, v1, c4
    dp4 o3.w, v1, c5
    mov o0, v0
    mov o1, c0
    mov o2, c1

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VPosition3dVertexCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   3, 254, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 118,   0,   0,   0, 
      2,   0,   2,   0,   4,   0, 
     10,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 109, 118, 
    112,   0, 171, 171,   3,   0, 
      3,   0,   4,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 224,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 224,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 224,  31,   0,   0,   2, 
      0,   0,   0, 128,   3,   0, 
     15, 224,   9,   0,   0,   3, 
      3,   0,   1, 224,   1,   0, 
    228, 144,   2,   0, 228, 160, 
      9,   0,   0,   3,   3,   0, 
      2, 224,   1,   0, 228, 144, 
      3,   0, 228, 160,   9,   0, 
      0,   3,   3,   0,   4, 224, 
      1,   0, 228, 144,   4,   0, 
    228, 160,   9,   0,   0,   3, 
      3,   0,   8, 224,   1,   0, 
    228, 144,   5,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     15, 224,   0,   0, 228, 160, 
      1,   0,   0,   2,   2,   0, 
     15, 224,   1,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//

    vs_3_0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2
    dcl_texcoord1 o3
    dcl_position o4
    dp4 o4.x, v2, c2
    dp4 o4.y, v2, c3
    dp4 o4.z, v2, c4
    dp4 o4.w, v2, c5
    mov o0, v0
    mov o1, v1
    mov o2, c0
    mov o3, c1

// approximately 8 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VPosition3dVertexCxformEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   3, 254, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 118,   0,   0,   0, 
      2,   0,   2,   0,   4,   0, 
     10,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 109, 118, 
    112,   0, 171, 171,   3,   0, 
      3,   0,   4,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 224,  31,   0,   0,   2, 
     10,   0,   1, 128,   1,   0, 
     15, 224,  31,   0,   0,   2, 
      5,   0,   0, 128,   2,   0, 
     15, 224,  31,   0,   0,   2, 
      5,   0,   1, 128,   3,   0, 
     15, 224,  31,   0,   0,   2, 
      0,   0,   0, 128,   4,   0, 
     15, 224,   9,   0,   0,   3, 
      4,   0,   1, 224,   2,   0, 
    228, 144,   2,   0, 228, 160, 
      9,   0,   0,   3,   4,   0, 
      2, 224,   2,   0, 228, 144, 
      3,   0, 228, 160,   9,   0, 
      0,   3,   4,   0,   4, 224, 
      2,   0, 228, 144,   4,   0, 
    228, 160,   9,   0,   0,   3, 
      4,   0,   8, 224,   2,   0, 
    228, 144,   5,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     15, 224,   1,   0, 228, 144, 
      1,   0,   0,   2,   2,   0, 
     15, 224,   0,   0, 228, 160, 
      1,   0,   0,   2,   3,   0, 
     15, 224,   1,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 mvp;
//   float4 texgen[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//   texgen       c4       4
//

    vs_3_0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xy
    dcl_position o3
    dp4 o3.x, v1, c0
    dp4 o3.y, v1, c1
    dp4 o3.z, v1, c2
    dp4 o3.w, v1, c3
    dp4 o1.x, v1, c4
    dp4 o1.y, v1, c5
    dp4 o2.x, v1, c6
    dp4 o2.y, v1, c7
    mov o0, v0

// approximately 9 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VPosition3dTexTGTexTG[] =
{
      0,   3, 254, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  72,   0, 
      0,   0,   0,   0,   0,   0, 
     88,   0,   0,   0,   2,   0, 
      4,   0,   4,   0,  18,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 109, 118, 112,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   4,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,   3, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   9,   0, 
      0,   3,   3,   0,   1, 224, 
      1,   0, 228, 144,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      3,   0,   2, 224,   1,   0, 
    228, 144,   1,   0, 228, 160, 
      9,   0,   0,   3,   3,   0, 
      4, 224,   1,   0, 228, 144, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   3,   0,   8, 224, 
      1,   0, 228, 144,   3,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   1, 224,   1,   0, 
    228, 144,   4,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      2, 224,   1,   0, 228, 144, 
      5,   0, 228, 160,   9,   0, 
      0,   3,   2,   0,   1, 224, 
      1,   0, 228, 144,   6,   0, 
    228, 160,   9,   0,   0,   3, 
      2,   0,   2, 224,   1,   0, 
    228, 144,   7,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//   float4 texgen[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//   texgen       c6       4
//

    vs_3_0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3.xy
    dcl_texcoord3 o4.xy
    dcl_position o5
    dp4 o5.x, v1, c2
    dp4 o5.y, v1, c3
    dp4 o5.z, v1, c4
    dp4 o5.w, v1, c5
    dp4 o3.x, v1, c6
    dp4 o3.y, v1, c7
    dp4 o4.x, v1, c8
    dp4 o4.y, v1, c9
    mov o0, v0
    mov o1, c0
    mov o2, c1

// approximately 11 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VPosition3dTexTGTexTGCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     62,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 191,   0, 
      0,   0,   0,   3, 254, 255, 
      4,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    184,   0,   0,   0, 108,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
    132,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 138,   0,   0,   0, 
      2,   0,   2,   0,   4,   0, 
     10,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 160,   0, 
      0,   0,   2,   0,   6,   0, 
      4,   0,  26,   0, 168,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120,  97, 100, 100,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    109, 118, 112,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   4,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      3,   0,   3, 224,  31,   0, 
      0,   2,   5,   0,   3, 128, 
      4,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      5,   0,  15, 224,   9,   0, 
      0,   3,   5,   0,   1, 224, 
      1,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      5,   0,   2, 224,   1,   0, 
    228, 144,   3,   0, 228, 160, 
      9,   0,   0,   3,   5,   0, 
      4, 224,   1,   0, 228, 144, 
      4,   0, 228, 160,   9,   0, 
      0,   3,   5,   0,   8, 224, 
      1,   0, 228, 144,   5,   0, 
    228, 160,   9,   0,   0,   3, 
      3,   0,   1, 224,   1,   0, 
    228, 144,   6,   0, 228, 160, 
      9,   0,   0,   3,   3,   0, 
      2, 224,   1,   0, 228, 144, 
      7,   0, 228, 160,   9,   0, 
      0,   3,   4,   0,   1, 224, 
      1,   0, 228, 144,   8,   0, 
    228, 160,   9,   0,   0,   3, 
      4,   0,   2, 224,   1,   0, 
    228, 144,   9,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     15, 224,   0,   0, 228, 160, 
      1,   0,   0,   2,   2,   0, 
     15, 224,   1,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//   texgen       c4       2
//

    vs_3_0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2.xy
    dcl_position o3
    dp4 o3.x, v2, c0
    dp4 o3.y, v2, c1
    dp4 o3.z, v2, c2
    dp4 o3.w, v2, c3
    dp4 o2.x, v2, c4
    dp4 o2.y, v2, c5
    mov o0, v0
    mov o1, v1

// approximately 8 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VPosition3dTexTGVertex[] =
{
      0,   3, 254, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  72,   0, 
      0,   0,   0,   0,   0,   0, 
     88,   0,   0,   0,   2,   0, 
      4,   0,   2,   0,  18,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 109, 118, 112,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   9,   0, 
      0,   3,   3,   0,   1, 224, 
      2,   0, 228, 144,   0,   0, 
    228, 160,   9,   0,   0,   3, 
      3,   0,   2, 224,   2,   0, 
    228, 144,   1,   0, 228, 160, 
      9,   0,   0,   3,   3,   0, 
      4, 224,   2,   0, 228, 144, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   3,   0,   8, 224, 
      2,   0, 228, 144,   3,   0, 
    228, 160,   9,   0,   0,   3, 
      2,   0,   1, 224,   2,   0, 
    228, 144,   4,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      2, 224,   2,   0, 228, 144, 
      5,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//   float4 texgen[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//   texgen       c6       2
//

    vs_3_0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2
    dcl_texcoord1 o3
    dcl_texcoord2 o4.xy
    dcl_position o5
    dp4 o5.x, v2, c2
    dp4 o5.y, v2, c3
    dp4 o5.z, v2, c4
    dp4 o5.w, v2, c5
    dp4 o4.x, v2, c6
    dp4 o4.y, v2, c7
    mov o0, v0
    mov o1, v1
    mov o2, c0
    mov o3, c1

// approximately 10 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VPosition3dTexTGVertexCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     62,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 191,   0, 
      0,   0,   0,   3, 254, 255, 
      4,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    184,   0,   0,   0, 108,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
    132,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 138,   0,   0,   0, 
      2,   0,   2,   0,   4,   0, 
     10,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 160,   0, 
      0,   0,   2,   0,   6,   0, 
      2,   0,  26,   0, 168,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120,  97, 100, 100,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    109, 118, 112,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 103, 101, 110,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   2,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      3,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      4,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      5,   0,  15, 224,   9,   0, 
      0,   3,   5,   0,   1, 224, 
      2,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      5,   0,   2, 224,   2,   0, 
    228, 144,   3,   0, 228, 160, 
      9,   0,   0,   3,   5,   0, 
      4, 224,   2,   0, 228, 144, 
      4,   0, 228, 160,   9,   0, 
      0,   3,   5,   0,   8, 224, 
      2,   0, 228, 144,   5,   0, 
    228, 160,   9,   0,   0,   3, 
      4,   0,   1, 224,   2,   0, 
    228, 144,   6,   0, 228, 160, 
      9,   0,   0,   3,   4,   0, 
      2, 224,   2,   0, 228, 144, 
      7,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 144,   1,   0, 
      0,   2,   2,   0,  15, 224, 
      0,   0, 228, 160,   1,   0, 
      0,   2,   3,   0,  15, 224, 
      1,   0, 228, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_3_0
    def c96, 1.10000002, 3.0999999, 0, 1
    def c97, 4, 0.100000001, 2.0999999, 0
    dcl_position v0
    dcl_color1 v1
    dcl_texcoord o0.xy
    dcl_position o1
    mad r0.xy, v1.x, c97.x, c97.yzzw
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mad r0.zw, v1.x, c97.x, -r0
    add r0.zw, r0, c96.xyxy
    mova a0.xy, r0
    dp4 o0.x, v0, c0[a0.y]
    dp4 o1.x, v0, c0[a0.x]
    mova a0.xy, r0.zwzw
    dp4 o0.y, v0, c0[a0.y]
    dp4 o1.y, v0, c0[a0.x]
    mov o1.zw, c96

// approximately 12 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchTexTG[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
     70,  64,   0,   0,   0,   0, 
      0,   0, 128,  63,  81,   0, 
      0,   5,  97,   0,  15, 160, 
      0,   0, 128,  64, 205, 204, 
    204,  61, 102, 102,   6,  64, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      1,   0,   0, 144,  97,   0, 
      0, 160,  97,   0, 233, 160, 
     19,   0,   0,   2,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      0,   0, 238, 129,   4,   0, 
      0,   4,   0,   0,  12, 128, 
      1,   0,   0, 144,  97,   0, 
      0, 160,   0,   0, 228, 129, 
      2,   0,   0,   3,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     96,   0,  68, 160,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 228, 128,   9,   0, 
      0,   4,   0,   0,   1, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   1,   0, 
      1, 224,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    238, 128,   9,   0,   0,   4, 
      0,   0,   2, 224,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,  85, 176,   9,   0, 
      0,   4,   1,   0,   2, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   1,   0, 
     12, 224,  96,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_3_0
    def c96, 1020.03998, 0.100000001, 2.0999999, 0
    def c97, 1.10000002, 3.0999999, 0, 1
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1.xy
    dcl_position o2
    mad r0.xy, v0.z, c96.x, c96.yzzw
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mad r0.zw, v0.z, c96.x, -r0
    add r0.zw, r0, c97.xyxy
    mova a0.xy, r0
    dp4 o1.x, v1, c0[a0.y]
    dp4 o2.x, v1, c0[a0.x]
    mova a0.xy, r0.zwzw
    dp4 o1.y, v1, c0[a0.y]
    dp4 o2.y, v1, c0[a0.x]
    mov o0, v0
    mov o2.zw, c97

// approximately 13 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchTexTGEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    143,   2, 127,  68, 205, 204, 
    204,  61, 102, 102,   6,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5,  97,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
     70,  64,   0,   0,   0,   0, 
      0,   0, 128,  63,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 170, 144,  96,   0, 
      0, 160,  96,   0, 233, 160, 
     19,   0,   0,   2,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      0,   0, 238, 129,   4,   0, 
      0,   4,   0,   0,  12, 128, 
      0,   0, 170, 144,  96,   0, 
      0, 160,   0,   0, 228, 129, 
      2,   0,   0,   3,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     97,   0,  68, 160,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 228, 128,   9,   0, 
      0,   4,   1,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   2,   0, 
      1, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    238, 128,   9,   0,   0,   4, 
      1,   0,   2, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,  85, 176,   9,   0, 
      0,   4,   2,   0,   2, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
      1,   0,   0,   2,   2,   0, 
     12, 224,  97,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

    vs_3_0
    def c144, 2.0999999, 4.0999999, 0.100000001, 1.10000002
    def c145, 6, 3.0999999, 5.0999999, 0
    def c146, 0, 1, 0, 0
    dcl_position v0
    dcl_color1 v1
    dcl_texcoord o0
    dcl_texcoord1 o1
    dcl_texcoord2 o2.xy
    dcl_position o3
    mov r0.x, c145.x
    mad r0, v1.x, r0.x, c144
    frc r1, r0
    add r0, r0, -r1
    mad r1.xy, v1.x, c145.x, -r1
    add r1.xy, r1, c145.yzzw
    mova a0.x, r0.x
    dp4 o3.x, v0, c0[a0.x]
    mova a0.xy, r1
    dp4 o2.y, v0, c0[a0.y]
    dp4 o3.y, v0, c0[a0.x]
    mova a0.x, r0.y
    dp4 o2.x, v0, c0[a0.x]
    mova a0.xy, r0.zwzw
    mov o1, c0[a0.y]
    mov o0, c0[a0.x]
    mov o3.zw, c146.xyxy

// approximately 17 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchTexTGCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    144,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    102, 102,   6,  64,  51,  51, 
    131,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 145,   0,  15, 160, 
      0,   0, 192,  64, 102, 102, 
     70,  64,  51,  51, 163,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 146,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   1,   0, 
      0,   2,   0,   0,   1, 128, 
    145,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
      0, 128, 144,   0, 228, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,   3, 128, 
      1,   0,   0, 144, 145,   0, 
      0, 160,   1,   0, 228, 129, 
      2,   0,   0,   3,   1,   0, 
      3, 128,   1,   0, 228, 128, 
    145,   0, 233, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   3,   0,   1, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 228, 128, 
      9,   0,   0,   4,   2,   0, 
      2, 224,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      3,   0,   2, 224,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   2,   0,   1, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 238, 128, 
      1,   0,   0,   3,   1,   0, 
     15, 224,   0,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   3,   0,   0,  15, 224, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      3,   0,  12, 224, 146,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

    vs_3_0
    def c144, 2.0999999, 4.0999999, 0.100000001, 1.10000002
    def c145, 0, 1, 0, 0
    def c146, 1530.05994, 3.0999999, 5.0999999, 0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3.xy
    dcl_position o4
    mov r0.x, c146.x
    mad r0, v0.z, r0.x, c144
    frc r1, r0
    add r0, r0, -r1
    mad r1.xy, v0.z, c146.x, -r1
    add r1.xy, r1, c146.yzzw
    mova a0.x, r0.x
    dp4 o4.x, v1, c0[a0.x]
    mova a0.xy, r1
    dp4 o3.y, v1, c0[a0.y]
    dp4 o4.y, v1, c0[a0.x]
    mova a0.x, r0.y
    dp4 o3.x, v1, c0[a0.x]
    mov o0, v0
    mova a0.xy, r0.zwzw
    mov o2, c0[a0.y]
    mov o1, c0[a0.x]
    mov o4.zw, c145.xyxy

// approximately 18 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchTexTGCxformEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    144,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    102, 102,   6,  64,  51,  51, 
    131,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 145,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 146,   0,  15, 160, 
    235,  65, 191,  68, 102, 102, 
     70,  64,  51,  51, 163,  64, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      3,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      4,   0,  15, 224,   1,   0, 
      0,   2,   0,   0,   1, 128, 
    146,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 170, 144,   0,   0, 
      0, 128, 144,   0, 228, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,   3, 128, 
      0,   0, 170, 144, 146,   0, 
      0, 160,   1,   0, 228, 129, 
      2,   0,   0,   3,   1,   0, 
      3, 128,   1,   0, 228, 128, 
    146,   0, 233, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   4,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 228, 128, 
      9,   0,   0,   4,   3,   0, 
      2, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      4,   0,   2, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   3,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 238, 128, 
      1,   0,   0,   3,   2,   0, 
     15, 224,   0,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   3,   1,   0,  15, 224, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      4,   0,  12, 224, 145,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      48
//

    vs_3_0
    def c48, 2, 0.100000001, 1.10000002, 0
    def c49, 0, 1, 0, 0
    dcl_color v0
    dcl_position v1
    dcl_color2 v2
    dcl_color o0
    dcl_position o1
    mad r0.x, v2.x, c48.x, c48.y
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mad r0.y, v2.x, c48.x, -r0.y
    add r0.y, r0.y, c48.z
    mova a0.x, r0.y
    dp4 o1.y, v1, c0[a0.x]
    mova a0.x, r0.x
    dp4 o1.x, v1, c0[a0.x]
    mov o0, v0
    mov o1.zw, c49.xyxy

// approximately 11 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchVertex[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     48,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  48,   0,  15, 160, 
      0,   0,   0,  64, 205, 204, 
    204,  61, 205, 204, 140,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5,  49,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      2,   0,   0, 144,  48,   0, 
      0, 160,  48,   0,  85, 160, 
     19,   0,   0,   2,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0,  85, 129,   4,   0, 
      0,   4,   0,   0,   2, 128, 
      2,   0,   0, 144,  48,   0, 
      0, 160,   0,   0,  85, 129, 
      2,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
     48,   0, 170, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   1,   0,   2, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   1,   0, 
      1, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 224,  49,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      48
//

    vs_3_0
    def c48, 510.019989, 0.100000001, 1.10000002, 0
    def c49, 0, 1, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color o0
    dcl_color1 o1
    dcl_position o2
    mad r0.x, v1.z, c48.x, c48.y
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mad r0.y, v1.z, c48.x, -r0.y
    add r0.y, r0.y, c48.z
    mova a0.x, r0.y
    dp4 o2.y, v2, c0[a0.x]
    mova a0.x, r0.x
    dp4 o2.x, v2, c0[a0.x]
    mov o0, v0
    mov o1, v1
    mov o2.zw, c49.xyxy

// approximately 12 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchVertexEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     48,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  48,   0,  15, 160, 
    143,   2, 255,  67, 205, 204, 
    204,  61, 205, 204, 140,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5,  49,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      1,   0, 170, 144,  48,   0, 
      0, 160,  48,   0,  85, 160, 
     19,   0,   0,   2,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0,  85, 129,   4,   0, 
      0,   4,   0,   0,   2, 128, 
      1,   0, 170, 144,  48,   0, 
      0, 160,   0,   0,  85, 129, 
      2,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
     48,   0, 170, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   2,   0,   2, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   2,   0, 
      1, 224,   2,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  15, 224,   1,   0, 
    228, 144,   1,   0,   0,   2, 
      2,   0,  12, 224,  49,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_3_0
    def c96, 4, 2.0999999, 0.100000001, 1.10000002
    def c97, 3.0999999, 0, 1, 0
    dcl_color v0
    dcl_position v1
    dcl_color2 v2
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_position o3
    mad r0.xyz, v2.x, c96.x, c96.yzww
    frc r1.xyz, r0
    add r0.xyz, r0, -r1
    mad r0.w, v2.x, c96.x, -r1.x
    add r0.w, r0.w, c97.x
    mova a0.x, r0.w
    dp4 o3.y, v1, c0[a0.x]
    mova a0.x, r0.x
    dp4 o3.x, v1, c0[a0.x]
    mov o0, v0
    mova a0.xy, r0.yzzw
    mov o2, c0[a0.y]
    mov o1, c0[a0.x]
    mov o3.zw, c97.xyyz

// approximately 14 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchVertexCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
      0,   0, 128,  64, 102, 102, 
      6,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5,  97,   0,  15, 160, 
    102, 102,  70,  64,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      2,   0,   0, 144,  96,   0, 
      0, 160,  96,   0, 249, 160, 
     19,   0,   0,   2,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      2,   0,   0, 144,  96,   0, 
      0, 160,   1,   0,   0, 129, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
     97,   0,   0, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0, 255, 128,   9,   0, 
      0,   4,   3,   0,   2, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   3,   0, 
      1, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 144,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    233, 128,   1,   0,   0,   3, 
      2,   0,  15, 224,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      1,   0,   0,   3,   1,   0, 
     15, 224,   0,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   3,   0,  12, 224, 
     97,   0, 148, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_3_0
    def c96, 1020.03998, 2.0999999, 0.100000001, 1.10000002
    def c97, 3.0999999, 0, 1, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2
    dcl_texcoord1 o3
    dcl_position o4
    mad r0.xyz, v1.z, c96.x, c96.yzww
    frc r1.xyz, r0
    add r0.xyz, r0, -r1
    mad r0.w, v1.z, c96.x, -r1.x
    add r0.w, r0.w, c97.x
    mova a0.x, r0.w
    dp4 o4.y, v2, c0[a0.x]
    mova a0.x, r0.x
    dp4 o4.x, v2, c0[a0.x]
    mov o0, v0
    mov o1, v1
    mova a0.xy, r0.yzzw
    mov o3, c0[a0.y]
    mov o2, c0[a0.x]
    mov o4.zw, c97.xyyz

// approximately 15 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchVertexCxformEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    143,   2, 127,  68, 102, 102, 
      6,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5,  97,   0,  15, 160, 
    102, 102,  70,  64,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      3,   0,  15, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      4,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      1,   0, 170, 144,  96,   0, 
      0, 160,  96,   0, 249, 160, 
     19,   0,   0,   2,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      1,   0, 170, 144,  96,   0, 
      0, 160,   1,   0,   0, 129, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
     97,   0,   0, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0, 255, 128,   9,   0, 
      0,   4,   4,   0,   2, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   4,   0, 
      1, 224,   2,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  15, 224,   1,   0, 
    228, 144,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    233, 128,   1,   0,   0,   3, 
      3,   0,  15, 224,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      1,   0,   0,   3,   2,   0, 
     15, 224,   0,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   4,   0,  12, 224, 
     97,   0, 148, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

    vs_3_0
    def c144, 1530.05994, 0.100000001, 2.0999999, 0
    def c145, 0, 1, 0, 0
    def c146, 1.10000002, 3.0999999, 4.0999999, 5.0999999
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xy
    dcl_position o3
    mad r0.xy, v0.z, c144.x, c144.yzzw
    frc r1, r0.xyyy
    add r0.xy, r0, -r1.xwzw
    mad r1, v0.z, c144.x, -r1
    add r1, r1, c146
    mova a0.xy, r0
    dp4 o1.x, v1, c0[a0.y]
    dp4 o3.x, v1, c0[a0.x]
    mova a0.x, r1.x
    dp4 o3.y, v1, c0[a0.x]
    mova a0.x, r1.y
    dp4 o1.y, v1, c0[a0.x]
    mova a0.xy, r1.zwzw
    dp4 o2.y, v1, c0[a0.y]
    dp4 o2.x, v1, c0[a0.x]
    mov o0, v0
    mov o3.zw, c145.xyxy

// approximately 17 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchTexTGTexTG[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    144,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    235,  65, 191,  68, 205, 204, 
    204,  61, 102, 102,   6,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 145,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 146,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
     70,  64,  51,  51, 131,  64, 
     51,  51, 163,  64,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,   3, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 170, 144, 144,   0, 
      0, 160, 144,   0, 233, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0,  84, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      1,   0, 236, 129,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      0,   0, 170, 144, 144,   0, 
      0, 160,   1,   0, 228, 129, 
      2,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
    146,   0, 228, 160,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 228, 128,   9,   0, 
      0,   4,   1,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   3,   0, 
      1, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   1,   0, 
      0, 128,   9,   0,   0,   4, 
      3,   0,   2, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      1,   0,  85, 128,   9,   0, 
      0,   4,   1,   0,   2, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 238, 128, 
      9,   0,   0,   4,   2,   0, 
      2, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      2,   0,   1, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   3,   0,  12, 224, 
    145,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[192];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     192
//

    vs_3_0
    def c192, 2.0999999, 4.0999999, 0.100000001, 1.10000002
    def c193, 2040.07996, 0, 1, 0
    def c194, 3.0999999, 5.0999999, 6.0999999, 7.0999999
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3.xy
    dcl_texcoord3 o4.xy
    dcl_position o5
    mov r0.x, c193.x
    mad r0, v0.z, r0.x, c192
    frc r1, r0
    add r0, r0, -r1
    mad r1, v0.z, c193.x, -r1.xyyy
    add r1, r1, c194
    mova a0.x, r0.x
    dp4 o5.x, v1, c0[a0.x]
    mova a0.x, r1.x
    dp4 o5.y, v1, c0[a0.x]
    mova a0.x, r0.y
    dp4 o3.x, v1, c0[a0.x]
    mova a0.x, r1.y
    dp4 o3.y, v1, c0[a0.x]
    mova a0.xy, r1.zwzw
    dp4 o4.y, v1, c0[a0.y]
    dp4 o4.x, v1, c0[a0.x]
    mov o0, v0
    mova a0.xy, r0.zwzw
    mov o2, c0[a0.y]
    mov o1, c0[a0.x]
    mov o5.zw, c193.xyyz

// approximately 22 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchTexTGTexTGCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    192,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 192,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
    102, 102,   6,  64,  51,  51, 
    131,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 193,   0,  15, 160, 
    143,   2, 255,  68,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 194,   0,  15, 160, 
    102, 102,  70,  64,  51,  51, 
    163,  64,  51,  51, 195,  64, 
     51,  51, 227,  64,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      3,   0,   3, 224,  31,   0, 
      0,   2,   5,   0,   3, 128, 
      4,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      5,   0,  15, 224,   1,   0, 
      0,   2,   0,   0,   1, 128, 
    193,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 170, 144,   0,   0, 
      0, 128, 192,   0, 228, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      0,   0, 170, 144, 193,   0, 
      0, 160,   1,   0,  84, 129, 
      2,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
    194,   0, 228, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   5,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   1,   0,   0, 128, 
      9,   0,   0,   4,   5,   0, 
      2, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
     85, 128,   9,   0,   0,   4, 
      3,   0,   1, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      1,   0,  85, 128,   9,   0, 
      0,   4,   3,   0,   2, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 238, 128, 
      9,   0,   0,   4,   4,   0, 
      2, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      4,   0,   1, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 238, 128,   1,   0, 
      0,   3,   2,   0,  15, 224, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   1,   0,   0,   3, 
      1,   0,  15, 224,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   5,   0, 
     12, 224, 193,   0, 148, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_3_0
    def c96, 1020.03998, 0.100000001, 2.0999999, 0
    def c97, 1.10000002, 3.0999999, 0, 1
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2.xy
    dcl_position o3
    mad r0.xy, v1.z, c96.x, c96.yzzw
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mad r0.zw, v1.z, c96.x, -r0
    add r0.zw, r0, c97.xyxy
    mova a0.xy, r0
    dp4 o2.x, v2, c0[a0.y]
    dp4 o3.x, v2, c0[a0.x]
    mova a0.xy, r0.zwzw
    dp4 o2.y, v2, c0[a0.y]
    dp4 o3.y, v2, c0[a0.x]
    mov o0, v0
    mov o1, v1
    mov o3.zw, c97

// approximately 14 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchTexTGVertex[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    143,   2, 127,  68, 205, 204, 
    204,  61, 102, 102,   6,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5,  97,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
     70,  64,   0,   0,   0,   0, 
      0,   0, 128,  63,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      1,   0, 170, 144,  96,   0, 
      0, 160,  96,   0, 233, 160, 
     19,   0,   0,   2,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      0,   0, 238, 129,   4,   0, 
      0,   4,   0,   0,  12, 128, 
      1,   0, 170, 144,  96,   0, 
      0, 160,   0,   0, 228, 129, 
      2,   0,   0,   3,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     97,   0,  68, 160,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 228, 128,   9,   0, 
      0,   4,   2,   0,   1, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   3,   0, 
      1, 224,   2,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    238, 128,   9,   0,   0,   4, 
      2,   0,   2, 224,   2,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,  85, 176,   9,   0, 
      0,   4,   3,   0,   2, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     15, 224,   1,   0, 228, 144, 
      1,   0,   0,   2,   3,   0, 
     12, 224,  97,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

    vs_3_0
    def c144, 2.0999999, 4.0999999, 0.100000001, 1.10000002
    def c145, 0, 1, 0, 0
    def c146, 1530.05994, 3.0999999, 5.0999999, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2
    dcl_texcoord1 o3
    dcl_texcoord2 o4.xy
    dcl_position o5
    mov r0.x, c146.x
    mad r0, v1.z, r0.x, c144
    frc r1, r0
    add r0, r0, -r1
    mad r1.xy, v1.z, c146.x, -r1
    add r1.xy, r1, c146.yzzw
    mova a0.x, r0.x
    dp4 o5.x, v2, c0[a0.x]
    mova a0.xy, r1
    dp4 o4.y, v2, c0[a0.y]
    dp4 o5.y, v2, c0[a0.x]
    mova a0.x, r0.y
    dp4 o4.x, v2, c0[a0.x]
    mov o0, v0
    mov o1, v1
    mova a0.xy, r0.zwzw
    mov o3, c0[a0.y]
    mov o2, c0[a0.x]
    mov o5.zw, c145.xyxy

// approximately 19 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchTexTGVertexCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    144,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    102, 102,   6,  64,  51,  51, 
    131,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 145,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 146,   0,  15, 160, 
    235,  65, 191,  68, 102, 102, 
     70,  64,  51,  51, 163,  64, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      3,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      4,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      5,   0,  15, 224,   1,   0, 
      0,   2,   0,   0,   1, 128, 
    146,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0, 170, 144,   0,   0, 
      0, 128, 144,   0, 228, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,   3, 128, 
      1,   0, 170, 144, 146,   0, 
      0, 160,   1,   0, 228, 129, 
      2,   0,   0,   3,   1,   0, 
      3, 128,   1,   0, 228, 128, 
    146,   0, 233, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   5,   0,   1, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 228, 128, 
      9,   0,   0,   4,   4,   0, 
      2, 224,   2,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      5,   0,   2, 224,   2,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   4,   0,   1, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     15, 224,   1,   0, 228, 144, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 238, 128, 
      1,   0,   0,   3,   3,   0, 
     15, 224,   0,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   3,   2,   0,  15, 224, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      5,   0,  12, 224, 145,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_3_0
    def c144, 0.100000001, 4, 2, 1.10000002
    dcl_position v0
    dcl_color1 v1
    dcl_texcoord o0.xy
    dcl_position o1
    add r0.x, c144.x, v1.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c144.y
    mova a0.x, r0.x
    dp4 o1.x, v0, c0[a0.x]
    dp4 o1.y, v0, c1[a0.x]
    dp4 o1.z, v0, c2[a0.x]
    dp4 o1.w, v0, c3[a0.x]
    mad r0.x, v1.x, c144.z, c144.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mad r0.y, v1.x, c144.z, -r0.y
    add r0.y, r0.y, c144.w
    mova a0.x, r0.y
    dp4 o0.y, v0, c96[a0.x]
    mova a0.x, r0.x
    dp4 o0.x, v0, c96[a0.x]

// approximately 18 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchPosition3dTexTG[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,  64, 
    205, 204, 140,  63,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 224,   2,   0, 
      0,   3,   0,   0,   1, 128, 
    144,   0,   0, 160,   1,   0, 
      0, 144,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    144,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   1,   0,   1, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   1,   0, 
      2, 224,   0,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      1,   0,   4, 224,   0,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   1,   0,   8, 224, 
      0,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      4,   0,   0,   4,   0,   0, 
      1, 128,   1,   0,   0, 144, 
    144,   0, 170, 160, 144,   0, 
      0, 160,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      4,   0,   0,   4,   0,   0, 
      2, 128,   1,   0,   0, 144, 
    144,   0, 170, 160,   0,   0, 
     85, 129,   2,   0,   0,   3, 
      0,   0,   2, 128,   0,   0, 
     85, 128, 144,   0, 255, 160, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,  85, 128, 
      9,   0,   0,   4,   0,   0, 
      2, 224,   0,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
      0, 128,   9,   0,   0,   4, 
      0,   0,   1, 224,   0,   0, 
    228, 144,  96,  32, 228, 160, 
      0,   0,   0, 176, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_3_0
    def c144, 255.009995, 510.019989, 0.100000001, 4
    def c145, 1.10000002, 0, 0, 0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1.xy
    dcl_position o2
    mad r0.xy, v0.z, c144, c144.z
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mad r0.z, v0.z, c144.y, -r0.w
    add r0.z, r0.z, c145.x
    mova a0.x, r0.z
    dp4 o1.y, v1, c96[a0.x]
    mul r0.x, r0.x, c144.w
    mova a0.x, r0.y
    dp4 o1.x, v1, c96[a0.x]
    mova a0.x, r0.x
    dp4 o2.x, v1, c0[a0.x]
    dp4 o2.y, v1, c1[a0.x]
    dp4 o2.z, v1, c2[a0.x]
    dp4 o2.w, v1, c3[a0.x]
    mov o0, v0

// approximately 16 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchPosition3dTexTGEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    143,   2, 127,  67, 143,   2, 
    255,  67, 205, 204, 204,  61, 
      0,   0, 128,  64,  81,   0, 
      0,   5, 145,   0,  15, 160, 
    205, 204, 140,  63,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 170, 144, 144,   0, 
    228, 160, 144,   0, 170, 160, 
     19,   0,   0,   2,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      0,   0, 238, 129,   4,   0, 
      0,   4,   0,   0,   4, 128, 
      0,   0, 170, 144, 144,   0, 
     85, 160,   0,   0, 255, 129, 
      2,   0,   0,   3,   0,   0, 
      4, 128,   0,   0, 170, 128, 
    145,   0,   0, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0, 170, 128,   9,   0, 
      0,   4,   1,   0,   2, 224, 
      1,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    144,   0, 255, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   1,   0,   1, 224, 
      1,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   2,   0, 
      1, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      2,   0,   2, 224,   1,   0, 
    228, 144,   1,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   2,   0,   4, 224, 
      1,   0, 228, 144,   2,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   2,   0, 
      8, 224,   1,   0, 228, 144, 
      3,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     96
//

    vs_3_0
    def c192, 0.100000001, 4, 2.0999999, 1.10000002
    def c193, 3.0999999, 0, 0, 0
    dcl_position v0
    dcl_color1 v1
    dcl_texcoord o0
    dcl_texcoord1 o1
    dcl_texcoord2 o2.xy
    dcl_position o3
    add r0.x, c192.x, v1.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c192.y
    mova a0.x, r0.x
    dp4 o3.x, v0, c0[a0.x]
    dp4 o3.y, v0, c1[a0.x]
    dp4 o3.z, v0, c2[a0.x]
    dp4 o3.w, v0, c3[a0.x]
    mad r0.xyz, v1.x, c192.y, c192.zxww
    frc r1.xyz, r0
    add r0.xyz, r0, -r1
    mad r0.w, v1.x, c192.y, -r1.x
    add r0.w, r0.w, c193.x
    mova a0.x, r0.w
    dp4 o2.y, v0, c96[a0.x]
    mova a0.x, r0.x
    dp4 o2.x, v0, c96[a0.x]
    mova a0.xy, r0.yzzw
    mov o1, c96[a0.y]
    mov o0, c96[a0.x]

// approximately 21 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchPosition3dTexTGCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  96,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64, 102, 102,   6,  64, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 193,   0,  15, 160, 
    102, 102,  70,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   2,   0, 
      0,   3,   0,   0,   1, 128, 
    192,   0,   0, 160,   1,   0, 
      0, 144,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    192,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   3,   0,   1, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   3,   0, 
      2, 224,   0,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      3,   0,   4, 224,   0,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   3,   0,   8, 224, 
      0,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   1,   0,   0, 144, 
    192,   0,  85, 160, 192,   0, 
    242, 160,  19,   0,   0,   2, 
      1,   0,   7, 128,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   7, 128,   0,   0, 
    228, 128,   1,   0, 228, 129, 
      4,   0,   0,   4,   0,   0, 
      8, 128,   1,   0,   0, 144, 
    192,   0,  85, 160,   1,   0, 
      0, 129,   2,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128, 193,   0,   0, 160, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0, 255, 128, 
      9,   0,   0,   4,   2,   0, 
      2, 224,   0,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
      0, 128,   9,   0,   0,   4, 
      2,   0,   1, 224,   0,   0, 
    228, 144,  96,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 233, 128,   1,   0, 
      0,   3,   1,   0,  15, 224, 
     96,  32, 228, 160,   0,   0, 
     85, 176,   1,   0,   0,   3, 
      0,   0,  15, 224,  96,  32, 
    228, 160,   0,   0,   0, 176, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     96
//

    vs_3_0
    def c192, 255.009995, 1020.03998, 4, 3.0999999
    def c193, 0.100000001, 2.0999999, 1.10000002, 0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3.xy
    dcl_position o4
    mov r0.xy, c192
    mad r0, v0.z, r0.xyyy, c193.xyxz
    frc r1, r0
    add r0, r0, -r1
    mad r1.x, v0.z, c192.y, -r1.y
    add r1.x, r1.x, c192.w
    mova a0.x, r1.x
    dp4 o3.y, v1, c96[a0.x]
    mul r0.x, r0.x, c192.z
    mova a0.x, r0.x
    dp4 o4.x, v1, c0[a0.x]
    dp4 o4.y, v1, c1[a0.x]
    dp4 o4.z, v1, c2[a0.x]
    dp4 o4.w, v1, c3[a0.x]
    mova a0.x, r0.y
    dp4 o3.x, v1, c96[a0.x]
    mov o0, v0
    mova a0.xy, r0.zwzw
    mov o2, c96[a0.y]
    mov o1, c96[a0.x]

// approximately 20 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchPosition3dTexTGCxformEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  96,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
    143,   2, 127,  67, 143,   2, 
    127,  68,   0,   0, 128,  64, 
    102, 102,  70,  64,  81,   0, 
      0,   5, 193,   0,  15, 160, 
    205, 204, 204,  61, 102, 102, 
      6,  64, 205, 204, 140,  63, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      3,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      4,   0,  15, 224,   1,   0, 
      0,   2,   0,   0,   3, 128, 
    192,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 170, 144,   0,   0, 
     84, 128, 193,   0, 132, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,   1, 128, 
      0,   0, 170, 144, 192,   0, 
     85, 160,   1,   0,  85, 129, 
      2,   0,   0,   3,   1,   0, 
      1, 128,   1,   0,   0, 128, 
    192,   0, 255, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      1,   0,   0, 128,   9,   0, 
      0,   4,   3,   0,   2, 224, 
      1,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    192,   0, 170, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   4,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   4,   0, 
      2, 224,   1,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      4,   0,   4, 224,   1,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   4,   0,   8, 224, 
      1,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,  85, 128, 
      9,   0,   0,   4,   3,   0, 
      1, 224,   1,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 144,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    238, 128,   1,   0,   0,   3, 
      2,   0,  15, 224,  96,  32, 
    228, 160,   0,   0,  85, 176, 
      1,   0,   0,   3,   1,   0, 
     15, 224,  96,  32, 228, 160, 
      0,   0,   0, 176, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//

    vs_3_0
    def c96, 0.100000001, 4, 0, 0
    dcl_color v0
    dcl_position v1
    dcl_color2 v2
    dcl_color o0
    dcl_position o1
    add r0.x, c96.x, v2.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c96.y
    mova a0.x, r0.x
    dp4 o1.x, v1, c0[a0.x]
    dp4 o1.y, v1, c1[a0.x]
    dp4 o1.z, v1, c2[a0.x]
    dp4 o1.w, v1, c3[a0.x]
    mov o0, v0

// approximately 10 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchPosition3dVertex[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 109, 117, 110, 105, 
    102, 111, 114, 109, 115,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,  24,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 224,   2,   0, 
      0,   3,   0,   0,   1, 128, 
     96,   0,   0, 160,   2,   0, 
      0, 144,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
     96,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   1,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   1,   0, 
      2, 224,   1,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      1,   0,   4, 224,   1,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   1,   0,   8, 224, 
      1,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//

    vs_3_0
    def c96, 255.009995, 0.100000001, 4, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color o0
    dcl_color1 o1
    dcl_position o2
    mad r0.x, v1.z, c96.x, c96.y
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c96.z
    mova a0.x, r0.x
    dp4 o2.x, v2, c0[a0.x]
    dp4 o2.y, v2, c1[a0.x]
    dp4 o2.z, v2, c2[a0.x]
    dp4 o2.w, v2, c3[a0.x]
    mov o0, v0
    mov o1, v1

// approximately 11 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchPosition3dVertexEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 109, 117, 110, 105, 
    102, 111, 114, 109, 115,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,  24,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    143,   2, 127,  67, 205, 204, 
    204,  61,   0,   0, 128,  64, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      1,   0, 170, 144,  96,   0, 
      0, 160,  96,   0,  85, 160, 
     19,   0,   0,   2,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0,  85, 129,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 128,  96,   0, 
    170, 160,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
      0, 128,   9,   0,   0,   4, 
      2,   0,   1, 224,   2,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   2,   0,   2, 224, 
      2,   0, 228, 144,   1,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   2,   0, 
      4, 224,   2,   0, 228, 144, 
      2,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      2,   0,   8, 224,   2,   0, 
    228, 144,   3,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_3_0
    def c144, 0.100000001, 4, 2, 1.10000002
    dcl_color v0
    dcl_position v1
    dcl_color2 v2
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_position o3
    add r0.x, c144.x, v2.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c144.y
    mova a0.x, r0.x
    dp4 o3.x, v1, c0[a0.x]
    dp4 o3.y, v1, c1[a0.x]
    dp4 o3.z, v1, c2[a0.x]
    dp4 o3.w, v1, c3[a0.x]
    mov o0, v0
    mad r0.xy, v2.x, c144.z, c144.xwzw
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mova a0.xy, r0
    mov o2, c96[a0.y]
    mov o1, c96[a0.x]

// approximately 16 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchPosition3dVertexCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,  64, 
    205, 204, 140,  63,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   2,   0, 
      0,   3,   0,   0,   1, 128, 
    144,   0,   0, 160,   2,   0, 
      0, 144,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    144,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   3,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   3,   0, 
      2, 224,   1,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      3,   0,   4, 224,   1,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   3,   0,   8, 224, 
      1,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0,   0, 144, 
    144,   0, 170, 160, 144,   0, 
    236, 160,  19,   0,   0,   2, 
      0,   0,  12, 128,   0,   0, 
     68, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    228, 128,   0,   0, 238, 129, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 228, 128, 
      1,   0,   0,   3,   2,   0, 
     15, 224,  96,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   3,   1,   0,  15, 224, 
     96,  32, 228, 160,   0,   0, 
      0, 176, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_3_0
    def c144, 255.009995, 510.019989, 0.100000001, 1.10000002
    def c145, 4, 0, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2
    dcl_texcoord1 o3
    dcl_position o4
    mad r0.xyz, v1.z, c144.xyyw, c144.zzww
    frc r1.xyz, r0
    add r0.xyz, r0, -r1
    mul r0.x, r0.x, c145.x
    mova a0.x, r0.x
    dp4 o4.x, v2, c0[a0.x]
    dp4 o4.y, v2, c1[a0.x]
    dp4 o4.z, v2, c2[a0.x]
    dp4 o4.w, v2, c3[a0.x]
    mov o0, v0
    mov o1, v1
    mova a0.xy, r0.yzzw
    mov o3, c96[a0.y]
    mov o2, c96[a0.x]

// approximately 14 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchPosition3dVertexCxformEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    143,   2, 127,  67, 143,   2, 
    255,  67, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 145,   0,  15, 160, 
      0,   0, 128,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      3,   0,  15, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      4,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      1,   0, 170, 144, 144,   0, 
    212, 160, 144,   0, 250, 160, 
     19,   0,   0,   2,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 128, 145,   0, 
      0, 160,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
      0, 128,   9,   0,   0,   4, 
      4,   0,   1, 224,   2,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   4,   0,   2, 224, 
      2,   0, 228, 144,   1,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   4,   0, 
      4, 224,   2,   0, 228, 144, 
      2,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      4,   0,   8, 224,   2,   0, 
    228, 144,   3,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 144,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 233, 128,   1,   0, 
      0,   3,   3,   0,  15, 224, 
     96,  32, 228, 160,   0,   0, 
     85, 176,   1,   0,   0,   3, 
      2,   0,  15, 224,  96,  32, 
    228, 160,   0,   0,   0, 176, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     96
//

    vs_3_0
    def c192, 255.009995, 1020.03998, 0.100000001, 4
    def c193, 1.10000002, 2.0999999, 3.0999999, 0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xy
    dcl_position o3
    mad r0.xy, v0.z, c192, c192.z
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mad r0.z, v0.z, c192.y, -r0.w
    add r1.xyz, r0.z, c193
    mul r0.x, r0.x, c192.w
    mova a0.x, r0.y
    dp4 o1.x, v1, c96[a0.x]
    mova a0.x, r0.x
    dp4 o3.x, v1, c0[a0.x]
    dp4 o3.y, v1, c1[a0.x]
    dp4 o3.z, v1, c2[a0.x]
    dp4 o3.w, v1, c3[a0.x]
    mova a0.x, r1.x
    dp4 o1.y, v1, c96[a0.x]
    mova a0.xy, r1.yzzw
    dp4 o2.y, v1, c96[a0.y]
    dp4 o2.x, v1, c96[a0.x]
    mov o0, v0

// approximately 19 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchPosition3dTexTGTexTG[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  96,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
    143,   2, 127,  67, 143,   2, 
    127,  68, 205, 204, 204,  61, 
      0,   0, 128,  64,  81,   0, 
      0,   5, 193,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
      6,  64, 102, 102,  70,  64, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,   3, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 170, 144, 192,   0, 
    228, 160, 192,   0, 170, 160, 
     19,   0,   0,   2,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      0,   0, 238, 129,   4,   0, 
      0,   4,   0,   0,   4, 128, 
      0,   0, 170, 144, 192,   0, 
     85, 160,   0,   0, 255, 129, 
      2,   0,   0,   3,   1,   0, 
      7, 128,   0,   0, 170, 128, 
    193,   0, 228, 160,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 128, 192,   0, 
    255, 160,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
     85, 128,   9,   0,   0,   4, 
      1,   0,   1, 224,   1,   0, 
    228, 144,  96,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   3,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   3,   0, 
      2, 224,   1,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      3,   0,   4, 224,   1,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   3,   0,   8, 224, 
      1,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   1,   0,   0, 128, 
      9,   0,   0,   4,   1,   0, 
      2, 224,   1,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   1,   0, 
    233, 128,   9,   0,   0,   4, 
      2,   0,   2, 224,   1,   0, 
    228, 144,  96,  32, 228, 160, 
      0,   0,  85, 176,   9,   0, 
      0,   4,   2,   0,   1, 224, 
      1,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96    144
//

    vs_3_0
    def c240, 255.009995, 1530.05994, 4, 0
    def c241, 0.100000001, 2.0999999, 1.10000002, 0
    def c242, 3.0999999, 4.0999999, 5.0999999, 0
    dcl_color v0
    dcl_position v1
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3.xy
    dcl_texcoord3 o4.xy
    dcl_position o5
    mov r0.xy, c240
    mad r0, v0.z, r0.xyyy, c241.xyxz
    frc r1, r0
    add r0, r0, -r1
    mad r1.x, v0.z, c240.y, -r1.y
    add r1.xyz, r1.x, c242
    mul r0.x, r0.x, c240.z
    mova a0.x, r0.x
    dp4 o5.x, v1, c0[a0.x]
    dp4 o5.y, v1, c1[a0.x]
    dp4 o5.z, v1, c2[a0.x]
    dp4 o5.w, v1, c3[a0.x]
    mova a0.x, r0.y
    dp4 o3.x, v1, c96[a0.x]
    mova a0.x, r1.x
    dp4 o3.y, v1, c96[a0.x]
    mova a0.xy, r1.yzzw
    dp4 o4.y, v1, c96[a0.y]
    dp4 o4.x, v1, c96[a0.x]
    mov o0, v0
    mova a0.xy, r0.zwzw
    mov o2, c96[a0.y]
    mov o1, c96[a0.x]

// approximately 23 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchPosition3dTexTGTexTGCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0, 144,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 240,   0,  15, 160, 
    143,   2, 127,  67, 235,  65, 
    191,  68,   0,   0, 128,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 241,   0,  15, 160, 
    205, 204, 204,  61, 102, 102, 
      6,  64, 205, 204, 140,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 242,   0,  15, 160, 
    102, 102,  70,  64,  51,  51, 
    131,  64,  51,  51, 163,  64, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      3,   0,   3, 224,  31,   0, 
      0,   2,   5,   0,   3, 128, 
      4,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      5,   0,  15, 224,   1,   0, 
      0,   2,   0,   0,   3, 128, 
    240,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 170, 144,   0,   0, 
     84, 128, 241,   0, 132, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,   1, 128, 
      0,   0, 170, 144, 240,   0, 
     85, 160,   1,   0,  85, 129, 
      2,   0,   0,   3,   1,   0, 
      7, 128,   1,   0,   0, 128, 
    242,   0, 228, 160,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 128, 240,   0, 
    170, 160,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
      0, 128,   9,   0,   0,   4, 
      5,   0,   1, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   5,   0,   2, 224, 
      1,   0, 228, 144,   1,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   5,   0, 
      4, 224,   1,   0, 228, 144, 
      2,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      5,   0,   8, 224,   1,   0, 
    228, 144,   3,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   3,   0,   1, 224, 
      1,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   1,   0,   0, 128, 
      9,   0,   0,   4,   3,   0, 
      2, 224,   1,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   1,   0, 
    233, 128,   9,   0,   0,   4, 
      4,   0,   2, 224,   1,   0, 
    228, 144,  96,  32, 228, 160, 
      0,   0,  85, 176,   9,   0, 
      0,   4,   4,   0,   1, 224, 
      1,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 238, 128, 
      1,   0,   0,   3,   2,   0, 
     15, 224,  96,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   3,   1,   0,  15, 224, 
     96,  32, 228, 160,   0,   0, 
      0, 176, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_3_0
    def c144, 255.009995, 510.019989, 0.100000001, 4
    def c145, 1.10000002, 0, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2.xy
    dcl_position o3
    mad r0.xy, v1.z, c144, c144.z
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mad r0.z, v1.z, c144.y, -r0.w
    add r0.z, r0.z, c145.x
    mova a0.x, r0.z
    dp4 o2.y, v2, c96[a0.x]
    mul r0.x, r0.x, c144.w
    mova a0.x, r0.y
    dp4 o2.x, v2, c96[a0.x]
    mova a0.x, r0.x
    dp4 o3.x, v2, c0[a0.x]
    dp4 o3.y, v2, c1[a0.x]
    dp4 o3.z, v2, c2[a0.x]
    dp4 o3.w, v2, c3[a0.x]
    mov o0, v0
    mov o1, v1

// approximately 17 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchPosition3dTexTGVertex[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    143,   2, 127,  67, 143,   2, 
    255,  67, 205, 204, 204,  61, 
      0,   0, 128,  64,  81,   0, 
      0,   5, 145,   0,  15, 160, 
    205, 204, 140,  63,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      1,   0, 170, 144, 144,   0, 
    228, 160, 144,   0, 170, 160, 
     19,   0,   0,   2,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      0,   0, 238, 129,   4,   0, 
      0,   4,   0,   0,   4, 128, 
      1,   0, 170, 144, 144,   0, 
     85, 160,   0,   0, 255, 129, 
      2,   0,   0,   3,   0,   0, 
      4, 128,   0,   0, 170, 128, 
    145,   0,   0, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0, 170, 128,   9,   0, 
      0,   4,   2,   0,   2, 224, 
      2,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    144,   0, 255, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   2,   0,   1, 224, 
      2,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   3,   0, 
      1, 224,   2,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      3,   0,   2, 224,   2,   0, 
    228, 144,   1,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   3,   0,   4, 224, 
      2,   0, 228, 144,   2,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   3,   0, 
      8, 224,   2,   0, 228, 144, 
      3,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  15, 224,   1,   0, 
    228, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     96
//

    vs_3_0
    def c192, 255.009995, 1020.03998, 4, 3.0999999
    def c193, 0.100000001, 2.0999999, 1.10000002, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2
    dcl_texcoord1 o3
    dcl_texcoord2 o4.xy
    dcl_position o5
    mov r0.xy, c192
    mad r0, v1.z, r0.xyyy, c193.xyxz
    frc r1, r0
    add r0, r0, -r1
    mad r1.x, v1.z, c192.y, -r1.y
    add r1.x, r1.x, c192.w
    mova a0.x, r1.x
    dp4 o4.y, v2, c96[a0.x]
    mul r0.x, r0.x, c192.z
    mova a0.x, r0.x
    dp4 o5.x, v2, c0[a0.x]
    dp4 o5.y, v2, c1[a0.x]
    dp4 o5.z, v2, c2[a0.x]
    dp4 o5.w, v2, c3[a0.x]
    mova a0.x, r0.y
    dp4 o4.x, v2, c96[a0.x]
    mov o0, v0
    mov o1, v1
    mova a0.xy, r0.zwzw
    mov o3, c96[a0.y]
    mov o2, c96[a0.x]

// approximately 21 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchPosition3dTexTGVertexCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  96,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
    143,   2, 127,  67, 143,   2, 
    127,  68,   0,   0, 128,  64, 
    102, 102,  70,  64,  81,   0, 
      0,   5, 193,   0,  15, 160, 
    205, 204, 204,  61, 102, 102, 
      6,  64, 205, 204, 140,  63, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      3,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      4,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      5,   0,  15, 224,   1,   0, 
      0,   2,   0,   0,   3, 128, 
    192,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0, 170, 144,   0,   0, 
     84, 128, 193,   0, 132, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,   1, 128, 
      1,   0, 170, 144, 192,   0, 
     85, 160,   1,   0,  85, 129, 
      2,   0,   0,   3,   1,   0, 
      1, 128,   1,   0,   0, 128, 
    192,   0, 255, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      1,   0,   0, 128,   9,   0, 
      0,   4,   4,   0,   2, 224, 
      2,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,   0, 176, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    192,   0, 170, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   5,   0,   1, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   5,   0, 
      2, 224,   2,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      5,   0,   4, 224,   2,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   5,   0,   8, 224, 
      2,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,  85, 128, 
      9,   0,   0,   4,   4,   0, 
      1, 224,   2,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  15, 224,   1,   0, 
    228, 144,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    238, 128,   1,   0,   0,   3, 
      3,   0,  15, 224,  96,  32, 
    228, 160,   0,   0,  85, 176, 
      1,   0,   0,   3,   2,   0, 
     15, 224,  96,  32, 228, 160, 
      0,   0,   0, 176, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_3_0
    def c96, 1.10000002, 3.0999999, 0, 1
    def c97, 4, 0.100000001, 2.0999999, 0
    dcl_color v0
    dcl_position v1
    dcl_color1 v2
    dcl_color o0
    dcl_texcoord o1.xy
    dcl_position o2
    mad r0.xy, v2.x, c97.x, c97.yzzw
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mad r0.zw, v2.x, c97.x, -r0
    add r0.zw, r0, c96.xyxy
    mova a0.xy, r0
    dp4 o1.x, v1, c0[a0.y]
    dp4 o2.x, v1, c0[a0.x]
    mova a0.xy, r0.zwzw
    dp4 o1.y, v1, c0[a0.y]
    dp4 o2.y, v1, c0[a0.x]
    mov o0, v0
    mov o2.zw, c96

// approximately 13 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VInstancedTexTGEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
     70,  64,   0,   0,   0,   0, 
      0,   0, 128,  63,  81,   0, 
      0,   5,  97,   0,  15, 160, 
      0,   0, 128,  64, 205, 204, 
    204,  61, 102, 102,   6,  64, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      2,   0,   0, 144,  97,   0, 
      0, 160,  97,   0, 233, 160, 
     19,   0,   0,   2,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      0,   0, 238, 129,   4,   0, 
      0,   4,   0,   0,  12, 128, 
      2,   0,   0, 144,  97,   0, 
      0, 160,   0,   0, 228, 129, 
      2,   0,   0,   3,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     96,   0,  68, 160,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 228, 128,   9,   0, 
      0,   4,   1,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   2,   0, 
      1, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    238, 128,   9,   0,   0,   4, 
      1,   0,   2, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,  85, 176,   9,   0, 
      0,   4,   2,   0,   2, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
      1,   0,   0,   2,   2,   0, 
     12, 224,  96,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

    vs_3_0
    def c144, 2.0999999, 4.0999999, 0.100000001, 1.10000002
    def c145, 6, 3.0999999, 5.0999999, 0
    def c146, 0, 1, 0, 0
    dcl_color v0
    dcl_position v1
    dcl_color1 v2
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3.xy
    dcl_position o4
    mov r0.x, c145.x
    mad r0, v2.x, r0.x, c144
    frc r1, r0
    add r0, r0, -r1
    mad r1.xy, v2.x, c145.x, -r1
    add r1.xy, r1, c145.yzzw
    mova a0.x, r0.x
    dp4 o4.x, v1, c0[a0.x]
    mova a0.xy, r1
    dp4 o3.y, v1, c0[a0.y]
    dp4 o4.y, v1, c0[a0.x]
    mova a0.x, r0.y
    dp4 o3.x, v1, c0[a0.x]
    mov o0, v0
    mova a0.xy, r0.zwzw
    mov o2, c0[a0.y]
    mov o1, c0[a0.x]
    mov o4.zw, c146.xyxy

// approximately 18 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VInstancedTexTGCxformEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    144,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    102, 102,   6,  64,  51,  51, 
    131,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 145,   0,  15, 160, 
      0,   0, 192,  64, 102, 102, 
     70,  64,  51,  51, 163,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 146,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      3,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      4,   0,  15, 224,   1,   0, 
      0,   2,   0,   0,   1, 128, 
    145,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      2,   0,   0, 144,   0,   0, 
      0, 128, 144,   0, 228, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,   3, 128, 
      2,   0,   0, 144, 145,   0, 
      0, 160,   1,   0, 228, 129, 
      2,   0,   0,   3,   1,   0, 
      3, 128,   1,   0, 228, 128, 
    145,   0, 233, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   4,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 228, 128, 
      9,   0,   0,   4,   3,   0, 
      2, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      4,   0,   2, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   3,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 238, 128, 
      1,   0,   0,   3,   2,   0, 
     15, 224,   0,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   3,   1,   0,  15, 224, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      4,   0,  12, 224, 146,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      48
//

    vs_3_0
    def c48, 2, 0.100000001, 1.10000002, 0
    def c49, 0, 1, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color2 v3
    dcl_color o0
    dcl_color1 o1
    dcl_position o2
    mad r0.x, v3.x, c48.x, c48.y
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mad r0.y, v3.x, c48.x, -r0.y
    add r0.y, r0.y, c48.z
    mova a0.x, r0.y
    dp4 o2.y, v2, c0[a0.x]
    mova a0.x, r0.x
    dp4 o2.x, v2, c0[a0.x]
    mov o0, v0
    mov o1, v1
    mov o2.zw, c49.xyxy

// approximately 12 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VInstancedVertexEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     48,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  48,   0,  15, 160, 
      0,   0,   0,  64, 205, 204, 
    204,  61, 205, 204, 140,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5,  49,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      3,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      3,   0,   0, 144,  48,   0, 
      0, 160,  48,   0,  85, 160, 
     19,   0,   0,   2,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0,  85, 129,   4,   0, 
      0,   4,   0,   0,   2, 128, 
      3,   0,   0, 144,  48,   0, 
      0, 160,   0,   0,  85, 129, 
      2,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
     48,   0, 170, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   2,   0,   2, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   2,   0, 
      1, 224,   2,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  15, 224,   1,   0, 
    228, 144,   1,   0,   0,   2, 
      2,   0,  12, 224,  49,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_3_0
    def c96, 4, 2.0999999, 0.100000001, 1.10000002
    def c97, 3.0999999, 0, 1, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color2 v3
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2
    dcl_texcoord1 o3
    dcl_position o4
    mad r0.xyz, v3.x, c96.x, c96.yzww
    frc r1.xyz, r0
    add r0.xyz, r0, -r1
    mad r0.w, v3.x, c96.x, -r1.x
    add r0.w, r0.w, c97.x
    mova a0.x, r0.w
    dp4 o4.y, v2, c0[a0.x]
    mova a0.x, r0.x
    dp4 o4.x, v2, c0[a0.x]
    mov o0, v0
    mov o1, v1
    mova a0.xy, r0.yzzw
    mov o3, c0[a0.y]
    mov o2, c0[a0.x]
    mov o4.zw, c97.xyyz

// approximately 15 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VInstancedVertexCxformEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
      0,   0, 128,  64, 102, 102, 
      6,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5,  97,   0,  15, 160, 
    102, 102,  70,  64,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      3,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      3,   0,  15, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      4,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      3,   0,   0, 144,  96,   0, 
      0, 160,  96,   0, 249, 160, 
     19,   0,   0,   2,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      3,   0,   0, 144,  96,   0, 
      0, 160,   1,   0,   0, 129, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
     97,   0,   0, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0, 255, 128,   9,   0, 
      0,   4,   4,   0,   2, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   4,   0, 
      1, 224,   2,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  15, 224,   1,   0, 
    228, 144,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    233, 128,   1,   0,   0,   3, 
      3,   0,  15, 224,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      1,   0,   0,   3,   2,   0, 
     15, 224,   0,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   4,   0,  12, 224, 
     97,   0, 148, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

    vs_3_0
    def c144, 6, 0.100000001, 2.0999999, 0
    def c145, 0, 1, 0, 0
    def c146, 1.10000002, 3.0999999, 4.0999999, 5.0999999
    dcl_color v0
    dcl_position v1
    dcl_color1 v2
    dcl_color o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xy
    dcl_position o3
    mad r0.xy, v2.x, c144.x, c144.yzzw
    frc r1, r0.xyyy
    add r0.xy, r0, -r1.xwzw
    mad r1, v2.x, c144.x, -r1
    add r1, r1, c146
    mova a0.xy, r0
    dp4 o1.x, v1, c0[a0.y]
    dp4 o3.x, v1, c0[a0.x]
    mova a0.x, r1.x
    dp4 o3.y, v1, c0[a0.x]
    mova a0.x, r1.y
    dp4 o1.y, v1, c0[a0.x]
    mova a0.xy, r1.zwzw
    dp4 o2.y, v1, c0[a0.y]
    dp4 o2.x, v1, c0[a0.x]
    mov o0, v0
    mov o3.zw, c145.xyxy

// approximately 17 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VInstancedTexTGTexTG[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    144,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
      0,   0, 192,  64, 205, 204, 
    204,  61, 102, 102,   6,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 145,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 146,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
     70,  64,  51,  51, 131,  64, 
     51,  51, 163,  64,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,   3, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      2,   0,   0, 144, 144,   0, 
      0, 160, 144,   0, 233, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0,  84, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      1,   0, 236, 129,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      2,   0,   0, 144, 144,   0, 
      0, 160,   1,   0, 228, 129, 
      2,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
    146,   0, 228, 160,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 228, 128,   9,   0, 
      0,   4,   1,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   3,   0, 
      1, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   1,   0, 
      0, 128,   9,   0,   0,   4, 
      3,   0,   2, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      1,   0,  85, 128,   9,   0, 
      0,   4,   1,   0,   2, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 238, 128, 
      9,   0,   0,   4,   2,   0, 
      2, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      2,   0,   1, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   3,   0,  12, 224, 
    145,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[192];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     192
//

    vs_3_0
    def c192, 8, 0, 1, 0
    def c193, 2.0999999, 4.0999999, 0.100000001, 1.10000002
    def c194, 3.0999999, 5.0999999, 6.0999999, 7.0999999
    dcl_color v0
    dcl_position v1
    dcl_color1 v2
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3.xy
    dcl_texcoord3 o4.xy
    dcl_position o5
    mov r0.x, c192.x
    mad r0, v2.x, r0.x, c193
    frc r1, r0
    add r0, r0, -r1
    mad r1, v2.x, c192.x, -r1.xyyy
    add r1, r1, c194
    mova a0.x, r0.x
    dp4 o5.x, v1, c0[a0.x]
    mova a0.x, r1.x
    dp4 o5.y, v1, c0[a0.x]
    mova a0.x, r0.y
    dp4 o3.x, v1, c0[a0.x]
    mova a0.x, r1.y
    dp4 o3.y, v1, c0[a0.x]
    mova a0.xy, r1.zwzw
    dp4 o4.y, v1, c0[a0.y]
    dp4 o4.x, v1, c0[a0.x]
    mov o0, v0
    mova a0.xy, r0.zwzw
    mov o2, c0[a0.y]
    mov o1, c0[a0.x]
    mov o5.zw, c192.xyyz

// approximately 22 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VInstancedTexTGTexTGCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    192,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 192,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
      0,   0,   0,  65,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 193,   0,  15, 160, 
    102, 102,   6,  64,  51,  51, 
    131,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 194,   0,  15, 160, 
    102, 102,  70,  64,  51,  51, 
    163,  64,  51,  51, 195,  64, 
     51,  51, 227,  64,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      3,   0,   3, 224,  31,   0, 
      0,   2,   5,   0,   3, 128, 
      4,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      5,   0,  15, 224,   1,   0, 
      0,   2,   0,   0,   1, 128, 
    192,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      2,   0,   0, 144,   0,   0, 
      0, 128, 193,   0, 228, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      2,   0,   0, 144, 192,   0, 
      0, 160,   1,   0,  84, 129, 
      2,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
    194,   0, 228, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   5,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   1,   0,   0, 128, 
      9,   0,   0,   4,   5,   0, 
      2, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
     85, 128,   9,   0,   0,   4, 
      3,   0,   1, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      1,   0,  85, 128,   9,   0, 
      0,   4,   3,   0,   2, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 238, 128, 
      9,   0,   0,   4,   4,   0, 
      2, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      4,   0,   1, 224,   1,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 238, 128,   1,   0, 
      0,   3,   2,   0,  15, 224, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   1,   0,   0,   3, 
      1,   0,  15, 224,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   5,   0, 
     12, 224, 192,   0, 148, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_3_0
    def c96, 1.10000002, 3.0999999, 0, 1
    def c97, 4, 0.100000001, 2.0999999, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color2 v3
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2.xy
    dcl_position o3
    mad r0.xy, v3.x, c97.x, c97.yzzw
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mad r0.zw, v3.x, c97.x, -r0
    add r0.zw, r0, c96.xyxy
    mova a0.xy, r0
    dp4 o2.x, v2, c0[a0.y]
    dp4 o3.x, v2, c0[a0.x]
    mova a0.xy, r0.zwzw
    dp4 o2.y, v2, c0[a0.y]
    dp4 o3.y, v2, c0[a0.x]
    mov o0, v0
    mov o1, v1
    mov o3.zw, c96

// approximately 14 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VInstancedTexTGVertex[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
     70,  64,   0,   0,   0,   0, 
      0,   0, 128,  63,  81,   0, 
      0,   5,  97,   0,  15, 160, 
      0,   0, 128,  64, 205, 204, 
    204,  61, 102, 102,   6,  64, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      3,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      3,   0,   0, 144,  97,   0, 
      0, 160,  97,   0, 233, 160, 
     19,   0,   0,   2,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      0,   0, 238, 129,   4,   0, 
      0,   4,   0,   0,  12, 128, 
      3,   0,   0, 144,  97,   0, 
      0, 160,   0,   0, 228, 129, 
      2,   0,   0,   3,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     96,   0,  68, 160,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 228, 128,   9,   0, 
      0,   4,   2,   0,   1, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   3,   0, 
      1, 224,   2,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    238, 128,   9,   0,   0,   4, 
      2,   0,   2, 224,   2,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,  85, 176,   9,   0, 
      0,   4,   3,   0,   2, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     15, 224,   1,   0, 228, 144, 
      1,   0,   0,   2,   3,   0, 
     12, 224,  96,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

    vs_3_0
    def c144, 2.0999999, 4.0999999, 0.100000001, 1.10000002
    def c145, 6, 3.0999999, 5.0999999, 0
    def c146, 0, 1, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color2 v3
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2
    dcl_texcoord1 o3
    dcl_texcoord2 o4.xy
    dcl_position o5
    mov r0.x, c145.x
    mad r0, v3.x, r0.x, c144
    frc r1, r0
    add r0, r0, -r1
    mad r1.xy, v3.x, c145.x, -r1
    add r1.xy, r1, c145.yzzw
    mova a0.x, r0.x
    dp4 o5.x, v2, c0[a0.x]
    mova a0.xy, r1
    dp4 o4.y, v2, c0[a0.y]
    dp4 o5.y, v2, c0[a0.x]
    mova a0.x, r0.y
    dp4 o4.x, v2, c0[a0.x]
    mov o0, v0
    mov o1, v1
    mova a0.xy, r0.zwzw
    mov o3, c0[a0.y]
    mov o2, c0[a0.x]
    mov o5.zw, c146.xyxy

// approximately 19 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VInstancedTexTGVertexCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    144,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    102, 102,   6,  64,  51,  51, 
    131,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 145,   0,  15, 160, 
      0,   0, 192,  64, 102, 102, 
     70,  64,  51,  51, 163,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 146,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      3,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      3,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      4,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      5,   0,  15, 224,   1,   0, 
      0,   2,   0,   0,   1, 128, 
    145,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      3,   0,   0, 144,   0,   0, 
      0, 128, 144,   0, 228, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,   3, 128, 
      3,   0,   0, 144, 145,   0, 
      0, 160,   1,   0, 228, 129, 
      2,   0,   0,   3,   1,   0, 
      3, 128,   1,   0, 228, 128, 
    145,   0, 233, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   5,   0,   1, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 228, 128, 
      9,   0,   0,   4,   4,   0, 
      2, 224,   2,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      5,   0,   2, 224,   2,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   4,   0,   1, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     15, 224,   1,   0, 228, 144, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 238, 128, 
      1,   0,   0,   3,   3,   0, 
     15, 224,   0,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   3,   2,   0,  15, 224, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      5,   0,  12, 224, 146,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_3_0
    def c144, 0.100000001, 4, 2, 1.10000002
    dcl_color v0
    dcl_position v1
    dcl_color1 v2
    dcl_color o0
    dcl_texcoord o1.xy
    dcl_position o2
    add r0.x, c144.x, v2.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c144.y
    mova a0.x, r0.x
    dp4 o2.x, v1, c0[a0.x]
    dp4 o2.y, v1, c1[a0.x]
    dp4 o2.z, v1, c2[a0.x]
    dp4 o2.w, v1, c3[a0.x]
    mad r0.x, v2.x, c144.z, c144.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mad r0.y, v2.x, c144.z, -r0.y
    add r0.y, r0.y, c144.w
    mova a0.x, r0.y
    dp4 o1.y, v1, c96[a0.x]
    mova a0.x, r0.x
    dp4 o1.x, v1, c96[a0.x]
    mov o0, v0

// approximately 19 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VInstancedPosition3dTexTGEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,  64, 
    205, 204, 140,  63,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 224,   2,   0, 
      0,   3,   0,   0,   1, 128, 
    144,   0,   0, 160,   2,   0, 
      0, 144,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    144,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   2,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   2,   0, 
      2, 224,   1,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      2,   0,   4, 224,   1,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   2,   0,   8, 224, 
      1,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      4,   0,   0,   4,   0,   0, 
      1, 128,   2,   0,   0, 144, 
    144,   0, 170, 160, 144,   0, 
      0, 160,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      4,   0,   0,   4,   0,   0, 
      2, 128,   2,   0,   0, 144, 
    144,   0, 170, 160,   0,   0, 
     85, 129,   2,   0,   0,   3, 
      0,   0,   2, 128,   0,   0, 
     85, 128, 144,   0, 255, 160, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,  85, 128, 
      9,   0,   0,   4,   1,   0, 
      2, 224,   1,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
      0, 128,   9,   0,   0,   4, 
      1,   0,   1, 224,   1,   0, 
    228, 144,  96,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     96
//

    vs_3_0
    def c192, 0.100000001, 4, 2.0999999, 1.10000002
    def c193, 3.0999999, 0, 0, 0
    dcl_color v0
    dcl_position v1
    dcl_color1 v2
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3.xy
    dcl_position o4
    add r0.x, c192.x, v2.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c192.y
    mova a0.x, r0.x
    dp4 o4.x, v1, c0[a0.x]
    dp4 o4.y, v1, c1[a0.x]
    dp4 o4.z, v1, c2[a0.x]
    dp4 o4.w, v1, c3[a0.x]
    mad r0.xyz, v2.x, c192.y, c192.zxww
    frc r1.xyz, r0
    add r0.xyz, r0, -r1
    mad r0.w, v2.x, c192.y, -r1.x
    add r0.w, r0.w, c193.x
    mova a0.x, r0.w
    dp4 o3.y, v1, c96[a0.x]
    mova a0.x, r0.x
    dp4 o3.x, v1, c96[a0.x]
    mov o0, v0
    mova a0.xy, r0.yzzw
    mov o2, c96[a0.y]
    mov o1, c96[a0.x]

// approximately 22 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VInstancedPosition3dTexTGCxformEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  96,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64, 102, 102,   6,  64, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 193,   0,  15, 160, 
    102, 102,  70,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      3,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      4,   0,  15, 224,   2,   0, 
      0,   3,   0,   0,   1, 128, 
    192,   0,   0, 160,   2,   0, 
      0, 144,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    192,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   4,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   4,   0, 
      2, 224,   1,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      4,   0,   4, 224,   1,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   4,   0,   8, 224, 
      1,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   2,   0,   0, 144, 
    192,   0,  85, 160, 192,   0, 
    242, 160,  19,   0,   0,   2, 
      1,   0,   7, 128,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   7, 128,   0,   0, 
    228, 128,   1,   0, 228, 129, 
      4,   0,   0,   4,   0,   0, 
      8, 128,   2,   0,   0, 144, 
    192,   0,  85, 160,   1,   0, 
      0, 129,   2,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128, 193,   0,   0, 160, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0, 255, 128, 
      9,   0,   0,   4,   3,   0, 
      2, 224,   1,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
      0, 128,   9,   0,   0,   4, 
      3,   0,   1, 224,   1,   0, 
    228, 144,  96,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 233, 128,   1,   0, 
      0,   3,   2,   0,  15, 224, 
     96,  32, 228, 160,   0,   0, 
     85, 176,   1,   0,   0,   3, 
      1,   0,  15, 224,  96,  32, 
    228, 160,   0,   0,   0, 176, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//

    vs_3_0
    def c96, 0.100000001, 4, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color2 v3
    dcl_color o0
    dcl_color1 o1
    dcl_position o2
    add r0.x, c96.x, v3.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c96.y
    mova a0.x, r0.x
    dp4 o2.x, v2, c0[a0.x]
    dp4 o2.y, v2, c1[a0.x]
    dp4 o2.z, v2, c2[a0.x]
    dp4 o2.w, v2, c3[a0.x]
    mov o0, v0
    mov o1, v1

// approximately 11 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VInstancedPosition3dVertexEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 109, 117, 110, 105, 
    102, 111, 114, 109, 115,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,  24,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      3,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 224,   2,   0, 
      0,   3,   0,   0,   1, 128, 
     96,   0,   0, 160,   3,   0, 
      0, 144,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
     96,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   2,   0,   1, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   2,   0, 
      2, 224,   2,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      2,   0,   4, 224,   2,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   2,   0,   8, 224, 
      2,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     15, 224,   1,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_3_0
    def c144, 0.100000001, 4, 2, 1.10000002
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color2 v3
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2
    dcl_texcoord1 o3
    dcl_position o4
    add r0.x, c144.x, v3.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c144.y
    mova a0.x, r0.x
    dp4 o4.x, v2, c0[a0.x]
    dp4 o4.y, v2, c1[a0.x]
    dp4 o4.z, v2, c2[a0.x]
    dp4 o4.w, v2, c3[a0.x]
    mov o0, v0
    mov o1, v1
    mad r0.xy, v3.x, c144.z, c144.xwzw
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mova a0.xy, r0
    mov o3, c96[a0.y]
    mov o2, c96[a0.x]

// approximately 17 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VInstancedPosition3dVertexCxformEAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,  64, 
    205, 204, 140,  63,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      3,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      3,   0,  15, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      4,   0,  15, 224,   2,   0, 
      0,   3,   0,   0,   1, 128, 
    144,   0,   0, 160,   3,   0, 
      0, 144,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    144,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   4,   0,   1, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   4,   0, 
      2, 224,   2,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      4,   0,   4, 224,   2,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   4,   0,   8, 224, 
      2,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     15, 224,   1,   0, 228, 144, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0,   0, 144, 
    144,   0, 170, 160, 144,   0, 
    236, 160,  19,   0,   0,   2, 
      0,   0,  12, 128,   0,   0, 
     68, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    228, 128,   0,   0, 238, 129, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 228, 128, 
      1,   0,   0,   3,   3,   0, 
     15, 224,  96,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   3,   2,   0,  15, 224, 
     96,  32, 228, 160,   0,   0, 
      0, 176, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     96
//

    vs_3_0
    def c192, 0.100000001, 4, 0, 0
    def c193, 1.10000002, 2.0999999, 3.0999999, 0
    dcl_color v0
    dcl_position v1
    dcl_color1 v2
    dcl_color o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xy
    dcl_position o3
    add r0.x, c192.x, v2.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c192.y
    mova a0.x, r0.x
    dp4 o3.x, v1, c0[a0.x]
    dp4 o3.y, v1, c1[a0.x]
    dp4 o3.z, v1, c2[a0.x]
    dp4 o3.w, v1, c3[a0.x]
    mad r0.x, v2.x, c192.y, c192.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mad r0.y, v2.x, c192.y, -r0.y
    add r0.yzw, r0.y, c193.xxyz
    mova a0.x, r0.x
    dp4 o1.x, v1, c96[a0.x]
    mova a0.x, r0.y
    dp4 o1.y, v1, c96[a0.x]
    mova a0.xy, r0.zwzw
    dp4 o2.y, v1, c96[a0.y]
    dp4 o2.x, v1, c96[a0.x]
    mov o0, v0

// approximately 22 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VInstancedPosition3dTexTGTexTG[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  96,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 193,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
      6,  64, 102, 102,  70,  64, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,   3, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   2,   0, 
      0,   3,   0,   0,   1, 128, 
    192,   0,   0, 160,   2,   0, 
      0, 144,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    192,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   3,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   3,   0, 
      2, 224,   1,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      3,   0,   4, 224,   1,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   3,   0,   8, 224, 
      1,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      4,   0,   0,   4,   0,   0, 
      1, 128,   2,   0,   0, 144, 
    192,   0,  85, 160, 192,   0, 
      0, 160,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      4,   0,   0,   4,   0,   0, 
      2, 128,   2,   0,   0, 144, 
    192,   0,  85, 160,   0,   0, 
     85, 129,   2,   0,   0,   3, 
      0,   0,  14, 128,   0,   0, 
     85, 128, 193,   0, 144, 160, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   1,   0, 
      1, 224,   1,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
     85, 128,   9,   0,   0,   4, 
      1,   0,   2, 224,   1,   0, 
    228, 144,  96,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 238, 128,   9,   0, 
      0,   4,   2,   0,   2, 224, 
      1,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   2,   0, 
      1, 224,   1,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96    144
//

    vs_3_0
    def c240, 0.100000001, 4, 6, 0
    def c241, 6, 2.0999999, 0.100000001, 1.10000002
    def c242, 3.0999999, 4.0999999, 5.0999999, 0
    dcl_color v0
    dcl_position v1
    dcl_color1 v2
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3.xy
    dcl_texcoord3 o4.xy
    dcl_position o5
    add r0.x, c240.x, v2.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c240.y
    mova a0.x, r0.x
    dp4 o5.x, v1, c0[a0.x]
    dp4 o5.y, v1, c1[a0.x]
    dp4 o5.z, v1, c2[a0.x]
    dp4 o5.w, v1, c3[a0.x]
    mad r0.xyz, v2.x, c241.x, c241.yzww
    frc r1.xyz, r0
    add r0.xyz, r0, -r1
    mad r0.w, v2.x, c240.z, -r1.x
    add r1.xyz, r0.w, c242
    mova a0.x, r0.x
    dp4 o3.x, v1, c96[a0.x]
    mova a0.x, r1.x
    dp4 o3.y, v1, c96[a0.x]
    mova a0.xy, r1.yzzw
    dp4 o4.y, v1, c96[a0.y]
    dp4 o4.x, v1, c96[a0.x]
    mov o0, v0
    mova a0.xy, r0.yzzw
    mov o2, c96[a0.y]
    mov o1, c96[a0.x]

// approximately 25 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VInstancedPosition3dTexTGTexTGCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0, 144,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 240,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0, 192,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 241,   0,  15, 160, 
      0,   0, 192,  64, 102, 102, 
      6,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 242,   0,  15, 160, 
    102, 102,  70,  64,  51,  51, 
    131,  64,  51,  51, 163,  64, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      3,   0,   3, 224,  31,   0, 
      0,   2,   5,   0,   3, 128, 
      4,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      5,   0,  15, 224,   2,   0, 
      0,   3,   0,   0,   1, 128, 
    240,   0,   0, 160,   2,   0, 
      0, 144,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    240,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   5,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   5,   0, 
      2, 224,   1,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      5,   0,   4, 224,   1,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   5,   0,   8, 224, 
      1,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   2,   0,   0, 144, 
    241,   0,   0, 160, 241,   0, 
    249, 160,  19,   0,   0,   2, 
      1,   0,   7, 128,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   7, 128,   0,   0, 
    228, 128,   1,   0, 228, 129, 
      4,   0,   0,   4,   0,   0, 
      8, 128,   2,   0,   0, 144, 
    240,   0, 170, 160,   1,   0, 
      0, 129,   2,   0,   0,   3, 
      1,   0,   7, 128,   0,   0, 
    255, 128, 242,   0, 228, 160, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   3,   0, 
      1, 224,   1,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   1,   0, 
      0, 128,   9,   0,   0,   4, 
      3,   0,   2, 224,   1,   0, 
    228, 144,  96,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      1,   0, 233, 128,   9,   0, 
      0,   4,   4,   0,   2, 224, 
      1,   0, 228, 144,  96,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   4,   0, 
      1, 224,   1,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  15, 224,   0,   0, 
    228, 144,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    233, 128,   1,   0,   0,   3, 
      2,   0,  15, 224,  96,  32, 
    228, 160,   0,   0,  85, 176, 
      1,   0,   0,   3,   1,   0, 
     15, 224,  96,  32, 228, 160, 
      0,   0,   0, 176, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_3_0
    def c144, 0.100000001, 4, 2, 1.10000002
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color2 v3
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2.xy
    dcl_position o3
    add r0.x, c144.x, v3.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c144.y
    mova a0.x, r0.x
    dp4 o3.x, v2, c0[a0.x]
    dp4 o3.y, v2, c1[a0.x]
    dp4 o3.z, v2, c2[a0.x]
    dp4 o3.w, v2, c3[a0.x]
    mad r0.x, v3.x, c144.z, c144.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mad r0.y, v3.x, c144.z, -r0.y
    add r0.y, r0.y, c144.w
    mova a0.x, r0.y
    dp4 o2.y, v2, c96[a0.x]
    mova a0.x, r0.x
    dp4 o2.x, v2, c96[a0.x]
    mov o0, v0
    mov o1, v1

// approximately 20 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VInstancedPosition3dTexTGVertex[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,  64, 
    205, 204, 140,  63,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      3,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   2,   0, 
      0,   3,   0,   0,   1, 128, 
    144,   0,   0, 160,   3,   0, 
      0, 144,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    144,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   3,   0,   1, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   3,   0, 
      2, 224,   2,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      3,   0,   4, 224,   2,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   3,   0,   8, 224, 
      2,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      4,   0,   0,   4,   0,   0, 
      1, 128,   3,   0,   0, 144, 
    144,   0, 170, 160, 144,   0, 
      0, 160,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      4,   0,   0,   4,   0,   0, 
      2, 128,   3,   0,   0, 144, 
    144,   0, 170, 160,   0,   0, 
     85, 129,   2,   0,   0,   3, 
      0,   0,   2, 128,   0,   0, 
     85, 128, 144,   0, 255, 160, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,  85, 128, 
      9,   0,   0,   4,   2,   0, 
      2, 224,   2,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
      0, 128,   9,   0,   0,   4, 
      2,   0,   1, 224,   2,   0, 
    228, 144,  96,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     96
//

    vs_3_0
    def c192, 0.100000001, 4, 2.0999999, 1.10000002
    def c193, 3.0999999, 0, 0, 0
    dcl_color v0
    dcl_color1 v1
    dcl_position v2
    dcl_color2 v3
    dcl_color o0
    dcl_color1 o1
    dcl_texcoord o2
    dcl_texcoord1 o3
    dcl_texcoord2 o4.xy
    dcl_position o5
    add r0.x, c192.x, v3.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c192.y
    mova a0.x, r0.x
    dp4 o5.x, v2, c0[a0.x]
    dp4 o5.y, v2, c1[a0.x]
    dp4 o5.z, v2, c2[a0.x]
    dp4 o5.w, v2, c3[a0.x]
    mad r0.xyz, v3.x, c192.y, c192.zxww
    frc r1.xyz, r0
    add r0.xyz, r0, -r1
    mad r0.w, v3.x, c192.y, -r1.x
    add r0.w, r0.w, c193.x
    mova a0.x, r0.w
    dp4 o4.y, v2, c96[a0.x]
    mova a0.x, r0.x
    dp4 o4.x, v2, c96[a0.x]
    mov o0, v0
    mov o1, v1
    mova a0.xy, r0.yzzw
    mov o3, c96[a0.y]
    mov o2, c96[a0.x]

// approximately 23 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VInstancedPosition3dTexTGVertexCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  96,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64, 102, 102,   6,  64, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 193,   0,  15, 160, 
    102, 102,  70,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      3,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      2,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      3,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      4,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      5,   0,  15, 224,   2,   0, 
      0,   3,   0,   0,   1, 128, 
    192,   0,   0, 160,   3,   0, 
      0, 144,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    192,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   5,   0,   1, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   5,   0, 
      2, 224,   2,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      5,   0,   4, 224,   2,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   5,   0,   8, 224, 
      2,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      4,   0,   0,   4,   0,   0, 
      7, 128,   3,   0,   0, 144, 
    192,   0,  85, 160, 192,   0, 
    242, 160,  19,   0,   0,   2, 
      1,   0,   7, 128,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   7, 128,   0,   0, 
    228, 128,   1,   0, 228, 129, 
      4,   0,   0,   4,   0,   0, 
      8, 128,   3,   0,   0, 144, 
    192,   0,  85, 160,   1,   0, 
      0, 129,   2,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128, 193,   0,   0, 160, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0, 255, 128, 
      9,   0,   0,   4,   4,   0, 
      2, 224,   2,   0, 228, 144, 
     96,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
      0, 128,   9,   0,   0,   4, 
      4,   0,   1, 224,   2,   0, 
    228, 144,  96,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 144,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 233, 128,   1,   0, 
      0,   3,   3,   0,  15, 224, 
     96,  32, 228, 160,   0,   0, 
     85, 176,   1,   0,   0,   3, 
      2,   0,  15, 224,  96,  32, 
    228, 160,   0,   0,   0, 176, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//

    vs_3_0
    def c2, 0, 1, 0, 0
    dcl_position v0
    dcl_position o0
    dp4 o0.x, v0, c0
    dp4 o0.y, v0, c1
    mov o0.zw, c2.xyxy

// approximately 3 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VSolid[] =
{
      0,   3, 254, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    109, 118, 112,   0,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 224,   9,   0,   0,   3, 
      0,   0,   1, 224,   0,   0, 
    228, 144,   0,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 224,   0,   0, 228, 144, 
      1,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  12, 224, 
      2,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxmul;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxmul        c0       1
//

    ps_3_0
    mov oC0, c0

// approximately 1 instruction slot used
#endif

extern const BYTE pBinary_D3D9SM30_FSolid[] =
{
      0,   3, 255, 255, 254, 255, 
     34,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  79,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     72,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  56,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    112, 115,  95,  51,  95,  48, 
      0,  77, 105,  99, 114, 111, 
    115, 111, 102, 116,  32,  40, 
     82,  41,  32,  72,  76,  83, 
     76,  32,  83, 104,  97, 100, 
    101, 114,  32,  67, 111, 109, 
    112, 105, 108, 101, 114,  32, 
     57,  46,  51,  48,  46,  57, 
     50,  48,  48,  46,  49,  54, 
     51,  56,  52,   0, 171, 171, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxmul;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxmul        c0       1
//

    ps_3_0
    mul oC0.xyz, c0.w, c0
    mov oC0.w, c0.w

// approximately 2 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_FSolidMul[] =
{
      0,   3, 255, 255, 254, 255, 
     34,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  79,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     72,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  56,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    112, 115,  95,  51,  95,  48, 
      0,  77, 105,  99, 114, 111, 
    115, 111, 102, 116,  32,  40, 
     82,  41,  32,  72,  76,  83, 
     76,  32,  83, 104,  97, 100, 
    101, 114,  32,  67, 111, 109, 
    112, 105, 108, 101, 114,  32, 
     57,  46,  51,  48,  46,  57, 
     50,  48,  48,  46,  49,  54, 
     51,  56,  52,   0, 171, 171, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 160, 
      0,   0, 228, 160,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxmul;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxmul        c0       1
//

    ps_3_0
    mov oC0, c0.w

// approximately 1 instruction slot used
#endif

extern const BYTE pBinary_D3D9SM30_FSolidInv[] =
{
      0,   3, 255, 255, 254, 255, 
     34,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  79,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     72,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  56,   0, 
      0,   0,   0,   0,   0,   0, 
     99, 120, 109, 117, 108,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    112, 115,  95,  51,  95,  48, 
      0,  77, 105,  99, 114, 111, 
    115, 111, 102, 116,  32,  40, 
     82,  41,  32,  72,  76,  83, 
     76,  32,  83, 104,  97, 100, 
    101, 114,  32,  67, 111, 109, 
    112, 105, 108, 101, 114,  32, 
     57,  46,  51,  48,  46,  57, 
     50,  48,  48,  46,  49,  54, 
     51,  56,  52,   0, 171, 171, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 255, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//

    vs_3_0
    def c4, 0, 1, 0, 0
    dcl_color v0
    dcl_texcoord v1
    dcl_position v2
    dcl_texcoord o0.xy
    dcl_color o1
    dcl_position o2
    dp4 o2.x, v2, c2
    dp4 o2.y, v2, c3
    mov r0, c1
    mad o1, v0, r0, c0
    mov o0.xy, v1
    mov o2.zw, c4.xyxy

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VText[] =
{
      0,   3, 254, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   3, 254, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 118,   0,   0,   0, 
      2,   0,   2,   0,   2,   0, 
     10,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 109, 118, 
    112,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 224,  31,   0,   0,   2, 
     10,   0,   0, 128,   1,   0, 
     15, 224,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     15, 224,   9,   0,   0,   3, 
      2,   0,   1, 224,   2,   0, 
    228, 144,   2,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      2, 224,   2,   0, 228, 144, 
      3,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 128, 
      1,   0, 228, 160,   4,   0, 
      0,   4,   1,   0,  15, 224, 
      0,   0, 228, 144,   0,   0, 
    228, 128,   0,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
      3, 224,   1,   0, 228, 144, 
      1,   0,   0,   2,   2,   0, 
     12, 224,   4,   0,  68, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_texcoord_pp v0.xy
    dcl_color v1
    dcl_2d s0
    texld r0, v0, s0
    mul oC0.w, r0.w, v1.w
    mov oC0.xyz, v1

// approximately 3 instruction slots used (1 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FText[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     35, 144,  31,   0,   0,   2, 
     10,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   8, 
      8, 128,   0,   0, 255, 128, 
      1,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,   7, 128, 
      1,   0, 228, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float mipLevels;
//   sampler2D tex;
//   float2 textureDims;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mipLevels    c0       1
//   textureDims  c1       1
//   tex          s0       1
//

    ps_3_0
    def c2, 0, 0.5, -1, 1
    def c3, 1.88235307, 0.00100000005, 0, 0
    def c4, -1, 1, 2, -2
    dcl_texcoord v0.xy
    dcl_color v1
    dcl_2d s0
    mul r0, c1.xxyy, v0.xyxy
    dsx r0.xy, r0
    dsy r0.zw, r0
    dp2add r1.x, r0, r0, c2.x
    dp2add r1.y, r0.zwzw, r0.zwzw, c2.x
    max r2.x, r1.x, r1.y
    log r1.x, r2.x
    mad r1.x, r1.x, c2.y, c2.z
    max r2.x, r1.x, c2.x
    mov r1.z, c2.z
    add r1.x, r1.z, c0.x
    min r3.x, r1.x, r2.x
    exp r1.x, r3.x
    rcp r1.x, r1.x
    mul r0, r0, r1.x
    dp2add r0.z, r0.zwzw, r0.zwzw, c2.x
    dp2add r0.x, r0, r0, c2.x
    max r1.x, r0.x, r0.z
    rsq r0.x, r1.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, -c2.y, c2.w
    mul r0.y, r0.x, c3.x
    cmp r0.y, r0.x, r0.y, c2.x
    mad r0.xz, r0.y, c4.xyyw, c4.zyww
    mov_sat r0.xyz, r0
    texld r1, v0, s0
    mul r1.w, r1.w, v1.w
    mov r1.xyz, v1
    mov r0.w, c2.w
    mad oC0, r1, c3.y, r0

// approximately 36 instruction slots used (1 texture, 35 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTextTexDensity[] =
{
      0,   3, 255, 255, 254, 255, 
     57,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 171,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    164,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 100,   0, 
      0,   0,   0,   0,   0,   0, 
    116,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 148,   0,   0,   0, 
      0,   0,   0,   0, 109, 105, 
    112,  76, 101, 118, 101, 108, 
    115,   0, 171, 171,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 116, 117, 114, 101,  68, 
    105, 109, 115,   0,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,  63, 
      0,   0, 128, 191,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      3,   0,  15, 160, 242, 240, 
    240,  63, 111,  18, 131,  58, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
    128, 191,   0,   0, 128,  63, 
      0,   0,   0,  64,   0,   0, 
      0, 192,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
     10,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
     80, 160,   0,   0,  68, 144, 
     91,   0,   0,   2,   0,   0, 
      3, 128,   0,   0, 228, 128, 
     92,   0,   0,   2,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     90,   0,   0,   4,   1,   0, 
      1, 128,   0,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
      0, 160,  90,   0,   0,   4, 
      1,   0,   2, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,   0, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   1,   0, 
     85, 128,  15,   0,   0,   2, 
      1,   0,   1, 128,   2,   0, 
      0, 128,   4,   0,   0,   4, 
      1,   0,   1, 128,   1,   0, 
      0, 128,   2,   0,  85, 160, 
      2,   0, 170, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   2,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   4, 128,   2,   0, 
    170, 160,   2,   0,   0,   3, 
      1,   0,   1, 128,   1,   0, 
    170, 128,   0,   0,   0, 160, 
     10,   0,   0,   3,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      2,   0,   0, 128,  14,   0, 
      0,   2,   1,   0,   1, 128, 
      3,   0,   0, 128,   6,   0, 
      0,   2,   1,   0,   1, 128, 
      1,   0,   0, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
      0, 128,  90,   0,   0,   4, 
      0,   0,   4, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,   0, 160,  90,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 128,   2,   0,   0, 160, 
     11,   0,   0,   3,   1,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0, 170, 128,   7,   0, 
      0,   2,   0,   0,   1, 128, 
      1,   0,   0, 128,   6,   0, 
      0,   2,   0,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   2,   0, 
     85, 161,   2,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      3,   0,   0, 160,  88,   0, 
      0,   4,   0,   0,   2, 128, 
      0,   0,   0, 128,   0,   0, 
     85, 128,   2,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
      5, 128,   0,   0,  85, 128, 
      4,   0, 212, 160,   4,   0, 
    246, 160,   1,   0,   0,   2, 
      0,   0,  23, 128,   0,   0, 
    228, 128,  66,   0,   0,   3, 
      1,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      5,   0,   0,   3,   1,   0, 
      8, 128,   1,   0, 255, 128, 
      1,   0, 255, 144,   1,   0, 
      0,   2,   1,   0,   7, 128, 
      1,   0, 228, 144,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      2,   0, 255, 160,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      1,   0, 228, 128,   3,   0, 
     85, 160,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_texcoord_pp v0.xy
    dcl_color v1
    dcl_2d s0
    texld r0, v0, s0
    mul r0.x, r0.w, v1.w
    mul oC0.xyz, r0.x, v1
    mov oC0.w, r0.x

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTextMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     35, 144,  31,   0,   0,   2, 
     10,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      1,   0, 255, 144,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
      0, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    dcl_texcoord_pp v0.xy
    dcl_color v1.w
    dcl_2d s0
    texld r0, v0, s0
    mul oC0, r0.w, v1.w

// approximately 2 instruction slots used (1 texture, 1 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTextInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     35, 144,  31,   0,   0,   2, 
     10,   0,   0, 128,   1,   0, 
      8, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      5,   0,   0,   3,   0,   8, 
     15, 128,   0,   0, 255, 128, 
      1,   0, 255, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       2
//

    vs_3_0
    def c2, 0, 1, 0, 0
    dcl_texcoord v0
    dcl_position v1
    dcl_texcoord o0.xy
    dcl_position o1
    dp4 o1.x, v1, c0
    dp4 o1.y, v1, c1
    mov o0.xy, v0
    mov o1.zw, c2.xyxy

// approximately 4 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VTexUV[] =
{
      0,   3, 254, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    109, 118, 112,   0,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 224,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 224,   9,   0,   0,   3, 
      1,   0,   1, 224,   1,   0, 
    228, 144,   0,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      2, 224,   1,   0, 228, 144, 
      1,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,   3, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  12, 224, 
      2,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4 mvp[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       2
//

    vs_3_0
    def c4, 0, 1, 0, 0
    dcl_texcoord v0
    dcl_position v1
    dcl_texcoord o0
    dcl_texcoord1 o1
    dcl_texcoord2 o2.xy
    dcl_position o3
    dp4 o3.x, v1, c2
    dp4 o3.y, v1, c3
    mov o0, c0
    mov o1, c1
    mov o2.xy, v0
    mov o3.zw, c4.xyxy

// approximately 6 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VTexUVCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   3, 254, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 118,   0,   0,   0, 
      2,   0,   2,   0,   2,   0, 
     10,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 109, 118, 
    112,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 224,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 224,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 224,  31,   0,   0,   2, 
      0,   0,   0, 128,   3,   0, 
     15, 224,   9,   0,   0,   3, 
      3,   0,   1, 224,   1,   0, 
    228, 144,   2,   0, 228, 160, 
      9,   0,   0,   3,   3,   0, 
      2, 224,   1,   0, 228, 144, 
      3,   0, 228, 160,   1,   0, 
      0,   2,   0,   0,  15, 224, 
      0,   0, 228, 160,   1,   0, 
      0,   2,   1,   0,  15, 224, 
      1,   0, 228, 160,   1,   0, 
      0,   2,   2,   0,   3, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   3,   0,  12, 224, 
      4,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//

    vs_3_0
    dcl_position v0
    dcl_position o0
    dp4 o0.x, v0, c0
    dp4 o0.y, v0, c1
    dp4 o0.z, v0, c2
    dp4 o0.w, v0, c3

// approximately 4 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VPosition3dSolid[] =
{
      0,   3, 254, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    109, 118, 112,   0,   3,   0, 
      3,   0,   4,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   0,   0, 
     15, 224,   9,   0,   0,   3, 
      0,   0,   1, 224,   0,   0, 
    228, 144,   0,   0, 228, 160, 
      9,   0,   0,   3,   0,   0, 
      2, 224,   0,   0, 228, 144, 
      1,   0, 228, 160,   9,   0, 
      0,   3,   0,   0,   4, 224, 
      0,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      0,   0,   8, 224,   0,   0, 
    228, 144,   3,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//

    vs_3_0
    dcl_color v0
    dcl_texcoord v1
    dcl_position v2
    dcl_texcoord o0.xy
    dcl_color o1
    dcl_position o2
    dp4 o2.x, v2, c2
    dp4 o2.y, v2, c3
    dp4 o2.z, v2, c4
    dp4 o2.w, v2, c5
    mov r0, c1
    mad o1, v0, r0, c0
    mov o0.xy, v1

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VPosition3dText[] =
{
      0,   3, 254, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   3, 254, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 118,   0,   0,   0, 
      2,   0,   2,   0,   4,   0, 
     10,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 109, 118, 
    112,   0, 171, 171,   3,   0, 
      3,   0,   4,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 224,  31,   0,   0,   2, 
     10,   0,   0, 128,   1,   0, 
     15, 224,  31,   0,   0,   2, 
      0,   0,   0, 128,   2,   0, 
     15, 224,   9,   0,   0,   3, 
      2,   0,   1, 224,   2,   0, 
    228, 144,   2,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      2, 224,   2,   0, 228, 144, 
      3,   0, 228, 160,   9,   0, 
      0,   3,   2,   0,   4, 224, 
      2,   0, 228, 144,   4,   0, 
    228, 160,   9,   0,   0,   3, 
      2,   0,   8, 224,   2,   0, 
    228, 144,   5,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 128,   1,   0, 228, 160, 
      4,   0,   0,   4,   1,   0, 
     15, 224,   0,   0, 228, 144, 
      0,   0, 228, 128,   0,   0, 
    228, 160,   1,   0,   0,   2, 
      0,   0,   3, 224,   1,   0, 
    228, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mvp          c0       4
//

    vs_3_0
    dcl_texcoord v0
    dcl_position v1
    dcl_texcoord o0.xy
    dcl_position o1
    dp4 o1.x, v1, c0
    dp4 o1.y, v1, c1
    dp4 o1.z, v1, c2
    dp4 o1.w, v1, c3
    mov o0.xy, v0

// approximately 5 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VPosition3dTexUV[] =
{
      0,   3, 254, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    109, 118, 112,   0,   3,   0, 
      3,   0,   4,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 224,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 224,   9,   0,   0,   3, 
      1,   0,   1, 224,   1,   0, 
    228, 144,   0,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      2, 224,   1,   0, 228, 144, 
      1,   0, 228, 160,   9,   0, 
      0,   3,   1,   0,   4, 224, 
      1,   0, 228, 144,   2,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   8, 224,   1,   0, 
    228, 144,   3,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
      3, 224,   0,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   float4x4 mvp;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       1
//   mvp          c2       4
//

    vs_3_0
    dcl_texcoord v0
    dcl_position v1
    dcl_texcoord o0
    dcl_texcoord1 o1
    dcl_texcoord2 o2.xy
    dcl_position o3
    dp4 o3.x, v1, c2
    dp4 o3.y, v1, c3
    dp4 o3.z, v1, c4
    dp4 o3.w, v1, c5
    mov o0, c0
    mov o1, c1
    mov o2.xy, v0

// approximately 7 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VPosition3dTexUVCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   3, 254, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 118,   0,   0,   0, 
      2,   0,   2,   0,   4,   0, 
     10,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 109, 118, 
    112,   0, 171, 171,   3,   0, 
      3,   0,   4,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 118, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      0,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 224,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 224,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 224,  31,   0,   0,   2, 
      0,   0,   0, 128,   3,   0, 
     15, 224,   9,   0,   0,   3, 
      3,   0,   1, 224,   1,   0, 
    228, 144,   2,   0, 228, 160, 
      9,   0,   0,   3,   3,   0, 
      2, 224,   1,   0, 228, 144, 
      3,   0, 228, 160,   9,   0, 
      0,   3,   3,   0,   4, 224, 
      1,   0, 228, 144,   4,   0, 
    228, 160,   9,   0,   0,   3, 
      3,   0,   8, 224,   1,   0, 
    228, 144,   5,   0, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     15, 224,   0,   0, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     15, 224,   1,   0, 228, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 224,   0,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      48
//

    vs_3_0
    def c48, 2, 0.100000001, 1.10000002, 0
    def c49, 0, 1, 0, 0
    dcl_position v0
    dcl_color1 v1
    dcl_position o0
    mad r0.x, v1.x, c48.x, c48.y
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mad r0.y, v1.x, c48.x, -r0.y
    add r0.y, r0.y, c48.z
    mova a0.x, r0.y
    dp4 o0.y, v0, c0[a0.x]
    mova a0.x, r0.x
    dp4 o0.x, v0, c0[a0.x]
    mov o0.zw, c49.xyxy

// approximately 10 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchSolid[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     48,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  48,   0,  15, 160, 
      0,   0,   0,  64, 205, 204, 
    204,  61, 205, 204, 140,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5,  49,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      1,   0,   0, 144,  48,   0, 
      0, 160,  48,   0,  85, 160, 
     19,   0,   0,   2,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0,  85, 129,   4,   0, 
      0,   4,   0,   0,   2, 128, 
      1,   0,   0, 144,  48,   0, 
      0, 160,   0,   0,  85, 129, 
      2,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
     48,   0, 170, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   0,   0,   2, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   0,   0, 
      1, 224,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,  12, 224,  49,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_3_0
    def c96, 3.0999999, 0, 1, 0
    def c97, 4, 2.0999999, 1.10000002, 0.100000001
    dcl_color v0
    dcl_texcoord v1
    dcl_position v2
    dcl_color2 v3
    dcl_texcoord o0.xy
    dcl_color o1
    dcl_position o2
    mad r0.xyz, v3.x, c97.x, c97.yzww
    frc r1.xyz, r0
    add r0.xyz, r0, -r1
    mad r0.w, v3.x, c97.x, -r1.x
    add r0.w, r0.w, c96.x
    mova a0.x, r0.w
    dp4 o2.y, v2, c0[a0.x]
    mova a0.x, r0.x
    dp4 o2.x, v2, c0[a0.x]
    mova a0.xy, r0.yzzw
    mov r0, c0[a0.x]
    mad o1, v0, r0, c0[a0.y]
    mov o0.xy, v1
    mov o2.zw, c96.xyyz

// approximately 14 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchText[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    102, 102,  70,  64,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5,  97,   0,  15, 160, 
      0,   0, 128,  64, 102, 102, 
      6,  64, 205, 204, 140,  63, 
    205, 204, 204,  61,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      3,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,   3, 224,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      3,   0,   0, 144,  97,   0, 
      0, 160,  97,   0, 249, 160, 
     19,   0,   0,   2,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      3,   0,   0, 144,  97,   0, 
      0, 160,   1,   0,   0, 129, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
     96,   0,   0, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0, 255, 128,   9,   0, 
      0,   4,   2,   0,   2, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   2,   0, 
      1, 224,   2,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    233, 128,   1,   0,   0,   3, 
      0,   0,  15, 128,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      4,   0,   0,   5,   1,   0, 
     15, 224,   0,   0, 228, 144, 
      0,   0, 228, 128,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      1,   0,   0,   2,   0,   0, 
      3, 224,   1,   0, 228, 144, 
      1,   0,   0,   2,   2,   0, 
     12, 224,  96,   0, 148, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      48
//

    vs_3_0
    def c48, 2, 0.100000001, 1.10000002, 0
    def c49, 0, 1, 0, 0
    dcl_texcoord v0
    dcl_position v1
    dcl_color1 v2
    dcl_texcoord o0.xy
    dcl_position o1
    mad r0.x, v2.x, c48.x, c48.y
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mad r0.y, v2.x, c48.x, -r0.y
    add r0.y, r0.y, c48.z
    mova a0.x, r0.y
    dp4 o1.y, v1, c0[a0.x]
    mova a0.x, r0.x
    dp4 o1.x, v1, c0[a0.x]
    mov o0.xy, v0
    mov o1.zw, c49.xyxy

// approximately 11 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchTexUV[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     48,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  48,   0,  15, 160, 
      0,   0,   0,  64, 205, 204, 
    204,  61, 205, 204, 140,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5,  49,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      2,   0,   0, 144,  48,   0, 
      0, 160,  48,   0,  85, 160, 
     19,   0,   0,   2,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0,  85, 129,   4,   0, 
      0,   4,   0,   0,   2, 128, 
      2,   0,   0, 144,  48,   0, 
      0, 160,   0,   0,  85, 129, 
      2,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
     48,   0, 170, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,  85, 128,   9,   0, 
      0,   4,   1,   0,   2, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   1,   0, 
      1, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      0,   0,   3, 224,   0,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 224,  49,   0, 
     68, 160, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[96];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0      96
//

    vs_3_0
    def c96, 4, 2.0999999, 0.100000001, 1.10000002
    def c97, 3.0999999, 0, 1, 0
    dcl_texcoord v0
    dcl_position v1
    dcl_color1 v2
    dcl_texcoord o0
    dcl_texcoord1 o1
    dcl_texcoord2 o2.xy
    dcl_position o3
    mad r0.xyz, v2.x, c96.x, c96.yzww
    frc r1.xyz, r0
    add r0.xyz, r0, -r1
    mad r0.w, v2.x, c96.x, -r1.x
    add r0.w, r0.w, c97.x
    mova a0.x, r0.w
    dp4 o3.y, v1, c0[a0.x]
    mova a0.x, r0.x
    dp4 o3.x, v1, c0[a0.x]
    mova a0.xy, r0.yzzw
    mov o1, c0[a0.y]
    mov o0, c0[a0.x]
    mov o2.xy, v0
    mov o3.zw, c97.xyyz

// approximately 14 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchTexUVCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
      0,   0, 128,  64, 102, 102, 
      6,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5,  97,   0,  15, 160, 
    102, 102,  70,  64,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      2,   0,   0, 144,  96,   0, 
      0, 160,  96,   0, 249, 160, 
     19,   0,   0,   2,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      2,   0,   0, 144,  96,   0, 
      0, 160,   1,   0,   0, 129, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
     97,   0,   0, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0, 255, 128,   9,   0, 
      0,   4,   3,   0,   2, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   3,   0, 
      1, 224,   1,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   0,   0, 
    233, 128,   1,   0,   0,   3, 
      1,   0,  15, 224,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      1,   0,   0,   3,   0,   0, 
     15, 224,   0,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   2,   0,   3, 224, 
      0,   0, 228, 144,   1,   0, 
      0,   2,   3,   0,  12, 224, 
     97,   0, 148, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//

    vs_3_0
    def c96, 0.100000001, 4, 0, 0
    dcl_position v0
    dcl_color1 v1
    dcl_position o0
    add r0.x, c96.x, v1.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c96.y
    mova a0.x, r0.x
    dp4 o0.x, v0, c0[a0.x]
    dp4 o0.y, v0, c1[a0.x]
    dp4 o0.z, v0, c2[a0.x]
    dp4 o0.w, v0, c3[a0.x]

// approximately 9 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchPosition3dSolid[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 109, 117, 110, 105, 
    102, 111, 114, 109, 115,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,  24,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 224,   2,   0, 
      0,   3,   0,   0,   1, 128, 
     96,   0,   0, 160,   1,   0, 
      0, 144,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
     96,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   0,   0,   1, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   0,   0, 
      2, 224,   0,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      0,   0,   4, 224,   0,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   0,   0,   8, 224, 
      0,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_3_0
    def c144, 0.100000001, 4, 2, 1.10000002
    dcl_color v0
    dcl_texcoord v1
    dcl_position v2
    dcl_color2 v3
    dcl_texcoord o0.xy
    dcl_color o1
    dcl_position o2
    add r0.x, c144.x, v3.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c144.y
    mova a0.x, r0.x
    dp4 o2.x, v2, c0[a0.x]
    dp4 o2.y, v2, c1[a0.x]
    dp4 o2.z, v2, c2[a0.x]
    dp4 o2.w, v2, c3[a0.x]
    mad r0.xy, v3.x, c144.z, c144.wxzw
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mova a0.xy, r0
    mov r0, c96[a0.x]
    mad o1, v0, r0, c96[a0.y]
    mov o0.xy, v1

// approximately 16 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchPosition3dText[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,  64, 
    205, 204, 140,  63,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   2, 128, 
      3,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,   3, 224,  31,   0, 
      0,   2,  10,   0,   0, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 224,   2,   0, 
      0,   3,   0,   0,   1, 128, 
    144,   0,   0, 160,   3,   0, 
      0, 144,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    144,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   2,   0,   1, 224, 
      2,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   2,   0, 
      2, 224,   2,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      2,   0,   4, 224,   2,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   2,   0,   8, 224, 
      2,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0,   0, 144, 
    144,   0, 170, 160, 144,   0, 
    227, 160,  19,   0,   0,   2, 
      0,   0,  12, 128,   0,   0, 
     68, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    228, 128,   0,   0, 238, 129, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 228, 128, 
      1,   0,   0,   3,   0,   0, 
     15, 128,  96,  32, 228, 160, 
      0,   0,   0, 176,   4,   0, 
      0,   5,   1,   0,  15, 224, 
      0,   0, 228, 144,   0,   0, 
    228, 128,  96,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   2,   0,   0,   3, 224, 
      1,   0, 228, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//

    vs_3_0
    def c96, 0.100000001, 4, 0, 0
    dcl_texcoord v0
    dcl_position v1
    dcl_color1 v2
    dcl_texcoord o0.xy
    dcl_position o1
    add r0.x, c96.x, v2.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c96.y
    mova a0.x, r0.x
    dp4 o1.x, v1, c0[a0.x]
    dp4 o1.y, v1, c1[a0.x]
    dp4 o1.z, v1, c2[a0.x]
    dp4 o1.w, v1, c3[a0.x]
    mov o0.xy, v0

// approximately 10 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchPosition3dTexUV[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 109, 117, 110, 105, 
    102, 111, 114, 109, 115,   0, 
      3,   0,   3,   0,   4,   0, 
      4,   0,  24,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,  96,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 224,   2,   0, 
      0,   3,   0,   0,   1, 128, 
     96,   0,   0, 160,   2,   0, 
      0, 144,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
     96,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   1,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   1,   0, 
      2, 224,   1,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      1,   0,   4, 224,   1,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   1,   0,   8, 224, 
      1,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   0,   0, 
      3, 224,   0,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 vfmuniforms[24];
//   float4 vfuniforms[48];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfmuniforms  c0      96
//   vfuniforms   c96     48
//

    vs_3_0
    def c144, 0.100000001, 4, 2, 1.10000002
    dcl_texcoord v0
    dcl_position v1
    dcl_color1 v2
    dcl_texcoord o0
    dcl_texcoord1 o1
    dcl_texcoord2 o2.xy
    dcl_position o3
    add r0.x, c144.x, v2.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mul r0.x, r0.x, c144.y
    mova a0.x, r0.x
    dp4 o3.x, v1, c0[a0.x]
    dp4 o3.y, v1, c1[a0.x]
    dp4 o3.z, v1, c2[a0.x]
    dp4 o3.w, v1, c3[a0.x]
    mad r0.xy, v2.x, c144.z, c144.xwzw
    frc r0.zw, r0.xyxy
    add r0.xy, r0, -r0.zwzw
    mova a0.xy, r0
    mov o1, c96[a0.y]
    mov o0, c96[a0.x]
    mov o2.xy, v0

// approximately 16 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBatchPosition3dTexUVCxform[] =
{
      0,   3, 254, 255, 254, 255, 
     47,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 131,   0, 
      0,   0,   0,   3, 254, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    124,   0,   0,   0,  68,   0, 
      0,   0,   2,   0,   0,   0, 
     96,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   2,   0, 
     96,   0,  48,   0, 130,   1, 
    108,   0,   0,   0,   0,   0, 
      0,   0, 118, 102, 109, 117, 
    110, 105, 102, 111, 114, 109, 
    115,   0,   3,   0,   3,   0, 
      4,   0,   4,   0,  24,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  48,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
    205, 204, 204,  61,   0,   0, 
    128,  64,   0,   0,   0,  64, 
    205, 204, 140,  63,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      2,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   2,   0, 
      0,   3,   0,   0,   1, 128, 
    144,   0,   0, 160,   2,   0, 
      0, 144,  19,   0,   0,   2, 
      0,   0,   2, 128,   0,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0,  85, 129, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
    144,   0,  85, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   3,   0,   1, 224, 
      1,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      9,   0,   0,   4,   3,   0, 
      2, 224,   1,   0, 228, 144, 
      1,  32, 228, 160,   0,   0, 
      0, 176,   9,   0,   0,   4, 
      3,   0,   4, 224,   1,   0, 
    228, 144,   2,  32, 228, 160, 
      0,   0,   0, 176,   9,   0, 
      0,   4,   3,   0,   8, 224, 
      1,   0, 228, 144,   3,  32, 
    228, 160,   0,   0,   0, 176, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0,   0, 144, 
    144,   0, 170, 160, 144,   0, 
    236, 160,  19,   0,   0,   2, 
      0,   0,  12, 128,   0,   0, 
     68, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    228, 128,   0,   0, 238, 129, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 228, 128, 
      1,   0,   0,   3,   1,   0, 
     15, 224,  96,  32, 228, 160, 
      0,   0,  85, 176,   1,   0, 
      0,   3,   0,   0,  15, 224, 
     96,  32, 228, 160,   0,   0, 
      0, 176,   1,   0,   0,   2, 
      2,   0,   3, 224,   0,   0, 
    228, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_texcoord v0.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v0, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v0, s1
    add r0.w, r1.w, c0.y
    mad oC0.xyz, r0.w, c2, r0
    mov oC0.w, c0.w

// approximately 10 instruction slots used (3 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUV[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   0,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float mipLevels;
//   sampler2D tex[3];
//   float2 textureDims;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mipLevels    c0       1
//   textureDims  c1       1
//   tex          s0       3
//

    ps_3_0
    def c2, -0.0627451017, -0.501960814, 1.16400003, 0
    def c3, 1.59599996, -0.813000023, 0, -1
    def c4, 0, -0.39199999, 2.01699996, 1.88235307
    def c5, 0.5, -1, 1, 0.00100000005
    def c6, -1, 1, 2, -2
    def c7, 1.00100005, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mul r0, c1.xxyy, v0.xyxy
    dsx r0.xy, r0
    dsy r0.zw, r0
    dp2add r1.x, r0, r0, c2.w
    dp2add r1.y, r0.zwzw, r0.zwzw, c2.w
    max r2.x, r1.x, r1.y
    log r1.x, r2.x
    mad r1.x, r1.x, c5.x, c5.y
    max r2.x, r1.x, c2.w
    mov r1.w, c3.w
    add r1.x, r1.w, c0.x
    min r3.x, r1.x, r2.x
    exp r1.x, r3.x
    rcp r1.x, r1.x
    mul r0, r0, r1.x
    dp2add r0.z, r0.zwzw, r0.zwzw, c2.w
    dp2add r0.x, r0, r0, c2.w
    max r1.x, r0.x, r0.z
    rsq r0.x, r1.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, -c5.x, c5.z
    mul r0.y, r0.x, c4.w
    cmp r0.y, r0.x, r0.y, c2.w
    mad r0.xz, r0.y, c6.xyyw, c6.zyww
    mov_sat r0.xyz, r0
    texld r1, v0, s2
    add r0.w, r1.w, c2.y
    mul r1.xyz, r0.w, c3
    texld r2, v0, s0
    add r0.w, r2.w, c2.x
    mad r1.xyz, r0.w, c2.z, r1
    texld r2, v0, s1
    add r0.w, r2.w, c2.y
    mad r1.xyz, r0.w, c4, r1
    mad oC0.xyz, r1, c5.w, r0
    mov oC0.w, c7.x

// approximately 42 instruction slots used (3 texture, 39 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVTexDensity[] =
{
      0,   3, 255, 255, 254, 255, 
     57,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 171,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    164,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 100,   0, 
      0,   0,   0,   0,   0,   0, 
    116,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   2,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 148,   0,   0,   0, 
      0,   0,   0,   0, 109, 105, 
    112,  76, 101, 118, 101, 108, 
    115,   0, 171, 171,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   3,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 116, 117, 114, 101,  68, 
    105, 109, 115,   0,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      3,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
    128, 191,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64, 242, 240, 
    240,  63,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
      0,  63,   0,   0, 128, 191, 
      0,   0, 128,  63, 111,  18, 
    131,  58,  81,   0,   0,   5, 
      6,   0,  15, 160,   0,   0, 
    128, 191,   0,   0, 128,  63, 
      0,   0,   0,  64,   0,   0, 
      0, 192,  81,   0,   0,   5, 
      7,   0,  15, 160, 197,  32, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
     80, 160,   0,   0,  68, 144, 
     91,   0,   0,   2,   0,   0, 
      3, 128,   0,   0, 228, 128, 
     92,   0,   0,   2,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     90,   0,   0,   4,   1,   0, 
      1, 128,   0,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
    255, 160,  90,   0,   0,   4, 
      1,   0,   2, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0, 255, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   1,   0, 
     85, 128,  15,   0,   0,   2, 
      1,   0,   1, 128,   2,   0, 
      0, 128,   4,   0,   0,   4, 
      1,   0,   1, 128,   1,   0, 
      0, 128,   5,   0,   0, 160, 
      5,   0,  85, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   2,   0, 
    255, 160,   1,   0,   0,   2, 
      1,   0,   8, 128,   3,   0, 
    255, 160,   2,   0,   0,   3, 
      1,   0,   1, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
     10,   0,   0,   3,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      2,   0,   0, 128,  14,   0, 
      0,   2,   1,   0,   1, 128, 
      3,   0,   0, 128,   6,   0, 
      0,   2,   1,   0,   1, 128, 
      1,   0,   0, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
      0, 128,  90,   0,   0,   4, 
      0,   0,   4, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0, 255, 160,  90,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 128,   2,   0, 255, 160, 
     11,   0,   0,   3,   1,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0, 170, 128,   7,   0, 
      0,   2,   0,   0,   1, 128, 
      1,   0,   0, 128,   6,   0, 
      0,   2,   0,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   5,   0, 
      0, 161,   5,   0, 170, 160, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      4,   0, 255, 160,  88,   0, 
      0,   4,   0,   0,   2, 128, 
      0,   0,   0, 128,   0,   0, 
     85, 128,   2,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
      5, 128,   0,   0,  85, 128, 
      6,   0, 212, 160,   6,   0, 
    246, 160,   1,   0,   0,   2, 
      0,   0,  23, 128,   0,   0, 
    228, 128,  66,   0,   0,   3, 
      1,   0,  15, 128,   0,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      2,   0,  85, 160,   5,   0, 
      0,   3,   1,   0,   7, 128, 
      0,   0, 255, 128,   3,   0, 
    228, 160,  66,   0,   0,   3, 
      2,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   2,   0, 255, 128, 
      2,   0,   0, 160,   4,   0, 
      0,   4,   1,   0,   7, 128, 
      0,   0, 255, 128,   2,   0, 
    170, 160,   1,   0, 228, 128, 
     66,   0,   0,   3,   2,   0, 
     15, 128,   0,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      2,   0, 255, 128,   2,   0, 
     85, 160,   4,   0,   0,   4, 
      1,   0,   7, 128,   0,   0, 
    255, 128,   4,   0, 228, 160, 
      1,   0, 228, 128,   4,   0, 
      0,   4,   0,   8,   7, 128, 
      1,   0, 228, 128,   5,   0, 
    255, 160,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   7,   0,   0, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_texcoord v0.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v0, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v0, s1
    add r0.w, r1.w, c0.y
    mad oC0.xyz, r0.w, c2, r0
    mov oC0.w, c0.w

// approximately 10 instruction slots used (3 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   0,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_color v0.w
    dcl_texcoord v1.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v1, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v1, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v1, s1
    add r0.w, r1.w, c0.y
    mad oC0.xyz, r0.w, c2, r0
    mov oC0.w, v0.w

// approximately 10 instruction slots used (3 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float mipLevels;
//   sampler2D tex[3];
//   float2 textureDims;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mipLevels    c0       1
//   textureDims  c1       1
//   tex          s0       3
//

    ps_3_0
    def c2, -0.0627451017, -0.501960814, 1.16400003, 0
    def c3, 1.59599996, -0.813000023, 0, -1
    def c4, 0, -0.39199999, 2.01699996, 1.88235307
    def c5, 0.5, -1, 1, 0.00100000005
    def c6, -1, 1, 2, -2
    dcl_color v0.w
    dcl_texcoord v1.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mul r0, c1.xxyy, v1.xyxy
    dsx r0.xy, r0
    dsy r0.zw, r0
    dp2add r1.x, r0, r0, c2.w
    dp2add r1.y, r0.zwzw, r0.zwzw, c2.w
    max r2.x, r1.x, r1.y
    log r1.x, r2.x
    mad r1.x, r1.x, c5.x, c5.y
    max r2.x, r1.x, c2.w
    mov r1.w, c3.w
    add r1.x, r1.w, c0.x
    min r3.x, r1.x, r2.x
    exp r1.x, r3.x
    rcp r1.x, r1.x
    mul r0, r0, r1.x
    dp2add r0.z, r0.zwzw, r0.zwzw, c2.w
    dp2add r0.x, r0, r0, c2.w
    max r1.x, r0.x, r0.z
    rsq r0.x, r1.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, -c5.x, c5.z
    mul r0.y, r0.x, c4.w
    cmp r0.y, r0.x, r0.y, c2.w
    mad r0.xz, r0.y, c6.xyyw, c6.zyww
    mov_sat r0.xyz, r0
    texld r1, v1, s2
    add r1.x, r1.w, c2.y
    mul r1.xyz, r1.x, c3
    texld r2, v1, s0
    add r1.w, r2.w, c2.x
    mad r1.xyz, r1.w, c2.z, r1
    texld r2, v1, s1
    add r1.w, r2.w, c2.y
    mad r1.xyz, r1.w, c4, r1
    mov r1.w, v0.w
    mov r0.w, -c3.w
    mad oC0, r1, c5.w, r0

// approximately 43 instruction slots used (3 texture, 40 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVEAlphaTexDensity[] =
{
      0,   3, 255, 255, 254, 255, 
     57,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 171,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    164,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 100,   0, 
      0,   0,   0,   0,   0,   0, 
    116,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   2,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 148,   0,   0,   0, 
      0,   0,   0,   0, 109, 105, 
    112,  76, 101, 118, 101, 108, 
    115,   0, 171, 171,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   3,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 116, 117, 114, 101,  68, 
    105, 109, 115,   0,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      3,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
    128, 191,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64, 242, 240, 
    240,  63,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
      0,  63,   0,   0, 128, 191, 
      0,   0, 128,  63, 111,  18, 
    131,  58,  81,   0,   0,   5, 
      6,   0,  15, 160,   0,   0, 
    128, 191,   0,   0, 128,  63, 
      0,   0,   0,  64,   0,   0, 
      0, 192,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
     80, 160,   1,   0,  68, 144, 
     91,   0,   0,   2,   0,   0, 
      3, 128,   0,   0, 228, 128, 
     92,   0,   0,   2,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     90,   0,   0,   4,   1,   0, 
      1, 128,   0,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
    255, 160,  90,   0,   0,   4, 
      1,   0,   2, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0, 255, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   1,   0, 
     85, 128,  15,   0,   0,   2, 
      1,   0,   1, 128,   2,   0, 
      0, 128,   4,   0,   0,   4, 
      1,   0,   1, 128,   1,   0, 
      0, 128,   5,   0,   0, 160, 
      5,   0,  85, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   2,   0, 
    255, 160,   1,   0,   0,   2, 
      1,   0,   8, 128,   3,   0, 
    255, 160,   2,   0,   0,   3, 
      1,   0,   1, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
     10,   0,   0,   3,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      2,   0,   0, 128,  14,   0, 
      0,   2,   1,   0,   1, 128, 
      3,   0,   0, 128,   6,   0, 
      0,   2,   1,   0,   1, 128, 
      1,   0,   0, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
      0, 128,  90,   0,   0,   4, 
      0,   0,   4, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0, 255, 160,  90,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 128,   2,   0, 255, 160, 
     11,   0,   0,   3,   1,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0, 170, 128,   7,   0, 
      0,   2,   0,   0,   1, 128, 
      1,   0,   0, 128,   6,   0, 
      0,   2,   0,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   5,   0, 
      0, 161,   5,   0, 170, 160, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      4,   0, 255, 160,  88,   0, 
      0,   4,   0,   0,   2, 128, 
      0,   0,   0, 128,   0,   0, 
     85, 128,   2,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
      5, 128,   0,   0,  85, 128, 
      6,   0, 212, 160,   6,   0, 
    246, 160,   1,   0,   0,   2, 
      0,   0,  23, 128,   0,   0, 
    228, 128,  66,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   1,   0, 
      1, 128,   1,   0, 255, 128, 
      2,   0,  85, 160,   5,   0, 
      0,   3,   1,   0,   7, 128, 
      1,   0,   0, 128,   3,   0, 
    228, 160,  66,   0,   0,   3, 
      2,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   1,   0, 
      8, 128,   2,   0, 255, 128, 
      2,   0,   0, 160,   4,   0, 
      0,   4,   1,   0,   7, 128, 
      1,   0, 255, 128,   2,   0, 
    170, 160,   1,   0, 228, 128, 
     66,   0,   0,   3,   2,   0, 
     15, 128,   1,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   1,   0,   8, 128, 
      2,   0, 255, 128,   2,   0, 
     85, 160,   4,   0,   0,   4, 
      1,   0,   7, 128,   1,   0, 
    255, 128,   4,   0, 228, 160, 
      1,   0, 228, 128,   1,   0, 
      0,   2,   1,   0,   8, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      3,   0, 255, 161,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      1,   0, 228, 128,   5,   0, 
    255, 160,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_color v0.w
    dcl_texcoord v1.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v1, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v1, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v1, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mul oC0.xyz, r0, v0.w
    mov oC0.w, v0.w

// approximately 11 instruction slots used (3 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 228, 128,   0,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v2, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v2, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v2, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mov r0.w, c0.w
    mov r1, v1
    mad oC0, r0, r1, v0

// approximately 12 instruction slots used (3 texture, 9 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVCxform[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      1,   0, 228, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   0,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v2, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v2, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v2, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mov r0.w, c0.w
    mov r1, v1
    mad r0, r0, r1, v0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 14 instruction slots used (3 texture, 11 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVCxformMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      1,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   0,   0, 228, 144, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_color v0.w
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2 v3.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v3, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v3, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v3, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mov r0.w, c0.w
    mov r1, v2
    mad r0, r0, r1, v1
    mul oC0.w, r0.w, v0.w
    mov oC0.xyz, r0

// approximately 14 instruction slots used (3 texture, 11 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVCxformEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      2,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   1,   0, 228, 144, 
      5,   0,   0,   3,   0,   8, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,   7, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_color v0.w
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2 v3.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v3, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v3, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v3, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mov r0.w, c0.w
    mov r1, v2
    mad r0, r0, r1, v1
    mul r0.w, r0.w, v0.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 15 instruction slots used (3 texture, 12 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVCxformEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   1,   0,  15, 128, 
      2,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   1,   0, 228, 144, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v2, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v2, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v2, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mul r0.xyz, r0, v1
    mov r0.w, c0.w
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 13 instruction slots used (3 texture, 10 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVCxformAc[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,   8, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v2, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v2, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v2, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mul r0.xyz, r0, v1
    mov r0.w, c0.w
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 15 instruction slots used (3 texture, 12 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVCxformAcMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,   8, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_color v0.w
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2 v3.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v3, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v3, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v3, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mul r0.xyz, r0, v2
    mov r0.w, c0.w
    mul r0, r0, v2.w
    mad r0, v1, r0.w, r0
    mul oC0.w, r0.w, v0.w
    mov oC0.xyz, r0

// approximately 15 instruction slots used (3 texture, 12 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVCxformAcEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 228, 128,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,   8, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   2,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   1,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
      7, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 1
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_color v0.w
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2 v3.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v3, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v3, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v3, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    mul r0.xyz, r0, v2
    mov r0.w, c0.w
    mul r0, r0, v2.w
    mad r0, v1, r0.w, r0
    mul r0.w, r0.w, v0.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 16 instruction slots used (3 texture, 13 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVCxformAcEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0, 228, 128,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,   8, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   2,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   1,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_texcoord v0.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v0, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v0, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v0, s1
    add r0.w, r1.w, c0.y
    mad oC0.xyz, r0.w, c2, r0
    texld r0, v0, s3
    mov oC0.w, r0.w

// approximately 11 instruction slots used (4 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVA[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   0,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 144,   3,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float mipLevels;
//   sampler2D tex[4];
//   float2 textureDims;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mipLevels    c0       1
//   textureDims  c1       1
//   tex          s0       4
//

    ps_3_0
    def c2, -0.0627451017, -0.501960814, 1.16400003, 0
    def c3, 1.59599996, -0.813000023, 0, -1
    def c4, 0, -0.39199999, 2.01699996, 1.88235307
    def c5, 0.5, -1, 1, 0.00100000005
    def c6, -1, 1, 2, -2
    dcl_texcoord v0.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    mul r0, c1.xxyy, v0.xyxy
    dsx r0.xy, r0
    dsy r0.zw, r0
    dp2add r1.x, r0, r0, c2.w
    dp2add r1.y, r0.zwzw, r0.zwzw, c2.w
    max r2.x, r1.x, r1.y
    log r1.x, r2.x
    mad r1.x, r1.x, c5.x, c5.y
    max r2.x, r1.x, c2.w
    mov r1.w, c3.w
    add r1.x, r1.w, c0.x
    min r3.x, r1.x, r2.x
    exp r1.x, r3.x
    rcp r1.x, r1.x
    mul r0, r0, r1.x
    dp2add r0.z, r0.zwzw, r0.zwzw, c2.w
    dp2add r0.x, r0, r0, c2.w
    max r1.x, r0.x, r0.z
    rsq r0.x, r1.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, -c5.x, c5.z
    mul r0.y, r0.x, c4.w
    cmp r0.y, r0.x, r0.y, c2.w
    mad r0.xz, r0.y, c6.xyyw, c6.zyww
    mov_sat r0.xyz, r0
    texld r1, v0, s2
    add r1.x, r1.w, c2.y
    mul r1.xyz, r1.x, c3
    texld r2, v0, s0
    add r1.w, r2.w, c2.x
    mad r1.xyz, r1.w, c2.z, r1
    texld r2, v0, s1
    add r1.w, r2.w, c2.y
    mad r1.xyz, r1.w, c4, r1
    texld r2, v0, s3
    mov r1.w, r2.w
    mov r0.w, -c3.w
    mad oC0, r1, c5.w, r0

// approximately 44 instruction slots used (4 texture, 40 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVATexDensity[] =
{
      0,   3, 255, 255, 254, 255, 
     57,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 171,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    164,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 100,   0, 
      0,   0,   0,   0,   0,   0, 
    116,   0,   0,   0,   3,   0, 
      0,   0,   4,   0,   2,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 148,   0,   0,   0, 
      0,   0,   0,   0, 109, 105, 
    112,  76, 101, 118, 101, 108, 
    115,   0, 171, 171,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   4,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 116, 117, 114, 101,  68, 
    105, 109, 115,   0,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      3,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
    128, 191,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64, 242, 240, 
    240,  63,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
      0,  63,   0,   0, 128, 191, 
      0,   0, 128,  63, 111,  18, 
    131,  58,  81,   0,   0,   5, 
      6,   0,  15, 160,   0,   0, 
    128, 191,   0,   0, 128,  63, 
      0,   0,   0,  64,   0,   0, 
      0, 192,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
     80, 160,   0,   0,  68, 144, 
     91,   0,   0,   2,   0,   0, 
      3, 128,   0,   0, 228, 128, 
     92,   0,   0,   2,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     90,   0,   0,   4,   1,   0, 
      1, 128,   0,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
    255, 160,  90,   0,   0,   4, 
      1,   0,   2, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0, 255, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   1,   0, 
     85, 128,  15,   0,   0,   2, 
      1,   0,   1, 128,   2,   0, 
      0, 128,   4,   0,   0,   4, 
      1,   0,   1, 128,   1,   0, 
      0, 128,   5,   0,   0, 160, 
      5,   0,  85, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   2,   0, 
    255, 160,   1,   0,   0,   2, 
      1,   0,   8, 128,   3,   0, 
    255, 160,   2,   0,   0,   3, 
      1,   0,   1, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
     10,   0,   0,   3,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      2,   0,   0, 128,  14,   0, 
      0,   2,   1,   0,   1, 128, 
      3,   0,   0, 128,   6,   0, 
      0,   2,   1,   0,   1, 128, 
      1,   0,   0, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
      0, 128,  90,   0,   0,   4, 
      0,   0,   4, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0, 255, 160,  90,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 128,   2,   0, 255, 160, 
     11,   0,   0,   3,   1,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0, 170, 128,   7,   0, 
      0,   2,   0,   0,   1, 128, 
      1,   0,   0, 128,   6,   0, 
      0,   2,   0,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   5,   0, 
      0, 161,   5,   0, 170, 160, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      4,   0, 255, 160,  88,   0, 
      0,   4,   0,   0,   2, 128, 
      0,   0,   0, 128,   0,   0, 
     85, 128,   2,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
      5, 128,   0,   0,  85, 128, 
      6,   0, 212, 160,   6,   0, 
    246, 160,   1,   0,   0,   2, 
      0,   0,  23, 128,   0,   0, 
    228, 128,  66,   0,   0,   3, 
      1,   0,  15, 128,   0,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   1,   0, 
      1, 128,   1,   0, 255, 128, 
      2,   0,  85, 160,   5,   0, 
      0,   3,   1,   0,   7, 128, 
      1,   0,   0, 128,   3,   0, 
    228, 160,  66,   0,   0,   3, 
      2,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   1,   0, 
      8, 128,   2,   0, 255, 128, 
      2,   0,   0, 160,   4,   0, 
      0,   4,   1,   0,   7, 128, 
      1,   0, 255, 128,   2,   0, 
    170, 160,   1,   0, 228, 128, 
     66,   0,   0,   3,   2,   0, 
     15, 128,   0,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   1,   0,   8, 128, 
      2,   0, 255, 128,   2,   0, 
     85, 160,   4,   0,   0,   4, 
      1,   0,   7, 128,   1,   0, 
    255, 128,   4,   0, 228, 160, 
      1,   0, 228, 128,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 144,   3,   8, 
    228, 160,   1,   0,   0,   2, 
      1,   0,   8, 128,   2,   0, 
    255, 128,   1,   0,   0,   2, 
      0,   0,   8, 128,   3,   0, 
    255, 161,   4,   0,   0,   4, 
      0,   8,  15, 128,   1,   0, 
    228, 128,   5,   0, 255, 160, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_texcoord v0.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v0, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v0, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v0, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    texld r1, v0, s3
    mul oC0.xyz, r0, r1.w
    mov oC0.w, r1.w

// approximately 12 instruction slots used (4 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVAMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   0,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,  66,   0, 
      0,   3,   1,   0,  15, 128, 
      0,   0, 228, 144,   3,   8, 
    228, 160,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    228, 128,   1,   0, 255, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   1,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    dcl_texcoord v0.xy
    dcl_2d s3
    texld r0, v0, s3
    mov oC0, r0.w

// approximately 2 instruction slots used (1 texture, 1 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVAInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,  14,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   3,   8, 228, 160, 
      1,   0,   0,   2,   0,   8, 
     15, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_color v0.w
    dcl_texcoord v1.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v1, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v1, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v1, s1
    add r0.w, r1.w, c0.y
    mad oC0.xyz, r0.w, c2, r0
    texld r0, v1, s3
    mul oC0.w, r0.w, v0.w

// approximately 11 instruction slots used (4 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVAEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      1,   0, 228, 144,   3,   8, 
    228, 160,   5,   0,   0,   3, 
      0,   8,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float mipLevels;
//   sampler2D tex[4];
//   float2 textureDims;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mipLevels    c0       1
//   textureDims  c1       1
//   tex          s0       4
//

    ps_3_0
    def c2, -0.0627451017, -0.501960814, 1.16400003, 0
    def c3, 1.59599996, -0.813000023, 0, -1
    def c4, 0, -0.39199999, 2.01699996, 1.88235307
    def c5, 0.5, -1, 1, 0.00100000005
    def c6, -1, 1, 2, -2
    dcl_color v0.w
    dcl_texcoord v1.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    mul r0, c1.xxyy, v1.xyxy
    dsx r0.xy, r0
    dsy r0.zw, r0
    dp2add r1.x, r0, r0, c2.w
    dp2add r1.y, r0.zwzw, r0.zwzw, c2.w
    max r2.x, r1.x, r1.y
    log r1.x, r2.x
    mad r1.x, r1.x, c5.x, c5.y
    max r2.x, r1.x, c2.w
    mov r1.w, c3.w
    add r1.x, r1.w, c0.x
    min r3.x, r1.x, r2.x
    exp r1.x, r3.x
    rcp r1.x, r1.x
    mul r0, r0, r1.x
    dp2add r0.z, r0.zwzw, r0.zwzw, c2.w
    dp2add r0.x, r0, r0, c2.w
    max r1.x, r0.x, r0.z
    rsq r0.x, r1.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, -c5.x, c5.z
    mul r0.y, r0.x, c4.w
    cmp r0.y, r0.x, r0.y, c2.w
    mad r0.xz, r0.y, c6.xyyw, c6.zyww
    mov_sat r0.xyz, r0
    texld r1, v1, s2
    add r1.x, r1.w, c2.y
    mul r1.xyz, r1.x, c3
    texld r2, v1, s0
    add r1.w, r2.w, c2.x
    mad r1.xyz, r1.w, c2.z, r1
    texld r2, v1, s1
    add r1.w, r2.w, c2.y
    mad r1.xyz, r1.w, c4, r1
    texld r2, v1, s3
    mul r1.w, r2.w, v0.w
    mov r0.w, -c3.w
    mad oC0, r1, c5.w, r0

// approximately 44 instruction slots used (4 texture, 40 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVAEAlphaTexDensity[] =
{
      0,   3, 255, 255, 254, 255, 
     57,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 171,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    164,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 100,   0, 
      0,   0,   0,   0,   0,   0, 
    116,   0,   0,   0,   3,   0, 
      0,   0,   4,   0,   2,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 148,   0,   0,   0, 
      0,   0,   0,   0, 109, 105, 
    112,  76, 101, 118, 101, 108, 
    115,   0, 171, 171,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   4,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 116, 117, 114, 101,  68, 
    105, 109, 115,   0,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      3,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
    128, 191,  81,   0,   0,   5, 
      4,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64, 242, 240, 
    240,  63,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
      0,  63,   0,   0, 128, 191, 
      0,   0, 128,  63, 111,  18, 
    131,  58,  81,   0,   0,   5, 
      6,   0,  15, 160,   0,   0, 
    128, 191,   0,   0, 128,  63, 
      0,   0,   0,  64,   0,   0, 
      0, 192,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
     80, 160,   1,   0,  68, 144, 
     91,   0,   0,   2,   0,   0, 
      3, 128,   0,   0, 228, 128, 
     92,   0,   0,   2,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     90,   0,   0,   4,   1,   0, 
      1, 128,   0,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
    255, 160,  90,   0,   0,   4, 
      1,   0,   2, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0, 255, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   1,   0, 
     85, 128,  15,   0,   0,   2, 
      1,   0,   1, 128,   2,   0, 
      0, 128,   4,   0,   0,   4, 
      1,   0,   1, 128,   1,   0, 
      0, 128,   5,   0,   0, 160, 
      5,   0,  85, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   2,   0, 
    255, 160,   1,   0,   0,   2, 
      1,   0,   8, 128,   3,   0, 
    255, 160,   2,   0,   0,   3, 
      1,   0,   1, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
     10,   0,   0,   3,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      2,   0,   0, 128,  14,   0, 
      0,   2,   1,   0,   1, 128, 
      3,   0,   0, 128,   6,   0, 
      0,   2,   1,   0,   1, 128, 
      1,   0,   0, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
      0, 128,  90,   0,   0,   4, 
      0,   0,   4, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0, 255, 160,  90,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 128,   2,   0, 255, 160, 
     11,   0,   0,   3,   1,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0, 170, 128,   7,   0, 
      0,   2,   0,   0,   1, 128, 
      1,   0,   0, 128,   6,   0, 
      0,   2,   0,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   5,   0, 
      0, 161,   5,   0, 170, 160, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      4,   0, 255, 160,  88,   0, 
      0,   4,   0,   0,   2, 128, 
      0,   0,   0, 128,   0,   0, 
     85, 128,   2,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
      5, 128,   0,   0,  85, 128, 
      6,   0, 212, 160,   6,   0, 
    246, 160,   1,   0,   0,   2, 
      0,   0,  23, 128,   0,   0, 
    228, 128,  66,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   1,   0, 
      1, 128,   1,   0, 255, 128, 
      2,   0,  85, 160,   5,   0, 
      0,   3,   1,   0,   7, 128, 
      1,   0,   0, 128,   3,   0, 
    228, 160,  66,   0,   0,   3, 
      2,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   1,   0, 
      8, 128,   2,   0, 255, 128, 
      2,   0,   0, 160,   4,   0, 
      0,   4,   1,   0,   7, 128, 
      1,   0, 255, 128,   2,   0, 
    170, 160,   1,   0, 228, 128, 
     66,   0,   0,   3,   2,   0, 
     15, 128,   1,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   1,   0,   8, 128, 
      2,   0, 255, 128,   2,   0, 
     85, 160,   4,   0,   0,   4, 
      1,   0,   7, 128,   1,   0, 
    255, 128,   4,   0, 228, 160, 
      1,   0, 228, 128,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      1,   0, 228, 144,   3,   8, 
    228, 160,   5,   0,   0,   3, 
      1,   0,   8, 128,   2,   0, 
    255, 128,   0,   0, 255, 144, 
      1,   0,   0,   2,   0,   0, 
      8, 128,   3,   0, 255, 161, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   1,   0, 228, 128, 
      5,   0, 255, 160,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_color v0.w
    dcl_texcoord v1.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v1, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v1, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v1, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    texld r1, v1, s3
    mul r0.w, r1.w, v0.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 13 instruction slots used (4 texture, 9 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVAEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,  66,   0, 
      0,   3,   1,   0,  15, 128, 
      1,   0, 228, 144,   3,   8, 
    228, 160,   5,   0,   0,   3, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   0,   0, 255, 144, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    dcl_color v0.w
    dcl_texcoord v1.xy
    dcl_2d s3
    texld r0, v1, s3
    mul oC0, r0.w, v0.w

// approximately 2 instruction slots used (1 texture, 1 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVAEAlphaInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,  14,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   3,   8, 228, 160, 
      5,   0,   0,   3,   0,   8, 
     15, 128,   0,   0, 255, 128, 
      0,   0, 255, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v2, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v2, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v2, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    texld r1, v2, s3
    mov r0.w, r1.w
    mov r1, v1
    mad oC0, r0, r1, v0

// approximately 13 instruction slots used (4 texture, 9 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVACxform[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,  66,   0, 
      0,   3,   1,   0,  15, 128, 
      2,   0, 228, 144,   3,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   1,   0,   0,   2, 
      1,   0,  15, 128,   1,   0, 
    228, 144,   4,   0,   0,   4, 
      0,   8,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      0,   0, 228, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v2, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v2, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v2, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    texld r1, v2, s3
    mov r0.w, r1.w
    mov r1, v1
    mad r0, r0, r1, v0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 15 instruction slots used (4 texture, 11 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVACxformMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,  66,   0, 
      0,   3,   1,   0,  15, 128, 
      2,   0, 228, 144,   3,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   1,   0,   0,   2, 
      1,   0,  15, 128,   1,   0, 
    228, 144,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      0,   0, 228, 144,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    dcl_texcoord v0.w
    dcl_texcoord1 v1.w
    dcl_texcoord2 v2.xy
    dcl_2d s3
    texld r0, v2, s3
    mov r1.w, v1.w
    mad oC0, r0.w, r1.w, v0.w

// approximately 3 instruction slots used (1 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVACxformInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,  14,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   3,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 255, 128, 
      1,   0, 255, 128,   0,   0, 
    255, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_color v0.w
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2 v3.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v3, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v3, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v3, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    texld r1, v3, s3
    mov r0.w, r1.w
    mov r1, v2
    mad r0, r0, r1, v1
    mul oC0.w, r0.w, v0.w
    mov oC0.xyz, r0

// approximately 15 instruction slots used (4 texture, 11 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVACxformEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,  66,   0, 
      0,   3,   1,   0,  15, 128, 
      3,   0, 228, 144,   3,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   1,   0,   0,   2, 
      1,   0,  15, 128,   2,   0, 
    228, 144,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0, 228, 144,   5,   0, 
      0,   3,   0,   8,   8, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   8,   7, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 0
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_color v0.w
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2 v3.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v3, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v3, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v3, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    texld r1, v3, s3
    mov r0.w, r1.w
    mov r1, v2
    mad r0, r0, r1, v1
    mul r0.w, r0.w, v0.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 16 instruction slots used (4 texture, 12 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVACxformEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,  66,   0, 
      0,   3,   1,   0,  15, 128, 
      3,   0, 228, 144,   3,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   1,   0,   0,   2, 
      1,   0,  15, 128,   2,   0, 
    228, 144,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      1,   0, 228, 144,   5,   0, 
      0,   3,   0,   0,   8, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 144,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    dcl_color v0.w
    dcl_texcoord v1.w
    dcl_texcoord1 v2.w
    dcl_texcoord2 v3.xy
    dcl_2d s3
    texld r0, v3, s3
    mov r1.w, v2.w
    mad r0.x, r0.w, r1.w, v1.w
    mul oC0, r0.x, v0.w

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVACxformEAlphaInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,  14,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   3,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      8, 128,   2,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      1,   0, 255, 128,   1,   0, 
    255, 144,   5,   0,   0,   3, 
      0,   8,  15, 128,   0,   0, 
      0, 128,   0,   0, 255, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 1
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v2, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v2, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v2, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    texld r1, v2, s3
    mov r0.w, r1.w
    mad r1, v1.xyzx, c1.wwwz, c1.zzzw
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 15 instruction slots used (4 texture, 11 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVACxformAc[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,  66,   0, 
      0,   3,   1,   0,  15, 128, 
      2,   0, 228, 144,   3,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   1,   0, 191, 160, 
      1,   0, 234, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 1
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v2, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v2, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v2, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    texld r1, v2, s3
    mov r0.w, r1.w
    mad r1, v1.xyzx, c1.wwwz, c1.zzzw
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 17 instruction slots used (4 texture, 13 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVACxformAcMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   2,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,  66,   0, 
      0,   3,   1,   0,  15, 128, 
      2,   0, 228, 144,   3,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   1,   0, 191, 160, 
      1,   0, 234, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    dcl_texcoord v0.w
    dcl_texcoord1 v1.w
    dcl_texcoord2 v2.xy
    dcl_2d s3
    texld r0, v2, s3
    mul r0.x, r0.w, v1.w
    mad oC0, v0.w, r0.x, r0.x

// approximately 3 instruction slots used (1 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVACxformAcInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,  14,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   3,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      0,   0, 255, 144,   0,   0, 
      0, 128,   0,   0,   0, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 1
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_color v0.w
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2 v3.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v3, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v3, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v3, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    texld r1, v3, s3
    mov r0.w, r1.w
    mad r1, v2.xyzx, c1.wwwz, c1.zzzw
    mul r0, r0, r1
    mul r0, r0, v2.w
    mad r0, v1, r0.w, r0
    mul oC0.w, r0.w, v0.w
    mov oC0.xyz, r0

// approximately 17 instruction slots used (4 texture, 13 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVACxformAcEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,  66,   0, 
      0,   3,   1,   0,  15, 128, 
      3,   0, 228, 144,   3,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   2,   0, 
     36, 144,   1,   0, 191, 160, 
      1,   0, 234, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   2,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   1,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
      7, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    def c0, -0.0627451017, -0.501960814, 1.16400003, 0
    def c1, 1.59599996, -0.813000023, 0, 1
    def c2, 0, -0.39199999, 2.01699996, 0
    dcl_color v0.w
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2 v3.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v3, s2
    add r0.x, r0.w, c0.y
    mul r0.xyz, r0.x, c1
    texld r1, v3, s0
    add r0.w, r1.w, c0.x
    mad r0.xyz, r0.w, c0.z, r0
    texld r1, v3, s1
    add r0.w, r1.w, c0.y
    mad r0.xyz, r0.w, c2, r0
    texld r1, v3, s3
    mov r0.w, r1.w
    mad r1, v2.xyzx, c1.wwwz, c1.zzzw
    mul r0, r0, r1
    mul r0, r0, v2.w
    mad r0, v1, r0.w, r0
    mul r0.w, r0.w, v0.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 18 instruction slots used (4 texture, 14 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVACxformAcEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 129, 128, 
    128, 189, 129, 128,   0, 191, 
    244, 253, 148,  63,   0,   0, 
      0,   0,  81,   0,   0,   5, 
      1,   0,  15, 160, 186,  73, 
    204,  63, 197,  32,  80, 191, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,  57, 180, 200, 190, 
    135,  22,   1,  64,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   2,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      0,   0,  85, 160,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 160,  66,   0,   0,   3, 
      1,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      8, 128,   1,   0, 255, 128, 
      0,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    170, 160,   0,   0, 228, 128, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   3,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      1,   0, 255, 128,   0,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   7, 128,   0,   0, 
    255, 128,   2,   0, 228, 160, 
      0,   0, 228, 128,  66,   0, 
      0,   3,   1,   0,  15, 128, 
      3,   0, 228, 144,   3,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,   8, 128,   1,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   2,   0, 
     36, 144,   1,   0, 191, 160, 
      1,   0, 234, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   2,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   1,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       4
//

    ps_3_0
    dcl_color v0.w
    dcl_texcoord v1.w
    dcl_texcoord1 v2.w
    dcl_texcoord2 v3.xy
    dcl_2d s3
    texld r0, v3, s3
    mul r0.x, r0.w, v2.w
    mad r0.x, v1.w, r0.x, r0.x
    mul oC0, r0.x, v0.w

// approximately 4 instruction slots used (1 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUVACxformAcEAlphaInv[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,  14,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   3,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   3,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0, 255, 128, 
      2,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      1,   0, 255, 144,   0,   0, 
      0, 128,   0,   0,   0, 128, 
      5,   0,   0,   3,   0,   8, 
     15, 128,   0,   0,   0, 128, 
      0,   0, 255, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, -0.501960993, -0, 1.56864798, 1.84835196
    def c1, 0.186592996, 0.466295987, 1, 0
    dcl_texcoord_pp v0.xy
    dcl_2d s0
    texld r0, v0, s0
    add r0.xyz, r0, c0.xyxw
    mad_sat oC0.xz, r0.zyxw, c0.zyww, r0.y
    mad r0.x, r0.x, -c1.x, r0.y
    mad_sat oC0.y, r0.z, -c1.y, r0.x
    mov oC0.w, c1.z

// approximately 6 instruction slots used (1 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUY2[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    117, 201, 200,  63, 204, 150, 
    236,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 196, 160,   4,   0, 
      0,   4,   0,   8,  21, 128, 
      0,   0, 198, 128,   0,   0, 
    246, 160,   0,   0,  85, 128, 
      4,   0,   0,   4,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      1,   0,   0, 161,   0,   0, 
     85, 128,   4,   0,   0,   4, 
      0,   8,  18, 128,   0,   0, 
    170, 128,   1,   0,  85, 161, 
      0,   0,   0, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      1,   0, 170, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float mipLevels;
//   sampler2D tex;
//   float2 textureDims;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mipLevels    c0       1
//   textureDims  c1       1
//   tex          s0       1
//

    ps_3_0
    def c2, -0.501960993, -0, 1.56864798, 1.84835196
    def c3, -1, 1, 2, -2
    def c4, 0.186592996, 0.466295987, 0.5, -1
    def c5, 1.88235307, 0.00100000005, 1.00100005, 0
    dcl_texcoord v0.xy
    dcl_2d s0
    mul r0, c1.xxyy, v0.xyxy
    dsx r0.xy, r0
    dsy r0.zw, r0
    dp2add r1.x, r0, r0, -c2.y
    dp2add r1.y, r0.zwzw, r0.zwzw, -c2.y
    max r2.x, r1.x, r1.y
    log r1.x, r2.x
    mad r1.x, r1.x, c4.z, c4.w
    max r2.x, r1.x, -c2.y
    mov r1.w, c4.w
    add r1.x, r1.w, c0.x
    min r3.x, r1.x, r2.x
    exp r1.x, r3.x
    rcp r1.x, r1.x
    mul r0, r0, r1.x
    dp2add r0.z, r0.zwzw, r0.zwzw, -c2.y
    dp2add r0.x, r0, r0, -c2.y
    max r1.x, r0.x, r0.z
    rsq r0.x, r1.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, -c4_abs.z, c4_abs.w
    mul r0.y, r0.x, c5.x
    cmp r0.y, r0.x, r0.y, -c2.y
    mad r0.xz, r0.y, c3.xyyw, c3.zyww
    mov_sat r0.xyz, r0
    texld r1, v0, s0
    add r1.xyz, r1, c2.xyxw
    mad r0.w, r1.x, -c4.x, r1.y
    mad_sat r2.y, r1.z, -c4.y, r0.w
    mad_sat r2.xz, r1.zyxw, c2.zyww, r1.y
    mad oC0.xyz, r2, c5.y, r0
    mov oC0.w, c5.z

// approximately 38 instruction slots used (1 texture, 37 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUY2TexDensity[] =
{
      0,   3, 255, 255, 254, 255, 
     57,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 171,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    164,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 100,   0, 
      0,   0,   0,   0,   0,   0, 
    116,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 148,   0,   0,   0, 
      0,   0,   0,   0, 109, 105, 
    112,  76, 101, 118, 101, 108, 
    115,   0, 171, 171,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 116, 117, 114, 101,  68, 
    105, 109, 115,   0,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    117, 201, 200,  63, 204, 150, 
    236,  63,  81,   0,   0,   5, 
      3,   0,  15, 160,   0,   0, 
    128, 191,   0,   0, 128,  63, 
      0,   0,   0,  64,   0,   0, 
      0, 192,  81,   0,   0,   5, 
      4,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
      0,   0,   0,  63,   0,   0, 
    128, 191,  81,   0,   0,   5, 
      5,   0,  15, 160, 242, 240, 
    240,  63, 111,  18, 131,  58, 
    197,  32, 128,  63,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
     80, 160,   0,   0,  68, 144, 
     91,   0,   0,   2,   0,   0, 
      3, 128,   0,   0, 228, 128, 
     92,   0,   0,   2,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     90,   0,   0,   4,   1,   0, 
      1, 128,   0,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
     85, 161,  90,   0,   0,   4, 
      1,   0,   2, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,  85, 161,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   1,   0, 
     85, 128,  15,   0,   0,   2, 
      1,   0,   1, 128,   2,   0, 
      0, 128,   4,   0,   0,   4, 
      1,   0,   1, 128,   1,   0, 
      0, 128,   4,   0, 170, 160, 
      4,   0, 255, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   2,   0, 
     85, 161,   1,   0,   0,   2, 
      1,   0,   8, 128,   4,   0, 
    255, 160,   2,   0,   0,   3, 
      1,   0,   1, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
     10,   0,   0,   3,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      2,   0,   0, 128,  14,   0, 
      0,   2,   1,   0,   1, 128, 
      3,   0,   0, 128,   6,   0, 
      0,   2,   1,   0,   1, 128, 
      1,   0,   0, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
      0, 128,  90,   0,   0,   4, 
      0,   0,   4, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,  85, 161,  90,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 128,   2,   0,  85, 161, 
     11,   0,   0,   3,   1,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0, 170, 128,   7,   0, 
      0,   2,   0,   0,   1, 128, 
      1,   0,   0, 128,   6,   0, 
      0,   2,   0,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
    170, 172,   4,   0, 255, 171, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      5,   0,   0, 160,  88,   0, 
      0,   4,   0,   0,   2, 128, 
      0,   0,   0, 128,   0,   0, 
     85, 128,   2,   0,  85, 161, 
      4,   0,   0,   4,   0,   0, 
      5, 128,   0,   0,  85, 128, 
      3,   0, 212, 160,   3,   0, 
    246, 160,   1,   0,   0,   2, 
      0,   0,  23, 128,   0,   0, 
    228, 128,  66,   0,   0,   3, 
      1,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   1,   0, 
      7, 128,   1,   0, 228, 128, 
      2,   0, 196, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      1,   0,   0, 128,   4,   0, 
      0, 161,   1,   0,  85, 128, 
      4,   0,   0,   4,   2,   0, 
     18, 128,   1,   0, 170, 128, 
      4,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      2,   0,  21, 128,   1,   0, 
    198, 128,   2,   0, 246, 160, 
      1,   0,  85, 128,   4,   0, 
      0,   4,   0,   8,   7, 128, 
      2,   0, 228, 128,   5,   0, 
     85, 160,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   5,   0, 170, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, -0.501960993, -0, 1.56864798, 1.84835196
    def c1, 0.186592996, 0.466295987, 1, 0
    dcl_texcoord_pp v0.xy
    dcl_2d s0
    texld r0, v0, s0
    add r0.xyz, r0, c0.xyxw
    mad_sat oC0.xz, r0.zyxw, c0.zyww, r0.y
    mad r0.x, r0.x, -c1.x, r0.y
    mad_sat oC0.y, r0.z, -c1.y, r0.x
    mov oC0.w, c1.z

// approximately 6 instruction slots used (1 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUY2Mul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    117, 201, 200,  63, 204, 150, 
    236,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 196, 160,   4,   0, 
      0,   4,   0,   8,  21, 128, 
      0,   0, 198, 128,   0,   0, 
    246, 160,   0,   0,  85, 128, 
      4,   0,   0,   4,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      1,   0,   0, 161,   0,   0, 
     85, 128,   4,   0,   0,   4, 
      0,   8,  18, 128,   0,   0, 
    170, 128,   1,   0,  85, 161, 
      0,   0,   0, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      1,   0, 170, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, -0.501960993, -0, 1.56864798, 1.84835196
    def c1, 0.186592996, 0.466295987, 0, 0
    dcl_color v0.w
    dcl_texcoord_pp v1.xy
    dcl_2d s0
    texld r0, v1, s0
    add r0.xyz, r0, c0.xyxw
    mad_sat oC0.xz, r0.zyxw, c0.zyww, r0.y
    mad r0.x, r0.x, -c1.x, r0.y
    mad_sat oC0.y, r0.z, -c1.y, r0.x
    mov oC0.w, v0.w

// approximately 6 instruction slots used (1 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUY2EAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    117, 201, 200,  63, 204, 150, 
    236,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 196, 160,   4,   0, 
      0,   4,   0,   8,  21, 128, 
      0,   0, 198, 128,   0,   0, 
    246, 160,   0,   0,  85, 128, 
      4,   0,   0,   4,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      1,   0,   0, 161,   0,   0, 
     85, 128,   4,   0,   0,   4, 
      0,   8,  18, 128,   0,   0, 
    170, 128,   1,   0,  85, 161, 
      0,   0,   0, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 144, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float mipLevels;
//   sampler2D tex;
//   float2 textureDims;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   mipLevels    c0       1
//   textureDims  c1       1
//   tex          s0       1
//

    ps_3_0
    def c2, -0.501960993, -0, 1.56864798, 1.84835196
    def c3, -1, 1, 2, -2
    def c4, 0.186592996, 0.466295987, 0.5, -1
    def c5, 1.88235307, 0.00100000005, 0, 0
    dcl_color v0.w
    dcl_texcoord v1.xy
    dcl_2d s0
    mul r0, c1.xxyy, v1.xyxy
    dsx r0.xy, r0
    dsy r0.zw, r0
    dp2add r1.x, r0, r0, -c2.y
    dp2add r1.y, r0.zwzw, r0.zwzw, -c2.y
    max r2.x, r1.x, r1.y
    log r1.x, r2.x
    mad r1.x, r1.x, c4.z, c4.w
    max r2.x, r1.x, -c2.y
    mov r1.w, c4.w
    add r1.x, r1.w, c0.x
    min r3.x, r1.x, r2.x
    exp r1.x, r3.x
    rcp r1.x, r1.x
    mul r0, r0, r1.x
    dp2add r0.z, r0.zwzw, r0.zwzw, -c2.y
    dp2add r0.x, r0, r0, -c2.y
    max r1.x, r0.x, r0.z
    rsq r0.x, r1.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, -c4_abs.z, c4_abs.w
    mul r0.y, r0.x, c5.x
    cmp r0.y, r0.x, r0.y, -c2.y
    mad r0.xz, r0.y, c3.xyyw, c3.zyww
    mov_sat r0.xyz, r0
    texld r1, v1, s0
    add r1.xyz, r1, c2.xyxw
    mad r1.w, r1.x, -c4.x, r1.y
    mad_sat r2.y, r1.z, -c4.y, r1.w
    mad_sat r2.xz, r1.zyxw, c2.zyww, r1.y
    mov r2.w, v0.w
    mov r0.w, -c4.w
    mad oC0, r2, c5.y, r0

// approximately 39 instruction slots used (1 texture, 38 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUY2EAlphaTexDensity[] =
{
      0,   3, 255, 255, 254, 255, 
     57,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 171,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    164,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 100,   0, 
      0,   0,   0,   0,   0,   0, 
    116,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 148,   0,   0,   0, 
      0,   0,   0,   0, 109, 105, 
    112,  76, 101, 118, 101, 108, 
    115,   0, 171, 171,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 116, 117, 114, 101,  68, 
    105, 109, 115,   0,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      2,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    117, 201, 200,  63, 204, 150, 
    236,  63,  81,   0,   0,   5, 
      3,   0,  15, 160,   0,   0, 
    128, 191,   0,   0, 128,  63, 
      0,   0,   0,  64,   0,   0, 
      0, 192,  81,   0,   0,   5, 
      4,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
      0,   0,   0,  63,   0,   0, 
    128, 191,  81,   0,   0,   5, 
      5,   0,  15, 160, 242, 240, 
    240,  63, 111,  18, 131,  58, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
     80, 160,   1,   0,  68, 144, 
     91,   0,   0,   2,   0,   0, 
      3, 128,   0,   0, 228, 128, 
     92,   0,   0,   2,   0,   0, 
     12, 128,   0,   0, 228, 128, 
     90,   0,   0,   4,   1,   0, 
      1, 128,   0,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
     85, 161,  90,   0,   0,   4, 
      1,   0,   2, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,  85, 161,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   1,   0, 
     85, 128,  15,   0,   0,   2, 
      1,   0,   1, 128,   2,   0, 
      0, 128,   4,   0,   0,   4, 
      1,   0,   1, 128,   1,   0, 
      0, 128,   4,   0, 170, 160, 
      4,   0, 255, 160,  11,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,   0, 128,   2,   0, 
     85, 161,   1,   0,   0,   2, 
      1,   0,   8, 128,   4,   0, 
    255, 160,   2,   0,   0,   3, 
      1,   0,   1, 128,   1,   0, 
    255, 128,   0,   0,   0, 160, 
     10,   0,   0,   3,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      2,   0,   0, 128,  14,   0, 
      0,   2,   1,   0,   1, 128, 
      3,   0,   0, 128,   6,   0, 
      0,   2,   1,   0,   1, 128, 
      1,   0,   0, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
      0, 128,  90,   0,   0,   4, 
      0,   0,   4, 128,   0,   0, 
    238, 128,   0,   0, 238, 128, 
      2,   0,  85, 161,  90,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0, 228, 128,   0,   0, 
    228, 128,   2,   0,  85, 161, 
     11,   0,   0,   3,   1,   0, 
      1, 128,   0,   0,   0, 128, 
      0,   0, 170, 128,   7,   0, 
      0,   2,   0,   0,   1, 128, 
      1,   0,   0, 128,   6,   0, 
      0,   2,   0,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
    170, 172,   4,   0, 255, 171, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,   0, 128, 
      5,   0,   0, 160,  88,   0, 
      0,   4,   0,   0,   2, 128, 
      0,   0,   0, 128,   0,   0, 
     85, 128,   2,   0,  85, 161, 
      4,   0,   0,   4,   0,   0, 
      5, 128,   0,   0,  85, 128, 
      3,   0, 212, 160,   3,   0, 
    246, 160,   1,   0,   0,   2, 
      0,   0,  23, 128,   0,   0, 
    228, 128,  66,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   1,   0, 
      7, 128,   1,   0, 228, 128, 
      2,   0, 196, 160,   4,   0, 
      0,   4,   1,   0,   8, 128, 
      1,   0,   0, 128,   4,   0, 
      0, 161,   1,   0,  85, 128, 
      4,   0,   0,   4,   2,   0, 
     18, 128,   1,   0, 170, 128, 
      4,   0,  85, 161,   1,   0, 
    255, 128,   4,   0,   0,   4, 
      2,   0,  21, 128,   1,   0, 
    198, 128,   2,   0, 246, 160, 
      1,   0,  85, 128,   1,   0, 
      0,   2,   2,   0,   8, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   0,   8, 128, 
      4,   0, 255, 161,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      2,   0, 228, 128,   5,   0, 
     85, 160,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, -0.501960993, -0, 1.56864798, 1.84835196
    def c1, 0.186592996, 0.466295987, 0, 0
    dcl_color v0.w
    dcl_texcoord_pp v1.xy
    dcl_2d s0
    texld r0, v1, s0
    add r0.xyz, r0, c0.xyxw
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.xz, r0.zyxw, c0.zyww, r0.y
    mul oC0.xyz, r1, v0.w
    mov oC0.w, v0.w

// approximately 7 instruction slots used (1 texture, 6 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUY2EAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    117, 201, 200,  63, 204, 150, 
    236,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 196, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  21, 128,   0,   0, 
    198, 128,   0,   0, 246, 160, 
      0,   0,  85, 128,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      1,   0, 228, 128,   0,   0, 
    255, 144,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 144, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, -0.501960993, -0, 1.56864798, 1.84835196
    def c1, 0.186592996, 0.466295987, 1, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2_pp v2.xy
    dcl_2d s0
    texld r0, v2, s0
    add r0.xyz, r0, c0.xyxw
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.xz, r0.zyxw, c0.zyww, r0.y
    mov r1.w, c1.z
    mov r0, v1
    mad oC0, r1, r0, v0

// approximately 8 instruction slots used (1 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUY2Cxform[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    117, 201, 200,  63, 204, 150, 
    236,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 196, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  21, 128,   0,   0, 
    198, 128,   0,   0, 246, 160, 
      0,   0,  85, 128,   1,   0, 
      0,   2,   1,   0,   8, 128, 
      1,   0, 170, 160,   1,   0, 
      0,   2,   0,   0,  15, 128, 
      1,   0, 228, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 128,   0,   0, 228, 144, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, -0.501960993, -0, 1.56864798, 1.84835196
    def c1, 0.186592996, 0.466295987, 1, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2_pp v2.xy
    dcl_2d s0
    texld r0, v2, s0
    add r0.xyz, r0, c0.xyxw
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.xz, r0.zyxw, c0.zyww, r0.y
    mov r1.w, c1.z
    mov r0, v1
    mad r0, r1, r0, v0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 10 instruction slots used (1 texture, 9 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUY2CxformMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    117, 201, 200,  63, 204, 150, 
    236,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 196, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  21, 128,   0,   0, 
    198, 128,   0,   0, 246, 160, 
      0,   0,  85, 128,   1,   0, 
      0,   2,   1,   0,   8, 128, 
      1,   0, 170, 160,   1,   0, 
      0,   2,   0,   0,  15, 128, 
      1,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 128,   0,   0, 228, 144, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, -0.501960993, -0, 1.56864798, 1.84835196
    def c1, 0.186592996, 0.466295987, 1, 0
    dcl_color v0.w
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2_pp v3.xy
    dcl_2d s0
    texld r0, v3, s0
    add r0.xyz, r0, c0.xyxw
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.xz, r0.zyxw, c0.zyww, r0.y
    mov r1.w, c1.z
    mov r0, v2
    mad r0, r1, r0, v1
    mul oC0.w, r0.w, v0.w
    mov oC0.xyz, r0

// approximately 10 instruction slots used (1 texture, 9 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUY2CxformEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    117, 201, 200,  63, 204, 150, 
    236,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 196, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  21, 128,   0,   0, 
    198, 128,   0,   0, 246, 160, 
      0,   0,  85, 128,   1,   0, 
      0,   2,   1,   0,   8, 128, 
      1,   0, 170, 160,   1,   0, 
      0,   2,   0,   0,  15, 128, 
      2,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 128,   1,   0, 228, 144, 
      5,   0,   0,   3,   0,   8, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   1,   0, 
      0,   2,   0,   8,   7, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, -0.501960993, -0, 1.56864798, 1.84835196
    def c1, 0.186592996, 0.466295987, 1, 0
    dcl_color v0.w
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2_pp v3.xy
    dcl_2d s0
    texld r0, v3, s0
    add r0.xyz, r0, c0.xyxw
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.xz, r0.zyxw, c0.zyww, r0.y
    mov r1.w, c1.z
    mov r0, v2
    mad r0, r1, r0, v1
    mul r0.w, r0.w, v0.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 11 instruction slots used (1 texture, 10 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUY2CxformEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    117, 201, 200,  63, 204, 150, 
    236,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 196, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  21, 128,   0,   0, 
    198, 128,   0,   0, 246, 160, 
      0,   0,  85, 128,   1,   0, 
      0,   2,   1,   0,   8, 128, 
      1,   0, 170, 160,   1,   0, 
      0,   2,   0,   0,  15, 128, 
      2,   0, 228, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 128,   1,   0, 228, 144, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      0,   0, 255, 144,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, -0.501960993, -0, 1.56864798, 1.84835196
    def c1, 0.186592996, 0.466295987, 1, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2_pp v2.xy
    dcl_2d s0
    texld r0, v2, s0
    add r0.xyz, r0, c0.xyxw
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.xz, r0.zyxw, c0.zyww, r0.y
    mul r0.xyz, r1, v1
    mov r0.w, c1.z
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 9 instruction slots used (1 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUY2CxformAc[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    117, 201, 200,  63, 204, 150, 
    236,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 196, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  21, 128,   0,   0, 
    198, 128,   0,   0, 246, 160, 
      0,   0,  85, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      1,   0, 228, 128,   1,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,   8, 128,   1,   0, 
    170, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, -0.501960993, -0, 1.56864798, 1.84835196
    def c1, 0.186592996, 0.466295987, 1, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2_pp v2.xy
    dcl_2d s0
    texld r0, v2, s0
    add r0.xyz, r0, c0.xyxw
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.xz, r0.zyxw, c0.zyww, r0.y
    mul r0.xyz, r1, v1
    mov r0.w, c1.z
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 11 instruction slots used (1 texture, 10 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUY2CxformAcMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    117, 201, 200,  63, 204, 150, 
    236,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 196, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  21, 128,   0,   0, 
    198, 128,   0,   0, 246, 160, 
      0,   0,  85, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      1,   0, 228, 128,   1,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,   8, 128,   1,   0, 
    170, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, -0.501960993, -0, 1.56864798, 1.84835196
    def c1, 0.186592996, 0.466295987, 1, 0
    dcl_color v0.w
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2_pp v3.xy
    dcl_2d s0
    texld r0, v3, s0
    add r0.xyz, r0, c0.xyxw
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.xz, r0.zyxw, c0.zyww, r0.y
    mul r0.xyz, r1, v2
    mov r0.w, c1.z
    mul r0, r0, v2.w
    mad r0, v1, r0.w, r0
    mul oC0.w, r0.w, v0.w
    mov oC0.xyz, r0

// approximately 11 instruction slots used (1 texture, 10 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUY2CxformAcEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    117, 201, 200,  63, 204, 150, 
    236,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 196, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  21, 128,   0,   0, 
    198, 128,   0,   0, 246, 160, 
      0,   0,  85, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      1,   0, 228, 128,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,   8, 128,   1,   0, 
    170, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   2,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   1,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
      7, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       1
//

    ps_3_0
    def c0, -0.501960993, -0, 1.56864798, 1.84835196
    def c1, 0.186592996, 0.466295987, 1, 0
    dcl_color v0.w
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2_pp v3.xy
    dcl_2d s0
    texld r0, v3, s0
    add r0.xyz, r0, c0.xyxw
    mad r0.w, r0.x, -c1.x, r0.y
    mad_sat r1.y, r0.z, -c1.y, r0.w
    mad_sat r1.xz, r0.zyxw, c0.zyww, r0.y
    mul r0.xyz, r1, v2
    mov r0.w, c1.z
    mul r0, r0, v2.w
    mad r0, v1, r0.w, r0
    mul r0.w, r0.w, v0.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 12 instruction slots used (1 texture, 11 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FYUY2CxformAcEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    117, 201, 200,  63, 204, 150, 
    236,  63,  81,   0,   0,   5, 
      1,   0,  15, 160,  60,  18, 
     63,  62,  89, 190, 238,  62, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  31,   0,   0,   2, 
     10,   0,   0, 128,   0,   0, 
      8, 144,  31,   0,   0,   2, 
      5,   0,   0, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   2,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   3,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   3,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0, 196, 160,   4,   0, 
      0,   4,   0,   0,   8, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 161,   0,   0,  85, 128, 
      4,   0,   0,   4,   1,   0, 
     18, 128,   0,   0, 170, 128, 
      1,   0,  85, 161,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  21, 128,   0,   0, 
    198, 128,   0,   0, 246, 160, 
      0,   0,  85, 128,   5,   0, 
      0,   3,   0,   0,   7, 128, 
      1,   0, 228, 128,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,   8, 128,   1,   0, 
    170, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   2,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   1,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4x4 cxmul;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       4
//   tex          s0       1
//

    ps_3_0
    dcl_texcoord_pp v0.xy
    dcl_2d s0
    texld r0, v0, s0
    dp4 r1.x, r0, c1
    dp4 r1.y, r0, c2
    dp4 r1.z, r0, c3
    dp4 r1.w, r0, c4
    add r0.x, r0.w, c0.w
    mad oC0, c0, r0.x, r1

// approximately 7 instruction slots used (1 texture, 6 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGCMatrixAc[] =
{
      0,   3, 255, 255, 254, 255, 
     55,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 163,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    156,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   4,   0,   6,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      2,   0, 140,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    112, 115,  95,  51,  95,  48, 
      0,  77, 105,  99, 114, 111, 
    115, 111, 102, 116,  32,  40, 
     82,  41,  32,  72,  76,  83, 
     76,  32,  83, 104,  97, 100, 
    101, 114,  32,  67, 111, 109, 
    112, 105, 108, 101, 114,  32, 
     57,  46,  51,  48,  46,  57, 
     50,  48,  48,  46,  49,  54, 
     51,  56,  52,   0, 171, 171, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  35, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     66,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 144, 
      0,   8, 228, 160,   9,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   2, 128,   0,   0, 
    228, 128,   2,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      4, 128,   0,   0, 228, 128, 
      3,   0, 228, 160,   9,   0, 
      0,   3,   1,   0,   8, 128, 
      0,   0, 228, 128,   4,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0, 255, 160, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 160, 
      0,   0,   0, 128,   1,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4x4 cxmul;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       4
//   tex          s0       1
//

    ps_3_0
    dcl_texcoord_pp v0.xy
    dcl_2d s0
    texld r0, v0, s0
    dp4 r1.x, r0, c1
    dp4 r1.y, r0, c2
    dp4 r1.z, r0, c3
    dp4 r1.w, r0, c4
    add r0.x, r0.w, c0.w
    mad r0, c0, r0.x, r1
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 9 instruction slots used (1 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGCMatrixAcMul[] =
{
      0,   3, 255, 255, 254, 255, 
     55,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 163,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    156,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   4,   0,   6,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      2,   0, 140,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    112, 115,  95,  51,  95,  48, 
      0,  77, 105,  99, 114, 111, 
    115, 111, 102, 116,  32,  40, 
     82,  41,  32,  72,  76,  83, 
     76,  32,  83, 104,  97, 100, 
    101, 114,  32,  67, 111, 109, 
    112, 105, 108, 101, 114,  32, 
     57,  46,  51,  48,  46,  57, 
     50,  48,  48,  46,  49,  54, 
     51,  56,  52,   0, 171, 171, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  35, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     66,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 144, 
      0,   8, 228, 160,   9,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   2, 128,   0,   0, 
    228, 128,   2,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      4, 128,   0,   0, 228, 128, 
      3,   0, 228, 160,   9,   0, 
      0,   3,   1,   0,   8, 128, 
      0,   0, 228, 128,   4,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 160, 
      0,   0,   0, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4x4 cxmul;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       4
//   tex          s0       1
//

    ps_3_0
    dcl_color v0.w
    dcl_texcoord_pp v1.xy
    dcl_2d s0
    texld r0, v1, s0
    dp4 r1.x, r0, c1
    dp4 r1.y, r0, c2
    dp4 r1.z, r0, c3
    dp4 r1.w, r0, c4
    add r0.x, r0.w, c0.w
    mad r0, c0, r0.x, r1
    mul oC0.w, r0.w, v0.w
    mov oC0.xyz, r0

// approximately 9 instruction slots used (1 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGCMatrixAcEAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     55,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 163,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    156,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   4,   0,   6,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      2,   0, 140,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    112, 115,  95,  51,  95,  48, 
      0,  77, 105,  99, 114, 111, 
    115, 111, 102, 116,  32,  40, 
     82,  41,  32,  72,  76,  83, 
     76,  32,  83, 104,  97, 100, 
    101, 114,  32,  67, 111, 109, 
    112, 105, 108, 101, 114,  32, 
     57,  46,  51,  48,  46,  57, 
     50,  48,  48,  46,  49,  54, 
     51,  56,  52,   0, 171, 171, 
     31,   0,   0,   2,  10,   0, 
      0, 128,   0,   0,   8, 144, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   1,   0,  35, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     66,   0,   0,   3,   0,   0, 
     15, 128,   1,   0, 228, 144, 
      0,   8, 228, 160,   9,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   2, 128,   0,   0, 
    228, 128,   2,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      4, 128,   0,   0, 228, 128, 
      3,   0, 228, 160,   9,   0, 
      0,   3,   1,   0,   8, 128, 
      0,   0, 228, 128,   4,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 160, 
      0,   0,   0, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      1,   0,   0,   2,   0,   8, 
      7, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 cxadd;
//   float4x4 cxmul;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxadd        c0       1
//   cxmul        c1       4
//   tex          s0       1
//

    ps_3_0
    dcl_color v0.w
    dcl_texcoord_pp v1.xy
    dcl_2d s0
    texld r0, v1, s0
    dp4 r1.x, r0, c1
    dp4 r1.y, r0, c2
    dp4 r1.z, r0, c3
    dp4 r1.w, r0, c4
    add r0.x, r0.w, c0.w
    mad r0, c0, r0.x, r1
    mul r0.w, r0.w, v0.w
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 10 instruction slots used (1 texture, 9 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FTexTGCMatrixAcEAlphaMul[] =
{
      0,   3, 255, 255, 254, 255, 
     55,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 163,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    156,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      1,   0,   4,   0,   6,   0, 
    120,   0,   0,   0,   0,   0, 
      0,   0, 136,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      2,   0, 140,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
     97, 100, 100,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    112, 115,  95,  51,  95,  48, 
      0,  77, 105,  99, 114, 111, 
    115, 111, 102, 116,  32,  40, 
     82,  41,  32,  72,  76,  83, 
     76,  32,  83, 104,  97, 100, 
    101, 114,  32,  67, 111, 109, 
    112, 105, 108, 101, 114,  32, 
     57,  46,  51,  48,  46,  57, 
     50,  48,  48,  46,  49,  54, 
     51,  56,  52,   0, 171, 171, 
     31,   0,   0,   2,  10,   0, 
      0, 128,   0,   0,   8, 144, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   1,   0,  35, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     66,   0,   0,   3,   0,   0, 
     15, 128,   1,   0, 228, 144, 
      0,   8, 228, 160,   9,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   2, 128,   0,   0, 
    228, 128,   2,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      4, 128,   0,   0, 228, 128, 
      3,   0, 228, 160,   9,   0, 
      0,   3,   1,   0,   8, 128, 
      0,   0, 228, 128,   4,   0, 
    228, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 128,   0,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 160, 
      0,   0,   0, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128,   0,   0, 255, 144, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   texscale     c1       1
//   tex          s0       1
//

    ps_3_0
    def c2, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    mov r0.zw, c2.x
    mov r1, c2.x
    mov r2.x, -c0.x
    rep i0
      break_lt c0.x, r2.x
      mad r0.xy, r2.x, c1, v2
      texldl r3, r0, s0
      add r1, r1, r3
      add r2.x, r2.x, c2.z
    endrep
    mul r0, r1, c0.w
    mad r1, v1.xyzx, c2.zzzx, c2.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 21 instruction slots used (2 texture, 19 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FBox1Blur[] =
{
      0,   3, 255, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 148,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    141,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 132,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 102, 115, 
    105, 122, 101,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120, 115,  99,  97, 
    108, 101,   0, 112, 115,  95, 
     51,  95,  48,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  57,  46,  51, 
     48,  46,  57,  50,  48,  48, 
     46,  49,  54,  51,  56,  52, 
      0, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  48,   0,   0,   5, 
      0,   0,  15, 240, 255,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,   1,   0,   0,   2, 
      0,   0,  12, 128,   2,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,  15, 128,   2,   0, 
      0, 160,   1,   0,   0,   2, 
      2,   0,   1, 128,   0,   0, 
      0, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,   0, 160, 
      2,   0,   0, 128,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      2,   0,   0, 128,   1,   0, 
    228, 160,   2,   0, 228, 144, 
     95,   0,   0,   3,   3,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   8, 228, 160,   2,   0, 
      0,   3,   1,   0,  15, 128, 
      1,   0, 228, 128,   3,   0, 
    228, 128,   2,   0,   0,   3, 
      2,   0,   1, 128,   2,   0, 
      0, 128,   2,   0, 170, 160, 
     39,   0,   0,   0,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      1,   0, 228, 128,   0,   0, 
    255, 160,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   2,   0,  42, 160, 
      2,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   texscale     c1       1
//   tex          s0       1
//

    ps_3_0
    def c2, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    mov r0.zw, c2.x
    mov r1, c2.x
    mov r2.x, -c0.x
    rep i0
      break_lt c0.x, r2.x
      mad r0.xy, r2.x, c1, v2
      texldl r3, r0, s0
      add r1, r1, r3
      add r2.x, r2.x, c2.z
    endrep
    mul r0, r1, c0.w
    mad r1, v1.xyzx, c2.zzzx, c2.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 23 instruction slots used (2 texture, 21 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FBox1BlurMul[] =
{
      0,   3, 255, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 148,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    141,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 132,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 102, 115, 
    105, 122, 101,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120, 115,  99,  97, 
    108, 101,   0, 112, 115,  95, 
     51,  95,  48,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  57,  46,  51, 
     48,  46,  57,  50,  48,  48, 
     46,  49,  54,  51,  56,  52, 
      0, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  48,   0,   0,   5, 
      0,   0,  15, 240, 255,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,   1,   0,   0,   2, 
      0,   0,  12, 128,   2,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,  15, 128,   2,   0, 
      0, 160,   1,   0,   0,   2, 
      2,   0,   1, 128,   0,   0, 
      0, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,   0, 160, 
      2,   0,   0, 128,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      2,   0,   0, 128,   1,   0, 
    228, 160,   2,   0, 228, 144, 
     95,   0,   0,   3,   3,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   8, 228, 160,   2,   0, 
      0,   3,   1,   0,  15, 128, 
      1,   0, 228, 128,   3,   0, 
    228, 128,   2,   0,   0,   3, 
      2,   0,   1, 128,   2,   0, 
      0, 128,   2,   0, 170, 160, 
     39,   0,   0,   0,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      1,   0, 228, 128,   0,   0, 
    255, 160,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   2,   0,  42, 160, 
      2,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   texscale     c1       1
//   tex          s0       1
//

    ps_3_0
    def c2, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    mov r0.zw, c2.x
    mov r1, c2.x
    mov r2.x, -c0.x
    rep i0
      break_lt c0.x, r2.x
      mov r3, r1
      mov r2.y, -c0.y
      rep i0
        break_lt c0.y, r2.y
        mad r0.xy, r2, c1, v2
        texldl r4, r0, s0
        add r3, r3, r4
        add r2.y, r2.y, c2.z
      endrep
      mov r1, r3
      add r2.x, r2.x, c2.z
    endrep
    mul r0, r1, c0.w
    mad r1, v1.xyzx, c2.zzzx, c2.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 33 instruction slots used (2 texture, 31 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FBox2Blur[] =
{
      0,   3, 255, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 148,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    141,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 132,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 102, 115, 
    105, 122, 101,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120, 115,  99,  97, 
    108, 101,   0, 112, 115,  95, 
     51,  95,  48,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  57,  46,  51, 
     48,  46,  57,  50,  48,  48, 
     46,  49,  54,  51,  56,  52, 
      0, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  48,   0,   0,   5, 
      0,   0,  15, 240, 255,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,   1,   0,   0,   2, 
      0,   0,  12, 128,   2,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,  15, 128,   2,   0, 
      0, 160,   1,   0,   0,   2, 
      2,   0,   1, 128,   0,   0, 
      0, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,   0, 160, 
      2,   0,   0, 128,   1,   0, 
      0,   2,   3,   0,  15, 128, 
      1,   0, 228, 128,   1,   0, 
      0,   2,   2,   0,   2, 128, 
      0,   0,  85, 161,  38,   0, 
      0,   1,   0,   0, 228, 240, 
     45,   0,   4,   2,   0,   0, 
     85, 160,   2,   0,  85, 128, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      1,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      4,   0,  15, 128,   0,   0, 
    228, 128,   0,   8, 228, 160, 
      2,   0,   0,   3,   3,   0, 
     15, 128,   3,   0, 228, 128, 
      4,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   2, 128, 
      2,   0,  85, 128,   2,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   3,   0, 228, 128, 
      2,   0,   0,   3,   2,   0, 
      1, 128,   2,   0,   0, 128, 
      2,   0, 170, 160,  39,   0, 
      0,   0,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 128,   0,   0, 255, 160, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   1,   0,  36, 144, 
      2,   0,  42, 160,   2,   0, 
    128, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   texscale     c1       1
//   tex          s0       1
//

    ps_3_0
    def c2, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    mov r0.zw, c2.x
    mov r1, c2.x
    mov r2.x, -c0.x
    rep i0
      break_lt c0.x, r2.x
      mov r3, r1
      mov r2.y, -c0.y
      rep i0
        break_lt c0.y, r2.y
        mad r0.xy, r2, c1, v2
        texldl r4, r0, s0
        add r3, r3, r4
        add r2.y, r2.y, c2.z
      endrep
      mov r1, r3
      add r2.x, r2.x, c2.z
    endrep
    mul r0, r1, c0.w
    mad r1, v1.xyzx, c2.zzzx, c2.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 35 instruction slots used (2 texture, 33 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FBox2BlurMul[] =
{
      0,   3, 255, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 148,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    141,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    116,   0,   0,   0,   0,   0, 
      0,   0, 132,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0,  96,   0,   0,   0, 
      0,   0,   0,   0, 102, 115, 
    105, 122, 101,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120, 115,  99,  97, 
    108, 101,   0, 112, 115,  95, 
     51,  95,  48,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  57,  46,  51, 
     48,  46,  57,  50,  48,  48, 
     46,  49,  54,  51,  56,  52, 
      0, 171,  81,   0,   0,   5, 
      2,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  48,   0,   0,   5, 
      0,   0,  15, 240, 255,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,   1,   0,   0,   2, 
      0,   0,  12, 128,   2,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,  15, 128,   2,   0, 
      0, 160,   1,   0,   0,   2, 
      2,   0,   1, 128,   0,   0, 
      0, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,   0, 160, 
      2,   0,   0, 128,   1,   0, 
      0,   2,   3,   0,  15, 128, 
      1,   0, 228, 128,   1,   0, 
      0,   2,   2,   0,   2, 128, 
      0,   0,  85, 161,  38,   0, 
      0,   1,   0,   0, 228, 240, 
     45,   0,   4,   2,   0,   0, 
     85, 160,   2,   0,  85, 128, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      1,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      4,   0,  15, 128,   0,   0, 
    228, 128,   0,   8, 228, 160, 
      2,   0,   0,   3,   3,   0, 
     15, 128,   3,   0, 228, 128, 
      4,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   2, 128, 
      2,   0,  85, 128,   2,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   1,   0, 
     15, 128,   3,   0, 228, 128, 
      2,   0,   0,   3,   2,   0, 
      1, 128,   2,   0,   0, 128, 
      2,   0, 170, 160,  39,   0, 
      0,   0,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 128,   0,   0, 255, 160, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   1,   0,  36, 144, 
      2,   0,  42, 160,   2,   0, 
    128, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c5, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c5.x
    mov r1.x, c5.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c4, v2
        texldl r4, r0, s1
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c5.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c5.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mul r0.x, r0.x, c2.w
    mul r1.xy, c3, v2
    mov r1.zw, c5.x
    texldl r1, r1, s0
    add r0.y, -r1.w, c5.z
    mul r2, r0.x, c2
    mad r0, r2, r0.y, r1
    mad r1, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 44 instruction slots used (4 texture, 40 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColorOuterBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     84,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  24,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     17,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 199,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 206,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0, 216,   0, 
      0,   0,   0,   0,   0,   0, 
    232,   0,   0,   0,   2,   0, 
      3,   0,   1,   0,  14,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 244,   0,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      6,   0, 248,   0,   0,   0, 
      0,   0,   0,   0,   8,   1, 
      0,   0,   2,   0,   4,   0, 
      1,   0,  18,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115,  99, 111, 108, 111, 
    114,   0, 115, 114,  99, 116, 
    101, 120,   0, 171, 171, 171, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 115, 114, 
     99, 116, 101, 120, 115,  99, 
     97, 108, 101,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120, 115,  99,  97, 
    108, 101,   0, 112, 115,  95, 
     51,  95,  48,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  57,  46,  51, 
     48,  46,  57,  50,  48,  48, 
     46,  49,  54,  51,  56,  52, 
      0, 171,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  48,   0,   0,   5, 
      0,   0,  15, 240, 255,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,   1,   0,   0,   2, 
      0,   0,  12, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   1, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   2, 128,   0,   0, 
      0, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,   0, 160, 
      1,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,  85, 128,   1,   0, 
      0, 160,   1,   0,   0,   2, 
      3,   0,   1, 128,   1,   0, 
      0, 128,   1,   0,   0,   2, 
      3,   0,   2, 128,   0,   0, 
     85, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,  85, 160, 
      3,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   2, 128, 
      3,   0,  85, 128,   1,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   3, 128,   2,   0, 
    228, 128,   4,   0, 228, 160, 
      2,   0, 228, 144,  95,   0, 
      0,   3,   4,   0,  15, 128, 
      0,   0, 228, 128,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      3,   0,   1, 128,   3,   0, 
      0, 128,   4,   0, 255, 128, 
      2,   0,   0,   3,   3,   0, 
      2, 128,   3,   0,  85, 128, 
      5,   0, 170, 160,  39,   0, 
      0,   0,   1,   0,   0,   2, 
      1,   0,   1, 128,   3,   0, 
      0, 128,   2,   0,   0,   3, 
      1,   0,   2, 128,   1,   0, 
     85, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0,   0, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  17, 128,   0,   0, 
      0, 128,   0,   0, 170, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      2,   0, 255, 160,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   5,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      2, 128,   1,   0, 255, 129, 
      5,   0, 170, 160,   5,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0,   0, 128,   2,   0, 
    228, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 128,   0,   0,  85, 128, 
      1,   0, 228, 128,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,  36, 144,   5,   0, 
     42, 160,   5,   0, 128, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   8,  15, 128,   0,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c5, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c5.x
    mov r1.x, c5.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c4, v2
        texldl r4, r0, s1
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c5.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c5.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mul r0.x, r0.x, c2.w
    mul r1.xy, c3, v2
    mov r1.zw, c5.x
    texldl r1, r1, s0
    add r0.y, -r1.w, c5.z
    mul r2, r0.x, c2
    mad r0, r2, r0.y, r1
    mad r1, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 46 instruction slots used (4 texture, 42 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColorOuterBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     84,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  24,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     17,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 199,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 206,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0, 216,   0, 
      0,   0,   0,   0,   0,   0, 
    232,   0,   0,   0,   2,   0, 
      3,   0,   1,   0,  14,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 244,   0,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      6,   0, 248,   0,   0,   0, 
      0,   0,   0,   0,   8,   1, 
      0,   0,   2,   0,   4,   0, 
      1,   0,  18,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115,  99, 111, 108, 111, 
    114,   0, 115, 114,  99, 116, 
    101, 120,   0, 171, 171, 171, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 115, 114, 
     99, 116, 101, 120, 115,  99, 
     97, 108, 101,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120, 115,  99,  97, 
    108, 101,   0, 112, 115,  95, 
     51,  95,  48,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  57,  46,  51, 
     48,  46,  57,  50,  48,  48, 
     46,  49,  54,  51,  56,  52, 
      0, 171,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  48,   0,   0,   5, 
      0,   0,  15, 240, 255,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,   1,   0,   0,   2, 
      0,   0,  12, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   1, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   2, 128,   0,   0, 
      0, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,   0, 160, 
      1,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,  85, 128,   1,   0, 
      0, 160,   1,   0,   0,   2, 
      3,   0,   1, 128,   1,   0, 
      0, 128,   1,   0,   0,   2, 
      3,   0,   2, 128,   0,   0, 
     85, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,  85, 160, 
      3,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   2, 128, 
      3,   0,  85, 128,   1,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   3, 128,   2,   0, 
    228, 128,   4,   0, 228, 160, 
      2,   0, 228, 144,  95,   0, 
      0,   3,   4,   0,  15, 128, 
      0,   0, 228, 128,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      3,   0,   1, 128,   3,   0, 
      0, 128,   4,   0, 255, 128, 
      2,   0,   0,   3,   3,   0, 
      2, 128,   3,   0,  85, 128, 
      5,   0, 170, 160,  39,   0, 
      0,   0,   1,   0,   0,   2, 
      1,   0,   1, 128,   3,   0, 
      0, 128,   2,   0,   0,   3, 
      1,   0,   2, 128,   1,   0, 
     85, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0,   0, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  17, 128,   0,   0, 
      0, 128,   0,   0, 170, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      2,   0, 255, 160,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   5,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      2, 128,   1,   0, 255, 129, 
      5,   0, 170, 160,   5,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0,   0, 128,   2,   0, 
    228, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 128,   0,   0,  85, 128, 
      1,   0, 228, 128,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,  36, 144,   5,   0, 
     42, 160,   5,   0, 128, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c5, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c5.x
    mov r1.x, c5.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c4, v2
        texldl r4, r0, s1
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c5.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c5.z
    endrep
    mul r0.x, r1.x, c0.w
    mul r0.x, r0.x, c0.z
    mul r1.xy, c3, v2
    mov r1.zw, c5.x
    texldl r1, r1, s0
    mad_sat r0.x, r1.w, c0.z, -r0.x
    mul r0.x, r0.x, c2.w
    lrp r2, r0.x, c2, r1
    mul r0, r1.w, r2
    mad r1, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 44 instruction slots used (4 texture, 40 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColorInnerShadow[] =
{
      0,   3, 255, 255, 254, 255, 
     84,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  24,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     17,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 199,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 206,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0, 216,   0, 
      0,   0,   0,   0,   0,   0, 
    232,   0,   0,   0,   2,   0, 
      3,   0,   1,   0,  14,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 244,   0,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      6,   0, 248,   0,   0,   0, 
      0,   0,   0,   0,   8,   1, 
      0,   0,   2,   0,   4,   0, 
      1,   0,  18,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115,  99, 111, 108, 111, 
    114,   0, 115, 114,  99, 116, 
    101, 120,   0, 171, 171, 171, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 115, 114, 
     99, 116, 101, 120, 115,  99, 
     97, 108, 101,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120, 115,  99,  97, 
    108, 101,   0, 112, 115,  95, 
     51,  95,  48,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  57,  46,  51, 
     48,  46,  57,  50,  48,  48, 
     46,  49,  54,  51,  56,  52, 
      0, 171,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  48,   0,   0,   5, 
      0,   0,  15, 240, 255,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,   1,   0,   0,   2, 
      0,   0,  12, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   1, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   2, 128,   0,   0, 
      0, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,   0, 160, 
      1,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,  85, 128,   1,   0, 
      0, 160,   1,   0,   0,   2, 
      3,   0,   1, 128,   1,   0, 
      0, 128,   1,   0,   0,   2, 
      3,   0,   2, 128,   0,   0, 
     85, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,  85, 160, 
      3,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   2, 128, 
      3,   0,  85, 128,   1,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   3, 128,   2,   0, 
    228, 128,   4,   0, 228, 160, 
      2,   0, 228, 144,  95,   0, 
      0,   3,   4,   0,  15, 128, 
      0,   0, 228, 128,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      3,   0,   1, 128,   3,   0, 
      0, 128,   4,   0, 255, 128, 
      2,   0,   0,   3,   3,   0, 
      2, 128,   3,   0,  85, 128, 
      5,   0, 170, 160,  39,   0, 
      0,   0,   1,   0,   0,   2, 
      1,   0,   1, 128,   3,   0, 
      0, 128,   2,   0,   0,   3, 
      1,   0,   2, 128,   1,   0, 
     85, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0,   0, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0, 170, 160, 
      5,   0,   0,   3,   1,   0, 
      3, 128,   3,   0, 228, 160, 
      2,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  12, 128, 
      5,   0,   0, 160,  95,   0, 
      0,   3,   1,   0,  15, 128, 
      1,   0, 228, 128,   0,   8, 
    228, 160,   4,   0,   0,   4, 
      0,   0,  17, 128,   1,   0, 
    255, 128,   0,   0, 170, 160, 
      0,   0,   0, 129,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 128,   2,   0, 
    255, 160,  18,   0,   0,   4, 
      2,   0,  15, 128,   0,   0, 
      0, 128,   2,   0, 228, 160, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      1,   0, 255, 128,   2,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   5,   0,  42, 160, 
      5,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c5, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c5.x
    mov r1.x, c5.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c4, v2
        texldl r4, r0, s1
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c5.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c5.z
    endrep
    mul r0.x, r1.x, c0.w
    mul r0.x, r0.x, c0.z
    mul r1.xy, c3, v2
    mov r1.zw, c5.x
    texldl r1, r1, s0
    mad_sat r0.x, r1.w, c0.z, -r0.x
    mul r0.x, r0.x, c2.w
    lrp r2, r0.x, c2, r1
    mul r0, r1.w, r2
    mad r1, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 46 instruction slots used (4 texture, 42 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColorInnerShadowMul[] =
{
      0,   3, 255, 255, 254, 255, 
     84,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  24,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     17,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 199,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 206,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0, 216,   0, 
      0,   0,   0,   0,   0,   0, 
    232,   0,   0,   0,   2,   0, 
      3,   0,   1,   0,  14,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 244,   0,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      6,   0, 248,   0,   0,   0, 
      0,   0,   0,   0,   8,   1, 
      0,   0,   2,   0,   4,   0, 
      1,   0,  18,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115,  99, 111, 108, 111, 
    114,   0, 115, 114,  99, 116, 
    101, 120,   0, 171, 171, 171, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 115, 114, 
     99, 116, 101, 120, 115,  99, 
     97, 108, 101,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120, 115,  99,  97, 
    108, 101,   0, 112, 115,  95, 
     51,  95,  48,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  57,  46,  51, 
     48,  46,  57,  50,  48,  48, 
     46,  49,  54,  51,  56,  52, 
      0, 171,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  48,   0,   0,   5, 
      0,   0,  15, 240, 255,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,   1,   0,   0,   2, 
      0,   0,  12, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   1, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   2, 128,   0,   0, 
      0, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,   0, 160, 
      1,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,  85, 128,   1,   0, 
      0, 160,   1,   0,   0,   2, 
      3,   0,   1, 128,   1,   0, 
      0, 128,   1,   0,   0,   2, 
      3,   0,   2, 128,   0,   0, 
     85, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,  85, 160, 
      3,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   2, 128, 
      3,   0,  85, 128,   1,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   3, 128,   2,   0, 
    228, 128,   4,   0, 228, 160, 
      2,   0, 228, 144,  95,   0, 
      0,   3,   4,   0,  15, 128, 
      0,   0, 228, 128,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      3,   0,   1, 128,   3,   0, 
      0, 128,   4,   0, 255, 128, 
      2,   0,   0,   3,   3,   0, 
      2, 128,   3,   0,  85, 128, 
      5,   0, 170, 160,  39,   0, 
      0,   0,   1,   0,   0,   2, 
      1,   0,   1, 128,   3,   0, 
      0, 128,   2,   0,   0,   3, 
      1,   0,   2, 128,   1,   0, 
     85, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0,   0, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0, 170, 160, 
      5,   0,   0,   3,   1,   0, 
      3, 128,   3,   0, 228, 160, 
      2,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  12, 128, 
      5,   0,   0, 160,  95,   0, 
      0,   3,   1,   0,  15, 128, 
      1,   0, 228, 128,   0,   8, 
    228, 160,   4,   0,   0,   4, 
      0,   0,  17, 128,   1,   0, 
    255, 128,   0,   0, 170, 160, 
      0,   0,   0, 129,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 128,   2,   0, 
    255, 160,  18,   0,   0,   4, 
      2,   0,  15, 128,   0,   0, 
      0, 128,   2,   0, 228, 160, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      1,   0, 255, 128,   2,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   5,   0,  42, 160, 
      5,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c5, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c5.x
    mov r1.x, c5.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c4, v2
        texldl r4, r0, s1
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c5.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c5.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mul r0.x, r0.x, c2.w
    mul r1.xy, c3, v2
    mov r1.zw, c5.x
    texldl r1, r1, s0
    lrp r2, r0.x, c2, r1
    mad r0, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r2
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 42 instruction slots used (4 texture, 38 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColorFullBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     84,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  24,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     17,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 199,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 206,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0, 216,   0, 
      0,   0,   0,   0,   0,   0, 
    232,   0,   0,   0,   2,   0, 
      3,   0,   1,   0,  14,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 244,   0,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      6,   0, 248,   0,   0,   0, 
      0,   0,   0,   0,   8,   1, 
      0,   0,   2,   0,   4,   0, 
      1,   0,  18,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115,  99, 111, 108, 111, 
    114,   0, 115, 114,  99, 116, 
    101, 120,   0, 171, 171, 171, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 115, 114, 
     99, 116, 101, 120, 115,  99, 
     97, 108, 101,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120, 115,  99,  97, 
    108, 101,   0, 112, 115,  95, 
     51,  95,  48,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  57,  46,  51, 
     48,  46,  57,  50,  48,  48, 
     46,  49,  54,  51,  56,  52, 
      0, 171,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  48,   0,   0,   5, 
      0,   0,  15, 240, 255,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,   1,   0,   0,   2, 
      0,   0,  12, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   1, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   2, 128,   0,   0, 
      0, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,   0, 160, 
      1,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,  85, 128,   1,   0, 
      0, 160,   1,   0,   0,   2, 
      3,   0,   1, 128,   1,   0, 
      0, 128,   1,   0,   0,   2, 
      3,   0,   2, 128,   0,   0, 
     85, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,  85, 160, 
      3,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   2, 128, 
      3,   0,  85, 128,   1,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   3, 128,   2,   0, 
    228, 128,   4,   0, 228, 160, 
      2,   0, 228, 144,  95,   0, 
      0,   3,   4,   0,  15, 128, 
      0,   0, 228, 128,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      3,   0,   1, 128,   3,   0, 
      0, 128,   4,   0, 255, 128, 
      2,   0,   0,   3,   3,   0, 
      2, 128,   3,   0,  85, 128, 
      5,   0, 170, 160,  39,   0, 
      0,   0,   1,   0,   0,   2, 
      1,   0,   1, 128,   3,   0, 
      0, 128,   2,   0,   0,   3, 
      1,   0,   2, 128,   1,   0, 
     85, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0,   0, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  17, 128,   0,   0, 
      0, 128,   0,   0, 170, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      2,   0, 255, 160,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   5,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   0,   8, 228, 160, 
     18,   0,   0,   4,   2,   0, 
     15, 128,   0,   0,   0, 128, 
      2,   0, 228, 160,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      0,   0,  15, 128,   1,   0, 
     36, 144,   5,   0,  42, 160, 
      5,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   2,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c5, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c5.x
    mov r1.x, c5.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c4, v2
        texldl r4, r0, s1
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c5.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c5.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mul r0.x, r0.x, c2.w
    mul r1.xy, c3, v2
    mov r1.zw, c5.x
    texldl r1, r1, s0
    lrp r2, r0.x, c2, r1
    mad r0, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r2
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 44 instruction slots used (4 texture, 40 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColorFullBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     84,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  24,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     17,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 199,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 206,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0, 216,   0, 
      0,   0,   0,   0,   0,   0, 
    232,   0,   0,   0,   2,   0, 
      3,   0,   1,   0,  14,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 244,   0,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      6,   0, 248,   0,   0,   0, 
      0,   0,   0,   0,   8,   1, 
      0,   0,   2,   0,   4,   0, 
      1,   0,  18,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115,  99, 111, 108, 111, 
    114,   0, 115, 114,  99, 116, 
    101, 120,   0, 171, 171, 171, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 115, 114, 
     99, 116, 101, 120, 115,  99, 
     97, 108, 101,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120, 115,  99,  97, 
    108, 101,   0, 112, 115,  95, 
     51,  95,  48,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  57,  46,  51, 
     48,  46,  57,  50,  48,  48, 
     46,  49,  54,  51,  56,  52, 
      0, 171,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  48,   0,   0,   5, 
      0,   0,  15, 240, 255,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,   1,   0,   0,   2, 
      0,   0,  12, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   1, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   2, 128,   0,   0, 
      0, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,   0, 160, 
      1,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,  85, 128,   1,   0, 
      0, 160,   1,   0,   0,   2, 
      3,   0,   1, 128,   1,   0, 
      0, 128,   1,   0,   0,   2, 
      3,   0,   2, 128,   0,   0, 
     85, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,  85, 160, 
      3,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   2, 128, 
      3,   0,  85, 128,   1,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   3, 128,   2,   0, 
    228, 128,   4,   0, 228, 160, 
      2,   0, 228, 144,  95,   0, 
      0,   3,   4,   0,  15, 128, 
      0,   0, 228, 128,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      3,   0,   1, 128,   3,   0, 
      0, 128,   4,   0, 255, 128, 
      2,   0,   0,   3,   3,   0, 
      2, 128,   3,   0,  85, 128, 
      5,   0, 170, 160,  39,   0, 
      0,   0,   1,   0,   0,   2, 
      1,   0,   1, 128,   3,   0, 
      0, 128,   2,   0,   0,   3, 
      1,   0,   2, 128,   1,   0, 
     85, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0,   0, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  17, 128,   0,   0, 
      0, 128,   0,   0, 170, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      2,   0, 255, 160,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   5,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   0,   8, 228, 160, 
     18,   0,   0,   4,   2,   0, 
     15, 128,   0,   0,   0, 128, 
      2,   0, 228, 160,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      0,   0,  15, 128,   1,   0, 
     36, 144,   5,   0,  42, 160, 
      5,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   2,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c5, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c5.x
    mov r1.x, c5.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c4, v2
        texldl r4, r0, s1
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c5.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c5.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mul r0.x, r0.x, c2.w
    mul r1.xy, c3, v2
    mov r1.zw, c5.x
    texldl r1, r1, s0
    add r0.y, -r1.w, c5.z
    mul r1.w, r1.w, c5.w
    mul r2, r0.x, c2
    mov r1.xyz, c5.x
    mad r0, r2, r0.y, r1
    mad r1, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 46 instruction slots used (4 texture, 42 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColorHideBaseOuterBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     84,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  24,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     17,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 199,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 206,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0, 216,   0, 
      0,   0,   0,   0,   0,   0, 
    232,   0,   0,   0,   2,   0, 
      3,   0,   1,   0,  14,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 244,   0,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      6,   0, 248,   0,   0,   0, 
      0,   0,   0,   0,   8,   1, 
      0,   0,   2,   0,   4,   0, 
      1,   0,  18,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115,  99, 111, 108, 111, 
    114,   0, 115, 114,  99, 116, 
    101, 120,   0, 171, 171, 171, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 115, 114, 
     99, 116, 101, 120, 115,  99, 
     97, 108, 101,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120, 115,  99,  97, 
    108, 101,   0, 112, 115,  95, 
     51,  95,  48,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  57,  46,  51, 
     48,  46,  57,  50,  48,  48, 
     46,  49,  54,  51,  56,  52, 
      0, 171,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,  23, 183, 
    209,  56,  48,   0,   0,   5, 
      0,   0,  15, 240, 255,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,   1,   0,   0,   2, 
      0,   0,  12, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   1, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   2, 128,   0,   0, 
      0, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,   0, 160, 
      1,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,  85, 128,   1,   0, 
      0, 160,   1,   0,   0,   2, 
      3,   0,   1, 128,   1,   0, 
      0, 128,   1,   0,   0,   2, 
      3,   0,   2, 128,   0,   0, 
     85, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,  85, 160, 
      3,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   2, 128, 
      3,   0,  85, 128,   1,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   3, 128,   2,   0, 
    228, 128,   4,   0, 228, 160, 
      2,   0, 228, 144,  95,   0, 
      0,   3,   4,   0,  15, 128, 
      0,   0, 228, 128,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      3,   0,   1, 128,   3,   0, 
      0, 128,   4,   0, 255, 128, 
      2,   0,   0,   3,   3,   0, 
      2, 128,   3,   0,  85, 128, 
      5,   0, 170, 160,  39,   0, 
      0,   0,   1,   0,   0,   2, 
      1,   0,   1, 128,   3,   0, 
      0, 128,   2,   0,   0,   3, 
      1,   0,   2, 128,   1,   0, 
     85, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0,   0, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  17, 128,   0,   0, 
      0, 128,   0,   0, 170, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      2,   0, 255, 160,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   5,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      2, 128,   1,   0, 255, 129, 
      5,   0, 170, 160,   5,   0, 
      0,   3,   1,   0,   8, 128, 
      1,   0, 255, 128,   5,   0, 
    255, 160,   5,   0,   0,   3, 
      2,   0,  15, 128,   0,   0, 
      0, 128,   2,   0, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      7, 128,   5,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   0,  85, 128,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   5,   0,  42, 160, 
      5,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c5, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c5.x
    mov r1.x, c5.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c4, v2
        texldl r4, r0, s1
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c5.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c5.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mul r0.x, r0.x, c2.w
    mul r1.xy, c3, v2
    mov r1.zw, c5.x
    texldl r1, r1, s0
    add r0.y, -r1.w, c5.z
    mul r1.w, r1.w, c5.w
    mul r2, r0.x, c2
    mov r1.xyz, c5.x
    mad r0, r2, r0.y, r1
    mad r1, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 48 instruction slots used (4 texture, 44 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColorHideBaseOuterBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     84,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  24,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     17,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 199,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 206,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0, 216,   0, 
      0,   0,   0,   0,   0,   0, 
    232,   0,   0,   0,   2,   0, 
      3,   0,   1,   0,  14,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 244,   0,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      6,   0, 248,   0,   0,   0, 
      0,   0,   0,   0,   8,   1, 
      0,   0,   2,   0,   4,   0, 
      1,   0,  18,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115,  99, 111, 108, 111, 
    114,   0, 115, 114,  99, 116, 
    101, 120,   0, 171, 171, 171, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 115, 114, 
     99, 116, 101, 120, 115,  99, 
     97, 108, 101,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120, 115,  99,  97, 
    108, 101,   0, 112, 115,  95, 
     51,  95,  48,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  57,  46,  51, 
     48,  46,  57,  50,  48,  48, 
     46,  49,  54,  51,  56,  52, 
      0, 171,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,  23, 183, 
    209,  56,  48,   0,   0,   5, 
      0,   0,  15, 240, 255,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,   1,   0,   0,   2, 
      0,   0,  12, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   1, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   2, 128,   0,   0, 
      0, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,   0, 160, 
      1,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,  85, 128,   1,   0, 
      0, 160,   1,   0,   0,   2, 
      3,   0,   1, 128,   1,   0, 
      0, 128,   1,   0,   0,   2, 
      3,   0,   2, 128,   0,   0, 
     85, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,  85, 160, 
      3,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   2, 128, 
      3,   0,  85, 128,   1,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   3, 128,   2,   0, 
    228, 128,   4,   0, 228, 160, 
      2,   0, 228, 144,  95,   0, 
      0,   3,   4,   0,  15, 128, 
      0,   0, 228, 128,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      3,   0,   1, 128,   3,   0, 
      0, 128,   4,   0, 255, 128, 
      2,   0,   0,   3,   3,   0, 
      2, 128,   3,   0,  85, 128, 
      5,   0, 170, 160,  39,   0, 
      0,   0,   1,   0,   0,   2, 
      1,   0,   1, 128,   3,   0, 
      0, 128,   2,   0,   0,   3, 
      1,   0,   2, 128,   1,   0, 
     85, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0,   0, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  17, 128,   0,   0, 
      0, 128,   0,   0, 170, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      2,   0, 255, 160,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   5,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      2, 128,   1,   0, 255, 129, 
      5,   0, 170, 160,   5,   0, 
      0,   3,   1,   0,   8, 128, 
      1,   0, 255, 128,   5,   0, 
    255, 160,   5,   0,   0,   3, 
      2,   0,  15, 128,   0,   0, 
      0, 128,   2,   0, 228, 160, 
      1,   0,   0,   2,   1,   0, 
      7, 128,   5,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   0,  85, 128,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   5,   0,  42, 160, 
      5,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c5, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c5.x
    mov r1.x, c5.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c4, v2
        texldl r4, r0, s1
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c5.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c5.z
    endrep
    mul r0.x, r1.x, c0.w
    mul r0.x, r0.x, c0.z
    mul r1.xy, c3, v2
    mov r1.zw, c5.x
    texldl r1, r1, s0
    mad_sat r0.x, r1.w, c0.z, -r0.x
    mul r0.x, r0.x, c2.w
    mul r2.w, r1.w, c5.w
    mov r2.xyz, c5.x
    add r3, -r2.zzzw, c2
    mad r0, r0.x, r3, r2
    mul r0, r1.w, r0
    mad r1, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 47 instruction slots used (4 texture, 43 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColorHideBaseInnerShadow[] =
{
      0,   3, 255, 255, 254, 255, 
     84,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  24,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     17,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 199,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 206,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0, 216,   0, 
      0,   0,   0,   0,   0,   0, 
    232,   0,   0,   0,   2,   0, 
      3,   0,   1,   0,  14,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 244,   0,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      6,   0, 248,   0,   0,   0, 
      0,   0,   0,   0,   8,   1, 
      0,   0,   2,   0,   4,   0, 
      1,   0,  18,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115,  99, 111, 108, 111, 
    114,   0, 115, 114,  99, 116, 
    101, 120,   0, 171, 171, 171, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 115, 114, 
     99, 116, 101, 120, 115,  99, 
     97, 108, 101,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120, 115,  99,  97, 
    108, 101,   0, 112, 115,  95, 
     51,  95,  48,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  57,  46,  51, 
     48,  46,  57,  50,  48,  48, 
     46,  49,  54,  51,  56,  52, 
      0, 171,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,  23, 183, 
    209,  56,  48,   0,   0,   5, 
      0,   0,  15, 240, 255,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,   1,   0,   0,   2, 
      0,   0,  12, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   1, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   2, 128,   0,   0, 
      0, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,   0, 160, 
      1,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,  85, 128,   1,   0, 
      0, 160,   1,   0,   0,   2, 
      3,   0,   1, 128,   1,   0, 
      0, 128,   1,   0,   0,   2, 
      3,   0,   2, 128,   0,   0, 
     85, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,  85, 160, 
      3,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   2, 128, 
      3,   0,  85, 128,   1,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   3, 128,   2,   0, 
    228, 128,   4,   0, 228, 160, 
      2,   0, 228, 144,  95,   0, 
      0,   3,   4,   0,  15, 128, 
      0,   0, 228, 128,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      3,   0,   1, 128,   3,   0, 
      0, 128,   4,   0, 255, 128, 
      2,   0,   0,   3,   3,   0, 
      2, 128,   3,   0,  85, 128, 
      5,   0, 170, 160,  39,   0, 
      0,   0,   1,   0,   0,   2, 
      1,   0,   1, 128,   3,   0, 
      0, 128,   2,   0,   0,   3, 
      1,   0,   2, 128,   1,   0, 
     85, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0,   0, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0, 170, 160, 
      5,   0,   0,   3,   1,   0, 
      3, 128,   3,   0, 228, 160, 
      2,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  12, 128, 
      5,   0,   0, 160,  95,   0, 
      0,   3,   1,   0,  15, 128, 
      1,   0, 228, 128,   0,   8, 
    228, 160,   4,   0,   0,   4, 
      0,   0,  17, 128,   1,   0, 
    255, 128,   0,   0, 170, 160, 
      0,   0,   0, 129,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 128,   2,   0, 
    255, 160,   5,   0,   0,   3, 
      2,   0,   8, 128,   1,   0, 
    255, 128,   5,   0, 255, 160, 
      1,   0,   0,   2,   2,   0, 
      7, 128,   5,   0,   0, 160, 
      2,   0,   0,   3,   3,   0, 
     15, 128,   2,   0, 234, 129, 
      2,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0,   0, 128,   3,   0, 
    228, 128,   2,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   1,   0, 255, 128, 
      0,   0, 228, 128,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,  36, 144,   5,   0, 
     42, 160,   5,   0, 128, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   8,  15, 128,   0,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c5, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c5.x
    mov r1.x, c5.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c4, v2
        texldl r4, r0, s1
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c5.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c5.z
    endrep
    mul r0.x, r1.x, c0.w
    mul r0.x, r0.x, c0.z
    mul r1.xy, c3, v2
    mov r1.zw, c5.x
    texldl r1, r1, s0
    mad_sat r0.x, r1.w, c0.z, -r0.x
    mul r0.x, r0.x, c2.w
    mul r2.w, r1.w, c5.w
    mov r2.xyz, c5.x
    add r3, -r2.zzzw, c2
    mad r0, r0.x, r3, r2
    mul r0, r1.w, r0
    mad r1, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 49 instruction slots used (4 texture, 45 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColorHideBaseInnerShadowMul[] =
{
      0,   3, 255, 255, 254, 255, 
     84,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  24,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     17,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 199,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 206,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0, 216,   0, 
      0,   0,   0,   0,   0,   0, 
    232,   0,   0,   0,   2,   0, 
      3,   0,   1,   0,  14,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 244,   0,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      6,   0, 248,   0,   0,   0, 
      0,   0,   0,   0,   8,   1, 
      0,   0,   2,   0,   4,   0, 
      1,   0,  18,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115,  99, 111, 108, 111, 
    114,   0, 115, 114,  99, 116, 
    101, 120,   0, 171, 171, 171, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 115, 114, 
     99, 116, 101, 120, 115,  99, 
     97, 108, 101,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120, 115,  99,  97, 
    108, 101,   0, 112, 115,  95, 
     51,  95,  48,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  57,  46,  51, 
     48,  46,  57,  50,  48,  48, 
     46,  49,  54,  51,  56,  52, 
      0, 171,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,  23, 183, 
    209,  56,  48,   0,   0,   5, 
      0,   0,  15, 240, 255,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,   1,   0,   0,   2, 
      0,   0,  12, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   1, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   2, 128,   0,   0, 
      0, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,   0, 160, 
      1,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,  85, 128,   1,   0, 
      0, 160,   1,   0,   0,   2, 
      3,   0,   1, 128,   1,   0, 
      0, 128,   1,   0,   0,   2, 
      3,   0,   2, 128,   0,   0, 
     85, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,  85, 160, 
      3,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   2, 128, 
      3,   0,  85, 128,   1,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   3, 128,   2,   0, 
    228, 128,   4,   0, 228, 160, 
      2,   0, 228, 144,  95,   0, 
      0,   3,   4,   0,  15, 128, 
      0,   0, 228, 128,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      3,   0,   1, 128,   3,   0, 
      0, 128,   4,   0, 255, 128, 
      2,   0,   0,   3,   3,   0, 
      2, 128,   3,   0,  85, 128, 
      5,   0, 170, 160,  39,   0, 
      0,   0,   1,   0,   0,   2, 
      1,   0,   1, 128,   3,   0, 
      0, 128,   2,   0,   0,   3, 
      1,   0,   2, 128,   1,   0, 
     85, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0,   0, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 128,   0,   0, 170, 160, 
      5,   0,   0,   3,   1,   0, 
      3, 128,   3,   0, 228, 160, 
      2,   0, 228, 144,   1,   0, 
      0,   2,   1,   0,  12, 128, 
      5,   0,   0, 160,  95,   0, 
      0,   3,   1,   0,  15, 128, 
      1,   0, 228, 128,   0,   8, 
    228, 160,   4,   0,   0,   4, 
      0,   0,  17, 128,   1,   0, 
    255, 128,   0,   0, 170, 160, 
      0,   0,   0, 129,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 128,   2,   0, 
    255, 160,   5,   0,   0,   3, 
      2,   0,   8, 128,   1,   0, 
    255, 128,   5,   0, 255, 160, 
      1,   0,   0,   2,   2,   0, 
      7, 128,   5,   0,   0, 160, 
      2,   0,   0,   3,   3,   0, 
     15, 128,   2,   0, 234, 129, 
      2,   0, 228, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0,   0, 128,   3,   0, 
    228, 128,   2,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   1,   0, 255, 128, 
      0,   0, 228, 128,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,  36, 144,   5,   0, 
     42, 160,   5,   0, 128, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c5, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c5.x
    mov r1.x, c5.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c4, v2
        texldl r4, r0, s1
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c5.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c5.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mul r0.x, r0.x, c2.w
    mul r1.xy, c3, v2
    mov r1.zw, c5.x
    texldl r1, r1, s0
    mul r1.w, r1.w, c5.w
    mov r1.xyz, c5.x
    lrp r2, r0.x, c2, r1
    mad r0, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r2
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 44 instruction slots used (4 texture, 40 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColorHideBaseFullBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     84,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  24,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     17,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 199,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 206,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0, 216,   0, 
      0,   0,   0,   0,   0,   0, 
    232,   0,   0,   0,   2,   0, 
      3,   0,   1,   0,  14,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 244,   0,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      6,   0, 248,   0,   0,   0, 
      0,   0,   0,   0,   8,   1, 
      0,   0,   2,   0,   4,   0, 
      1,   0,  18,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115,  99, 111, 108, 111, 
    114,   0, 115, 114,  99, 116, 
    101, 120,   0, 171, 171, 171, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 115, 114, 
     99, 116, 101, 120, 115,  99, 
     97, 108, 101,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120, 115,  99,  97, 
    108, 101,   0, 112, 115,  95, 
     51,  95,  48,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  57,  46,  51, 
     48,  46,  57,  50,  48,  48, 
     46,  49,  54,  51,  56,  52, 
      0, 171,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,  23, 183, 
    209,  56,  48,   0,   0,   5, 
      0,   0,  15, 240, 255,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,   1,   0,   0,   2, 
      0,   0,  12, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   1, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   2, 128,   0,   0, 
      0, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,   0, 160, 
      1,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,  85, 128,   1,   0, 
      0, 160,   1,   0,   0,   2, 
      3,   0,   1, 128,   1,   0, 
      0, 128,   1,   0,   0,   2, 
      3,   0,   2, 128,   0,   0, 
     85, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,  85, 160, 
      3,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   2, 128, 
      3,   0,  85, 128,   1,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   3, 128,   2,   0, 
    228, 128,   4,   0, 228, 160, 
      2,   0, 228, 144,  95,   0, 
      0,   3,   4,   0,  15, 128, 
      0,   0, 228, 128,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      3,   0,   1, 128,   3,   0, 
      0, 128,   4,   0, 255, 128, 
      2,   0,   0,   3,   3,   0, 
      2, 128,   3,   0,  85, 128, 
      5,   0, 170, 160,  39,   0, 
      0,   0,   1,   0,   0,   2, 
      1,   0,   1, 128,   3,   0, 
      0, 128,   2,   0,   0,   3, 
      1,   0,   2, 128,   1,   0, 
     85, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0,   0, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  17, 128,   0,   0, 
      0, 128,   0,   0, 170, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      2,   0, 255, 160,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   5,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   0,   8, 228, 160, 
      5,   0,   0,   3,   1,   0, 
      8, 128,   1,   0, 255, 128, 
      5,   0, 255, 160,   1,   0, 
      0,   2,   1,   0,   7, 128, 
      5,   0,   0, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 128,   2,   0, 
    228, 160,   1,   0, 228, 128, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   1,   0,  36, 144, 
      5,   0,  42, 160,   5,   0, 
    128, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   2,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   srctexscale  c3       1
//   texscale     c4       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c5, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c5.x
    mov r1.x, c5.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c4, v2
        texldl r4, r0, s1
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c5.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c5.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mul r0.x, r0.x, c2.w
    mul r1.xy, c3, v2
    mov r1.zw, c5.x
    texldl r1, r1, s0
    mul r1.w, r1.w, c5.w
    mov r1.xyz, c5.x
    lrp r2, r0.x, c2, r1
    mad r0, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r2
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 46 instruction slots used (4 texture, 42 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColorHideBaseFullBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     84,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  24,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     17,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 199,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 206,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0, 216,   0, 
      0,   0,   0,   0,   0,   0, 
    232,   0,   0,   0,   2,   0, 
      3,   0,   1,   0,  14,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0, 244,   0,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      6,   0, 248,   0,   0,   0, 
      0,   0,   0,   0,   8,   1, 
      0,   0,   2,   0,   4,   0, 
      1,   0,  18,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115,  99, 111, 108, 111, 
    114,   0, 115, 114,  99, 116, 
    101, 120,   0, 171, 171, 171, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 115, 114, 
     99, 116, 101, 120, 115,  99, 
     97, 108, 101,   0, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120, 115,  99,  97, 
    108, 101,   0, 112, 115,  95, 
     51,  95,  48,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  57,  46,  51, 
     48,  46,  57,  50,  48,  48, 
     46,  49,  54,  51,  56,  52, 
      0, 171,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,  23, 183, 
    209,  56,  48,   0,   0,   5, 
      0,   0,  15, 240, 255,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     15, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,   1,   0,   0,   2, 
      0,   0,  12, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   1, 128,   5,   0, 
      0, 160,   1,   0,   0,   2, 
      1,   0,   2, 128,   0,   0, 
      0, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,   0, 160, 
      1,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0,  85, 128,   1,   0, 
      0, 160,   1,   0,   0,   2, 
      3,   0,   1, 128,   1,   0, 
      0, 128,   1,   0,   0,   2, 
      3,   0,   2, 128,   0,   0, 
     85, 161,  38,   0,   0,   1, 
      0,   0, 228, 240,  45,   0, 
      4,   2,   0,   0,  85, 160, 
      3,   0,  85, 128,   2,   0, 
      0,   3,   2,   0,   2, 128, 
      3,   0,  85, 128,   1,   0, 
     85, 160,   4,   0,   0,   4, 
      0,   0,   3, 128,   2,   0, 
    228, 128,   4,   0, 228, 160, 
      2,   0, 228, 144,  95,   0, 
      0,   3,   4,   0,  15, 128, 
      0,   0, 228, 128,   1,   8, 
    228, 160,   2,   0,   0,   3, 
      3,   0,   1, 128,   3,   0, 
      0, 128,   4,   0, 255, 128, 
      2,   0,   0,   3,   3,   0, 
      2, 128,   3,   0,  85, 128, 
      5,   0, 170, 160,  39,   0, 
      0,   0,   1,   0,   0,   2, 
      1,   0,   1, 128,   3,   0, 
      0, 128,   2,   0,   0,   3, 
      1,   0,   2, 128,   1,   0, 
     85, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0,   0, 128,   0,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  17, 128,   0,   0, 
      0, 128,   0,   0, 170, 160, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      2,   0, 255, 160,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   5,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   0,   8, 228, 160, 
      5,   0,   0,   3,   1,   0, 
      8, 128,   1,   0, 255, 128, 
      5,   0, 255, 160,   1,   0, 
      0,   2,   1,   0,   7, 128, 
      5,   0,   0, 160,  18,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,   0, 128,   2,   0, 
    228, 160,   1,   0, 228, 128, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   1,   0,  36, 144, 
      5,   0,  42, 160,   5,   0, 
    128, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   2,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.x, c4.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c3, v2
        texldl r4, r0, s2
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c4.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c4.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mov r0.y, c4.x
    texld r0, r0, s0
    mov_sat r0.w, r0.w
    mad r1, r0.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0.w, r1
    mul r1.xy, c2, v2
    mov r1.zw, c4.x
    texldl r1, r1, s1
    add r2.x, -r1.w, c4.z
    mad r0, r0, r2.x, r1
    mad r1, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 47 instruction slots used (5 texture, 42 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGradOuterBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   1,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
     85, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      1,   0,   0,   2,   3,   0, 
      2, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   3,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   2, 128,   3,   0, 
     85, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      4,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   3,   0, 
      1, 128,   3,   0,   0, 128, 
      4,   0, 255, 128,   2,   0, 
      0,   3,   3,   0,   2, 128, 
      3,   0,  85, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   3,   0,   0, 128, 
      2,   0,   0,   3,   1,   0, 
      2, 128,   1,   0,  85, 128, 
      4,   0, 170, 160,  39,   0, 
      0,   0,   5,   0,   0,   3, 
      0,   0,   1, 128,   1,   0, 
      0, 128,   0,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
     17, 128,   0,   0,   0, 128, 
      0,   0, 170, 160,   1,   0, 
      0,   2,   0,   0,   2, 128, 
      4,   0,   0, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
     36, 128,   4,   0,  42, 160, 
      4,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 255, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      1,   0,   3, 128,   2,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   4,   0,   0, 160, 
     95,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0, 255, 129,   4,   0, 
    170, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   2,   0,   0, 128, 
      1,   0, 228, 128,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,  36, 144,   4,   0, 
     42, 160,   4,   0, 128, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   8,  15, 128,   0,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.x, c4.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c3, v2
        texldl r4, r0, s2
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c4.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c4.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mov r0.y, c4.x
    texld r0, r0, s0
    mov_sat r0.w, r0.w
    mad r1, r0.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0.w, r1
    mul r1.xy, c2, v2
    mov r1.zw, c4.x
    texldl r1, r1, s1
    add r2.x, -r1.w, c4.z
    mad r0, r0, r2.x, r1
    mad r1, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 49 instruction slots used (5 texture, 44 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGradOuterBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   1,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
     85, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      1,   0,   0,   2,   3,   0, 
      2, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   3,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   2, 128,   3,   0, 
     85, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      4,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   3,   0, 
      1, 128,   3,   0,   0, 128, 
      4,   0, 255, 128,   2,   0, 
      0,   3,   3,   0,   2, 128, 
      3,   0,  85, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   3,   0,   0, 128, 
      2,   0,   0,   3,   1,   0, 
      2, 128,   1,   0,  85, 128, 
      4,   0, 170, 160,  39,   0, 
      0,   0,   5,   0,   0,   3, 
      0,   0,   1, 128,   1,   0, 
      0, 128,   0,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
     17, 128,   0,   0,   0, 128, 
      0,   0, 170, 160,   1,   0, 
      0,   2,   0,   0,   2, 128, 
      4,   0,   0, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
     36, 128,   4,   0,  42, 160, 
      4,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 255, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      1,   0,   3, 128,   2,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   4,   0,   0, 160, 
     95,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0, 255, 129,   4,   0, 
    170, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   2,   0,   0, 128, 
      1,   0, 228, 128,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,  36, 144,   4,   0, 
     42, 160,   4,   0, 128, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.x, c4.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c3, v2
        texldl r4, r0, s2
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c4.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c4.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mov r0.y, c4.x
    texld r0, r0, s0
    mov_sat r0.w, r0.w
    mul r1.xy, c2, v2
    mov r1.zw, c4.x
    texldl r1, r1, s1
    mad r2, r0.xyzx, c4.zzzx, c4.xxxz
    lrp r3, r0.w, r2, r1
    mul r0, r1.w, r3
    mad r1, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 46 instruction slots used (5 texture, 41 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGradInnerBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   1,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
     85, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      1,   0,   0,   2,   3,   0, 
      2, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   3,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   2, 128,   3,   0, 
     85, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      4,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   3,   0, 
      1, 128,   3,   0,   0, 128, 
      4,   0, 255, 128,   2,   0, 
      0,   3,   3,   0,   2, 128, 
      3,   0,  85, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   3,   0,   0, 128, 
      2,   0,   0,   3,   1,   0, 
      2, 128,   1,   0,  85, 128, 
      4,   0, 170, 160,  39,   0, 
      0,   0,   5,   0,   0,   3, 
      0,   0,   1, 128,   1,   0, 
      0, 128,   0,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
     17, 128,   0,   0,   0, 128, 
      0,   0, 170, 160,   1,   0, 
      0,   2,   0,   0,   2, 128, 
      4,   0,   0, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   5,   0,   0,   3, 
      1,   0,   3, 128,   2,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   4,   0,   0, 160, 
     95,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
      1,   8, 228, 160,   4,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,  36, 128,   4,   0, 
     42, 160,   4,   0, 128, 160, 
     18,   0,   0,   4,   3,   0, 
     15, 128,   0,   0, 255, 128, 
      2,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    255, 128,   3,   0, 228, 128, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   1,   0,  36, 144, 
      4,   0,  42, 160,   4,   0, 
    128, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.x, c4.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c3, v2
        texldl r4, r0, s2
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c4.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c4.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mov r0.y, c4.x
    texld r0, r0, s0
    mov_sat r0.w, r0.w
    mul r1.xy, c2, v2
    mov r1.zw, c4.x
    texldl r1, r1, s1
    mad r2, r0.xyzx, c4.zzzx, c4.xxxz
    lrp r3, r0.w, r2, r1
    mul r0, r1.w, r3
    mad r1, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 48 instruction slots used (5 texture, 43 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGradInnerBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   1,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
     85, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      1,   0,   0,   2,   3,   0, 
      2, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   3,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   2, 128,   3,   0, 
     85, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      4,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   3,   0, 
      1, 128,   3,   0,   0, 128, 
      4,   0, 255, 128,   2,   0, 
      0,   3,   3,   0,   2, 128, 
      3,   0,  85, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   3,   0,   0, 128, 
      2,   0,   0,   3,   1,   0, 
      2, 128,   1,   0,  85, 128, 
      4,   0, 170, 160,  39,   0, 
      0,   0,   5,   0,   0,   3, 
      0,   0,   1, 128,   1,   0, 
      0, 128,   0,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
     17, 128,   0,   0,   0, 128, 
      0,   0, 170, 160,   1,   0, 
      0,   2,   0,   0,   2, 128, 
      4,   0,   0, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   5,   0,   0,   3, 
      1,   0,   3, 128,   2,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   4,   0,   0, 160, 
     95,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
      1,   8, 228, 160,   4,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,  36, 128,   4,   0, 
     42, 160,   4,   0, 128, 160, 
     18,   0,   0,   4,   3,   0, 
     15, 128,   0,   0, 255, 128, 
      2,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    255, 128,   3,   0, 228, 128, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   1,   0,  36, 144, 
      4,   0,  42, 160,   4,   0, 
    128, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.x, c4.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c3, v2
        texldl r4, r0, s2
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c4.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c4.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mov r0.y, c4.x
    texld r0, r0, s0
    mov_sat r0.w, r0.w
    mul r1.xy, c2, v2
    mov r1.zw, c4.x
    texldl r1, r1, s1
    mad r2, r0.xyzx, c4.zzzx, c4.xxxz
    lrp r3, r0.w, r2, r1
    mad r0, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r3
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 45 instruction slots used (5 texture, 40 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGradFullBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   1,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
     85, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      1,   0,   0,   2,   3,   0, 
      2, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   3,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   2, 128,   3,   0, 
     85, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      4,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   3,   0, 
      1, 128,   3,   0,   0, 128, 
      4,   0, 255, 128,   2,   0, 
      0,   3,   3,   0,   2, 128, 
      3,   0,  85, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   3,   0,   0, 128, 
      2,   0,   0,   3,   1,   0, 
      2, 128,   1,   0,  85, 128, 
      4,   0, 170, 160,  39,   0, 
      0,   0,   5,   0,   0,   3, 
      0,   0,   1, 128,   1,   0, 
      0, 128,   0,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
     17, 128,   0,   0,   0, 128, 
      0,   0, 170, 160,   1,   0, 
      0,   2,   0,   0,   2, 128, 
      4,   0,   0, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   5,   0,   0,   3, 
      1,   0,   3, 128,   2,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   4,   0,   0, 160, 
     95,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
      1,   8, 228, 160,   4,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,  36, 128,   4,   0, 
     42, 160,   4,   0, 128, 160, 
     18,   0,   0,   4,   3,   0, 
     15, 128,   0,   0, 255, 128, 
      2,   0, 228, 128,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      0,   0,  15, 128,   1,   0, 
     36, 144,   4,   0,  42, 160, 
      4,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   3,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.x, c4.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c3, v2
        texldl r4, r0, s2
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c4.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c4.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mov r0.y, c4.x
    texld r0, r0, s0
    mov_sat r0.w, r0.w
    mul r1.xy, c2, v2
    mov r1.zw, c4.x
    texldl r1, r1, s1
    mad r2, r0.xyzx, c4.zzzx, c4.xxxz
    lrp r3, r0.w, r2, r1
    mad r0, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r3
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 47 instruction slots used (5 texture, 42 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGradFullBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   1,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
     85, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      1,   0,   0,   2,   3,   0, 
      2, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   3,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   2, 128,   3,   0, 
     85, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      4,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   3,   0, 
      1, 128,   3,   0,   0, 128, 
      4,   0, 255, 128,   2,   0, 
      0,   3,   3,   0,   2, 128, 
      3,   0,  85, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   3,   0,   0, 128, 
      2,   0,   0,   3,   1,   0, 
      2, 128,   1,   0,  85, 128, 
      4,   0, 170, 160,  39,   0, 
      0,   0,   5,   0,   0,   3, 
      0,   0,   1, 128,   1,   0, 
      0, 128,   0,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
     17, 128,   0,   0,   0, 128, 
      0,   0, 170, 160,   1,   0, 
      0,   2,   0,   0,   2, 128, 
      4,   0,   0, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   5,   0,   0,   3, 
      1,   0,   3, 128,   2,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   4,   0,   0, 160, 
     95,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
      1,   8, 228, 160,   4,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0,  36, 128,   4,   0, 
     42, 160,   4,   0, 128, 160, 
     18,   0,   0,   4,   3,   0, 
     15, 128,   0,   0, 255, 128, 
      2,   0, 228, 128,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      0,   0,  15, 128,   1,   0, 
     36, 144,   4,   0,  42, 160, 
      4,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   3,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.x, c4.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c3, v2
        texldl r4, r0, s2
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c4.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c4.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mov r0.y, c4.x
    mul r1.xy, c2, v2
    mov r1.zw, c4.x
    texldl r1, r1, s1
    add r0.z, -r1.w, c4.z
    texld r2, r0, s0
    mov_sat r0.x, r2.w
    mad r2, r2.xyzx, c4.zzzx, c4.xxxz
    mul r2, r0.x, r2
    mul r1.w, r1.w, c4.w
    mov r1.xyz, c4.x
    mad r0, r2, r0.z, r1
    mad r1, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 49 instruction slots used (5 texture, 44 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGradHideBaseOuterBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  23, 183, 209,  56, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   1,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
     85, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      1,   0,   0,   2,   3,   0, 
      2, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   3,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   2, 128,   3,   0, 
     85, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      4,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   3,   0, 
      1, 128,   3,   0,   0, 128, 
      4,   0, 255, 128,   2,   0, 
      0,   3,   3,   0,   2, 128, 
      3,   0,  85, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   3,   0,   0, 128, 
      2,   0,   0,   3,   1,   0, 
      2, 128,   1,   0,  85, 128, 
      4,   0, 170, 160,  39,   0, 
      0,   0,   5,   0,   0,   3, 
      0,   0,   1, 128,   1,   0, 
      0, 128,   0,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
     17, 128,   0,   0,   0, 128, 
      0,   0, 170, 160,   1,   0, 
      0,   2,   0,   0,   2, 128, 
      4,   0,   0, 160,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      2,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   4,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      4, 128,   1,   0, 255, 129, 
      4,   0, 170, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  17, 128,   2,   0, 
    255, 128,   4,   0,   0,   4, 
      2,   0,  15, 128,   2,   0, 
     36, 128,   4,   0,  42, 160, 
      4,   0, 128, 160,   5,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0,   0, 128,   2,   0, 
    228, 128,   5,   0,   0,   3, 
      1,   0,   8, 128,   1,   0, 
    255, 128,   4,   0, 255, 160, 
      1,   0,   0,   2,   1,   0, 
      7, 128,   4,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   0, 170, 128,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   4,   0,  42, 160, 
      4,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.x, c4.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c3, v2
        texldl r4, r0, s2
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c4.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c4.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mov r0.y, c4.x
    mul r1.xy, c2, v2
    mov r1.zw, c4.x
    texldl r1, r1, s1
    add r0.z, -r1.w, c4.z
    texld r2, r0, s0
    mov_sat r0.x, r2.w
    mad r2, r2.xyzx, c4.zzzx, c4.xxxz
    mul r2, r0.x, r2
    mul r1.w, r1.w, c4.w
    mov r1.xyz, c4.x
    mad r0, r2, r0.z, r1
    mad r1, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 51 instruction slots used (5 texture, 46 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGradHideBaseOuterBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  23, 183, 209,  56, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   1,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
     85, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      1,   0,   0,   2,   3,   0, 
      2, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   3,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   2, 128,   3,   0, 
     85, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      4,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   3,   0, 
      1, 128,   3,   0,   0, 128, 
      4,   0, 255, 128,   2,   0, 
      0,   3,   3,   0,   2, 128, 
      3,   0,  85, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   3,   0,   0, 128, 
      2,   0,   0,   3,   1,   0, 
      2, 128,   1,   0,  85, 128, 
      4,   0, 170, 160,  39,   0, 
      0,   0,   5,   0,   0,   3, 
      0,   0,   1, 128,   1,   0, 
      0, 128,   0,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
     17, 128,   0,   0,   0, 128, 
      0,   0, 170, 160,   1,   0, 
      0,   2,   0,   0,   2, 128, 
      4,   0,   0, 160,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      2,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   4,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
      4, 128,   1,   0, 255, 129, 
      4,   0, 170, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  17, 128,   2,   0, 
    255, 128,   4,   0,   0,   4, 
      2,   0,  15, 128,   2,   0, 
     36, 128,   4,   0,  42, 160, 
      4,   0, 128, 160,   5,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0,   0, 128,   2,   0, 
    228, 128,   5,   0,   0,   3, 
      1,   0,   8, 128,   1,   0, 
    255, 128,   4,   0, 255, 160, 
      1,   0,   0,   2,   1,   0, 
      7, 128,   4,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   0, 170, 128,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   4,   0,  42, 160, 
      4,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.x, c4.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c3, v2
        texldl r4, r0, s2
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c4.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c4.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mov r0.y, c4.x
    mul r1.xy, c2, v2
    mov r1.zw, c4.x
    texldl r1, r1, s1
    texld r0, r0, s0
    mov_sat r0.w, r0.w
    mul r2.w, r1.w, c4.w
    mad r3, r0.xyzx, c4.zzzx, c4.xxxz
    mov r2.xyz, c4.x
    lrp r4, r0.w, r3, r2
    mul r0, r1.w, r4
    mad r1, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 48 instruction slots used (5 texture, 43 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGradHideBaseInnerBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  23, 183, 209,  56, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   1,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
     85, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      1,   0,   0,   2,   3,   0, 
      2, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   3,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   2, 128,   3,   0, 
     85, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      4,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   3,   0, 
      1, 128,   3,   0,   0, 128, 
      4,   0, 255, 128,   2,   0, 
      0,   3,   3,   0,   2, 128, 
      3,   0,  85, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   3,   0,   0, 128, 
      2,   0,   0,   3,   1,   0, 
      2, 128,   1,   0,  85, 128, 
      4,   0, 170, 160,  39,   0, 
      0,   0,   5,   0,   0,   3, 
      0,   0,   1, 128,   1,   0, 
      0, 128,   0,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
     17, 128,   0,   0,   0, 128, 
      0,   0, 170, 160,   1,   0, 
      0,   2,   0,   0,   2, 128, 
      4,   0,   0, 160,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      2,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   4,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
     66,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   8, 228, 160,   1,   0, 
      0,   2,   0,   0,  24, 128, 
      0,   0, 255, 128,   5,   0, 
      0,   3,   2,   0,   8, 128, 
      1,   0, 255, 128,   4,   0, 
    255, 160,   4,   0,   0,   4, 
      3,   0,  15, 128,   0,   0, 
     36, 128,   4,   0,  42, 160, 
      4,   0, 128, 160,   1,   0, 
      0,   2,   2,   0,   7, 128, 
      4,   0,   0, 160,  18,   0, 
      0,   4,   4,   0,  15, 128, 
      0,   0, 255, 128,   3,   0, 
    228, 128,   2,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   1,   0, 255, 128, 
      4,   0, 228, 128,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,  36, 144,   4,   0, 
     42, 160,   4,   0, 128, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   8,  15, 128,   0,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.x, c4.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c3, v2
        texldl r4, r0, s2
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c4.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c4.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mov r0.y, c4.x
    mul r1.xy, c2, v2
    mov r1.zw, c4.x
    texldl r1, r1, s1
    texld r0, r0, s0
    mov_sat r0.w, r0.w
    mul r2.w, r1.w, c4.w
    mad r3, r0.xyzx, c4.zzzx, c4.xxxz
    mov r2.xyz, c4.x
    lrp r4, r0.w, r3, r2
    mul r0, r1.w, r4
    mad r1, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 50 instruction slots used (5 texture, 45 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGradHideBaseInnerBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  23, 183, 209,  56, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   1,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
     85, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      1,   0,   0,   2,   3,   0, 
      2, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   3,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   2, 128,   3,   0, 
     85, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      4,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   3,   0, 
      1, 128,   3,   0,   0, 128, 
      4,   0, 255, 128,   2,   0, 
      0,   3,   3,   0,   2, 128, 
      3,   0,  85, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   3,   0,   0, 128, 
      2,   0,   0,   3,   1,   0, 
      2, 128,   1,   0,  85, 128, 
      4,   0, 170, 160,  39,   0, 
      0,   0,   5,   0,   0,   3, 
      0,   0,   1, 128,   1,   0, 
      0, 128,   0,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
     17, 128,   0,   0,   0, 128, 
      0,   0, 170, 160,   1,   0, 
      0,   2,   0,   0,   2, 128, 
      4,   0,   0, 160,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      2,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   4,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
     66,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      0,   8, 228, 160,   1,   0, 
      0,   2,   0,   0,  24, 128, 
      0,   0, 255, 128,   5,   0, 
      0,   3,   2,   0,   8, 128, 
      1,   0, 255, 128,   4,   0, 
    255, 160,   4,   0,   0,   4, 
      3,   0,  15, 128,   0,   0, 
     36, 128,   4,   0,  42, 160, 
      4,   0, 128, 160,   1,   0, 
      0,   2,   2,   0,   7, 128, 
      4,   0,   0, 160,  18,   0, 
      0,   4,   4,   0,  15, 128, 
      0,   0, 255, 128,   3,   0, 
    228, 128,   2,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   1,   0, 255, 128, 
      4,   0, 228, 128,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,  36, 144,   4,   0, 
     42, 160,   4,   0, 128, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.x, c4.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c3, v2
        texldl r4, r0, s2
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c4.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c4.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mov r0.y, c4.x
    mul r1.xy, c2, v2
    mov r1.zw, c4.x
    texldl r1, r1, s1
    mul r1.w, r1.w, c4.w
    texld r0, r0, s0
    mov_sat r0.w, r0.w
    mad r2, r0.xyzx, c4.zzzx, c4.xxxz
    mov r1.xyz, c4.x
    lrp r3, r0.w, r2, r1
    mad r0, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r3
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 47 instruction slots used (5 texture, 42 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGradHideBaseFullBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  23, 183, 209,  56, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   1,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
     85, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      1,   0,   0,   2,   3,   0, 
      2, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   3,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   2, 128,   3,   0, 
     85, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      4,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   3,   0, 
      1, 128,   3,   0,   0, 128, 
      4,   0, 255, 128,   2,   0, 
      0,   3,   3,   0,   2, 128, 
      3,   0,  85, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   3,   0,   0, 128, 
      2,   0,   0,   3,   1,   0, 
      2, 128,   1,   0,  85, 128, 
      4,   0, 170, 160,  39,   0, 
      0,   0,   5,   0,   0,   3, 
      0,   0,   1, 128,   1,   0, 
      0, 128,   0,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
     17, 128,   0,   0,   0, 128, 
      0,   0, 170, 160,   1,   0, 
      0,   2,   0,   0,   2, 128, 
      4,   0,   0, 160,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      2,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   4,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      5,   0,   0,   3,   1,   0, 
      8, 128,   1,   0, 255, 128, 
      4,   0, 255, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      2,   0,  15, 128,   0,   0, 
     36, 128,   4,   0,  42, 160, 
      4,   0, 128, 160,   1,   0, 
      0,   2,   1,   0,   7, 128, 
      4,   0,   0, 160,  18,   0, 
      0,   4,   3,   0,  15, 128, 
      0,   0, 255, 128,   2,   0, 
    228, 128,   1,   0, 228, 128, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   1,   0,  36, 144, 
      4,   0,  42, 160,   4,   0, 
    128, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   3,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.x, c4.x
    mov r1.y, -c0.x
    rep i0
      break_lt c0.x, r1.y
      add r2.x, r1.y, c1.x
      mov r3.x, r1.x
      mov r3.y, -c0.y
      rep i0
        break_lt c0.y, r3.y
        add r2.y, r3.y, c1.y
        mad r0.xy, r2, c3, v2
        texldl r4, r0, s2
        add r3.x, r3.x, r4.w
        add r3.y, r3.y, c4.z
      endrep
      mov r1.x, r3.x
      add r1.y, r1.y, c4.z
    endrep
    mul r0.x, r1.x, c0.w
    mul_sat r0.x, r0.x, c0.z
    mov r0.y, c4.x
    mul r1.xy, c2, v2
    mov r1.zw, c4.x
    texldl r1, r1, s1
    mul r1.w, r1.w, c4.w
    texld r0, r0, s0
    mov_sat r0.w, r0.w
    mad r2, r0.xyzx, c4.zzzx, c4.xxxz
    mov r1.xyz, c4.x
    lrp r3, r0.w, r2, r1
    mad r0, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r3
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 49 instruction slots used (5 texture, 44 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGradHideBaseFullBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  23, 183, 209,  56, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   1,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
     85, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   3,   0, 
      1, 128,   1,   0,   0, 128, 
      1,   0,   0,   2,   3,   0, 
      2, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   3,   0, 
     85, 128,   2,   0,   0,   3, 
      2,   0,   2, 128,   3,   0, 
     85, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      4,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   3,   0, 
      1, 128,   3,   0,   0, 128, 
      4,   0, 255, 128,   2,   0, 
      0,   3,   3,   0,   2, 128, 
      3,   0,  85, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   1,   0, 
      1, 128,   3,   0,   0, 128, 
      2,   0,   0,   3,   1,   0, 
      2, 128,   1,   0,  85, 128, 
      4,   0, 170, 160,  39,   0, 
      0,   0,   5,   0,   0,   3, 
      0,   0,   1, 128,   1,   0, 
      0, 128,   0,   0, 255, 160, 
      5,   0,   0,   3,   0,   0, 
     17, 128,   0,   0,   0, 128, 
      0,   0, 170, 160,   1,   0, 
      0,   2,   0,   0,   2, 128, 
      4,   0,   0, 160,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      2,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   4,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      5,   0,   0,   3,   1,   0, 
      8, 128,   1,   0, 255, 128, 
      4,   0, 255, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      2,   0,  15, 128,   0,   0, 
     36, 128,   4,   0,  42, 160, 
      4,   0, 128, 160,   1,   0, 
      0,   2,   1,   0,   7, 128, 
      4,   0,   0, 160,  18,   0, 
      0,   4,   3,   0,  15, 128, 
      0,   0, 255, 128,   2,   0, 
    228, 128,   1,   0, 228, 128, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   1,   0,  36, 144, 
      4,   0,  42, 160,   4,   0, 
    128, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   3,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c6, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c6.x
    mov r1.zw, c6.x
    mov r2.xy, c6.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2.yxzw
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c5, v2
        texldl r5, r1, s1
        mad r0.xy, r3, c5, v2
        texldl r6, r0, s1
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c6.z
      endrep
      mov r2.xy, r4.yxzw
      add r2.z, r2.z, c6.z
    endrep
    mul r0.xy, r2, c0.w
    mov r0.z, c6.z
    mad r0.xy, r0, -c0.z, r0.z
    add_sat r0.xy, -r0.yxzw, r0
    mov r1.x, c2.w
    mov r1.y, c3.w
    mul r0.xy, r0, r1
    mul r1.xy, c4, v2
    mov r1.zw, c6.x
    texldl r1, r1, s0
    mul r2, r0.y, c3
    mad r0, c2, r0.x, r2
    add r2.x, -r1.w, c6.z
    mad r0, r0, r2.x, r1
    mad r1, v1.xyzx, c6.zzzx, c6.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 54 instruction slots used (6 texture, 48 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColor2OuterBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     91,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  52,   1, 
      0,   0,   0,   3, 255, 255, 
      8,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     45,   1,   0,   0, 188,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    212,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 219,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 196,   0,   0,   0, 
      0,   0,   0,   0, 226,   0, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    234,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    244,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      2,   0,   4,   0,   1,   0, 
     18,   0, 196,   0,   0,   0, 
      0,   0,   0,   0,  16,   1, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0,  20,   1, 
      0,   0,   0,   0,   0,   0, 
     36,   1,   0,   0,   2,   0, 
      5,   0,   1,   0,  22,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 102, 115, 105, 122, 
    101,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 111, 102, 102, 115, 
    101, 116,   0, 115,  99, 111, 
    108, 111, 114,   0, 115,  99, 
    111, 108, 111, 114,  50,   0, 
    115, 114,  99, 116, 101, 120, 
      0, 171, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   6,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 225, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   6,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 225, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   6,   0, 
    170, 160,  39,   0,   0,   0, 
      5,   0,   0,   3,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   0,   0,   4, 128, 
      6,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 228, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
     19, 128,   0,   0, 225, 129, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   1,   0,   1, 128, 
      2,   0, 255, 160,   1,   0, 
      0,   2,   1,   0,   2, 128, 
      3,   0, 255, 160,   5,   0, 
      0,   3,   0,   0,   3, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      1,   0,   3, 128,   4,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   6,   0,   0, 160, 
     95,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
      0,   8, 228, 160,   5,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0,  85, 128,   3,   0, 
    228, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 160,   0,   0,   0, 128, 
      2,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0, 255, 129,   6,   0, 
    170, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   2,   0,   0, 128, 
      1,   0, 228, 128,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,  36, 144,   6,   0, 
     42, 160,   6,   0, 128, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   8,  15, 128,   0,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c6, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c6.x
    mov r1.zw, c6.x
    mov r2.xy, c6.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2.yxzw
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c5, v2
        texldl r5, r1, s1
        mad r0.xy, r3, c5, v2
        texldl r6, r0, s1
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c6.z
      endrep
      mov r2.xy, r4.yxzw
      add r2.z, r2.z, c6.z
    endrep
    mul r0.xy, r2, c0.w
    mov r0.z, c6.z
    mad r0.xy, r0, -c0.z, r0.z
    add_sat r0.xy, -r0.yxzw, r0
    mov r1.x, c2.w
    mov r1.y, c3.w
    mul r0.xy, r0, r1
    mul r1.xy, c4, v2
    mov r1.zw, c6.x
    texldl r1, r1, s0
    mul r2, r0.y, c3
    mad r0, c2, r0.x, r2
    add r2.x, -r1.w, c6.z
    mad r0, r0, r2.x, r1
    mad r1, v1.xyzx, c6.zzzx, c6.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 56 instruction slots used (6 texture, 50 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColor2OuterBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     91,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  52,   1, 
      0,   0,   0,   3, 255, 255, 
      8,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     45,   1,   0,   0, 188,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    212,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 219,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 196,   0,   0,   0, 
      0,   0,   0,   0, 226,   0, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    234,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    244,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      2,   0,   4,   0,   1,   0, 
     18,   0, 196,   0,   0,   0, 
      0,   0,   0,   0,  16,   1, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0,  20,   1, 
      0,   0,   0,   0,   0,   0, 
     36,   1,   0,   0,   2,   0, 
      5,   0,   1,   0,  22,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 102, 115, 105, 122, 
    101,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 111, 102, 102, 115, 
    101, 116,   0, 115,  99, 111, 
    108, 111, 114,   0, 115,  99, 
    111, 108, 111, 114,  50,   0, 
    115, 114,  99, 116, 101, 120, 
      0, 171, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   6,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 225, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   6,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 225, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   6,   0, 
    170, 160,  39,   0,   0,   0, 
      5,   0,   0,   3,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   0,   0,   4, 128, 
      6,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 228, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
     19, 128,   0,   0, 225, 129, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   1,   0,   1, 128, 
      2,   0, 255, 160,   1,   0, 
      0,   2,   1,   0,   2, 128, 
      3,   0, 255, 160,   5,   0, 
      0,   3,   0,   0,   3, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      1,   0,   3, 128,   4,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   6,   0,   0, 160, 
     95,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
      0,   8, 228, 160,   5,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0,  85, 128,   3,   0, 
    228, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 160,   0,   0,   0, 128, 
      2,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   1, 128, 
      1,   0, 255, 129,   6,   0, 
    170, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   2,   0,   0, 128, 
      1,   0, 228, 128,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,  36, 144,   6,   0, 
     42, 160,   6,   0, 128, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c6, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c6.x
    mov r1.zw, c6.x
    mov r2.xy, c6.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2.yxzw
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c5, v2
        texldl r5, r1, s1
        mad r0.xy, r3, c5, v2
        texldl r6, r0, s1
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c6.z
      endrep
      mov r2.xy, r4.yxzw
      add r2.z, r2.z, c6.z
    endrep
    mul r0.xy, r2, c0.w
    mov r0.z, c6.z
    mad r0.xy, r0, -c0.z, r0.z
    add_sat r0.xy, -r0.yxzw, r0
    mov r1.x, c2.w
    mad r0.z, r0.x, -r1.x, c6.z
    mov r1.y, c3.w
    mad r0.z, r0.y, -r1.y, r0.z
    mul r2.xy, c4, v2
    mov r2.zw, c6.x
    texldl r2, r2, s0
    mul r0.xy, r0, r1
    mul r1, r0.y, c3
    mad r1, c2, r0.x, r1
    mad r0, r2, r0.z, r1
    mul r0, r2.w, r0
    mad r1, v1.xyzx, c6.zzzx, c6.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 56 instruction slots used (6 texture, 50 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColor2InnerBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     91,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  52,   1, 
      0,   0,   0,   3, 255, 255, 
      8,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     45,   1,   0,   0, 188,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    212,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 219,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 196,   0,   0,   0, 
      0,   0,   0,   0, 226,   0, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    234,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    244,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      2,   0,   4,   0,   1,   0, 
     18,   0, 196,   0,   0,   0, 
      0,   0,   0,   0,  16,   1, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0,  20,   1, 
      0,   0,   0,   0,   0,   0, 
     36,   1,   0,   0,   2,   0, 
      5,   0,   1,   0,  22,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 102, 115, 105, 122, 
    101,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 111, 102, 102, 115, 
    101, 116,   0, 115,  99, 111, 
    108, 111, 114,   0, 115,  99, 
    111, 108, 111, 114,  50,   0, 
    115, 114,  99, 116, 101, 120, 
      0, 171, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   6,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 225, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   6,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 225, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   6,   0, 
    170, 160,  39,   0,   0,   0, 
      5,   0,   0,   3,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   0,   0,   4, 128, 
      6,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 228, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
     19, 128,   0,   0, 225, 129, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   1,   0,   1, 128, 
      2,   0, 255, 160,   4,   0, 
      0,   4,   0,   0,   4, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 129,   6,   0, 170, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   3,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
      4, 128,   0,   0,  85, 128, 
      1,   0,  85, 129,   0,   0, 
    170, 128,   5,   0,   0,   3, 
      2,   0,   3, 128,   4,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   2,   0, 
     12, 128,   6,   0,   0, 160, 
     95,   0,   0,   3,   2,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   8, 228, 160,   5,   0, 
      0,   3,   0,   0,   3, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      1,   0,  15, 128,   0,   0, 
     85, 128,   3,   0, 228, 160, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   2,   0, 228, 160, 
      0,   0,   0, 128,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 128,   0,   0, 170, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      2,   0, 255, 128,   0,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   6,   0,  42, 160, 
      6,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c6, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c6.x
    mov r1.zw, c6.x
    mov r2.xy, c6.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2.yxzw
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c5, v2
        texldl r5, r1, s1
        mad r0.xy, r3, c5, v2
        texldl r6, r0, s1
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c6.z
      endrep
      mov r2.xy, r4.yxzw
      add r2.z, r2.z, c6.z
    endrep
    mul r0.xy, r2, c0.w
    mov r0.z, c6.z
    mad r0.xy, r0, -c0.z, r0.z
    add_sat r0.xy, -r0.yxzw, r0
    mov r1.x, c2.w
    mad r0.z, r0.x, -r1.x, c6.z
    mov r1.y, c3.w
    mad r0.z, r0.y, -r1.y, r0.z
    mul r2.xy, c4, v2
    mov r2.zw, c6.x
    texldl r2, r2, s0
    mul r0.xy, r0, r1
    mul r1, r0.y, c3
    mad r1, c2, r0.x, r1
    mad r0, r2, r0.z, r1
    mul r0, r2.w, r0
    mad r1, v1.xyzx, c6.zzzx, c6.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 58 instruction slots used (6 texture, 52 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColor2InnerBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     91,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  52,   1, 
      0,   0,   0,   3, 255, 255, 
      8,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     45,   1,   0,   0, 188,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    212,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 219,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 196,   0,   0,   0, 
      0,   0,   0,   0, 226,   0, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    234,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    244,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      2,   0,   4,   0,   1,   0, 
     18,   0, 196,   0,   0,   0, 
      0,   0,   0,   0,  16,   1, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0,  20,   1, 
      0,   0,   0,   0,   0,   0, 
     36,   1,   0,   0,   2,   0, 
      5,   0,   1,   0,  22,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 102, 115, 105, 122, 
    101,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 111, 102, 102, 115, 
    101, 116,   0, 115,  99, 111, 
    108, 111, 114,   0, 115,  99, 
    111, 108, 111, 114,  50,   0, 
    115, 114,  99, 116, 101, 120, 
      0, 171, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   6,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 225, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   6,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 225, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   6,   0, 
    170, 160,  39,   0,   0,   0, 
      5,   0,   0,   3,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   0,   0,   4, 128, 
      6,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 228, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
     19, 128,   0,   0, 225, 129, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   1,   0,   1, 128, 
      2,   0, 255, 160,   4,   0, 
      0,   4,   0,   0,   4, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 129,   6,   0, 170, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   3,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
      4, 128,   0,   0,  85, 128, 
      1,   0,  85, 129,   0,   0, 
    170, 128,   5,   0,   0,   3, 
      2,   0,   3, 128,   4,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   2,   0, 
     12, 128,   6,   0,   0, 160, 
     95,   0,   0,   3,   2,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   8, 228, 160,   5,   0, 
      0,   3,   0,   0,   3, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      1,   0,  15, 128,   0,   0, 
     85, 128,   3,   0, 228, 160, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   2,   0, 228, 160, 
      0,   0,   0, 128,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 128,   0,   0, 170, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      2,   0, 255, 128,   0,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   6,   0,  42, 160, 
      6,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c6, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c6.x
    mov r1.zw, c6.x
    mov r2.xy, c6.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2.yxzw
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c5, v2
        texldl r5, r1, s1
        mad r0.xy, r3, c5, v2
        texldl r6, r0, s1
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c6.z
      endrep
      mov r2.xy, r4.yxzw
      add r2.z, r2.z, c6.z
    endrep
    mul r0.xy, r2, c0.w
    mov r0.z, c6.z
    mad r0.xy, r0, -c0.z, r0.z
    add_sat r0.xy, -r0.yxzw, r0
    mov r1.x, c2.w
    mad r0.z, r0.x, -r1.x, c6.z
    mov r1.y, c3.w
    mad r0.z, r0.y, -r1.y, r0.z
    mul r2.xy, c4, v2
    mov r2.zw, c6.x
    texldl r2, r2, s0
    mul r0.xy, r0, r1
    mul r1, r0.y, c3
    mad r1, c2, r0.x, r1
    mad r0, r2, r0.z, r1
    mad r1, v1.xyzx, c6.zzzx, c6.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 55 instruction slots used (6 texture, 49 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColor2FullBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     91,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  52,   1, 
      0,   0,   0,   3, 255, 255, 
      8,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     45,   1,   0,   0, 188,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    212,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 219,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 196,   0,   0,   0, 
      0,   0,   0,   0, 226,   0, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    234,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    244,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      2,   0,   4,   0,   1,   0, 
     18,   0, 196,   0,   0,   0, 
      0,   0,   0,   0,  16,   1, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0,  20,   1, 
      0,   0,   0,   0,   0,   0, 
     36,   1,   0,   0,   2,   0, 
      5,   0,   1,   0,  22,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 102, 115, 105, 122, 
    101,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 111, 102, 102, 115, 
    101, 116,   0, 115,  99, 111, 
    108, 111, 114,   0, 115,  99, 
    111, 108, 111, 114,  50,   0, 
    115, 114,  99, 116, 101, 120, 
      0, 171, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   6,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 225, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   6,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 225, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   6,   0, 
    170, 160,  39,   0,   0,   0, 
      5,   0,   0,   3,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   0,   0,   4, 128, 
      6,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 228, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
     19, 128,   0,   0, 225, 129, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   1,   0,   1, 128, 
      2,   0, 255, 160,   4,   0, 
      0,   4,   0,   0,   4, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 129,   6,   0, 170, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   3,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
      4, 128,   0,   0,  85, 128, 
      1,   0,  85, 129,   0,   0, 
    170, 128,   5,   0,   0,   3, 
      2,   0,   3, 128,   4,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   2,   0, 
     12, 128,   6,   0,   0, 160, 
     95,   0,   0,   3,   2,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   8, 228, 160,   5,   0, 
      0,   3,   0,   0,   3, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      1,   0,  15, 128,   0,   0, 
     85, 128,   3,   0, 228, 160, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   2,   0, 228, 160, 
      0,   0,   0, 128,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 128,   0,   0, 170, 128, 
      1,   0, 228, 128,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,  36, 144,   6,   0, 
     42, 160,   6,   0, 128, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   8,  15, 128,   0,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c6, 0, 0, 1, 0
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c6.x
    mov r1.zw, c6.x
    mov r2.xy, c6.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2.yxzw
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c5, v2
        texldl r5, r1, s1
        mad r0.xy, r3, c5, v2
        texldl r6, r0, s1
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c6.z
      endrep
      mov r2.xy, r4.yxzw
      add r2.z, r2.z, c6.z
    endrep
    mul r0.xy, r2, c0.w
    mov r0.z, c6.z
    mad r0.xy, r0, -c0.z, r0.z
    add_sat r0.xy, -r0.yxzw, r0
    mov r1.x, c2.w
    mad r0.z, r0.x, -r1.x, c6.z
    mov r1.y, c3.w
    mad r0.z, r0.y, -r1.y, r0.z
    mul r2.xy, c4, v2
    mov r2.zw, c6.x
    texldl r2, r2, s0
    mul r0.xy, r0, r1
    mul r1, r0.y, c3
    mad r1, c2, r0.x, r1
    mad r0, r2, r0.z, r1
    mad r1, v1.xyzx, c6.zzzx, c6.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 57 instruction slots used (6 texture, 51 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColor2FullBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     91,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  52,   1, 
      0,   0,   0,   3, 255, 255, 
      8,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     45,   1,   0,   0, 188,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    212,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 219,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 196,   0,   0,   0, 
      0,   0,   0,   0, 226,   0, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    234,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    244,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      2,   0,   4,   0,   1,   0, 
     18,   0, 196,   0,   0,   0, 
      0,   0,   0,   0,  16,   1, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0,  20,   1, 
      0,   0,   0,   0,   0,   0, 
     36,   1,   0,   0,   2,   0, 
      5,   0,   1,   0,  22,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 102, 115, 105, 122, 
    101,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 111, 102, 102, 115, 
    101, 116,   0, 115,  99, 111, 
    108, 111, 114,   0, 115,  99, 
    111, 108, 111, 114,  50,   0, 
    115, 114,  99, 116, 101, 120, 
      0, 171, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   6,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 225, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   6,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 225, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   6,   0, 
    170, 160,  39,   0,   0,   0, 
      5,   0,   0,   3,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   0,   0,   4, 128, 
      6,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 228, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
     19, 128,   0,   0, 225, 129, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   1,   0,   1, 128, 
      2,   0, 255, 160,   4,   0, 
      0,   4,   0,   0,   4, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 129,   6,   0, 170, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   3,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
      4, 128,   0,   0,  85, 128, 
      1,   0,  85, 129,   0,   0, 
    170, 128,   5,   0,   0,   3, 
      2,   0,   3, 128,   4,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   2,   0, 
     12, 128,   6,   0,   0, 160, 
     95,   0,   0,   3,   2,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   8, 228, 160,   5,   0, 
      0,   3,   0,   0,   3, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      1,   0,  15, 128,   0,   0, 
     85, 128,   3,   0, 228, 160, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   2,   0, 228, 160, 
      0,   0,   0, 128,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 128,   0,   0, 170, 128, 
      1,   0, 228, 128,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,  36, 144,   6,   0, 
     42, 160,   6,   0, 128, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c6, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c6.x
    mov r1.zw, c6.x
    mov r2.xy, c6.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2.yxzw
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c5, v2
        texldl r5, r1, s1
        mad r0.xy, r3, c5, v2
        texldl r6, r0, s1
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c6.z
      endrep
      mov r2.xy, r4.yxzw
      add r2.z, r2.z, c6.z
    endrep
    mul r0.xy, r2, c0.w
    mov r0.z, c6.z
    mad r0.xy, r0, -c0.z, r0.z
    add_sat r0.xy, -r0.yxzw, r0
    mov r1.x, c2.w
    mov r1.y, c3.w
    mul r0.xy, r0, r1
    mul r1.xy, c4, v2
    mov r1.zw, c6.x
    texldl r1, r1, s0
    add r0.z, -r1.w, c6.z
    mul r1.w, r1.w, c6.w
    mul r2, r0.y, c3
    mad r2, c2, r0.x, r2
    mov r1.xyz, c6.x
    mad r0, r2, r0.z, r1
    mad r1, v1.xyzx, c6.zzzx, c6.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 56 instruction slots used (6 texture, 50 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColor2HideBaseOuterBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     91,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  52,   1, 
      0,   0,   0,   3, 255, 255, 
      8,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     45,   1,   0,   0, 188,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    212,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 219,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 196,   0,   0,   0, 
      0,   0,   0,   0, 226,   0, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    234,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    244,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      2,   0,   4,   0,   1,   0, 
     18,   0, 196,   0,   0,   0, 
      0,   0,   0,   0,  16,   1, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0,  20,   1, 
      0,   0,   0,   0,   0,   0, 
     36,   1,   0,   0,   2,   0, 
      5,   0,   1,   0,  22,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 102, 115, 105, 122, 
    101,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 111, 102, 102, 115, 
    101, 116,   0, 115,  99, 111, 
    108, 111, 114,   0, 115,  99, 
    111, 108, 111, 114,  50,   0, 
    115, 114,  99, 116, 101, 120, 
      0, 171, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   6,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  23, 183, 209,  56, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 225, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   6,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 225, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   6,   0, 
    170, 160,  39,   0,   0,   0, 
      5,   0,   0,   3,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   0,   0,   4, 128, 
      6,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 228, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
     19, 128,   0,   0, 225, 129, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   1,   0,   1, 128, 
      2,   0, 255, 160,   1,   0, 
      0,   2,   1,   0,   2, 128, 
      3,   0, 255, 160,   5,   0, 
      0,   3,   0,   0,   3, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      1,   0,   3, 128,   4,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   6,   0,   0, 160, 
     95,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
      0,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   4, 128, 
      1,   0, 255, 129,   6,   0, 
    170, 160,   5,   0,   0,   3, 
      1,   0,   8, 128,   1,   0, 
    255, 128,   6,   0, 255, 160, 
      5,   0,   0,   3,   2,   0, 
     15, 128,   0,   0,  85, 128, 
      3,   0, 228, 160,   4,   0, 
      0,   4,   2,   0,  15, 128, 
      2,   0, 228, 160,   0,   0, 
      0, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   1,   0, 
      7, 128,   6,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   0, 170, 128,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   6,   0,  42, 160, 
      6,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c6, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c6.x
    mov r1.zw, c6.x
    mov r2.xy, c6.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2.yxzw
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c5, v2
        texldl r5, r1, s1
        mad r0.xy, r3, c5, v2
        texldl r6, r0, s1
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c6.z
      endrep
      mov r2.xy, r4.yxzw
      add r2.z, r2.z, c6.z
    endrep
    mul r0.xy, r2, c0.w
    mov r0.z, c6.z
    mad r0.xy, r0, -c0.z, r0.z
    add_sat r0.xy, -r0.yxzw, r0
    mov r1.x, c2.w
    mov r1.y, c3.w
    mul r0.xy, r0, r1
    mul r1.xy, c4, v2
    mov r1.zw, c6.x
    texldl r1, r1, s0
    add r0.z, -r1.w, c6.z
    mul r1.w, r1.w, c6.w
    mul r2, r0.y, c3
    mad r2, c2, r0.x, r2
    mov r1.xyz, c6.x
    mad r0, r2, r0.z, r1
    mad r1, v1.xyzx, c6.zzzx, c6.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 58 instruction slots used (6 texture, 52 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColor2HideBaseOuterBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     91,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  52,   1, 
      0,   0,   0,   3, 255, 255, 
      8,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     45,   1,   0,   0, 188,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    212,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 219,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 196,   0,   0,   0, 
      0,   0,   0,   0, 226,   0, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    234,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    244,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      2,   0,   4,   0,   1,   0, 
     18,   0, 196,   0,   0,   0, 
      0,   0,   0,   0,  16,   1, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0,  20,   1, 
      0,   0,   0,   0,   0,   0, 
     36,   1,   0,   0,   2,   0, 
      5,   0,   1,   0,  22,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 102, 115, 105, 122, 
    101,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 111, 102, 102, 115, 
    101, 116,   0, 115,  99, 111, 
    108, 111, 114,   0, 115,  99, 
    111, 108, 111, 114,  50,   0, 
    115, 114,  99, 116, 101, 120, 
      0, 171, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   6,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  23, 183, 209,  56, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 225, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   6,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 225, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   6,   0, 
    170, 160,  39,   0,   0,   0, 
      5,   0,   0,   3,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   0,   0,   4, 128, 
      6,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 228, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
     19, 128,   0,   0, 225, 129, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   1,   0,   1, 128, 
      2,   0, 255, 160,   1,   0, 
      0,   2,   1,   0,   2, 128, 
      3,   0, 255, 160,   5,   0, 
      0,   3,   0,   0,   3, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      1,   0,   3, 128,   4,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   6,   0,   0, 160, 
     95,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
      0,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,   4, 128, 
      1,   0, 255, 129,   6,   0, 
    170, 160,   5,   0,   0,   3, 
      1,   0,   8, 128,   1,   0, 
    255, 128,   6,   0, 255, 160, 
      5,   0,   0,   3,   2,   0, 
     15, 128,   0,   0,  85, 128, 
      3,   0, 228, 160,   4,   0, 
      0,   4,   2,   0,  15, 128, 
      2,   0, 228, 160,   0,   0, 
      0, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   1,   0, 
      7, 128,   6,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   0, 170, 128,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   6,   0,  42, 160, 
      6,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c6, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c6.x
    mov r1.zw, c6.x
    mov r2.xy, c6.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2.yxzw
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c5, v2
        texldl r5, r1, s1
        mad r0.xy, r3, c5, v2
        texldl r6, r0, s1
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c6.z
      endrep
      mov r2.xy, r4.yxzw
      add r2.z, r2.z, c6.z
    endrep
    mul r0.xy, r2, c0.w
    mov r0.z, c6.z
    mad r0.xy, r0, -c0.z, r0.z
    add_sat r0.xy, -r0.yxzw, r0
    mov r1.x, c2.w
    mad r0.z, r0.x, -r1.x, c6.z
    mov r1.y, c3.w
    mad r0.z, r0.y, -r1.y, r0.z
    mul r2.xy, c4, v2
    mov r2.zw, c6.x
    texldl r2, r2, s0
    mul r3.w, r2.w, c6.w
    mul r0.xy, r0, r1
    mul r1, r0.y, c3
    mad r1, c2, r0.x, r1
    mov r3.xyz, c6.x
    mad r0, r3, r0.z, r1
    mul r0, r2.w, r0
    mad r1, v1.xyzx, c6.zzzx, c6.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 58 instruction slots used (6 texture, 52 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColor2HideBaseInnerBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     91,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  52,   1, 
      0,   0,   0,   3, 255, 255, 
      8,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     45,   1,   0,   0, 188,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    212,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 219,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 196,   0,   0,   0, 
      0,   0,   0,   0, 226,   0, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    234,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    244,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      2,   0,   4,   0,   1,   0, 
     18,   0, 196,   0,   0,   0, 
      0,   0,   0,   0,  16,   1, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0,  20,   1, 
      0,   0,   0,   0,   0,   0, 
     36,   1,   0,   0,   2,   0, 
      5,   0,   1,   0,  22,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 102, 115, 105, 122, 
    101,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 111, 102, 102, 115, 
    101, 116,   0, 115,  99, 111, 
    108, 111, 114,   0, 115,  99, 
    111, 108, 111, 114,  50,   0, 
    115, 114,  99, 116, 101, 120, 
      0, 171, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   6,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  23, 183, 209,  56, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 225, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   6,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 225, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   6,   0, 
    170, 160,  39,   0,   0,   0, 
      5,   0,   0,   3,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   0,   0,   4, 128, 
      6,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 228, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
     19, 128,   0,   0, 225, 129, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   1,   0,   1, 128, 
      2,   0, 255, 160,   4,   0, 
      0,   4,   0,   0,   4, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 129,   6,   0, 170, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   3,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
      4, 128,   0,   0,  85, 128, 
      1,   0,  85, 129,   0,   0, 
    170, 128,   5,   0,   0,   3, 
      2,   0,   3, 128,   4,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   2,   0, 
     12, 128,   6,   0,   0, 160, 
     95,   0,   0,   3,   2,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   8, 228, 160,   5,   0, 
      0,   3,   3,   0,   8, 128, 
      2,   0, 255, 128,   6,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   1,   0, 
     15, 128,   0,   0,  85, 128, 
      3,   0, 228, 160,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      2,   0, 228, 160,   0,   0, 
      0, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   3,   0, 
      7, 128,   6,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   3,   0, 228, 128, 
      0,   0, 170, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    255, 128,   0,   0, 228, 128, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   1,   0,  36, 144, 
      6,   0,  42, 160,   6,   0, 
    128, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c6, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c6.x
    mov r1.zw, c6.x
    mov r2.xy, c6.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2.yxzw
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c5, v2
        texldl r5, r1, s1
        mad r0.xy, r3, c5, v2
        texldl r6, r0, s1
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c6.z
      endrep
      mov r2.xy, r4.yxzw
      add r2.z, r2.z, c6.z
    endrep
    mul r0.xy, r2, c0.w
    mov r0.z, c6.z
    mad r0.xy, r0, -c0.z, r0.z
    add_sat r0.xy, -r0.yxzw, r0
    mov r1.x, c2.w
    mad r0.z, r0.x, -r1.x, c6.z
    mov r1.y, c3.w
    mad r0.z, r0.y, -r1.y, r0.z
    mul r2.xy, c4, v2
    mov r2.zw, c6.x
    texldl r2, r2, s0
    mul r3.w, r2.w, c6.w
    mul r0.xy, r0, r1
    mul r1, r0.y, c3
    mad r1, c2, r0.x, r1
    mov r3.xyz, c6.x
    mad r0, r3, r0.z, r1
    mul r0, r2.w, r0
    mad r1, v1.xyzx, c6.zzzx, c6.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 60 instruction slots used (6 texture, 54 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColor2HideBaseInnerBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     91,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  52,   1, 
      0,   0,   0,   3, 255, 255, 
      8,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     45,   1,   0,   0, 188,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    212,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 219,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 196,   0,   0,   0, 
      0,   0,   0,   0, 226,   0, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    234,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    244,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      2,   0,   4,   0,   1,   0, 
     18,   0, 196,   0,   0,   0, 
      0,   0,   0,   0,  16,   1, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0,  20,   1, 
      0,   0,   0,   0,   0,   0, 
     36,   1,   0,   0,   2,   0, 
      5,   0,   1,   0,  22,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 102, 115, 105, 122, 
    101,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 111, 102, 102, 115, 
    101, 116,   0, 115,  99, 111, 
    108, 111, 114,   0, 115,  99, 
    111, 108, 111, 114,  50,   0, 
    115, 114,  99, 116, 101, 120, 
      0, 171, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   6,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  23, 183, 209,  56, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 225, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   6,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 225, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   6,   0, 
    170, 160,  39,   0,   0,   0, 
      5,   0,   0,   3,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   0,   0,   4, 128, 
      6,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 228, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
     19, 128,   0,   0, 225, 129, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   1,   0,   1, 128, 
      2,   0, 255, 160,   4,   0, 
      0,   4,   0,   0,   4, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 129,   6,   0, 170, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   3,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
      4, 128,   0,   0,  85, 128, 
      1,   0,  85, 129,   0,   0, 
    170, 128,   5,   0,   0,   3, 
      2,   0,   3, 128,   4,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   2,   0, 
     12, 128,   6,   0,   0, 160, 
     95,   0,   0,   3,   2,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   8, 228, 160,   5,   0, 
      0,   3,   3,   0,   8, 128, 
      2,   0, 255, 128,   6,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   1,   0, 
     15, 128,   0,   0,  85, 128, 
      3,   0, 228, 160,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      2,   0, 228, 160,   0,   0, 
      0, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   3,   0, 
      7, 128,   6,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   3,   0, 228, 128, 
      0,   0, 170, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    255, 128,   0,   0, 228, 128, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   1,   0,  36, 144, 
      6,   0,  42, 160,   6,   0, 
    128, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c6, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c6.x
    mov r1.zw, c6.x
    mov r2.xy, c6.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2.yxzw
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c5, v2
        texldl r5, r1, s1
        mad r0.xy, r3, c5, v2
        texldl r6, r0, s1
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c6.z
      endrep
      mov r2.xy, r4.yxzw
      add r2.z, r2.z, c6.z
    endrep
    mul r0.xy, r2, c0.w
    mov r0.z, c6.z
    mad r0.xy, r0, -c0.z, r0.z
    add_sat r0.xy, -r0.yxzw, r0
    mov r1.x, c2.w
    mad r0.z, r0.x, -r1.x, c6.z
    mov r1.y, c3.w
    mad r0.z, r0.y, -r1.y, r0.z
    mul r2.xy, c4, v2
    mov r2.zw, c6.x
    texldl r2, r2, s0
    mul r2.w, r2.w, c6.w
    mul r0.xy, r0, r1
    mul r1, r0.y, c3
    mad r1, c2, r0.x, r1
    mov r2.xyz, c6.x
    mad r0, r2, r0.z, r1
    mad r1, v1.xyzx, c6.zzzx, c6.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 57 instruction slots used (6 texture, 51 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColor2HideBaseFullBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     91,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  52,   1, 
      0,   0,   0,   3, 255, 255, 
      8,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     45,   1,   0,   0, 188,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    212,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 219,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 196,   0,   0,   0, 
      0,   0,   0,   0, 226,   0, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    234,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    244,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      2,   0,   4,   0,   1,   0, 
     18,   0, 196,   0,   0,   0, 
      0,   0,   0,   0,  16,   1, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0,  20,   1, 
      0,   0,   0,   0,   0,   0, 
     36,   1,   0,   0,   2,   0, 
      5,   0,   1,   0,  22,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 102, 115, 105, 122, 
    101,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 111, 102, 102, 115, 
    101, 116,   0, 115,  99, 111, 
    108, 111, 114,   0, 115,  99, 
    111, 108, 111, 114,  50,   0, 
    115, 114,  99, 116, 101, 120, 
      0, 171, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   6,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  23, 183, 209,  56, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 225, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   6,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 225, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   6,   0, 
    170, 160,  39,   0,   0,   0, 
      5,   0,   0,   3,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   0,   0,   4, 128, 
      6,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 228, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
     19, 128,   0,   0, 225, 129, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   1,   0,   1, 128, 
      2,   0, 255, 160,   4,   0, 
      0,   4,   0,   0,   4, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 129,   6,   0, 170, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   3,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
      4, 128,   0,   0,  85, 128, 
      1,   0,  85, 129,   0,   0, 
    170, 128,   5,   0,   0,   3, 
      2,   0,   3, 128,   4,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   2,   0, 
     12, 128,   6,   0,   0, 160, 
     95,   0,   0,   3,   2,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   8, 228, 160,   5,   0, 
      0,   3,   2,   0,   8, 128, 
      2,   0, 255, 128,   6,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   1,   0, 
     15, 128,   0,   0,  85, 128, 
      3,   0, 228, 160,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      2,   0, 228, 160,   0,   0, 
      0, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   2,   0, 
      7, 128,   6,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   0, 170, 128,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   6,   0,  42, 160, 
      6,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   float4 offset;
//   float4 scolor;
//   float4 scolor2;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   scolor       c2       1
//   scolor2      c3       1
//   srctexscale  c4       1
//   texscale     c5       1
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c6, 0, 0, 1, 9.99999975e-005
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c6.x
    mov r1.zw, c6.x
    mov r2.xy, c6.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2.yxzw
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c5, v2
        texldl r5, r1, s1
        mad r0.xy, r3, c5, v2
        texldl r6, r0, s1
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c6.z
      endrep
      mov r2.xy, r4.yxzw
      add r2.z, r2.z, c6.z
    endrep
    mul r0.xy, r2, c0.w
    mov r0.z, c6.z
    mad r0.xy, r0, -c0.z, r0.z
    add_sat r0.xy, -r0.yxzw, r0
    mov r1.x, c2.w
    mad r0.z, r0.x, -r1.x, c6.z
    mov r1.y, c3.w
    mad r0.z, r0.y, -r1.y, r0.z
    mul r2.xy, c4, v2
    mov r2.zw, c6.x
    texldl r2, r2, s0
    mul r2.w, r2.w, c6.w
    mul r0.xy, r0, r1
    mul r1, r0.y, c3
    mad r1, c2, r0.x, r1
    mov r2.xyz, c6.x
    mad r0, r2, r0.z, r1
    mad r1, v1.xyzx, c6.zzzx, c6.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 59 instruction slots used (6 texture, 53 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSColor2HideBaseFullBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     91,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  52,   1, 
      0,   0,   0,   3, 255, 255, 
      8,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     45,   1,   0,   0, 188,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    212,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 219,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 196,   0,   0,   0, 
      0,   0,   0,   0, 226,   0, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    234,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    244,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      2,   0,   4,   0,   1,   0, 
     18,   0, 196,   0,   0,   0, 
      0,   0,   0,   0,  16,   1, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0,  20,   1, 
      0,   0,   0,   0,   0,   0, 
     36,   1,   0,   0,   2,   0, 
      5,   0,   1,   0,  22,   0, 
    196,   0,   0,   0,   0,   0, 
      0,   0, 102, 115, 105, 122, 
    101,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   4,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 111, 102, 102, 115, 
    101, 116,   0, 115,  99, 111, 
    108, 111, 114,   0, 115,  99, 
    111, 108, 111, 114,  50,   0, 
    115, 114,  99, 116, 101, 120, 
      0, 171, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   6,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  23, 183, 209,  56, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   6,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 225, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      5,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   6,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 225, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   6,   0, 
    170, 160,  39,   0,   0,   0, 
      5,   0,   0,   3,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 160,   1,   0, 
      0,   2,   0,   0,   4, 128, 
      6,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 228, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
     19, 128,   0,   0, 225, 129, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   1,   0,   1, 128, 
      2,   0, 255, 160,   4,   0, 
      0,   4,   0,   0,   4, 128, 
      0,   0,   0, 128,   1,   0, 
      0, 129,   6,   0, 170, 160, 
      1,   0,   0,   2,   1,   0, 
      2, 128,   3,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
      4, 128,   0,   0,  85, 128, 
      1,   0,  85, 129,   0,   0, 
    170, 128,   5,   0,   0,   3, 
      2,   0,   3, 128,   4,   0, 
    228, 160,   2,   0, 228, 144, 
      1,   0,   0,   2,   2,   0, 
     12, 128,   6,   0,   0, 160, 
     95,   0,   0,   3,   2,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   8, 228, 160,   5,   0, 
      0,   3,   2,   0,   8, 128, 
      2,   0, 255, 128,   6,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   1,   0, 
     15, 128,   0,   0,  85, 128, 
      3,   0, 228, 160,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      2,   0, 228, 160,   0,   0, 
      0, 128,   1,   0, 228, 128, 
      1,   0,   0,   2,   2,   0, 
      7, 128,   6,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   2,   0, 228, 128, 
      0,   0, 170, 128,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   6,   0,  42, 160, 
      6,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 0.5
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.zw, c4.x
    mov r2.xy, c4.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c3, v2
        texldl r5, r1, s2
        mad r0.xy, r3, c3, v2
        texldl r6, r0, s2
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c4.z
      endrep
      mov r2.xy, r4
      add r2.z, r2.z, c4.z
    endrep
    mov r0.z, c4.z
    mad r0.xy, r2, -c0.w, r0.z
    add r0.xy, -r0.yxzw, r0
    mul r0.y, r0.y, c0.z
    mad r0.x, r0.x, -c0.z, r0.z
    mul r0.x, r0.x, c4.w
    max r1.x, r0.x, c4.x
    min r2.x, r1.x, c4.w
    mad_sat r0.x, r0.y, c4.w, c4.w
    cmp r2.z, r0.y, r0.x, c4.w
    mov r2.yw, c4.x
    texld r0, r2.zwzw, s0
    mov_sat r0.w, r0.w
    mad r1, r0.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0.w, r1
    texld r1, r2, s0
    mov_sat r1.w, r1.w
    mad r2, r1.xyzx, c4.zzzx, c4.xxxz
    mad r0, r2, r1.w, r0
    mul r1.xy, c2, v2
    mov r1.zw, c4.x
    texldl r1, r1, s1
    add r2.x, -r1.w, c4.z
    mad r0, r0, r2.x, r1
    mad r1, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 64 instruction slots used (8 texture, 56 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGrad2OuterBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,  63, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   2,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   4,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   0,   0, 
      4, 128,   4,   0, 170, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 161,   0,   0, 
    170, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    225, 129,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
      0,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      4,   0, 255, 160,  11,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0, 160,  10,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
      0, 128,   4,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     17, 128,   0,   0,  85, 128, 
      4,   0, 255, 160,   4,   0, 
    255, 160,  88,   0,   0,   4, 
      2,   0,   4, 128,   0,   0, 
     85, 128,   0,   0,   0, 128, 
      4,   0, 255, 160,   1,   0, 
      0,   2,   2,   0,  10, 128, 
      4,   0,   0, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      2,   0, 238, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
     36, 128,   4,   0,  42, 160, 
      4,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 255, 128,   1,   0, 
    228, 128,  66,   0,   0,   3, 
      1,   0,  15, 128,   2,   0, 
    228, 128,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     24, 128,   1,   0, 255, 128, 
      4,   0,   0,   4,   2,   0, 
     15, 128,   1,   0,  36, 128, 
      4,   0,  42, 160,   4,   0, 
    128, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 128,   1,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      2,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   4,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   2,   0, 
      1, 128,   1,   0, 255, 129, 
      4,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 128,   2,   0, 
      0, 128,   1,   0, 228, 128, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   1,   0,  36, 144, 
      4,   0,  42, 160,   4,   0, 
    128, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 0.5
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.zw, c4.x
    mov r2.xy, c4.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c3, v2
        texldl r5, r1, s2
        mad r0.xy, r3, c3, v2
        texldl r6, r0, s2
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c4.z
      endrep
      mov r2.xy, r4
      add r2.z, r2.z, c4.z
    endrep
    mov r0.z, c4.z
    mad r0.xy, r2, -c0.w, r0.z
    add r0.xy, -r0.yxzw, r0
    mul r0.y, r0.y, c0.z
    mad r0.x, r0.x, -c0.z, r0.z
    mul r0.x, r0.x, c4.w
    max r1.x, r0.x, c4.x
    min r2.x, r1.x, c4.w
    mad_sat r0.x, r0.y, c4.w, c4.w
    cmp r2.z, r0.y, r0.x, c4.w
    mov r2.yw, c4.x
    texld r0, r2.zwzw, s0
    mov_sat r0.w, r0.w
    mad r1, r0.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0.w, r1
    texld r1, r2, s0
    mov_sat r1.w, r1.w
    mad r2, r1.xyzx, c4.zzzx, c4.xxxz
    mad r0, r2, r1.w, r0
    mul r1.xy, c2, v2
    mov r1.zw, c4.x
    texldl r1, r1, s1
    add r2.x, -r1.w, c4.z
    mad r0, r0, r2.x, r1
    mad r1, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 66 instruction slots used (8 texture, 58 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGrad2OuterBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,  63, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   2,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   4,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   0,   0, 
      4, 128,   4,   0, 170, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 161,   0,   0, 
    170, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    225, 129,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
      0,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      4,   0, 255, 160,  11,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0, 160,  10,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
      0, 128,   4,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     17, 128,   0,   0,  85, 128, 
      4,   0, 255, 160,   4,   0, 
    255, 160,  88,   0,   0,   4, 
      2,   0,   4, 128,   0,   0, 
     85, 128,   0,   0,   0, 128, 
      4,   0, 255, 160,   1,   0, 
      0,   2,   2,   0,  10, 128, 
      4,   0,   0, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      2,   0, 238, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
     36, 128,   4,   0,  42, 160, 
      4,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 255, 128,   1,   0, 
    228, 128,  66,   0,   0,   3, 
      1,   0,  15, 128,   2,   0, 
    228, 128,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     24, 128,   1,   0, 255, 128, 
      4,   0,   0,   4,   2,   0, 
     15, 128,   1,   0,  36, 128, 
      4,   0,  42, 160,   4,   0, 
    128, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 128,   1,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      2,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   4,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   2,   0, 
      1, 128,   1,   0, 255, 129, 
      4,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 128,   2,   0, 
      0, 128,   1,   0, 228, 128, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   1,   0,  36, 144, 
      4,   0,  42, 160,   4,   0, 
    128, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 0.5
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.zw, c4.x
    mov r2.xy, c4.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c3, v2
        texldl r5, r1, s2
        mad r0.xy, r3, c3, v2
        texldl r6, r0, s2
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c4.z
      endrep
      mov r2.xy, r4
      add r2.z, r2.z, c4.z
    endrep
    mov r0.z, c4.z
    mad r0.xy, r2, -c0.w, r0.z
    add r0.xy, -r0.yxzw, r0
    mul r0.y, r0.y, c0.z
    mad r0.x, r0.x, -c0.z, r0.z
    mul r0.x, r0.x, c4.w
    max r1.x, r0.x, c4.x
    min r2.x, r1.x, c4.w
    mad_sat r0.x, r0.y, c4.w, c4.w
    cmp r2.z, r0.y, r0.x, c4.w
    mov r2.yw, c4.x
    texld r0, r2.zwzw, s0
    mov_sat r0.w, r0.w
    mad r1, r0.xyzx, c4.zzzx, c4.xxxz
    mul r1, r0.w, r1
    texld r2, r2, s0
    mov_sat r0.x, r2.w
    mad r2, r2.xyzx, c4.zzzx, c4.xxxz
    mad r1, r2, r0.x, r1
    add r0.x, -r0.x, c4.z
    add r0.x, -r0.w, r0.x
    mul r2.xy, c2, v2
    mov r2.zw, c4.x
    texldl r2, r2, s1
    mad r0, r2, r0.x, r1
    mul r0, r2.w, r0
    mad r1, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 66 instruction slots used (8 texture, 58 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGrad2InnerBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,  63, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   2,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   4,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   0,   0, 
      4, 128,   4,   0, 170, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 161,   0,   0, 
    170, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    225, 129,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
      0,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      4,   0, 255, 160,  11,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0, 160,  10,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
      0, 128,   4,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     17, 128,   0,   0,  85, 128, 
      4,   0, 255, 160,   4,   0, 
    255, 160,  88,   0,   0,   4, 
      2,   0,   4, 128,   0,   0, 
     85, 128,   0,   0,   0, 128, 
      4,   0, 255, 160,   1,   0, 
      0,   2,   2,   0,  10, 128, 
      4,   0,   0, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      2,   0, 238, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
     36, 128,   4,   0,  42, 160, 
      4,   0, 128, 160,   5,   0, 
      0,   3,   1,   0,  15, 128, 
      0,   0, 255, 128,   1,   0, 
    228, 128,  66,   0,   0,   3, 
      2,   0,  15, 128,   2,   0, 
    228, 128,   0,   8, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     17, 128,   2,   0, 255, 128, 
      4,   0,   0,   4,   2,   0, 
     15, 128,   2,   0,  36, 128, 
      4,   0,  42, 160,   4,   0, 
    128, 160,   4,   0,   0,   4, 
      1,   0,  15, 128,   2,   0, 
    228, 128,   0,   0,   0, 128, 
      1,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 129,   4,   0, 
    170, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 129,   0,   0,   0, 128, 
      5,   0,   0,   3,   2,   0, 
      3, 128,   2,   0, 228, 160, 
      2,   0, 228, 144,   1,   0, 
      0,   2,   2,   0,  12, 128, 
      4,   0,   0, 160,  95,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 128,   1,   8, 
    228, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 128,   0,   0,   0, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      2,   0, 255, 128,   0,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   4,   0,  42, 160, 
      4,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 0.5
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.zw, c4.x
    mov r2.xy, c4.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c3, v2
        texldl r5, r1, s2
        mad r0.xy, r3, c3, v2
        texldl r6, r0, s2
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c4.z
      endrep
      mov r2.xy, r4
      add r2.z, r2.z, c4.z
    endrep
    mov r0.z, c4.z
    mad r0.xy, r2, -c0.w, r0.z
    add r0.xy, -r0.yxzw, r0
    mul r0.y, r0.y, c0.z
    mad r0.x, r0.x, -c0.z, r0.z
    mul r0.x, r0.x, c4.w
    max r1.x, r0.x, c4.x
    min r2.x, r1.x, c4.w
    mad_sat r0.x, r0.y, c4.w, c4.w
    cmp r2.z, r0.y, r0.x, c4.w
    mov r2.yw, c4.x
    texld r0, r2.zwzw, s0
    mov_sat r0.w, r0.w
    mad r1, r0.xyzx, c4.zzzx, c4.xxxz
    mul r1, r0.w, r1
    texld r2, r2, s0
    mov_sat r0.x, r2.w
    mad r2, r2.xyzx, c4.zzzx, c4.xxxz
    mad r1, r2, r0.x, r1
    add r0.x, -r0.x, c4.z
    add r0.x, -r0.w, r0.x
    mul r2.xy, c2, v2
    mov r2.zw, c4.x
    texldl r2, r2, s1
    mad r0, r2, r0.x, r1
    mul r0, r2.w, r0
    mad r1, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 68 instruction slots used (8 texture, 60 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGrad2InnerBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,  63, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   2,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   4,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   0,   0, 
      4, 128,   4,   0, 170, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 161,   0,   0, 
    170, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    225, 129,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
      0,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      4,   0, 255, 160,  11,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0, 160,  10,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
      0, 128,   4,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     17, 128,   0,   0,  85, 128, 
      4,   0, 255, 160,   4,   0, 
    255, 160,  88,   0,   0,   4, 
      2,   0,   4, 128,   0,   0, 
     85, 128,   0,   0,   0, 128, 
      4,   0, 255, 160,   1,   0, 
      0,   2,   2,   0,  10, 128, 
      4,   0,   0, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      2,   0, 238, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
     36, 128,   4,   0,  42, 160, 
      4,   0, 128, 160,   5,   0, 
      0,   3,   1,   0,  15, 128, 
      0,   0, 255, 128,   1,   0, 
    228, 128,  66,   0,   0,   3, 
      2,   0,  15, 128,   2,   0, 
    228, 128,   0,   8, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     17, 128,   2,   0, 255, 128, 
      4,   0,   0,   4,   2,   0, 
     15, 128,   2,   0,  36, 128, 
      4,   0,  42, 160,   4,   0, 
    128, 160,   4,   0,   0,   4, 
      1,   0,  15, 128,   2,   0, 
    228, 128,   0,   0,   0, 128, 
      1,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 129,   4,   0, 
    170, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 129,   0,   0,   0, 128, 
      5,   0,   0,   3,   2,   0, 
      3, 128,   2,   0, 228, 160, 
      2,   0, 228, 144,   1,   0, 
      0,   2,   2,   0,  12, 128, 
      4,   0,   0, 160,  95,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 128,   1,   8, 
    228, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 128,   0,   0,   0, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      2,   0, 255, 128,   0,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   4,   0,  42, 160, 
      4,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 0.5
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.zw, c4.x
    mov r2.xy, c4.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c3, v2
        texldl r5, r1, s2
        mad r0.xy, r3, c3, v2
        texldl r6, r0, s2
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c4.z
      endrep
      mov r2.xy, r4
      add r2.z, r2.z, c4.z
    endrep
    mov r0.z, c4.z
    mad r0.xy, r2, -c0.w, r0.z
    add r0.xy, -r0.yxzw, r0
    mul r0.y, r0.y, c0.z
    mad r0.x, r0.x, -c0.z, r0.z
    mul r0.x, r0.x, c4.w
    max r1.x, r0.x, c4.x
    min r2.x, r1.x, c4.w
    mad_sat r0.x, r0.y, c4.w, c4.w
    cmp r2.z, r0.y, r0.x, c4.w
    mov r2.yw, c4.x
    texld r0, r2.zwzw, s0
    mov_sat r0.w, r0.w
    mad r1, r0.xyzx, c4.zzzx, c4.xxxz
    mul r1, r0.w, r1
    texld r2, r2, s0
    mov_sat r0.x, r2.w
    mad r2, r2.xyzx, c4.zzzx, c4.xxxz
    mad r1, r2, r0.x, r1
    add r0.x, -r0.x, c4.z
    add r0.x, -r0.w, r0.x
    mul r2.xy, c2, v2
    mov r2.zw, c4.x
    texldl r2, r2, s1
    mad r0, r2, r0.x, r1
    mad r1, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 65 instruction slots used (8 texture, 57 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGrad2FullBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,  63, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   2,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   4,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   0,   0, 
      4, 128,   4,   0, 170, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 161,   0,   0, 
    170, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    225, 129,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
      0,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      4,   0, 255, 160,  11,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0, 160,  10,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
      0, 128,   4,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     17, 128,   0,   0,  85, 128, 
      4,   0, 255, 160,   4,   0, 
    255, 160,  88,   0,   0,   4, 
      2,   0,   4, 128,   0,   0, 
     85, 128,   0,   0,   0, 128, 
      4,   0, 255, 160,   1,   0, 
      0,   2,   2,   0,  10, 128, 
      4,   0,   0, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      2,   0, 238, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
     36, 128,   4,   0,  42, 160, 
      4,   0, 128, 160,   5,   0, 
      0,   3,   1,   0,  15, 128, 
      0,   0, 255, 128,   1,   0, 
    228, 128,  66,   0,   0,   3, 
      2,   0,  15, 128,   2,   0, 
    228, 128,   0,   8, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     17, 128,   2,   0, 255, 128, 
      4,   0,   0,   4,   2,   0, 
     15, 128,   2,   0,  36, 128, 
      4,   0,  42, 160,   4,   0, 
    128, 160,   4,   0,   0,   4, 
      1,   0,  15, 128,   2,   0, 
    228, 128,   0,   0,   0, 128, 
      1,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 129,   4,   0, 
    170, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 129,   0,   0,   0, 128, 
      5,   0,   0,   3,   2,   0, 
      3, 128,   2,   0, 228, 160, 
      2,   0, 228, 144,   1,   0, 
      0,   2,   2,   0,  12, 128, 
      4,   0,   0, 160,  95,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 128,   1,   8, 
    228, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 128,   0,   0,   0, 128, 
      1,   0, 228, 128,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,  36, 144,   4,   0, 
     42, 160,   4,   0, 128, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   8,  15, 128,   0,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 0, 0, 1, 0.5
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c4.x
    mov r1.zw, c4.x
    mov r2.xy, c4.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c3, v2
        texldl r5, r1, s2
        mad r0.xy, r3, c3, v2
        texldl r6, r0, s2
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c4.z
      endrep
      mov r2.xy, r4
      add r2.z, r2.z, c4.z
    endrep
    mov r0.z, c4.z
    mad r0.xy, r2, -c0.w, r0.z
    add r0.xy, -r0.yxzw, r0
    mul r0.y, r0.y, c0.z
    mad r0.x, r0.x, -c0.z, r0.z
    mul r0.x, r0.x, c4.w
    max r1.x, r0.x, c4.x
    min r2.x, r1.x, c4.w
    mad_sat r0.x, r0.y, c4.w, c4.w
    cmp r2.z, r0.y, r0.x, c4.w
    mov r2.yw, c4.x
    texld r0, r2.zwzw, s0
    mov_sat r0.w, r0.w
    mad r1, r0.xyzx, c4.zzzx, c4.xxxz
    mul r1, r0.w, r1
    texld r2, r2, s0
    mov_sat r0.x, r2.w
    mad r2, r2.xyzx, c4.zzzx, c4.xxxz
    mad r1, r2, r0.x, r1
    add r0.x, -r0.x, c4.z
    add r0.x, -r0.w, r0.x
    mul r2.xy, c2, v2
    mov r2.zw, c4.x
    texldl r2, r2, s1
    mad r0, r2, r0.x, r1
    mad r1, v1.xyzx, c4.zzzx, c4.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 67 instruction slots used (8 texture, 59 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGrad2FullBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,  63, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   2,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   4,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   4,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   0,   0, 
      4, 128,   4,   0, 170, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 161,   0,   0, 
    170, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    225, 129,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
      0,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      4,   0, 255, 160,  11,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0,   0, 128,   4,   0, 
      0, 160,  10,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
      0, 128,   4,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     17, 128,   0,   0,  85, 128, 
      4,   0, 255, 160,   4,   0, 
    255, 160,  88,   0,   0,   4, 
      2,   0,   4, 128,   0,   0, 
     85, 128,   0,   0,   0, 128, 
      4,   0, 255, 160,   1,   0, 
      0,   2,   2,   0,  10, 128, 
      4,   0,   0, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      2,   0, 238, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
     36, 128,   4,   0,  42, 160, 
      4,   0, 128, 160,   5,   0, 
      0,   3,   1,   0,  15, 128, 
      0,   0, 255, 128,   1,   0, 
    228, 128,  66,   0,   0,   3, 
      2,   0,  15, 128,   2,   0, 
    228, 128,   0,   8, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     17, 128,   2,   0, 255, 128, 
      4,   0,   0,   4,   2,   0, 
     15, 128,   2,   0,  36, 128, 
      4,   0,  42, 160,   4,   0, 
    128, 160,   4,   0,   0,   4, 
      1,   0,  15, 128,   2,   0, 
    228, 128,   0,   0,   0, 128, 
      1,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 129,   4,   0, 
    170, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 129,   0,   0,   0, 128, 
      5,   0,   0,   3,   2,   0, 
      3, 128,   2,   0, 228, 160, 
      2,   0, 228, 144,   1,   0, 
      0,   2,   2,   0,  12, 128, 
      4,   0,   0, 160,  95,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 128,   1,   8, 
    228, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 128,   0,   0,   0, 128, 
      1,   0, 228, 128,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,  36, 144,   4,   0, 
     42, 160,   4,   0, 128, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 9.99999975e-005, 0, 0, 0
    def c5, 0, 0, 1, 0.5
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c5.x
    mov r1.zw, c5.x
    mov r2.xy, c5.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c3, v2
        texldl r5, r1, s2
        mad r0.xy, r3, c3, v2
        texldl r6, r0, s2
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c5.z
      endrep
      mov r2.xy, r4
      add r2.z, r2.z, c5.z
    endrep
    mov r0.z, c5.z
    mad r0.xy, r2, -c0.w, r0.z
    add r0.xy, -r0.yxzw, r0
    mul r0.y, r0.y, c0.z
    mad r0.x, r0.x, -c0.z, r0.z
    mul r0.x, r0.x, c5.w
    max r1.x, r0.x, c5.x
    min r2.x, r1.x, c5.w
    mad_sat r0.x, r0.y, c5.w, c5.w
    cmp r2.z, r0.y, r0.x, c5.w
    mov r2.yw, c5.x
    texld r0, r2.zwzw, s0
    mov_sat r0.w, r0.w
    mad r1, r0.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0.w, r1
    texld r1, r2, s0
    mov_sat r1.w, r1.w
    mad r2, r1.xyzx, c5.zzzx, c5.xxxz
    mad r0, r2, r1.w, r0
    mul r1.xy, c2, v2
    mov r1.zw, c5.x
    texldl r1, r1, s1
    add r1.x, -r1.w, c5.z
    mul r2.w, r1.w, c4.x
    mov r2.xyz, c5.x
    mad r0, r0, r1.x, r2
    mad r1, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 66 instruction slots used (8 texture, 58 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGrad2HideBaseOuterBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,  23, 183, 209,  56, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     81,   0,   0,   5,   5,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,  63, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   2,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   5,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   0,   0, 
      4, 128,   5,   0, 170, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 161,   0,   0, 
    170, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    225, 129,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
      0,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      5,   0, 255, 160,  11,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0,   0, 128,   5,   0, 
      0, 160,  10,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
      0, 128,   5,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     17, 128,   0,   0,  85, 128, 
      5,   0, 255, 160,   5,   0, 
    255, 160,  88,   0,   0,   4, 
      2,   0,   4, 128,   0,   0, 
     85, 128,   0,   0,   0, 128, 
      5,   0, 255, 160,   1,   0, 
      0,   2,   2,   0,  10, 128, 
      5,   0,   0, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      2,   0, 238, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
     36, 128,   5,   0,  42, 160, 
      5,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 255, 128,   1,   0, 
    228, 128,  66,   0,   0,   3, 
      1,   0,  15, 128,   2,   0, 
    228, 128,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     24, 128,   1,   0, 255, 128, 
      4,   0,   0,   4,   2,   0, 
     15, 128,   1,   0,  36, 128, 
      5,   0,  42, 160,   5,   0, 
    128, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 128,   1,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      2,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   5,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   1,   0, 
      1, 128,   1,   0, 255, 129, 
      5,   0, 170, 160,   5,   0, 
      0,   3,   2,   0,   8, 128, 
      1,   0, 255, 128,   4,   0, 
      0, 160,   1,   0,   0,   2, 
      2,   0,   7, 128,   5,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0,   0, 128, 
      2,   0, 228, 128,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,  36, 144,   5,   0, 
     42, 160,   5,   0, 128, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   8,  15, 128,   0,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 9.99999975e-005, 0, 0, 0
    def c5, 0, 0, 1, 0.5
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c5.x
    mov r1.zw, c5.x
    mov r2.xy, c5.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c3, v2
        texldl r5, r1, s2
        mad r0.xy, r3, c3, v2
        texldl r6, r0, s2
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c5.z
      endrep
      mov r2.xy, r4
      add r2.z, r2.z, c5.z
    endrep
    mov r0.z, c5.z
    mad r0.xy, r2, -c0.w, r0.z
    add r0.xy, -r0.yxzw, r0
    mul r0.y, r0.y, c0.z
    mad r0.x, r0.x, -c0.z, r0.z
    mul r0.x, r0.x, c5.w
    max r1.x, r0.x, c5.x
    min r2.x, r1.x, c5.w
    mad_sat r0.x, r0.y, c5.w, c5.w
    cmp r2.z, r0.y, r0.x, c5.w
    mov r2.yw, c5.x
    texld r0, r2.zwzw, s0
    mov_sat r0.w, r0.w
    mad r1, r0.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0.w, r1
    texld r1, r2, s0
    mov_sat r1.w, r1.w
    mad r2, r1.xyzx, c5.zzzx, c5.xxxz
    mad r0, r2, r1.w, r0
    mul r1.xy, c2, v2
    mov r1.zw, c5.x
    texldl r1, r1, s1
    add r1.x, -r1.w, c5.z
    mul r2.w, r1.w, c4.x
    mov r2.xyz, c5.x
    mad r0, r0, r1.x, r2
    mad r1, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 68 instruction slots used (8 texture, 60 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGrad2HideBaseOuterBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,  23, 183, 209,  56, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     81,   0,   0,   5,   5,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,  63, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   2,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   5,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   0,   0, 
      4, 128,   5,   0, 170, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 161,   0,   0, 
    170, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    225, 129,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
      0,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      5,   0, 255, 160,  11,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0,   0, 128,   5,   0, 
      0, 160,  10,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
      0, 128,   5,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     17, 128,   0,   0,  85, 128, 
      5,   0, 255, 160,   5,   0, 
    255, 160,  88,   0,   0,   4, 
      2,   0,   4, 128,   0,   0, 
     85, 128,   0,   0,   0, 128, 
      5,   0, 255, 160,   1,   0, 
      0,   2,   2,   0,  10, 128, 
      5,   0,   0, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      2,   0, 238, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
     36, 128,   5,   0,  42, 160, 
      5,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 255, 128,   1,   0, 
    228, 128,  66,   0,   0,   3, 
      1,   0,  15, 128,   2,   0, 
    228, 128,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     24, 128,   1,   0, 255, 128, 
      4,   0,   0,   4,   2,   0, 
     15, 128,   1,   0,  36, 128, 
      5,   0,  42, 160,   5,   0, 
    128, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   2,   0, 
    228, 128,   1,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   1,   0,   3, 128, 
      2,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      1,   0,  12, 128,   5,   0, 
      0, 160,  95,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   1,   8, 228, 160, 
      2,   0,   0,   3,   1,   0, 
      1, 128,   1,   0, 255, 129, 
      5,   0, 170, 160,   5,   0, 
      0,   3,   2,   0,   8, 128, 
      1,   0, 255, 128,   4,   0, 
      0, 160,   1,   0,   0,   2, 
      2,   0,   7, 128,   5,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0,   0, 128, 
      2,   0, 228, 128,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,  36, 144,   5,   0, 
     42, 160,   5,   0, 128, 160, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    255, 144,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   0, 255, 128, 
      0,   0, 228, 128,   5,   0, 
      0,   3,   0,   8,   7, 128, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   1,   0,   0,   2, 
      0,   8,   8, 128,   0,   0, 
    255, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 9.99999975e-005, 0, 0, 0
    def c5, 0, 0, 1, 0.5
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c5.x
    mov r1.zw, c5.x
    mov r2.xy, c5.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c3, v2
        texldl r5, r1, s2
        mad r0.xy, r3, c3, v2
        texldl r6, r0, s2
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c5.z
      endrep
      mov r2.xy, r4
      add r2.z, r2.z, c5.z
    endrep
    mov r0.z, c5.z
    mad r0.xy, r2, -c0.w, r0.z
    add r0.xy, -r0.yxzw, r0
    mul r0.y, r0.y, c0.z
    mad r0.x, r0.x, -c0.z, r0.z
    mul r0.x, r0.x, c5.w
    max r1.x, r0.x, c5.x
    min r2.x, r1.x, c5.w
    mad_sat r0.x, r0.y, c5.w, c5.w
    cmp r2.z, r0.y, r0.x, c5.w
    mov r2.yw, c5.x
    texld r0, r2.zwzw, s0
    mov_sat r0.w, r0.w
    mad r1, r0.xyzx, c5.zzzx, c5.xxxz
    mul r1, r0.w, r1
    texld r2, r2, s0
    mov_sat r0.x, r2.w
    mad r2, r2.xyzx, c5.zzzx, c5.xxxz
    mad r1, r2, r0.x, r1
    add r0.x, -r0.x, c5.z
    add r0.x, -r0.w, r0.x
    mul r2.xy, c2, v2
    mov r2.zw, c5.x
    texldl r2, r2, s1
    mul r3.w, r2.w, c4.x
    mov r3.xyz, c5.x
    mad r0, r3, r0.x, r1
    mul r0, r2.w, r0
    mad r1, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 68 instruction slots used (8 texture, 60 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGrad2HideBaseInnerBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,  23, 183, 209,  56, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     81,   0,   0,   5,   5,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,  63, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   2,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   5,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   0,   0, 
      4, 128,   5,   0, 170, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 161,   0,   0, 
    170, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    225, 129,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
      0,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      5,   0, 255, 160,  11,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0,   0, 128,   5,   0, 
      0, 160,  10,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
      0, 128,   5,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     17, 128,   0,   0,  85, 128, 
      5,   0, 255, 160,   5,   0, 
    255, 160,  88,   0,   0,   4, 
      2,   0,   4, 128,   0,   0, 
     85, 128,   0,   0,   0, 128, 
      5,   0, 255, 160,   1,   0, 
      0,   2,   2,   0,  10, 128, 
      5,   0,   0, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      2,   0, 238, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
     36, 128,   5,   0,  42, 160, 
      5,   0, 128, 160,   5,   0, 
      0,   3,   1,   0,  15, 128, 
      0,   0, 255, 128,   1,   0, 
    228, 128,  66,   0,   0,   3, 
      2,   0,  15, 128,   2,   0, 
    228, 128,   0,   8, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     17, 128,   2,   0, 255, 128, 
      4,   0,   0,   4,   2,   0, 
     15, 128,   2,   0,  36, 128, 
      5,   0,  42, 160,   5,   0, 
    128, 160,   4,   0,   0,   4, 
      1,   0,  15, 128,   2,   0, 
    228, 128,   0,   0,   0, 128, 
      1,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 129,   5,   0, 
    170, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 129,   0,   0,   0, 128, 
      5,   0,   0,   3,   2,   0, 
      3, 128,   2,   0, 228, 160, 
      2,   0, 228, 144,   1,   0, 
      0,   2,   2,   0,  12, 128, 
      5,   0,   0, 160,  95,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 128,   1,   8, 
    228, 160,   5,   0,   0,   3, 
      3,   0,   8, 128,   2,   0, 
    255, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   3,   0, 
      7, 128,   5,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   3,   0, 228, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    255, 128,   0,   0, 228, 128, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   1,   0,  36, 144, 
      5,   0,  42, 160,   5,   0, 
    128, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 9.99999975e-005, 0, 0, 0
    def c5, 0, 0, 1, 0.5
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c5.x
    mov r1.zw, c5.x
    mov r2.xy, c5.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c3, v2
        texldl r5, r1, s2
        mad r0.xy, r3, c3, v2
        texldl r6, r0, s2
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c5.z
      endrep
      mov r2.xy, r4
      add r2.z, r2.z, c5.z
    endrep
    mov r0.z, c5.z
    mad r0.xy, r2, -c0.w, r0.z
    add r0.xy, -r0.yxzw, r0
    mul r0.y, r0.y, c0.z
    mad r0.x, r0.x, -c0.z, r0.z
    mul r0.x, r0.x, c5.w
    max r1.x, r0.x, c5.x
    min r2.x, r1.x, c5.w
    mad_sat r0.x, r0.y, c5.w, c5.w
    cmp r2.z, r0.y, r0.x, c5.w
    mov r2.yw, c5.x
    texld r0, r2.zwzw, s0
    mov_sat r0.w, r0.w
    mad r1, r0.xyzx, c5.zzzx, c5.xxxz
    mul r1, r0.w, r1
    texld r2, r2, s0
    mov_sat r0.x, r2.w
    mad r2, r2.xyzx, c5.zzzx, c5.xxxz
    mad r1, r2, r0.x, r1
    add r0.x, -r0.x, c5.z
    add r0.x, -r0.w, r0.x
    mul r2.xy, c2, v2
    mov r2.zw, c5.x
    texldl r2, r2, s1
    mul r3.w, r2.w, c4.x
    mov r3.xyz, c5.x
    mad r0, r3, r0.x, r1
    mul r0, r2.w, r0
    mad r1, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 70 instruction slots used (8 texture, 62 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGrad2HideBaseInnerBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,  23, 183, 209,  56, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     81,   0,   0,   5,   5,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,  63, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   2,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   5,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   0,   0, 
      4, 128,   5,   0, 170, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 161,   0,   0, 
    170, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    225, 129,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
      0,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      5,   0, 255, 160,  11,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0,   0, 128,   5,   0, 
      0, 160,  10,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
      0, 128,   5,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     17, 128,   0,   0,  85, 128, 
      5,   0, 255, 160,   5,   0, 
    255, 160,  88,   0,   0,   4, 
      2,   0,   4, 128,   0,   0, 
     85, 128,   0,   0,   0, 128, 
      5,   0, 255, 160,   1,   0, 
      0,   2,   2,   0,  10, 128, 
      5,   0,   0, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      2,   0, 238, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      0,   0,  24, 128,   0,   0, 
    255, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
     36, 128,   5,   0,  42, 160, 
      5,   0, 128, 160,   5,   0, 
      0,   3,   1,   0,  15, 128, 
      0,   0, 255, 128,   1,   0, 
    228, 128,  66,   0,   0,   3, 
      2,   0,  15, 128,   2,   0, 
    228, 128,   0,   8, 228, 160, 
      1,   0,   0,   2,   0,   0, 
     17, 128,   2,   0, 255, 128, 
      4,   0,   0,   4,   2,   0, 
     15, 128,   2,   0,  36, 128, 
      5,   0,  42, 160,   5,   0, 
    128, 160,   4,   0,   0,   4, 
      1,   0,  15, 128,   2,   0, 
    228, 128,   0,   0,   0, 128, 
      1,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 129,   5,   0, 
    170, 160,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
    255, 129,   0,   0,   0, 128, 
      5,   0,   0,   3,   2,   0, 
      3, 128,   2,   0, 228, 160, 
      2,   0, 228, 144,   1,   0, 
      0,   2,   2,   0,  12, 128, 
      5,   0,   0, 160,  95,   0, 
      0,   3,   2,   0,  15, 128, 
      2,   0, 228, 128,   1,   8, 
    228, 160,   5,   0,   0,   3, 
      3,   0,   8, 128,   2,   0, 
    255, 128,   4,   0,   0, 160, 
      1,   0,   0,   2,   3,   0, 
      7, 128,   5,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   3,   0, 228, 128, 
      0,   0,   0, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    255, 128,   0,   0, 228, 128, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   1,   0,  36, 144, 
      5,   0,  42, 160,   5,   0, 
    128, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   8, 
      7, 128,   0,   0, 255, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 9.99999975e-005, 0, 0, 0
    def c5, 0, 0, 1, 0.5
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c5.x
    mov r1.zw, c5.x
    mov r2.xy, c5.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c3, v2
        texldl r5, r1, s2
        mad r0.xy, r3, c3, v2
        texldl r6, r0, s2
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c5.z
      endrep
      mov r2.xy, r4
      add r2.z, r2.z, c5.z
    endrep
    mov r0.z, c5.z
    mad r0.xy, r2, -c0.w, r0.z
    add r0.xy, -r0.yxzw, r0
    mul r0.y, r0.y, c0.z
    mad r0.x, r0.x, -c0.z, r0.z
    mul r0.x, r0.x, c5.w
    max r1.x, r0.x, c5.x
    min r2.x, r1.x, c5.w
    mad_sat r0.x, r0.y, c5.w, c5.w
    cmp r2.z, r0.y, r0.x, c5.w
    mul r0.xy, c2, v2
    mov r0.zw, c5.x
    texldl r0, r0, s1
    mul r0.w, r0.w, c4.x
    mov r2.yw, c5.x
    texld r1, r2.zwzw, s0
    mov_sat r1.w, r1.w
    mad r3, r1.xyzx, c5.zzzx, c5.xxxz
    mul r3, r1.w, r3
    texld r2, r2, s0
    mov_sat r1.x, r2.w
    mad r2, r2.xyzx, c5.zzzx, c5.xxxz
    mad r2, r2, r1.x, r3
    add r1.x, -r1.x, c5.z
    add r1.x, -r1.w, r1.x
    mov r0.xyz, c5.x
    mad r0, r0, r1.x, r2
    mad r1, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 67 instruction slots used (8 texture, 59 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGrad2HideBaseFullBevel[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,  23, 183, 209,  56, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     81,   0,   0,   5,   5,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,  63, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   2,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   5,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   0,   0, 
      4, 128,   5,   0, 170, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 161,   0,   0, 
    170, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    225, 129,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
      0,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      5,   0, 255, 160,  11,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0,   0, 128,   5,   0, 
      0, 160,  10,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
      0, 128,   5,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     17, 128,   0,   0,  85, 128, 
      5,   0, 255, 160,   5,   0, 
    255, 160,  88,   0,   0,   4, 
      2,   0,   4, 128,   0,   0, 
     85, 128,   0,   0,   0, 128, 
      5,   0, 255, 160,   5,   0, 
      0,   3,   0,   0,   3, 128, 
      2,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,  12, 128,   5,   0, 
      0, 160,  95,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      4,   0,   0, 160,   1,   0, 
      0,   2,   2,   0,  10, 128, 
      5,   0,   0, 160,  66,   0, 
      0,   3,   1,   0,  15, 128, 
      2,   0, 238, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      1,   0,  24, 128,   1,   0, 
    255, 128,   4,   0,   0,   4, 
      3,   0,  15, 128,   1,   0, 
     36, 128,   5,   0,  42, 160, 
      5,   0, 128, 160,   5,   0, 
      0,   3,   3,   0,  15, 128, 
      1,   0, 255, 128,   3,   0, 
    228, 128,  66,   0,   0,   3, 
      2,   0,  15, 128,   2,   0, 
    228, 128,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     17, 128,   2,   0, 255, 128, 
      4,   0,   0,   4,   2,   0, 
     15, 128,   2,   0,  36, 128, 
      5,   0,  42, 160,   5,   0, 
    128, 160,   4,   0,   0,   4, 
      2,   0,  15, 128,   2,   0, 
    228, 128,   1,   0,   0, 128, 
      3,   0, 228, 128,   2,   0, 
      0,   3,   1,   0,   1, 128, 
      1,   0,   0, 129,   5,   0, 
    170, 160,   2,   0,   0,   3, 
      1,   0,   1, 128,   1,   0, 
    255, 129,   1,   0,   0, 128, 
      1,   0,   0,   2,   0,   0, 
      7, 128,   5,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0,   0, 128,   2,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   5,   0,  42, 160, 
      5,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   8, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 fsize;
//   sampler2D gradtex;
//   float4 offset;
//   sampler2D srctex;
//   float4 srctexscale;
//   sampler2D tex;
//   float4 texscale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   fsize        c0       1
//   offset       c1       1
//   srctexscale  c2       1
//   texscale     c3       1
//   gradtex      s0       1
//   srctex       s1       1
//   tex          s2       1
//

    ps_3_0
    def c4, 9.99999975e-005, 0, 0, 0
    def c5, 0, 0, 1, 0.5
    defi i0, 255, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.zw, c5.x
    mov r1.zw, c5.x
    mov r2.xy, c5.x
    mov r2.z, -c0.x
    rep i0
      break_lt c0.x, r2.z
      add r3.x, r2.z, c1.x
      mov r4.xy, r2
      mov r4.z, -c0.y
      rep i0
        break_lt c0.y, r4.z
        add r3.y, r4.z, c1.y
        mad r1.xy, r3, -c3, v2
        texldl r5, r1, s2
        mad r0.xy, r3, c3, v2
        texldl r6, r0, s2
        add r4.y, r4.y, r6.w
        add r4.x, r4.x, r5.w
        add r4.z, r4.z, c5.z
      endrep
      mov r2.xy, r4
      add r2.z, r2.z, c5.z
    endrep
    mov r0.z, c5.z
    mad r0.xy, r2, -c0.w, r0.z
    add r0.xy, -r0.yxzw, r0
    mul r0.y, r0.y, c0.z
    mad r0.x, r0.x, -c0.z, r0.z
    mul r0.x, r0.x, c5.w
    max r1.x, r0.x, c5.x
    min r2.x, r1.x, c5.w
    mad_sat r0.x, r0.y, c5.w, c5.w
    cmp r2.z, r0.y, r0.x, c5.w
    mul r0.xy, c2, v2
    mov r0.zw, c5.x
    texldl r0, r0, s1
    mul r0.w, r0.w, c4.x
    mov r2.yw, c5.x
    texld r1, r2.zwzw, s0
    mov_sat r1.w, r1.w
    mad r3, r1.xyzx, c5.zzzx, c5.xxxz
    mul r3, r1.w, r3
    texld r2, r2, s0
    mov_sat r1.x, r2.w
    mad r2, r2.xyzx, c5.zzzx, c5.xxxz
    mad r2, r2, r1.x, r3
    add r1.x, -r1.x, c5.z
    add r1.x, -r1.w, r1.x
    mov r0.xyz, c5.x
    mad r0, r0, r1.x, r2
    mad r1, v1.xyzx, c5.zzzx, c5.xxxz
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad r0, v0, r0.w, r0
    mul oC0.xyz, r0.w, r0
    mov oC0.w, r0.w

// approximately 69 instruction slots used (8 texture, 61 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FSGrad2HideBaseFullBevelMul[] =
{
      0,   3, 255, 255, 254, 255, 
     88,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  40,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     33,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0, 216,   0,   0,   0, 
      2,   0,   1,   0,   1,   0, 
      6,   0, 176,   0,   0,   0, 
      0,   0,   0,   0, 223,   0, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0, 232,   0, 
      0,   0,   0,   0,   0,   0, 
    248,   0,   0,   0,   2,   0, 
      2,   0,   1,   0,  10,   0, 
    176,   0,   0,   0,   0,   0, 
      0,   0,   4,   1,   0,   0, 
      3,   0,   2,   0,   1,   0, 
     10,   0,   8,   1,   0,   0, 
      0,   0,   0,   0,  24,   1, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 176,   0, 
      0,   0,   0,   0,   0,   0, 
    102, 115, 105, 122, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    103, 114,  97, 100, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    111, 102, 102, 115, 101, 116, 
      0, 115, 114,  99, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120, 115,  99,  97, 108, 
    101,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 116, 101, 
    120, 115,  99,  97, 108, 101, 
      0, 112, 115,  95,  51,  95, 
     48,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  57,  46,  51,  48,  46, 
     57,  50,  48,  48,  46,  49, 
     54,  51,  56,  52,   0, 171, 
     81,   0,   0,   5,   4,   0, 
     15, 160,  23, 183, 209,  56, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     81,   0,   0,   5,   5,   0, 
     15, 160,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,  63, 
     48,   0,   0,   5,   0,   0, 
     15, 240, 255,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,   3, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   2,   8,  15, 160, 
      1,   0,   0,   2,   0,   0, 
     12, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   1,   0, 
     12, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      3, 128,   5,   0,   0, 160, 
      1,   0,   0,   2,   2,   0, 
      4, 128,   0,   0,   0, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,   0, 160,   2,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   1, 128,   2,   0, 
    170, 128,   1,   0,   0, 160, 
      1,   0,   0,   2,   4,   0, 
      3, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   4,   0, 
      4, 128,   0,   0,  85, 161, 
     38,   0,   0,   1,   0,   0, 
    228, 240,  45,   0,   4,   2, 
      0,   0,  85, 160,   4,   0, 
    170, 128,   2,   0,   0,   3, 
      3,   0,   2, 128,   4,   0, 
    170, 128,   1,   0,  85, 160, 
      4,   0,   0,   4,   1,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 161,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      5,   0,  15, 128,   1,   0, 
    228, 128,   2,   8, 228, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   3,   0, 228, 128, 
      3,   0, 228, 160,   2,   0, 
    228, 144,  95,   0,   0,   3, 
      6,   0,  15, 128,   0,   0, 
    228, 128,   2,   8, 228, 160, 
      2,   0,   0,   3,   4,   0, 
      2, 128,   4,   0,  85, 128, 
      6,   0, 255, 128,   2,   0, 
      0,   3,   4,   0,   1, 128, 
      4,   0,   0, 128,   5,   0, 
    255, 128,   2,   0,   0,   3, 
      4,   0,   4, 128,   4,   0, 
    170, 128,   5,   0, 170, 160, 
     39,   0,   0,   0,   1,   0, 
      0,   2,   2,   0,   3, 128, 
      4,   0, 228, 128,   2,   0, 
      0,   3,   2,   0,   4, 128, 
      2,   0, 170, 128,   5,   0, 
    170, 160,  39,   0,   0,   0, 
      1,   0,   0,   2,   0,   0, 
      4, 128,   5,   0, 170, 160, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   2,   0, 228, 128, 
      0,   0, 255, 161,   0,   0, 
    170, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   0,   0, 
    225, 129,   0,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0,  85, 128, 
      0,   0, 170, 160,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      0,   0,   0, 128,   0,   0, 
    170, 161,   0,   0, 170, 128, 
      5,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 128, 
      5,   0, 255, 160,  11,   0, 
      0,   3,   1,   0,   1, 128, 
      0,   0,   0, 128,   5,   0, 
      0, 160,  10,   0,   0,   3, 
      2,   0,   1, 128,   1,   0, 
      0, 128,   5,   0, 255, 160, 
      4,   0,   0,   4,   0,   0, 
     17, 128,   0,   0,  85, 128, 
      5,   0, 255, 160,   5,   0, 
    255, 160,  88,   0,   0,   4, 
      2,   0,   4, 128,   0,   0, 
     85, 128,   0,   0,   0, 128, 
      5,   0, 255, 160,   5,   0, 
      0,   3,   0,   0,   3, 128, 
      2,   0, 228, 160,   2,   0, 
    228, 144,   1,   0,   0,   2, 
      0,   0,  12, 128,   5,   0, 
      0, 160,  95,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   8, 228, 160, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      4,   0,   0, 160,   1,   0, 
      0,   2,   2,   0,  10, 128, 
      5,   0,   0, 160,  66,   0, 
      0,   3,   1,   0,  15, 128, 
      2,   0, 238, 128,   0,   8, 
    228, 160,   1,   0,   0,   2, 
      1,   0,  24, 128,   1,   0, 
    255, 128,   4,   0,   0,   4, 
      3,   0,  15, 128,   1,   0, 
     36, 128,   5,   0,  42, 160, 
      5,   0, 128, 160,   5,   0, 
      0,   3,   3,   0,  15, 128, 
      1,   0, 255, 128,   3,   0, 
    228, 128,  66,   0,   0,   3, 
      2,   0,  15, 128,   2,   0, 
    228, 128,   0,   8, 228, 160, 
      1,   0,   0,   2,   1,   0, 
     17, 128,   2,   0, 255, 128, 
      4,   0,   0,   4,   2,   0, 
     15, 128,   2,   0,  36, 128, 
      5,   0,  42, 160,   5,   0, 
    128, 160,   4,   0,   0,   4, 
      2,   0,  15, 128,   2,   0, 
    228, 128,   1,   0,   0, 128, 
      3,   0, 228, 128,   2,   0, 
      0,   3,   1,   0,   1, 128, 
      1,   0,   0, 129,   5,   0, 
    170, 160,   2,   0,   0,   3, 
      1,   0,   1, 128,   1,   0, 
    255, 129,   1,   0,   0, 128, 
      1,   0,   0,   2,   0,   0, 
      7, 128,   5,   0,   0, 160, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0,   0, 128,   2,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
     36, 144,   5,   0,  42, 160, 
      5,   0, 128, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 255, 144, 
      4,   0,   0,   4,   0,   0, 
     15, 128,   0,   0, 228, 144, 
      0,   0, 255, 128,   0,   0, 
    228, 128,   5,   0,   0,   3, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   0,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0, 255, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 compx;
//   float4 compy;
//   float4 mapScale;
//   sampler2D maptex;
//   float2 scale;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   compx        c0       1
//   compy        c1       1
//   mapScale     c2       1
//   scale        c3       1
//   maptex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c4, 1, 0, -1, 0.5
    dcl_texcoord v0.xy
    dcl_2d s0
    dcl_2d s1
    mad r0.xy, v0, c2, -c2.zwzw
    add r0.zw, r0.xyxy, c4.z
    cmp r0.zw, r0, c4.x, c4.y
    dp2add r0.z, r0.zwzw, c4.x, c4.y
    cmp r1.xy, -r0, c4.x, c4.y
    texld r2, r0, s0
    dp2add_sat r0.x, r1, c4.x, r0.z
    add r0.x, -r0.x, c4.x
    lrp r1, r0.x, r2, c4.w
    mul r0, r1, c0
    mul r1, r1, c1
    dp4 r1.y, c4.x, r1
    dp4 r1.x, c4.x, r0
    add r0.xy, r1, -c4.w
    mad r0.xy, r0, c3, v0
    texld oC0, r0, s1

// approximately 18 instruction slots used (2 texture, 16 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FDisplacementMap[] =
{
      0,   3, 255, 255, 254, 255, 
     80,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,   7,   1, 
      0,   0,   0,   3, 255, 255, 
      6,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
      0,   1,   0,   0, 148,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 156,   0, 
      0,   0,   0,   0,   0,   0, 
    172,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    156,   0,   0,   0,   0,   0, 
      0,   0, 178,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 156,   0,   0,   0, 
      0,   0,   0,   0, 187,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    212,   0,   0,   0,   2,   0, 
      3,   0,   1,   0,  14,   0, 
    220,   0,   0,   0,   0,   0, 
      0,   0, 236,   0,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      6,   0, 240,   0,   0,   0, 
      0,   0,   0,   0,  99, 111, 
    109, 112, 120,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 111, 
    109, 112, 121,   0, 109,  97, 
    112,  83,  99,  97, 108, 101, 
      0, 109,  97, 112, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115,  99,  97, 108, 
    101,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   4,   0,  15, 160, 
      0,   0, 128,  63,   0,   0, 
      0,   0,   0,   0, 128, 191, 
      0,   0,   0,  63,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,   3, 144,  31,   0, 
      0,   2,   0,   0,   0, 144, 
      0,   8,  15, 160,  31,   0, 
      0,   2,   0,   0,   0, 144, 
      1,   8,  15, 160,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 228, 144,   2,   0, 
    228, 160,   2,   0, 238, 161, 
      2,   0,   0,   3,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      4,   0, 170, 160,  88,   0, 
      0,   4,   0,   0,  12, 128, 
      0,   0, 228, 128,   4,   0, 
      0, 160,   4,   0,  85, 160, 
     90,   0,   0,   4,   0,   0, 
      4, 128,   0,   0, 238, 128, 
      4,   0,   0, 160,   4,   0, 
     85, 160,  88,   0,   0,   4, 
      1,   0,   3, 128,   0,   0, 
    228, 129,   4,   0,   0, 160, 
      4,   0,  85, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 128,   0,   8, 
    228, 160,  90,   0,   0,   4, 
      0,   0,  17, 128,   1,   0, 
    228, 128,   4,   0,   0, 160, 
      0,   0, 170, 128,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 129,   4,   0, 
      0, 160,  18,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
      0, 128,   2,   0, 228, 128, 
      4,   0, 255, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 160,   5,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   1,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      2, 128,   4,   0,   0, 160, 
      1,   0, 228, 128,   9,   0, 
      0,   3,   1,   0,   1, 128, 
      4,   0,   0, 160,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   1,   0, 
    228, 128,   4,   0, 255, 161, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      3,   0, 228, 160,   0,   0, 
    228, 144,  66,   0,   0,   3, 
      0,   8,  15, 128,   0,   0, 
    228, 128,   1,   8, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 compx;
//   float4 compy;
//   float4 mapScale;
//   sampler2D maptex;
//   float2 scale;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   compx        c0       1
//   compy        c1       1
//   mapScale     c2       1
//   scale        c3       1
//   maptex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c4, 1, 0, -1, 0.5
    dcl_texcoord_pp v0.xy
    dcl_2d s0
    dcl_2d s1
    mad r0.xy, v0, c2, -c2.zwzw
    add r0.zw, r0.xyxy, c4.z
    cmp r0.zw, r0, c4.x, c4.y
    dp2add r0.z, r0.zwzw, c4.x, c4.y
    cmp r1.xy, -r0, c4.x, c4.y
    texld r2, r0, s0
    dp2add_sat r0.x, r1, c4.x, r0.z
    add r0.x, -r0.x, c4.x
    lrp r1, r0.x, r2, c4.w
    mul r0, r1, c0
    mul r1, r1, c1
    dp4 r1.y, c4.x, r1
    dp4 r1.x, c4.x, r0
    add r0.xy, r1, -c4.w
    mad r0.xy, r0, c3, v0
    add r0.zw, r0.xyxy, c4.z
    cmp r0.zw, r0, c4.x, c4.y
    dp2add r0.z, r0.zwzw, c4.x, c4.y
    cmp r1.xy, -r0, c4.x, c4.y
    texld r2, r0, s1
    dp2add_sat r0.x, r1, c4.x, r0.z
    add r0.x, -r0.x, c4.x
    texld r1, v0, s1
    lrp oC0, r0.x, r2, r1

// approximately 28 instruction slots used (3 texture, 25 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FDisplacementMapDMIgnore[] =
{
      0,   3, 255, 255, 254, 255, 
     80,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,   7,   1, 
      0,   0,   0,   3, 255, 255, 
      6,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
      0,   1,   0,   0, 148,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 156,   0, 
      0,   0,   0,   0,   0,   0, 
    172,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    156,   0,   0,   0,   0,   0, 
      0,   0, 178,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 156,   0,   0,   0, 
      0,   0,   0,   0, 187,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0, 196,   0, 
      0,   0,   0,   0,   0,   0, 
    212,   0,   0,   0,   2,   0, 
      3,   0,   1,   0,  14,   0, 
    220,   0,   0,   0,   0,   0, 
      0,   0, 236,   0,   0,   0, 
      3,   0,   1,   0,   1,   0, 
      6,   0, 240,   0,   0,   0, 
      0,   0,   0,   0,  99, 111, 
    109, 112, 120,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 111, 
    109, 112, 121,   0, 109,  97, 
    112,  83,  99,  97, 108, 101, 
      0, 109,  97, 112, 116, 101, 
    120,   0, 171, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115,  99,  97, 108, 
    101,   0, 171, 171,   1,   0, 
      3,   0,   1,   0,   2,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   4,   0,  15, 160, 
      0,   0, 128,  63,   0,   0, 
      0,   0,   0,   0, 128, 191, 
      0,   0,   0,  63,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,  35, 144,  31,   0, 
      0,   2,   0,   0,   0, 144, 
      0,   8,  15, 160,  31,   0, 
      0,   2,   0,   0,   0, 144, 
      1,   8,  15, 160,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 228, 144,   2,   0, 
    228, 160,   2,   0, 238, 161, 
      2,   0,   0,   3,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      4,   0, 170, 160,  88,   0, 
      0,   4,   0,   0,  12, 128, 
      0,   0, 228, 128,   4,   0, 
      0, 160,   4,   0,  85, 160, 
     90,   0,   0,   4,   0,   0, 
      4, 128,   0,   0, 238, 128, 
      4,   0,   0, 160,   4,   0, 
     85, 160,  88,   0,   0,   4, 
      1,   0,   3, 128,   0,   0, 
    228, 129,   4,   0,   0, 160, 
      4,   0,  85, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 128,   0,   8, 
    228, 160,  90,   0,   0,   4, 
      0,   0,  17, 128,   1,   0, 
    228, 128,   4,   0,   0, 160, 
      0,   0, 170, 128,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 129,   4,   0, 
      0, 160,  18,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
      0, 128,   2,   0, 228, 128, 
      4,   0, 255, 160,   5,   0, 
      0,   3,   0,   0,  15, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 160,   5,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   1,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      2, 128,   4,   0,   0, 160, 
      1,   0, 228, 128,   9,   0, 
      0,   3,   1,   0,   1, 128, 
      4,   0,   0, 160,   0,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   3, 128,   1,   0, 
    228, 128,   4,   0, 255, 161, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      3,   0, 228, 160,   0,   0, 
    228, 144,   2,   0,   0,   3, 
      0,   0,  12, 128,   0,   0, 
     68, 128,   4,   0, 170, 160, 
     88,   0,   0,   4,   0,   0, 
     12, 128,   0,   0, 228, 128, 
      4,   0,   0, 160,   4,   0, 
     85, 160,  90,   0,   0,   4, 
      0,   0,   4, 128,   0,   0, 
    238, 128,   4,   0,   0, 160, 
      4,   0,  85, 160,  88,   0, 
      0,   4,   1,   0,   3, 128, 
      0,   0, 228, 129,   4,   0, 
      0, 160,   4,   0,  85, 160, 
     66,   0,   0,   3,   2,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   8, 228, 160,  90,   0, 
      0,   4,   0,   0,  17, 128, 
      1,   0, 228, 128,   4,   0, 
      0, 160,   0,   0, 170, 128, 
      2,   0,   0,   3,   0,   0, 
      1, 128,   0,   0,   0, 129, 
      4,   0,   0, 160,  66,   0, 
      0,   3,   1,   0,  15, 128, 
      0,   0, 228, 144,   1,   8, 
    228, 160,  18,   0,   0,   4, 
      0,   8,  15, 128,   0,   0, 
      0, 128,   2,   0, 228, 128, 
      1,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 boundColor;
//   float4 compx;
//   float4 compy;
//   float4 mapScale;
//   sampler2D maptex;
//   float2 scale;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   boundColor   c0       1
//   compx        c1       1
//   compy        c2       1
//   mapScale     c3       1
//   scale        c4       1
//   maptex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c5, 1, 0, -1, 0.5
    dcl_texcoord v0.xy
    dcl_2d s0
    dcl_2d s1
    mad r0.xy, v0, c3, -c3.zwzw
    add r0.zw, r0.xyxy, c5.z
    cmp r0.zw, r0, c5.x, c5.y
    dp2add r0.z, r0.zwzw, c5.x, c5.y
    cmp r1.xy, -r0, c5.x, c5.y
    texld r2, r0, s0
    dp2add_sat r0.x, r1, c5.x, r0.z
    add r0.x, -r0.x, c5.x
    lrp r1, r0.x, r2, c5.w
    mul r0, r1, c1
    mul r1, r1, c2
    dp4 r1.y, c5.x, r1
    dp4 r1.x, c5.x, r0
    add r0.xy, r1, -c5.w
    mad r0.xy, r0, c4, v0
    add r0.zw, r0.xyxy, c5.z
    cmp r0.zw, r0, c5.x, c5.y
    dp2add r0.z, r0.zwzw, c5.x, c5.y
    cmp r1.xy, -r0, c5.x, c5.y
    texld r2, r0, s1
    dp2add_sat r0.x, r1, c5.x, r0.z
    add r0.x, -r0.x, c5.x
    lrp oC0, r0.x, r2, c0

// approximately 27 instruction slots used (2 texture, 25 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FDisplacementMapDMColor[] =
{
      0,   3, 255, 255, 254, 255, 
     87,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  35,   1, 
      0,   0,   0,   3, 255, 255, 
      7,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     28,   1,   0,   0, 168,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   2,   0, 180,   0, 
      0,   0,   0,   0,   0,   0, 
    196,   0,   0,   0,   2,   0, 
      1,   0,   1,   0,   6,   0, 
    180,   0,   0,   0,   0,   0, 
      0,   0, 202,   0,   0,   0, 
      2,   0,   2,   0,   1,   0, 
     10,   0, 180,   0,   0,   0, 
      0,   0,   0,   0, 208,   0, 
      0,   0,   2,   0,   3,   0, 
      1,   0,  14,   0, 180,   0, 
      0,   0,   0,   0,   0,   0, 
    217,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   2,   0, 
    224,   0,   0,   0,   0,   0, 
      0,   0, 240,   0,   0,   0, 
      2,   0,   4,   0,   1,   0, 
     18,   0, 248,   0,   0,   0, 
      0,   0,   0,   0,   8,   1, 
      0,   0,   3,   0,   1,   0, 
      1,   0,   6,   0,  12,   1, 
      0,   0,   0,   0,   0,   0, 
     98, 111, 117, 110, 100,  67, 
    111, 108, 111, 114,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 111, 
    109, 112, 120,   0,  99, 111, 
    109, 112, 121,   0, 109,  97, 
    112,  83,  99,  97, 108, 101, 
      0, 109,  97, 112, 116, 101, 
    120,   0,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    115,  99,  97, 108, 101,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   2,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      5,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0, 128, 191,   0,   0, 
      0,  63,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,   4,   0,   0,   4, 
      0,   0,   3, 128,   0,   0, 
    228, 144,   3,   0, 228, 160, 
      3,   0, 238, 161,   2,   0, 
      0,   3,   0,   0,  12, 128, 
      0,   0,  68, 128,   5,   0, 
    170, 160,  88,   0,   0,   4, 
      0,   0,  12, 128,   0,   0, 
    228, 128,   5,   0,   0, 160, 
      5,   0,  85, 160,  90,   0, 
      0,   4,   0,   0,   4, 128, 
      0,   0, 238, 128,   5,   0, 
      0, 160,   5,   0,  85, 160, 
     88,   0,   0,   4,   1,   0, 
      3, 128,   0,   0, 228, 129, 
      5,   0,   0, 160,   5,   0, 
     85, 160,  66,   0,   0,   3, 
      2,   0,  15, 128,   0,   0, 
    228, 128,   0,   8, 228, 160, 
     90,   0,   0,   4,   0,   0, 
     17, 128,   1,   0, 228, 128, 
      5,   0,   0, 160,   0,   0, 
    170, 128,   2,   0,   0,   3, 
      0,   0,   1, 128,   0,   0, 
      0, 129,   5,   0,   0, 160, 
     18,   0,   0,   4,   1,   0, 
     15, 128,   0,   0,   0, 128, 
      2,   0, 228, 128,   5,   0, 
    255, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 128,   1,   0, 228, 160, 
      5,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
      2,   0, 228, 160,   9,   0, 
      0,   3,   1,   0,   2, 128, 
      5,   0,   0, 160,   1,   0, 
    228, 128,   9,   0,   0,   3, 
      1,   0,   1, 128,   5,   0, 
      0, 160,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   1,   0, 228, 128, 
      5,   0, 255, 161,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      0,   0, 228, 128,   4,   0, 
    228, 160,   0,   0, 228, 144, 
      2,   0,   0,   3,   0,   0, 
     12, 128,   0,   0,  68, 128, 
      5,   0, 170, 160,  88,   0, 
      0,   4,   0,   0,  12, 128, 
      0,   0, 228, 128,   5,   0, 
      0, 160,   5,   0,  85, 160, 
     90,   0,   0,   4,   0,   0, 
      4, 128,   0,   0, 238, 128, 
      5,   0,   0, 160,   5,   0, 
     85, 160,  88,   0,   0,   4, 
      1,   0,   3, 128,   0,   0, 
    228, 129,   5,   0,   0, 160, 
      5,   0,  85, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 128,   1,   8, 
    228, 160,  90,   0,   0,   4, 
      0,   0,  17, 128,   1,   0, 
    228, 128,   5,   0,   0, 160, 
      0,   0, 170, 128,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0,   0, 129,   5,   0, 
      0, 160,  18,   0,   0,   4, 
      0,   8,  15, 128,   0,   0, 
      0, 128,   2,   0, 228, 128, 
      0,   0, 228, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[144];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     144
//

    vs_3_0
    def c144, 6, 0.100000001, 2.0999999, 0
    def c145, 0, 1, 0, 0
    def c146, 1.10000002, 3.0999999, 4.0999999, 5.0999999
    dcl_position v0
    dcl_color1 v1
    dcl_texcoord o0.xy
    dcl_texcoord1 o1.xy
    dcl_position o2
    mad r0.xy, v1.x, c144.x, c144.yzzw
    frc r1, r0.xyyy
    add r0.xy, r0, -r1.xwzw
    mad r1, v1.x, c144.x, -r1
    add r1, r1, c146
    mova a0.xy, r0
    dp4 o0.x, v0, c0[a0.y]
    dp4 o2.x, v0, c0[a0.x]
    mova a0.x, r1.x
    dp4 o2.y, v0, c0[a0.x]
    mova a0.x, r1.y
    dp4 o0.y, v0, c0[a0.x]
    mova a0.xy, r1.zwzw
    dp4 o1.y, v0, c0[a0.y]
    dp4 o1.x, v0, c0[a0.x]
    mov o2.zw, c145.xyxy

// approximately 16 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VDrawableCopyPixels[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    144,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 144,   0,  15, 160, 
      0,   0, 192,  64, 205, 204, 
    204,  61, 102, 102,   6,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 145,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 146,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
     70,  64,  51,  51, 131,  64, 
     51,  51, 163,  64,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,   3, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      1,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      2,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      1,   0,   0, 144, 144,   0, 
      0, 160, 144,   0, 233, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0,  84, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      1,   0, 236, 129,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,   0, 144, 144,   0, 
      0, 160,   1,   0, 228, 129, 
      2,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
    146,   0, 228, 160,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 228, 128,   9,   0, 
      0,   4,   0,   0,   1, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   2,   0, 
      1, 224,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   1,   0, 
      0, 128,   9,   0,   0,   4, 
      2,   0,   2, 224,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      1,   0,  85, 128,   9,   0, 
      0,   4,   0,   0,   2, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 238, 128, 
      9,   0,   0,   4,   1,   0, 
      2, 224,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      1,   0,   1, 224,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,   1,   0, 
      0,   2,   2,   0,  12, 224, 
    145,   0,  68, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    dcl_texcoord1 v0.xy
    dcl_2d s1
    texld oC0, v0, s1

// approximately 1 instruction slot used (1 texture, 0 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FDrawableCopyPixels[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   6,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   1, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   8,  15, 128,   0,   0, 
    228, 144,   1,   8, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    texld r1, v1, s1
    lrp r2.x, r0.w, c0.x, r1.w
    rcp r0.w, r2.x
    mov oC0.w, r2.x
    mul r0.w, r0.w, r1.w
    add r1.xyz, -r0, r1
    mad oC0.xyz, r0.w, r1, r0

// approximately 8 instruction slots used (2 texture, 6 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FDrawableCopyPixelsMergeAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 144, 
      1,   8, 228, 160,  18,   0, 
      0,   4,   2,   0,   1, 128, 
      0,   0, 255, 128,   0,   0, 
      0, 160,   1,   0, 255, 128, 
      6,   0,   0,   2,   0,   0, 
      8, 128,   2,   0,   0, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   2,   0,   0, 128, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      1,   0, 255, 128,   2,   0, 
      0,   3,   1,   0,   7, 128, 
      0,   0, 228, 129,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      0,   8,   7, 128,   0,   0, 
    255, 128,   1,   0, 228, 128, 
      0,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    texld r1, v1, s1
    add r1.xyz, -r0, r1
    mad oC0.xyz, r1.w, r1, r0
    mov oC0.w, c0.x

// approximately 5 instruction slots used (2 texture, 3 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FDrawableCopyPixelsNoDestAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   1,   0,   7, 128, 
      0,   0, 228, 129,   1,   0, 
    228, 128,   4,   0,   0,   4, 
      0,   8,   7, 128,   1,   0, 
    255, 128,   1,   0, 228, 128, 
      0,   0, 228, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0,   0, 160, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[192];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     192
//

    vs_3_0
    def c192, 8, 0.100000001, 2.0999999, 0
    def c193, 6.0999999, 7.0999999, 0, 1
    def c194, 1.10000002, 3.0999999, 4.0999999, 5.0999999
    dcl_position v0
    dcl_color1 v1
    dcl_texcoord o0.xy
    dcl_texcoord1 o1.xy
    dcl_texcoord2 o2.xy
    dcl_position o3
    mad r0.xy, v1.x, c192.x, c192.yzzw
    frc r1, r0.xyyy
    add r0.xy, r0, -r1.xwzw
    mad r1, v1.x, c192.x, -r1
    mova a0.xy, r0
    dp4 o0.x, v0, c0[a0.y]
    dp4 o3.x, v0, c0[a0.x]
    add r0, r1, c194
    add r1.xy, r1.w, c193
    mova a0.x, r0.x
    dp4 o3.y, v0, c0[a0.x]
    mova a0.x, r0.y
    dp4 o0.y, v0, c0[a0.x]
    mova a0.xy, r0.zwzw
    dp4 o1.y, v0, c0[a0.y]
    dp4 o1.x, v0, c0[a0.x]
    mova a0.xy, r1
    dp4 o2.y, v0, c0[a0.y]
    dp4 o2.x, v0, c0[a0.x]
    mov o3.zw, c193

// approximately 20 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VDrawableCopyPixelsAlpha[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    192,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 192,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
      0,   0,   0,  65, 205, 204, 
    204,  61, 102, 102,   6,  64, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 193,   0,  15, 160, 
     51,  51, 195,  64,  51,  51, 
    227,  64,   0,   0,   0,   0, 
      0,   0, 128,  63,  81,   0, 
      0,   5, 194,   0,  15, 160, 
    205, 204, 140,  63, 102, 102, 
     70,  64,  51,  51, 131,  64, 
     51,  51, 163,  64,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,   3, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      1,   0,   3, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      3,   0,  15, 224,   4,   0, 
      0,   4,   0,   0,   3, 128, 
      1,   0,   0, 144, 192,   0, 
      0, 160, 192,   0, 233, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0,  84, 128, 
      2,   0,   0,   3,   0,   0, 
      3, 128,   0,   0, 228, 128, 
      1,   0, 236, 129,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,   0, 144, 192,   0, 
      0, 160,   1,   0, 228, 129, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   0,   0, 228, 128, 
      9,   0,   0,   4,   0,   0, 
      1, 224,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      3,   0,   1, 224,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,   2,   0, 
      0,   3,   0,   0,  15, 128, 
      1,   0, 228, 128, 194,   0, 
    228, 160,   2,   0,   0,   3, 
      1,   0,   3, 128,   1,   0, 
    255, 128, 193,   0, 228, 160, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   0,   0,   0, 128, 
      9,   0,   0,   4,   3,   0, 
      2, 224,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
     85, 128,   9,   0,   0,   4, 
      0,   0,   2, 224,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 238, 128,   9,   0, 
      0,   4,   1,   0,   2, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,  85, 176, 
      9,   0,   0,   4,   1,   0, 
      1, 224,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   3, 176,   1,   0, 
    228, 128,   9,   0,   0,   4, 
      2,   0,   2, 224,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,  85, 176,   9,   0, 
      0,   4,   2,   0,   1, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   3,   0, 
     12, 224, 193,   0, 228, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_3_0
    dcl_texcoord1 v0.xy
    dcl_texcoord2 v1.xy
    dcl_2d s1
    dcl_2d s2
    texld r0, v1, s2
    texld r1, v0, s1
    mul oC0.w, r0.w, r1.w
    mov oC0.xyz, r1

// approximately 4 instruction slots used (2 texture, 2 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FDrawableCopyPixelsAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   6,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   1, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   0,   0, 228, 144, 
      1,   8, 228, 160,   5,   0, 
      0,   3,   0,   8,   8, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 128,   1,   0,   0,   2, 
      0,   8,   7, 128,   1,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v2, s2
    texld r1, v1, s1
    mad r0.x, r1.w, -r0.w, c0.x
    mul r0.y, r0.w, r1.w
    texld r2, v0, s0
    mad r0.x, r2.w, r0.x, r0.y
    rcp r0.z, r0.x
    mov oC0.w, r0.x
    mul r0.x, r0.z, r0.y
    add r0.yzw, r1.xxyz, -r2.xxyz
    mad oC0.xyz, r0.x, r0.yzww, r2

// approximately 11 instruction slots used (3 texture, 8 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FDrawableCopyPixelsAlphaMergeAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 144, 
      1,   8, 228, 160,   4,   0, 
      0,   4,   0,   0,   1, 128, 
      1,   0, 255, 128,   0,   0, 
    255, 129,   0,   0,   0, 160, 
      5,   0,   0,   3,   0,   0, 
      2, 128,   0,   0, 255, 128, 
      1,   0, 255, 128,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 144,   0,   8, 
    228, 160,   4,   0,   0,   4, 
      0,   0,   1, 128,   2,   0, 
    255, 128,   0,   0,   0, 128, 
      0,   0,  85, 128,   6,   0, 
      0,   2,   0,   0,   4, 128, 
      0,   0,   0, 128,   1,   0, 
      0,   2,   0,   8,   8, 128, 
      0,   0,   0, 128,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0, 170, 128,   0,   0, 
     85, 128,   2,   0,   0,   3, 
      0,   0,  14, 128,   1,   0, 
    144, 128,   2,   0, 144, 129, 
      4,   0,   0,   4,   0,   8, 
      7, 128,   0,   0,   0, 128, 
      0,   0, 249, 128,   2,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[3];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       3
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_texcoord2 v2.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v2, s2
    texld r1, v1, s1
    mul r0.x, r0.w, r1.w
    texld r2, v0, s0
    add r0.yzw, r1.xxyz, -r2.xxyz
    mad oC0.xyz, r0.x, r0.yzww, r2
    mov oC0.w, c0.x

// approximately 7 instruction slots used (3 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FDrawableCopyPixelsAlphaNoDestAlpha[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      5,   0,   2, 128,   2,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   2,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   2,   0, 
    228, 144,   2,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 144, 
      1,   8, 228, 160,   5,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0, 255, 128,   1,   0, 
    255, 128,  66,   0,   0,   3, 
      2,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     14, 128,   1,   0, 144, 128, 
      2,   0, 144, 129,   4,   0, 
      0,   4,   0,   8,   7, 128, 
      0,   0,   0, 128,   0,   0, 
    249, 128,   2,   0, 228, 128, 
      1,   0,   0,   2,   0,   8, 
      8, 128,   0,   0,   0, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4x4 cxmul;
//   float4x4 cxmul1;
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxmul        c0       4
//   cxmul1       c4       4
//   tex          s0       2
//

    ps_3_0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    dp4 r1.x, r0, c0
    dp4 r1.y, r0, c1
    dp4 r1.z, r0, c2
    dp4 r1.w, r0, c3
    texld r0, v1, s1
    dp4 r2.x, r0, c4
    dp4 r2.y, r0, c5
    dp4 r2.z, r0, c6
    dp4 r2.w, r0, c7
    add oC0, r1, r2

// approximately 11 instruction slots used (2 texture, 9 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FDrawableMerge[] =
{
      0,   3, 255, 255, 254, 255, 
     51,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 147,   0, 
      0,   0,   0,   3, 255, 255, 
      3,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    140,   0,   0,   0,  88,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   2,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
    112,   0,   0,   0,   2,   0, 
      4,   0,   4,   0,  18,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 119,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      2,   0, 124,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,   0, 171, 171, 
      3,   0,   3,   0,   4,   0, 
      4,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  99, 120, 
    109, 117, 108,  49,   0, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      1, 128,   0,   0, 228, 128, 
      0,   0, 228, 160,   9,   0, 
      0,   3,   1,   0,   2, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 160,   9,   0,   0,   3, 
      1,   0,   4, 128,   0,   0, 
    228, 128,   2,   0, 228, 160, 
      9,   0,   0,   3,   1,   0, 
      8, 128,   0,   0, 228, 128, 
      3,   0, 228, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      1,   0, 228, 144,   1,   8, 
    228, 160,   9,   0,   0,   3, 
      2,   0,   1, 128,   0,   0, 
    228, 128,   4,   0, 228, 160, 
      9,   0,   0,   3,   2,   0, 
      2, 128,   0,   0, 228, 128, 
      5,   0, 228, 160,   9,   0, 
      0,   3,   2,   0,   4, 128, 
      0,   0, 228, 128,   6,   0, 
    228, 160,   9,   0,   0,   3, 
      2,   0,   8, 128,   0,   0, 
    228, 128,   7,   0, 228, 160, 
      2,   0,   0,   3,   0,   8, 
     15, 128,   1,   0, 228, 128, 
      2,   0, 228, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D tex[2];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   tex          s0       2
//

    ps_3_0
    def c0, 0, 1, -0, -1
    def c1, 0.00392156886, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    texld r1, v1, s1
    add r0, r0, -r1
    cmp r1, -r0, c0.x, c0.y
    cmp r2, r0, c0.z, c0.w
    frc r0, r0
    add r1, r1, r2
    add r1, r1, c0.y
    cmp r1, -r1, c1.x, c1.y
    add r0, r0, r1
    dp3 r1.x, r0, c0.y
    mad r2, r0.w, c0.xxxy, c0.yyyx
    mad r0, r0, c0.yyyx, c0.xxxy
    cmp oC0, -r1.x, r2, r0

// approximately 14 instruction slots used (2 texture, 12 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FDrawableCompare[] =
{
      0,   3, 255, 255, 254, 255, 
     33,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  75,   0, 
      0,   0,   0,   3, 255, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     68,   0,   0,   0,  48,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   2,   0,  52,   0, 
      0,   0,   0,   0,   0,   0, 
    116, 101, 120,   0,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0, 128,   0,   0, 
    128, 191,  81,   0,   0,   5, 
      1,   0,  15, 160, 129, 128, 
    128,  59,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
      3, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
      3, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 129,  88,   0,   0,   4, 
      1,   0,  15, 128,   0,   0, 
    228, 129,   0,   0,   0, 160, 
      0,   0,  85, 160,  88,   0, 
      0,   4,   2,   0,  15, 128, 
      0,   0, 228, 128,   0,   0, 
    170, 160,   0,   0, 255, 160, 
     19,   0,   0,   2,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
      2,   0, 228, 128,   2,   0, 
      0,   3,   1,   0,  15, 128, 
      1,   0, 228, 128,   0,   0, 
     85, 160,  88,   0,   0,   4, 
      1,   0,  15, 128,   1,   0, 
    228, 129,   1,   0,   0, 160, 
      1,   0,  85, 160,   2,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 128,   1,   0, 
    228, 128,   8,   0,   0,   3, 
      1,   0,   1, 128,   0,   0, 
    228, 128,   0,   0,  85, 160, 
      4,   0,   0,   4,   2,   0, 
     15, 128,   0,   0, 255, 128, 
      0,   0,  64, 160,   0,   0, 
     21, 160,   4,   0,   0,   4, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   0,   0,  21, 160, 
      0,   0,  64, 160,  88,   0, 
      0,   4,   0,   8,  15, 128, 
      1,   0,   0, 129,   2,   0, 
    228, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D srctex;
//   sampler2D tex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   srctex       s0       1
//   tex          s1       1
//

    ps_3_0
    def c0, 1, 0, 0.125, 0.375
    def c1, 1, 0, 0.625, 0.875
    dcl_texcoord v0.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s1
    mad r1.xy, r0.x, c0, c0.yzzw
    texld r1, r1, s0
    mad r0.xy, r0.y, c0, c0.ywzw
    texld r2, r0, s0
    add r1, r1, r2
    mad r0.xy, r0.z, c1, c1.yzzw
    mad r0.zw, r0.w, c1.xyxy, c1.xyyw
    texld r2, r0.zwzw, s0
    texld r0, r0, s0
    add r0, r0, r1
    add oC0, r2, r0

// approximately 12 instruction slots used (5 texture, 7 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FDrawablePaletteMap[] =
{
      0,   3, 255, 255, 254, 255, 
     44,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 119,   0, 
      0,   0,   0,   3, 255, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    112,   0,   0,   0,  68,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  76,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   3,   0, 
      1,   0,   1,   0,   6,   0, 
     96,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 116, 101, 120,   0, 
      4,   0,  12,   0,   1,   0, 
      1,   0,   1,   0,   0,   0, 
      0,   0,   0,   0, 112, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5,   0,   0,  15, 160, 
      0,   0, 128,  63,   0,   0, 
      0,   0,   0,   0,   0,  62, 
      0,   0, 192,  62,  81,   0, 
      0,   5,   1,   0,  15, 160, 
      0,   0, 128,  63,   0,   0, 
      0,   0,   0,   0,  32,  63, 
      0,   0,  96,  63,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,   3, 144,  31,   0, 
      0,   2,   0,   0,   0, 144, 
      0,   8,  15, 160,  31,   0, 
      0,   2,   0,   0,   0, 144, 
      1,   8,  15, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      0,   0, 228, 144,   1,   8, 
    228, 160,   4,   0,   0,   4, 
      1,   0,   3, 128,   0,   0, 
      0, 128,   0,   0, 228, 160, 
      0,   0, 233, 160,  66,   0, 
      0,   3,   1,   0,  15, 128, 
      1,   0, 228, 128,   0,   8, 
    228, 160,   4,   0,   0,   4, 
      0,   0,   3, 128,   0,   0, 
     85, 128,   0,   0, 228, 160, 
      0,   0, 237, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 228, 128,   0,   8, 
    228, 160,   2,   0,   0,   3, 
      1,   0,  15, 128,   1,   0, 
    228, 128,   2,   0, 228, 128, 
      4,   0,   0,   4,   0,   0, 
      3, 128,   0,   0, 170, 128, 
      1,   0, 228, 160,   1,   0, 
    233, 160,   4,   0,   0,   4, 
      0,   0,  12, 128,   0,   0, 
    255, 128,   1,   0,  68, 160, 
      1,   0, 212, 160,  66,   0, 
      0,   3,   2,   0,  15, 128, 
      0,   0, 238, 128,   0,   8, 
    228, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   0,   8, 228, 160, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 128,   2,   0, 
      0,   3,   0,   8,  15, 128, 
      2,   0, 228, 128,   0,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D dsttex;
//   sampler2D srctex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   dsttex       s0       1
//   srctex       s1       1
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_texcoord_pp v0.xy
    dcl_texcoord1_pp v1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v1, s0
    texld r1, v0, s1
    max r2.xyz, r1, r0
    lrp oC0.xyz, r1.w, r2, r0
    add r0.x, -r1.w, c0.x
    mad oC0.w, r0.x, r0.w, r1.w

// approximately 6 instruction slots used (2 texture, 4 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FBlendLighten[] =
{
      0,   3, 255, 255, 254, 255, 
     45,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 123,   0, 
      0,   0,   0,   3, 255, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    116,   0,   0,   0,  68,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  76,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   3,   0, 
      1,   0,   1,   0,   6,   0, 
    100,   0,   0,   0,   0,   0, 
      0,   0, 100, 115, 116, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   0,   0, 228, 144, 
      1,   8, 228, 160,  11,   0, 
      0,   3,   2,   0,   7, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 128,  18,   0,   0,   4, 
      0,   8,   7, 128,   1,   0, 
    255, 128,   2,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0, 255, 129,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   8,   8, 128,   0,   0, 
      0, 128,   0,   0, 255, 128, 
      1,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D dsttex;
//   sampler2D srctex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   dsttex       s0       1
//   srctex       s1       1
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_texcoord_pp v0.xy
    dcl_texcoord1_pp v1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s1
    texld r1, v1, s0
    min r2.xyz, r1, r0
    lrp r3.xyz, r1.w, r2, r0
    add r0.x, -r0.w, c0.x
    mad oC0.w, r1.w, r0.x, r0.w
    mad oC0.xyz, r1, r0.x, r3

// approximately 7 instruction slots used (2 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FBlendDarken[] =
{
      0,   3, 255, 255, 254, 255, 
     45,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 123,   0, 
      0,   0,   0,   3, 255, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    116,   0,   0,   0,  68,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  76,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   3,   0, 
      1,   0,   1,   0,   6,   0, 
    100,   0,   0,   0,   0,   0, 
      0,   0, 100, 115, 116, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 144,   1,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 144, 
      0,   8, 228, 160,  10,   0, 
      0,   3,   2,   0,   7, 128, 
      1,   0, 228, 128,   0,   0, 
    228, 128,  18,   0,   0,   4, 
      3,   0,   7, 128,   1,   0, 
    255, 128,   2,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      0,   0, 255, 129,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   8,   8, 128,   1,   0, 
    255, 128,   0,   0,   0, 128, 
      0,   0, 255, 128,   4,   0, 
      0,   4,   0,   8,   7, 128, 
      1,   0, 228, 128,   0,   0, 
      0, 128,   3,   0, 228, 128, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D dsttex;
//   sampler2D srctex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   dsttex       s0       1
//   srctex       s1       1
//

    ps_3_0
    def c0, 1, -0.5, 0, 0
    dcl_texcoord_pp v0.xy
    dcl_texcoord1_pp v1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v1, s0
    add r1.xyz, r0, c0.y
    cmp r2.xyz, r1, c0.z, c0.x
    cmp r1.xyz, r1, c0.x, c0.z
    texld r3, v0, s1
    mul r4.xyz, r0, r3
    add r4.xyz, r4, r4
    mul r2.xyz, r2, r4
    add r4, -r0, c0.x
    add r5, -r3, c0.x
    add r5.xyz, r5, r5
    mad r4.xyz, r5, -r4, c0.x
    mul r3.xyz, r3, r4.w
    mad r1.xyz, r4, r1, r2
    mad r1.xyz, r1, r3.w, r3
    mad oC0.w, r0.w, r5.w, r3.w
    mad oC0.xyz, r0, r5.w, r1

// approximately 17 instruction slots used (2 texture, 15 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FBlendOverlay[] =
{
      0,   3, 255, 255, 254, 255, 
     45,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 123,   0, 
      0,   0,   0,   3, 255, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    116,   0,   0,   0,  68,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  76,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   3,   0, 
      1,   0,   1,   0,   6,   0, 
    100,   0,   0,   0,   0,   0, 
      0,   0, 100, 115, 116, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0,  85, 160,  88,   0, 
      0,   4,   2,   0,   7, 128, 
      1,   0, 228, 128,   0,   0, 
    170, 160,   0,   0,   0, 160, 
     88,   0,   0,   4,   1,   0, 
      7, 128,   1,   0, 228, 128, 
      0,   0,   0, 160,   0,   0, 
    170, 160,  66,   0,   0,   3, 
      3,   0,  15, 128,   0,   0, 
    228, 144,   1,   8, 228, 160, 
      5,   0,   0,   3,   4,   0, 
      7, 128,   0,   0, 228, 128, 
      3,   0, 228, 128,   2,   0, 
      0,   3,   4,   0,   7, 128, 
      4,   0, 228, 128,   4,   0, 
    228, 128,   5,   0,   0,   3, 
      2,   0,   7, 128,   2,   0, 
    228, 128,   4,   0, 228, 128, 
      2,   0,   0,   3,   4,   0, 
     15, 128,   0,   0, 228, 129, 
      0,   0,   0, 160,   2,   0, 
      0,   3,   5,   0,  15, 128, 
      3,   0, 228, 129,   0,   0, 
      0, 160,   2,   0,   0,   3, 
      5,   0,   7, 128,   5,   0, 
    228, 128,   5,   0, 228, 128, 
      4,   0,   0,   4,   4,   0, 
      7, 128,   5,   0, 228, 128, 
      4,   0, 228, 129,   0,   0, 
      0, 160,   5,   0,   0,   3, 
      3,   0,   7, 128,   3,   0, 
    228, 128,   4,   0, 255, 128, 
      4,   0,   0,   4,   1,   0, 
      7, 128,   4,   0, 228, 128, 
      1,   0, 228, 128,   2,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,   7, 128,   1,   0, 
    228, 128,   3,   0, 255, 128, 
      3,   0, 228, 128,   4,   0, 
      0,   4,   0,   8,   8, 128, 
      0,   0, 255, 128,   5,   0, 
    255, 128,   3,   0, 255, 128, 
      4,   0,   0,   4,   0,   8, 
      7, 128,   0,   0, 228, 128, 
      5,   0, 255, 128,   1,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D dsttex;
//   sampler2D srctex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   dsttex       s0       1
//   srctex       s1       1
//

    ps_3_0
    def c0, 1, -0.5, 0, 0
    dcl_texcoord_pp v0.xy
    dcl_texcoord1_pp v1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v1, s0
    add r1.xyz, r0, c0.y
    cmp r2.xyz, r1, c0.z, c0.x
    cmp r1.xyz, r1, c0.x, c0.z
    add r3, -r0, c0.x
    texld r4, v0, s1
    add r5, -r4, c0.x
    add r5.xyz, r5, r5
    mad r3.xyz, r5, -r3, c0.x
    mul r5.xyz, r3.w, r4
    mul r2.xyz, r2, r3
    mul r3.xyz, r0, r4
    add r3.xyz, r3, r3
    mad r1.xyz, r3, r1, r2
    mad r1.xyz, r1, r4.w, r5
    mad oC0.w, r0.w, r5.w, r4.w
    mad oC0.xyz, r0, r5.w, r1

// approximately 17 instruction slots used (2 texture, 15 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FBlendHardlight[] =
{
      0,   3, 255, 255, 254, 255, 
     45,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 123,   0, 
      0,   0,   0,   3, 255, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    116,   0,   0,   0,  68,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  76,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   3,   0, 
      1,   0,   1,   0,   6,   0, 
    100,   0,   0,   0,   0,   0, 
      0,   0, 100, 115, 116, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0, 191, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
      2,   0,   0,   3,   1,   0, 
      7, 128,   0,   0, 228, 128, 
      0,   0,  85, 160,  88,   0, 
      0,   4,   2,   0,   7, 128, 
      1,   0, 228, 128,   0,   0, 
    170, 160,   0,   0,   0, 160, 
     88,   0,   0,   4,   1,   0, 
      7, 128,   1,   0, 228, 128, 
      0,   0,   0, 160,   0,   0, 
    170, 160,   2,   0,   0,   3, 
      3,   0,  15, 128,   0,   0, 
    228, 129,   0,   0,   0, 160, 
     66,   0,   0,   3,   4,   0, 
     15, 128,   0,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   5,   0,  15, 128, 
      4,   0, 228, 129,   0,   0, 
      0, 160,   2,   0,   0,   3, 
      5,   0,   7, 128,   5,   0, 
    228, 128,   5,   0, 228, 128, 
      4,   0,   0,   4,   3,   0, 
      7, 128,   5,   0, 228, 128, 
      3,   0, 228, 129,   0,   0, 
      0, 160,   5,   0,   0,   3, 
      5,   0,   7, 128,   3,   0, 
    255, 128,   4,   0, 228, 128, 
      5,   0,   0,   3,   2,   0, 
      7, 128,   2,   0, 228, 128, 
      3,   0, 228, 128,   5,   0, 
      0,   3,   3,   0,   7, 128, 
      0,   0, 228, 128,   4,   0, 
    228, 128,   2,   0,   0,   3, 
      3,   0,   7, 128,   3,   0, 
    228, 128,   3,   0, 228, 128, 
      4,   0,   0,   4,   1,   0, 
      7, 128,   3,   0, 228, 128, 
      1,   0, 228, 128,   2,   0, 
    228, 128,   4,   0,   0,   4, 
      1,   0,   7, 128,   1,   0, 
    228, 128,   4,   0, 255, 128, 
      5,   0, 228, 128,   4,   0, 
      0,   4,   0,   8,   8, 128, 
      0,   0, 255, 128,   5,   0, 
    255, 128,   4,   0, 255, 128, 
      4,   0,   0,   4,   0,   8, 
      7, 128,   0,   0, 228, 128, 
      5,   0, 255, 128,   1,   0, 
    228, 128, 255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D dsttex;
//   sampler2D srctex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   dsttex       s0       1
//   srctex       s1       1
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_texcoord_pp v0.xy
    dcl_texcoord1_pp v1.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v1, s0
    texld r1, v0, s1
    add r2.xyz, -r0, r1
    add r0.xyz, r0, -r1
    max oC0.xyz, r2, r0
    add r0.x, -r1.w, c0.x
    mad oC0.w, r0.x, r0.w, r1.w

// approximately 7 instruction slots used (2 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FBlendDifference[] =
{
      0,   3, 255, 255, 254, 255, 
     45,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 123,   0, 
      0,   0,   0,   3, 255, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    116,   0,   0,   0,  68,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  76,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   3,   0, 
      1,   0,   1,   0,   6,   0, 
    100,   0,   0,   0,   0,   0, 
      0,   0, 100, 115, 116, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 115, 114,  99, 116, 
    101, 120,   0, 171,   4,   0, 
     12,   0,   1,   0,   1,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0, 112, 115,  95,  51, 
     95,  48,   0,  77, 105,  99, 
    114, 111, 115, 111, 102, 116, 
     32,  40,  82,  41,  32,  72, 
     76,  83,  76,  32,  83, 104, 
     97, 100, 101, 114,  32,  67, 
    111, 109, 112, 105, 108, 101, 
    114,  32,  57,  46,  51,  48, 
     46,  57,  50,  48,  48,  46, 
     49,  54,  51,  56,  52,   0, 
    171, 171,  81,   0,   0,   5, 
      0,   0,  15, 160,   0,   0, 
    128,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  31,   0,   0,   2, 
      5,   0,   0, 128,   0,   0, 
     35, 144,  31,   0,   0,   2, 
      5,   0,   1, 128,   1,   0, 
     35, 144,  31,   0,   0,   2, 
      0,   0,   0, 144,   0,   8, 
     15, 160,  31,   0,   0,   2, 
      0,   0,   0, 144,   1,   8, 
     15, 160,  66,   0,   0,   3, 
      0,   0,  15, 128,   1,   0, 
    228, 144,   0,   8, 228, 160, 
     66,   0,   0,   3,   1,   0, 
     15, 128,   0,   0, 228, 144, 
      1,   8, 228, 160,   2,   0, 
      0,   3,   2,   0,   7, 128, 
      0,   0, 228, 129,   1,   0, 
    228, 128,   2,   0,   0,   3, 
      0,   0,   7, 128,   0,   0, 
    228, 128,   1,   0, 228, 129, 
     11,   0,   0,   3,   0,   8, 
      7, 128,   2,   0, 228, 128, 
      0,   0, 228, 128,   2,   0, 
      0,   3,   0,   0,   1, 128, 
      1,   0, 255, 129,   0,   0, 
      0, 160,   4,   0,   0,   4, 
      0,   8,   8, 128,   0,   0, 
      0, 128,   0,   0, 255, 128, 
      1,   0, 255, 128, 255, 255, 
      0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   float4 vfuniforms[192];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   vfuniforms   c0     192
//

    vs_3_0
    def c192, 8, 0, 1, 0
    def c193, 2.0999999, 4.0999999, 0.100000001, 1.10000002
    def c194, 3.0999999, 5.0999999, 6.0999999, 7.0999999
    dcl_position v0
    dcl_color1 v1
    dcl_texcoord o0
    dcl_texcoord1 o1
    dcl_texcoord2 o2.xy
    dcl_texcoord3 o3.xy
    dcl_position o4
    mov r0.x, c192.x
    mad r0, v1.x, r0.x, c193
    frc r1, r0
    add r0, r0, -r1
    mad r1, v1.x, c192.x, -r1.xyyy
    add r1, r1, c194
    mova a0.x, r0.x
    dp4 o4.x, v0, c0[a0.x]
    mova a0.x, r1.x
    dp4 o4.y, v0, c0[a0.x]
    mova a0.x, r0.y
    dp4 o2.x, v0, c0[a0.x]
    mova a0.x, r1.y
    dp4 o2.y, v0, c0[a0.x]
    mova a0.xy, r1.zwzw
    dp4 o3.y, v0, c0[a0.y]
    dp4 o3.x, v0, c0[a0.x]
    mova a0.xy, r0.zwzw
    mov o1, c0[a0.y]
    mov o0, c0[a0.x]
    mov o4.zw, c192.xyyz

// approximately 21 instruction slots used
#endif

extern const BYTE pBinary_D3D9SM30_VBlendLayer[] =
{
      0,   3, 254, 255, 254, 255, 
     35,   0,  67,  84,  65,  66, 
     28,   0,   0,   0,  83,   0, 
      0,   0,   0,   3, 254, 255, 
      1,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
     76,   0,   0,   0,  48,   0, 
      0,   0,   2,   0,   0,   0, 
    192,   0,   2,   0,  60,   0, 
      0,   0,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 192,   0,   0,   0, 
      0,   0,   0,   0, 118, 115, 
     95,  51,  95,  48,   0,  77, 
    105,  99, 114, 111, 115, 111, 
    102, 116,  32,  40,  82,  41, 
     32,  72,  76,  83,  76,  32, 
     83, 104,  97, 100, 101, 114, 
     32,  67, 111, 109, 112, 105, 
    108, 101, 114,  32,  57,  46, 
     51,  48,  46,  57,  50,  48, 
     48,  46,  49,  54,  51,  56, 
     52,   0, 171, 171,  81,   0, 
      0,   5, 192,   0,  15, 160, 
      0,   0,   0,  65,   0,   0, 
      0,   0,   0,   0, 128,  63, 
      0,   0,   0,   0,  81,   0, 
      0,   5, 193,   0,  15, 160, 
    102, 102,   6,  64,  51,  51, 
    131,  64, 205, 204, 204,  61, 
    205, 204, 140,  63,  81,   0, 
      0,   5, 194,   0,  15, 160, 
    102, 102,  70,  64,  51,  51, 
    163,  64,  51,  51, 195,  64, 
     51,  51, 227,  64,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      0,   0,  15, 144,  31,   0, 
      0,   2,  10,   0,   1, 128, 
      1,   0,  15, 144,  31,   0, 
      0,   2,   5,   0,   0, 128, 
      0,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   1, 128, 
      1,   0,  15, 224,  31,   0, 
      0,   2,   5,   0,   2, 128, 
      2,   0,   3, 224,  31,   0, 
      0,   2,   5,   0,   3, 128, 
      3,   0,   3, 224,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      4,   0,  15, 224,   1,   0, 
      0,   2,   0,   0,   1, 128, 
    192,   0,   0, 160,   4,   0, 
      0,   4,   0,   0,  15, 128, 
      1,   0,   0, 144,   0,   0, 
      0, 128, 193,   0, 228, 160, 
     19,   0,   0,   2,   1,   0, 
     15, 128,   0,   0, 228, 128, 
      2,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 228, 129,   4,   0, 
      0,   4,   1,   0,  15, 128, 
      1,   0,   0, 144, 192,   0, 
      0, 160,   1,   0,  84, 129, 
      2,   0,   0,   3,   1,   0, 
     15, 128,   1,   0, 228, 128, 
    194,   0, 228, 160,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      0,   0,   0, 128,   9,   0, 
      0,   4,   4,   0,   1, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      1, 176,   1,   0,   0, 128, 
      9,   0,   0,   4,   4,   0, 
      2, 224,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
      0, 176,  46,   0,   0,   2, 
      0,   0,   1, 176,   0,   0, 
     85, 128,   9,   0,   0,   4, 
      2,   0,   1, 224,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   1, 176, 
      1,   0,  85, 128,   9,   0, 
      0,   4,   2,   0,   2, 224, 
      0,   0, 228, 144,   0,  32, 
    228, 160,   0,   0,   0, 176, 
     46,   0,   0,   2,   0,   0, 
      3, 176,   1,   0, 238, 128, 
      9,   0,   0,   4,   3,   0, 
      2, 224,   0,   0, 228, 144, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   9,   0,   0,   4, 
      3,   0,   1, 224,   0,   0, 
    228, 144,   0,  32, 228, 160, 
      0,   0,   0, 176,  46,   0, 
      0,   2,   0,   0,   3, 176, 
      0,   0, 238, 128,   1,   0, 
      0,   3,   1,   0,  15, 224, 
      0,  32, 228, 160,   0,   0, 
     85, 176,   1,   0,   0,   3, 
      0,   0,  15, 224,   0,  32, 
    228, 160,   0,   0,   0, 176, 
      1,   0,   0,   2,   4,   0, 
     12, 224, 192,   0, 148, 160, 
    255, 255,   0,   0
};
#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
///
// Parameters:
//
//   sampler2D alphatex;
//   sampler2D srctex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   alphatex     s0       1
//   srctex       s1       1
//

    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2_pp v2.xy
    dcl_texcoord3_pp v3.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v3, s0
    texld r1, v2, s1
    mul r0, r0.w, r1
    mad r1, v1.xyzx, c0.xxxy, c0.yyyx
    mul r0, r0, r1
    mul r0, r0, v1.w
    mad oC0, v0, r0.w, r0

// approximately 7 instruction slots used (2 texture, 5 arithmetic)
#endif

extern const BYTE pBinary_D3D9SM30_FBlendLayer[] =
{
      0,   3, 255, 255, 254, 255, 
     46,   0,  67,  84,  65,  66, 
     28,   0,   0,   0, 127,   0, 
      0,   0,   0,   3, 255, 255, 
      2,   0,   0,   0,  28,   0, 
      0,   0,   0, 129,   0,   0, 
    120,   0,   0,   0,  68,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   2,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
     96,   0,   0,   0,   3,   0, 
      1,   0,   1,   0,   6,   0, 
    104,   0,   0,   0,   0,   0, 
      0,   0,  97, 108, 112, 104, 
     97, 116, 101, 120,   0, 171, 
    171, 171,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    115, 114,  99, 116, 101, 120, 
      0, 171,   4,   0,  12,   0, 
      1,   0,   1,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
    112, 115,  95,  51,  95,  48, 
      0,  77, 105,  99, 114, 111, 
    115, 111, 102, 116,  32,  40, 
     82,  41,  32,  72,  76,  83, 
     76,  32,  83, 104,  97, 100, 
    101, 114,  32,  67, 111, 109, 
    112, 105, 108, 101, 114,  32, 
     57,  46,  51,  48,  46,  57, 
     50,  48,  48,  46,  49,  54, 
     51,  56,  52,   0, 171, 171, 
     81,   0,   0,   5,   0,   0, 
     15, 160,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     31,   0,   0,   2,   5,   0, 
      0, 128,   0,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      1, 128,   1,   0,  15, 144, 
     31,   0,   0,   2,   5,   0, 
      2, 128,   2,   0,  35, 144, 
     31,   0,   0,   2,   5,   0, 
      3, 128,   3,   0,  35, 144, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   0,   8,  15, 160, 
     31,   0,   0,   2,   0,   0, 
      0, 144,   1,   8,  15, 160, 
     66,   0,   0,   3,   0,   0, 
     15, 128,   3,   0, 228, 144, 
      0,   8, 228, 160,  66,   0, 
      0,   3,   1,   0,  15, 128, 
      2,   0, 228, 144,   1,   8, 
    228, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    255, 128,   1,   0, 228, 128, 
      4,   0,   0,   4,   1,   0, 
     15, 128,   1,   0,  36, 144, 
      0,   0,  64, 160,   0,   0, 
     21, 160,   5,   0,   0,   3, 
      0,   0,  15, 128,   0,   0, 
    228, 128,   1,   0, 228, 128, 
      5,   0,   0,   3,   0,   0, 
     15, 128,   0,   0, 228, 128, 
      1,   0, 255, 144,   4,   0, 
      0,   4,   0,   8,  15, 128, 
      0,   0, 228, 144,   0,   0, 
    255, 128,   0,   0, 228, 128, 
    255, 255,   0,   0
};
}}}; // Scaleform::Render::D3D9


