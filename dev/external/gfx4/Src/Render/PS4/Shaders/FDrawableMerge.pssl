ConstantBuffer Constants : register(b0) { 
float4x4 cxmul : packoffset(c0);
float4x4 cxmul1 : packoffset(c4);
};

SamplerState sampler : register(s0);
Texture2D tex[2] : register(t0);
struct ShaderInputType
{
            float2 tc0 : TEXCOORD0;;
           float2 tc1 : TEXCOORD1;
};
struct ShaderOutputType
{
           float4 fcolor : S_TARGET_OUTPUT0;
};
ShaderOutputType main( ShaderInputType shaderInput )
{
    ShaderOutputType shaderOutput;

    float4 fcolor_original = tex[0].Sample(sampler, shaderInput.tc0);
    float4 fcolor_source   = tex[1].Sample(sampler, shaderInput.tc1);
    shaderOutput.fcolor = mul(fcolor_original, cxmul) + mul(fcolor_source, cxmul1);
    
    return shaderOutput;
}
