SamplerState sampler : register(s0);
Texture2D tex : register(t0);
struct ShaderInputType
{
            float4 fucxadd : TEXCOORD0;;
           float4 fucxmul : TEXCOORD1;;
           float2 tc0 : TEXCOORD2;
};
struct ShaderOutputType
{
           float4 fcolor : S_TARGET_OUTPUT0;
};
ShaderOutputType main( ShaderInputType shaderInput )
{
    ShaderOutputType shaderOutput;

    float4 yuv = tex.Sample(sampler, shaderInput.tc0);
    const float4 g_YuvOffset = float4( 0.501961, 0, 0.501961, 0);
    float4 offset = yuv - g_YuvOffset;

    shaderOutput.fcolor.r = clamp( offset.g + 1.568648 * offset.b, 0.0, 1.0 );
    shaderOutput.fcolor.g = clamp( offset.g - 0.186593 * offset.r - 0.466296 * offset.b, 0.0, 1.0 );
    shaderOutput.fcolor.b = clamp( offset.g + 1.848352 * offset.r, 0.0, 1.0 );
    shaderOutput.fcolor.a = 1.0;
    

      shaderOutput.fcolor = (shaderOutput.fcolor * float4(shaderInput.fucxmul.rgb,1)) * shaderInput.fucxmul.a;
      shaderOutput.fcolor += shaderInput.fucxadd * shaderOutput.fcolor.a;
    

    shaderOutput.fcolor.rgb = shaderOutput.fcolor.rgb * shaderOutput.fcolor.a;
    

      shaderOutput.fcolor = shaderOutput.fcolor;
    
    return shaderOutput;
}
