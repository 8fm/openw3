#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4 vfuniforms[144];            // Offset:    0 Size:  2304
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// SV_Position              0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xy          4     NONE   float   xy  
// SV_Position              0   xyzw        5      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[151]
// Embedded Data:
//  0x00000097 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x00000092 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[144], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_output_siv o5.xyzw, position
dcl_temps 1
mov o0.xyzw, v0.xyzw
mov o1.xyzw, v1.xyzw
mad r0.xy, v1.zzzz, l(1530.059937, 1530.059937, 0.000000, 0.000000), l(0.100000, 1.100000, 0.000000, 0.000000)
ftou r0.xy, r0.xyxx
mov o2.xyzw, cb0[r0.x + 0].xyzw
mov o3.xyzw, cb0[r0.y + 0].xyzw
mad r0.xyzw, v1.zzzz, l(1530.059937, 1530.059937, 1530.059937, 1530.059937), l(2.100000, 3.100000, 4.100000, 5.100000)
ftou r0.xyzw, r0.xyzw
dp4 o4.x, v2.xyzw, cb0[r0.z + 0].xyzw
dp4 o4.y, v2.xyzw, cb0[r0.w + 0].xyzw
dp4 o5.x, v2.xyzw, cb0[r0.x + 0].xyzw
dp4 o5.y, v2.xyzw, cb0[r0.y + 0].xyzw
mov o5.zw, l(0,0,0,1.000000)
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[151], bundle is:[196] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBatchTexTGVertexCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [2] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [3] generic, usageIdx  3, paramIdx 3, paramSlot 0
;   [4] generic, usageIdx  4, paramIdx 4, paramSlot 0

codeLenInByte        = 336;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 36;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000008
SVOC:VS_EXPORT_COUNT        = 4
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  v_mov_b32     v0, 0x44bf41eb                          // 000000000004: 7E0002FF 44BF41EB
  s_mov_b32     s0, 0x40066666                          // 00000000000C: BE8003FF 40066666
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000014: C0840300
  s_mov_b32     s1, 0x40466666                          // 000000000018: BE8103FF 40466666
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000020: BF8C0F70
  v_mad_legacy_f32  v1, v10, v0, s0                     // 000000000024: D2800001 0002010A
  v_mad_legacy_f32  v2, v10, v0, s1                     // 00000000002C: D2800002 0006010A
  s_mov_b32     s0, 0x40833333                          // 000000000034: BE8003FF 40833333
  s_mov_b32     s1, 0x40a33333                          // 00000000003C: BE8103FF 40A33333
  v_mad_legacy_f32  v3, v10, v0, s0                     // 000000000044: D2800003 0002010A
  v_cvt_u32_f32  v1, v1                                 // 00000000004C: 7E020F01
  v_mad_legacy_f32  v0, v10, v0, s1                     // 000000000050: D2800000 0006010A
  v_cvt_u32_f32  v0, v0                                 // 000000000058: 7E000F00
  s_waitcnt     lgkmcnt(0)                              // 00000000005C: BF8C007F
  tbuffer_load_format_xyzw  v[16:19], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000060: EBF32000 80021001
  tbuffer_load_format_xyzw  v[28:31], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000068: EBF32000 80021C00
  v_cvt_u32_f32  v2, v2                                 // 000000000070: 7E040F02
  tbuffer_load_format_xyzw  v[20:23], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000074: EBF32000 80021402
  v_mov_b32     v1, 0x3dcccccd                          // 00000000007C: 7E0202FF 3DCCCCCD
  s_mov_b32     s0, 0x44bf41eb                          // 000000000084: BE8003FF 44BF41EB
  v_mac_legacy_f32  v1, s0, v10                         // 00000000008C: 0C021400
  v_cvt_u32_f32  v3, v3                                 // 000000000090: 7E060F03
  v_cvt_u32_f32  v0, v1                                 // 000000000094: 7E000F01
  tbuffer_load_format_xyzw  v[24:27], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000098: EBF32000 80021803
  tbuffer_load_format_xyzw  v[32:35], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A0: EBF32000 80022000
  v_mov_b32     v2, 0x3f8ccccd                          // 0000000000A8: 7E0402FF 3F8CCCCD
  v_mac_legacy_f32  v2, s0, v10                         // 0000000000B0: 0C041400
  v_cvt_u32_f32  v1, v2                                 // 0000000000B4: 7E020F02
  tbuffer_load_format_xyzw  v[0:3], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B8: EBF32000 80020001
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000C0: BF8C0F75
  v_mul_legacy_f32  v19, v15, v19                       // 0000000000C4: 0E26270F
  v_mac_legacy_f32  v19, v14, v18                       // 0000000000C8: 0C26250E
  s_waitcnt     vmcnt(3) & lgkmcnt(15)                  // 0000000000CC: BF8C0F73
  v_mul_legacy_f32  v23, v15, v23                       // 0000000000D0: 0E2E2F0F
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 0000000000D4: BF8C0F72
  v_mul_legacy_f32  v18, v15, v27                       // 0000000000D8: 0E24370F
  v_mul_legacy_f32  v15, v15, v31                       // 0000000000DC: 0E1E3F0F
  v_mac_legacy_f32  v23, v14, v22                       // 0000000000E0: 0C2E2D0E
  v_mac_legacy_f32  v19, v13, v17                       // 0000000000E4: 0C26230D
  v_mac_legacy_f32  v18, v14, v26                       // 0000000000E8: 0C24350E
  v_mac_legacy_f32  v15, v14, v30                       // 0000000000EC: 0C1E3D0E
  v_mac_legacy_f32  v23, v13, v21                       // 0000000000F0: 0C2E2B0D
  v_mac_legacy_f32  v19, v12, v16                       // 0000000000F4: 0C26210C
  v_mac_legacy_f32  v18, v13, v25                       // 0000000000F8: 0C24330D
  v_mac_legacy_f32  v15, v13, v29                       // 0000000000FC: 0C1E3B0D
  v_mac_legacy_f32  v23, v12, v20                       // 000000000100: 0C2E290C
  v_mov_b32     v14, 0                                  // 000000000104: 7E1C0280
  v_mov_b32     v16, 1.0                                // 000000000108: 7E2002F2
  v_mac_legacy_f32  v18, v12, v24                       // 00000000010C: 0C24310C
  v_mac_legacy_f32  v15, v12, v28                       // 000000000110: 0C1E390C
  exp           pos0, v19, v23, v14, v16 done           // 000000000114: F80008CF 100E1713
  exp           param0, v4, v5, v6, v7                  // 00000000011C: F800020F 07060504
  exp           param1, v8, v9, v10, v11                // 000000000124: F800021F 0B0A0908
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 00000000012C: BF8C0F71
  exp           param2, v32, v33, v34, v35              // 000000000130: F800022F 23222120
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000138: BF8C0F70
  exp           param3, v0, v1, v2, v3                  // 00000000013C: F800023F 03020100
  exp           param4, v18, v15, v14, v16              // 000000000144: F800024F 100E0F12
  s_endpgm                                              // 00000000014C: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[349], bundle is:[215] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBatchTexTGVertexCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] position, usageIdx  5, paramIdx 5, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [4] generic, usageIdx  3, paramIdx 3, paramSlot 0
;   [5] generic, usageIdx  4, paramIdx 4, paramSlot 0

codeLenInByte        = 480;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 36;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 24
; esGsRingItemSize          = 24

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  v_mov_b32     v0, 0x44bf41eb                          // 000000000008: 7E0002FF 44BF41EB
  s_mov_b32     s0, 0x40066666                          // 000000000010: BE8003FF 40066666
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000018: BF8C0F70
  v_mad_legacy_f32  v1, v10, v0, s0                     // 00000000001C: D2800001 0002010A
  v_cvt_u32_f32  v1, v1                                 // 000000000024: 7E020F01
  s_mov_b32     s0, 0x40466666                          // 000000000028: BE8003FF 40466666
  v_mad_legacy_f32  v2, v10, v0, s0                     // 000000000030: D2800002 0002010A
  s_waitcnt     lgkmcnt(0)                              // 000000000038: BF8C007F
  tbuffer_load_format_xyzw  v[16:19], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000003C: EBF32000 80021001
  v_cvt_u32_f32  v2, v2                                 // 000000000044: 7E040F02
  tbuffer_load_format_xyzw  v[20:23], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000048: EBF32000 80021402
  v_mov_b32     v1, 0x3dcccccd                          // 000000000050: 7E0202FF 3DCCCCCD
  s_mov_b32     s0, 0x44bf41eb                          // 000000000058: BE8003FF 44BF41EB
  v_mac_legacy_f32  v1, s0, v10                         // 000000000060: 0C021400
  s_mov_b32     s0, 0x40833333                          // 000000000064: BE8003FF 40833333
  v_cvt_u32_f32  v1, v1                                 // 00000000006C: 7E020F01
  v_mad_legacy_f32  v2, v10, v0, s0                     // 000000000070: D2800002 0002010A
  s_mov_b32     s0, 0x40a33333                          // 000000000078: BE8003FF 40A33333
  v_mad_legacy_f32  v0, v10, v0, s0                     // 000000000080: D2800000 0002010A
  tbuffer_load_format_xyzw  v[24:27], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000088: EBF32000 80021801
  v_cvt_u32_f32  v2, v2                                 // 000000000090: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 000000000094: 7E000F00
  tbuffer_load_format_xyzw  v[28:31], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000098: EBF32000 80021C02
  tbuffer_load_format_xyzw  v[32:35], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A0: EBF32000 80022000
  v_mov_b32     v3, 0x3f8ccccd                          // 0000000000A8: 7E0602FF 3F8CCCCD
  s_mov_b32     s1, 0x44bf41eb                          // 0000000000B0: BE8103FF 44BF41EB
  v_mac_legacy_f32  v3, s1, v10                         // 0000000000B8: 0C061401
  v_cvt_u32_f32  v1, v3                                 // 0000000000BC: 7E020F03
  tbuffer_load_format_xyzw  v[0:3], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C0: EBF32000 80020001
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000C8: BF8C0F75
  v_mul_legacy_f32  v19, v15, v19                       // 0000000000CC: 0E26270F
  v_mac_legacy_f32  v19, v14, v18                       // 0000000000D0: 0C26250E
  s_load_dwordx4  s[8:11], s[2:3], 0x0c                 // 0000000000D4: C084030C
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000D8: BF8C0F74
  v_mul_legacy_f32  v18, v15, v23                       // 0000000000DC: 0E242F0F
  v_mac_legacy_f32  v19, v13, v17                       // 0000000000E0: 0C26230D
  v_mac_legacy_f32  v18, v14, v22                       // 0000000000E4: 0C242D0E
  v_mac_legacy_f32  v19, v12, v16                       // 0000000000E8: 0C26210C
  v_mac_legacy_f32  v18, v13, v21                       // 0000000000EC: 0C242B0D
  v_mac_legacy_f32  v18, v12, v20                       // 0000000000F0: 0C24290C
  v_mov_b32     v16, 0                                  // 0000000000F4: 7E200280
  s_waitcnt     lgkmcnt(0)                              // 0000000000F8: BF8C007F
  buffer_store_dword  v19, v0, s[8:11], s4 offset:80 glc slc // 0000000000FC: E0704050 04421300
  v_mov_b32     v17, 1.0                                // 000000000104: 7E2202F2
  buffer_store_dword  v18, v0, s[8:11], s4 offset:84 glc slc // 000000000108: E0704054 04421200
  buffer_store_dword  v16, v0, s[8:11], s4 offset:88 glc slc // 000000000110: E0704058 04421000
  buffer_store_dword  v17, v0, s[8:11], s4 offset:92 glc slc // 000000000118: E070405C 04421100
  buffer_store_dword  v4, v0, s[8:11], s4 glc slc       // 000000000120: E0704000 04420400
  buffer_store_dword  v5, v0, s[8:11], s4 offset:4 glc slc // 000000000128: E0704004 04420500
  buffer_store_dword  v6, v0, s[8:11], s4 offset:8 glc slc // 000000000130: E0704008 04420600
  buffer_store_dword  v7, v0, s[8:11], s4 offset:12 glc slc // 000000000138: E070400C 04420700
  buffer_store_dword  v8, v0, s[8:11], s4 offset:16 glc slc // 000000000140: E0704010 04420800
  buffer_store_dword  v9, v0, s[8:11], s4 offset:20 glc slc // 000000000148: E0704014 04420900
  buffer_store_dword  v10, v0, s[8:11], s4 offset:24 glc slc // 000000000150: E0704018 04420A00
  buffer_store_dword  v11, v0, s[8:11], s4 offset:28 glc slc // 000000000158: E070401C 04420B00
  s_waitcnt     lgkmcnt(15)                             // 000000000160: BF8C0F7F
  buffer_store_dword  v24, v0, s[8:11], s4 offset:32 glc slc // 000000000164: E0704020 04421800
  buffer_store_dword  v25, v0, s[8:11], s4 offset:36 glc slc // 00000000016C: E0704024 04421900
  s_waitcnt     lgkmcnt(15)                             // 000000000174: BF8C0F7F
  v_mul_legacy_f32  v4, v15, v31                        // 000000000178: 0E083F0F
  buffer_store_dword  v26, v0, s[8:11], s4 offset:40 glc slc // 00000000017C: E0704028 04421A00
  v_mac_legacy_f32  v4, v14, v30                        // 000000000184: 0C083D0E
  v_mul_legacy_f32  v5, v15, v35                        // 000000000188: 0E0A470F
  buffer_store_dword  v27, v0, s[8:11], s4 offset:44 glc slc // 00000000018C: E070402C 04421B00
  v_mac_legacy_f32  v4, v13, v29                        // 000000000194: 0C083B0D
  v_mac_legacy_f32  v5, v14, v34                        // 000000000198: 0C0A450E
  s_waitcnt     lgkmcnt(15)                             // 00000000019C: BF8C0F7F
  buffer_store_dword  v0, v0, s[8:11], s4 offset:48 glc slc // 0000000001A0: E0704030 04420000
  v_mac_legacy_f32  v4, v12, v28                        // 0000000001A8: 0C08390C
  v_mac_legacy_f32  v5, v13, v33                        // 0000000001AC: 0C0A430D
  buffer_store_dword  v1, v0, s[8:11], s4 offset:52 glc slc // 0000000001B0: E0704034 04420100
  v_mac_legacy_f32  v5, v12, v32                        // 0000000001B8: 0C0A410C
  buffer_store_dword  v2, v0, s[8:11], s4 offset:56 glc slc // 0000000001BC: E0704038 04420200
  buffer_store_dword  v3, v0, s[8:11], s4 offset:60 glc slc // 0000000001C4: E070403C 04420300
  buffer_store_dword  v4, v0, s[8:11], s4 offset:64 glc slc // 0000000001CC: E0704040 04420400
  buffer_store_dword  v5, v0, s[8:11], s4 offset:68 glc slc // 0000000001D4: E0704044 04420500
  s_endpgm                                              // 0000000001DC: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[566], bundle is:[205] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBatchTexTGVertexCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] position, usageIdx  5, paramIdx 5, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [4] generic, usageIdx  3, paramIdx 3, paramSlot 0
;   [5] generic, usageIdx  4, paramIdx 4, paramSlot 0

codeLenInByte        = 392;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 41;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 24
; lsStride                  = 96

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  v_mov_b32     v0, 0x44bf41eb                          // 000000000008: 7E0002FF 44BF41EB
  s_mov_b32     s0, 0x40066666                          // 000000000010: BE8003FF 40066666
  s_mov_b32     s1, 0x40466666                          // 000000000018: BE8103FF 40466666
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000020: BF8C0F70
  v_mad_legacy_f32  v2, v10, v0, s0                     // 000000000024: D2800002 0002010A
  v_mad_legacy_f32  v3, v10, v0, s1                     // 00000000002C: D2800003 0006010A
  v_cvt_u32_f32  v2, v2                                 // 000000000034: 7E040F02
  v_cvt_u32_f32  v3, v3                                 // 000000000038: 7E060F03
  s_waitcnt     lgkmcnt(0)                              // 00000000003C: BF8C007F
  tbuffer_load_format_xyzw  v[16:19], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 80021002
  tbuffer_load_format_xyzw  v[20:23], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000048: EBF32000 80021403
  s_mov_b32     s1, 0x40833333                          // 000000000050: BE8103FF 40833333
  v_mov_b32     v2, 0x3dcccccd                          // 000000000058: 7E0402FF 3DCCCCCD
  s_mov_b32     s0, 0x44bf41eb                          // 000000000060: BE8003FF 44BF41EB
  s_mov_b32     s5, 0x40a33333                          // 000000000068: BE8503FF 40A33333
  v_mad_legacy_f32  v3, v10, v0, s1                     // 000000000070: D2800003 0006010A
  v_mac_legacy_f32  v2, s0, v10                         // 000000000078: 0C041400
  v_mad_legacy_f32  v0, v10, v0, s5                     // 00000000007C: D2800000 0016010A
  v_cvt_u32_f32  v2, v2                                 // 000000000084: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 000000000088: 7E000F00
  tbuffer_load_format_xyzw  v[25:28], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000008C: EBF32000 80021902
  tbuffer_load_format_xyzw  v[33:36], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000094: EBF32000 80022100
  v_mov_b32     v24, 0x3f8ccccd                         // 00000000009C: 7E3002FF 3F8CCCCD
  v_cvt_u32_f32  v3, v3                                 // 0000000000A4: 7E060F03
  v_mac_legacy_f32  v24, s0, v10                        // 0000000000A8: 0C301400
  v_cvt_u32_f32  v24, v24                               // 0000000000AC: 7E300F18
  tbuffer_load_format_xyzw  v[29:32], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B0: EBF32000 80021D03
  tbuffer_load_format_xyzw  v[37:40], v24, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B8: EBF32000 80022518
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000C0: BF8C0F75
  v_mul_legacy_f32  v0, v15, v19                        // 0000000000C4: 0E00270F
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000C8: BF8C0F74
  v_mul_legacy_f32  v2, v15, v23                        // 0000000000CC: 0E042F0F
  v_mac_legacy_f32  v0, v14, v18                        // 0000000000D0: 0C00250E
  v_mac_legacy_f32  v2, v14, v22                        // 0000000000D4: 0C042D0E
  v_mac_legacy_f32  v0, v13, v17                        // 0000000000D8: 0C00230D
  v_mac_legacy_f32  v2, v13, v21                        // 0000000000DC: 0C042B0D
  s_movk_i32    s0, 0x0060                              // 0000000000E0: B0000060
  s_mov_b32     m0, 0x00010000                          // 0000000000E4: BEFC03FF 00010000
  v_mac_legacy_f32  v0, v12, v16                        // 0000000000EC: 0C00210C
  v_mac_legacy_f32  v2, v12, v20                        // 0000000000F0: 0C04290C
  v_mul_lo_i32  v1, v1, s0                              // 0000000000F4: D2D60001 00000101
  ds_write2_b32  v1, v0, v2 offset0:20 offset1:21       // 0000000000FC: D8381514 00020001
  v_mov_b32     v0, 0                                   // 000000000104: 7E000280
  v_mov_b32     v2, 1.0                                 // 000000000108: 7E0402F2
  ds_write2_b32  v1, v0, v2 offset0:22 offset1:23       // 00000000010C: D8381716 00020001
  ds_write2_b32  v1, v4, v5 offset1:1                   // 000000000114: D8380100 00050401
  ds_write2_b32  v1, v6, v7 offset0:2 offset1:3         // 00000000011C: D8380302 00070601
  ds_write2_b32  v1, v8, v9 offset0:4 offset1:5         // 000000000124: D8380504 00090801
  ds_write2_b32  v1, v10, v11 offset0:6 offset1:7       // 00000000012C: D8380706 000B0A01
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000134: BF8C0F71
  v_mul_legacy_f32  v0, v15, v32                        // 000000000138: 0E00410F
  v_mul_legacy_f32  v2, v15, v36                        // 00000000013C: 0E04490F
  ds_write2_b32  v1, v25, v26 offset0:8 offset1:9       // 000000000140: D8380908 001A1901
  v_mac_legacy_f32  v0, v14, v31                        // 000000000148: 0C003F0E
  v_mac_legacy_f32  v2, v14, v35                        // 00000000014C: 0C04470E
  ds_write2_b32  v1, v27, v28 offset0:10 offset1:11     // 000000000150: D8380B0A 001C1B01
  v_mac_legacy_f32  v0, v13, v30                        // 000000000158: 0C003D0D
  v_mac_legacy_f32  v2, v13, v34                        // 00000000015C: 0C04450D
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000160: BF8C0F70
  ds_write2_b32  v1, v37, v38 offset0:12 offset1:13     // 000000000164: D8380D0C 00262501
  v_mac_legacy_f32  v0, v12, v29                        // 00000000016C: 0C003B0C
  v_mac_legacy_f32  v2, v12, v33                        // 000000000170: 0C04430C
  ds_write2_b32  v1, v39, v40 offset0:14 offset1:15     // 000000000174: D8380F0E 00282701
  ds_write2_b32  v1, v0, v2 offset0:16 offset1:17       // 00000000017C: D8381110 00020001
  s_endpgm                                              // 000000000184: BF810000
end


// Approximately 14 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VBatchTexTGVertexCxform[] =
{
     68,  88,  66,  67, 156,   1, 
     74,  15, 221,  87,  41,  93, 
     18, 180, 126,  59, 165, 189, 
    155,   4,   1,   0,   0,   0, 
     56,  15,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     88,   1,   0,   0, 196,   1, 
      0,   0, 128,   2,   0,   0, 
    156,  14,   0,   0,  82,  68, 
     69,  70,  28,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
    224,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      1,   0,   0,   0, 128,   0, 
      0,   0,   0,   9,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 168,   0,   0,   0, 
      0,   0,   0,   0,   0,   9, 
      0,   0,   2,   0,   0,   0, 
    188,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 102, 
    108, 111,  97, 116,  52,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0, 144,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 179,   0, 
      0,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
    100,   0,   0,   0,   3,   0, 
      0,   0,   8,   0,   0,   0, 
     80,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,  15,   0,   0, 
     80,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,  15,   0,   0, 
     86,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  15,  15,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     83,  86,  95,  80, 111, 115, 
    105, 116, 105, 111, 110,   0, 
    171, 171,  79,  83,  71,  78, 
    180,   0,   0,   0,   6,   0, 
      0,   0,   8,   0,   0,   0, 
    152,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
    152,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    158,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  15,   0,   0,   0, 
    158,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,  15,   0,   0,   0, 
    158,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   4,   0, 
      0,   0,   3,  12,   0,   0, 
    167,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   5,   0, 
      0,   0,  15,   0,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88,  20,  12,   0,   0, 
     80,   0,   1,   0,   5,   3, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 151,   0, 
      0,   0,  80,   0,   1,   0, 
    146,   0,   0,   0, 106,   8, 
      0,   1,  89,   8,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0, 144,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   1,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   3,   0,   0,   0, 
    101,   0,   0,   3,  50,  32, 
     16,   0,   4,   0,   0,   0, 
    103,   0,   0,   4, 242,  32, 
     16,   0,   5,   0,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   2,   1,   0,   0,   0, 
     54,   0,   0,   5, 242,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
    242,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  50,   0, 
      0,  15,  50,   0,  16,   0, 
      0,   0,   0,   0, 166,  26, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0, 235,  65, 
    191,  68, 235,  65, 191,  68, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
    205, 204, 204,  61, 205, 204, 
    140,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  28,   0, 
      0,   5,  50,   0,  16,   0, 
      0,   0,   0,   0,  70,   0, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   7, 242,  32, 
     16,   0,   2,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   7, 242,  32,  16,   0, 
      3,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     26,   0,  16,   0,   0,   0, 
      0,   0,  50,   0,   0,  15, 
    242,   0,  16,   0,   0,   0, 
      0,   0, 166,  26,  16,   0, 
      1,   0,   0,   0,   2,  64, 
      0,   0, 235,  65, 191,  68, 
    235,  65, 191,  68, 235,  65, 
    191,  68, 235,  65, 191,  68, 
      2,  64,   0,   0, 102, 102, 
      6,  64, 102, 102,  70,  64, 
     51,  51, 131,  64,  51,  51, 
    163,  64,  28,   0,   0,   5, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  18,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   2,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  42,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  34,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   2,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  18,  32,  16,   0, 
      5,   0,   0,   0,  70,  30, 
     16,   0,   2,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  34,  32,  16,   0, 
      5,   0,   0,   0,  70,  30, 
     16,   0,   2,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  26,   0,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   8, 194,  32,  16,   0, 
      5,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 128,  63, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 198,   0,   0,   0, 
     21,   0,   1,   0,  32,  38, 
     23,   0, 120,   1, 237, 152, 
     75,  79,  19,  81,  20, 199, 
    239, 220,  41,  23,  40, 183, 
     51,  21, 170, 128,  98, 105, 
    165,  86, 140,  58, 180,  84, 
     99, 124,  16, 170,  18,  37, 
     38,   6,  35, 132, 213,  44, 
    172,  48,  21,  99, 121, 216, 
     86,  82, 141,  25, 139,  26, 
     87,  36, 238,  76,  92, 155, 
    248,  41,  12, 109,  98, 116, 
    133, 193, 248,  13, 220, 184, 
     97,  99, 116, 131, 137,  73, 
    253, 159, 118,   6, 235, 130, 
    189, 146, 249,  37, 255, 123, 
    238, 227, 220, 185, 231,  62, 
    102, 115, 226, 221, 172, 206, 
     27, 251, 221,  87, 178,  31, 
    222,  26,  15, 198,  57,  99, 
     45, 212,   0,  62,  42, 192, 
     82, 136,  74, 176, 143,  10, 
    198, 250, 168,  80,  32, 248, 
    198,  96,  36, 116,  29, 237, 
     52,  44, 141,  13,  58, 106, 
    144, 174,  62,  71, 217,   6, 
     37, 160,  97, 204,  25, 135, 
     61,  14,   5, 161,  40, 164, 
     67,   2, 114, 113, 235,  52, 
    135, 104,  30,  35,  58, 160, 
     78, 200, 141, 143, 160, 112, 
      8, 138, 165, 185, 191, 190, 
    192,  14, 156, 135,  40, 254, 
    157, 160, 169, 238, 218, 100, 
     41,  78, 130, 214, 248, 215, 
    160, 253, 111, 223,  19, 160, 
    251, 104,  70, 131,  84, 136, 
    168, 238, 165, 242, 207, 153, 
    125, 115, 218, 238,  93,  86, 
    161, 157, 168, 129, 191, 206, 
     23, 184, 109, 250, 190,  96, 
     19,   9, 161, 188,  72,   8, 
    190, 145,  16, 232,  16,  24, 
     20, 120,  80,   2,   7,  40, 
     90,  33,  92, 170, 104, 135, 
    252,  16,  46,  82,  96,  65, 
     17, 128,  16, 160, 192,   1, 
     11,  60,  10, 177,   7, 194, 
      5, 139,  46,   8, 123,  18, 
    136,  79, 224, 237,   9, 188, 
     87, 209,   3, 245,  66, 251, 
    161,   3,  16,  30, 156,  56, 
      8, 133, 161, 254, 198, 219, 
    165, 187,  34, 132, 210, 216, 
    161, 224, 120, 116,  64, 168, 
     20,  33, 172, 207, 141, 120, 
    119,  66, 103, 224, 254,  59, 
    100, 155, 119, 187, 187, 119, 
    238, 225, 225, 225, 225, 225, 
    225, 225, 225, 225, 225, 225, 
    225, 225, 225, 241, 191, 192, 
    163,  79, 214, 106, 156, 217, 
    155,  23,  42,  99,  53, 181, 
    188, 150, 205, 138,  52,  83, 
    159,  85, 107, 234,  10, 234, 
    151, 211,  75, 250, 106,  69, 
     97, 229, 207, 126, 133,  51, 
     94, 183, 130, 145,  95,  42, 
    245,  52,  77,  62, 169, 212, 
    235, 180, 234, 140,  43,  58, 
    183, 153, 227, 195, 116, 102, 
     63, 102, 171,  21,  22, 249, 
    177, 169,   4, 121, 153,  44, 
    235, 227, 101, 174, 251, 108, 
    170, 243,  16,  47, 215,  56, 
    183,  63, 174, 175, 143, 208, 
    247, 104, 125,  22, 226,  82, 
    213, 133, 173,  96,  46, 249, 
    168,  61, 206, 188,   8, 249, 
    250, 224, 187,  58, 202,  66, 
     62, 201, 105,  29, 244,  43, 
    140, 151, 239,  35,  62, 253, 
     72,  92, 211,  14, 199, 101, 
    129, 234,  67, 134, 150,  39, 
    123,  58, 166, 233, 163,  97, 
     77,  59,  97, 200, 192,  64, 
     92, 106, 167,  98,  82,  27, 
      9, 203, 192,  49,  67, 202, 
    104,  92,   6,  82,  49,  25, 
     56,  23, 150, 242, 168,  33, 
    203, 188, 207, 254, 206,  35, 
    182,  76, 198, 164,  60,  19, 
    150,  27, 109, 108, 171, 171, 
     91,  11, 234, 156, 109, 249, 
     90,  68, 107,  63, 108,  91, 
    187, 191, 227,  30, 190,  59, 
    132, 122,  36, 122, 104, 128, 
    206, 101,  20, 117, 166, 112, 
    117,   2, 182,  83, 215, 130, 
    140, 173,  84, 156, 244,  30, 
    165, 107, 235, 234, 133,  40, 
     51, 230, 182, 225,  84, 199, 
    109, 147,  92, 124, 112,  29, 
    116, 242, 190,  61, 142,  37, 
    127, 202,  35, 105, 219,  25, 
    196,   6, 227, 206, 120, 218, 
    177, 148, 123, 162,  92, 237, 
    251,  87, 157, 215,   2, 203, 
     87, 227, 179,  78, 255,  77, 
    199, 210,  55, 252, 208, 175, 
     79,  47,   3,  95, 156, 190, 
     71, 142, 181,  32, 154, 159, 
     61, 107, 222, 202, 228,  50, 
     15,  11,  70, 113,  49, 191, 
    120, 215,  40,  20, 243,  86, 
    102, 126, 216, 156, 181, 150, 
     77, 171,  84, 180, 242,  11, 
    153, 156, 121,  59,  91,  58, 
    105,  78, 230, 103, 204,  27, 
    214, 194, 172, 149,  55, 199, 
     82,  99, 201, 146,  57,  57, 
    151,  65, 163,  96,  78,  95, 
    204,  20, 103, 230, 166, 172, 
    210, 212, 149, 105,  43,  95, 
    180,  74, 151,  74, 217, 197, 
    252, 188, 145, 205,  37, 147, 
    198,  92, 174, 144, 195,  50, 
     13, 126,  58, 139,  83,   2, 
    173,  21, 154, 207, 220,  89, 
     96, 191,   1, 146, 147, 164, 
      3,   0,   0,   0,  53,  16, 
      0,   0, 217,   0,   0,   0, 
     21,   0,   1,   0,  16, 198, 
     23,   0, 120,   1, 237, 152, 
     79, 111,  19,  71,  24, 198, 
    103, 199, 147, 193, 152, 241, 
    218,  36, 166,  77,  32, 128, 
      3, 198,   5, 209, 154, 132, 
    228,   0, 109,  17, 102,   8, 
    164,  66, 170,  64,  16,  33, 
     14, 123, 113, 147,  53, 169, 
    234, 252, 145, 237,  34, 195, 
    193,  56, 128,  56,  69, 180, 
    167,  74, 168, 151,  74, 253, 
     18,  61,  32, 146,  75,  81, 
    145,  64, 160, 124, 130,  28, 
     43, 113,  43,  87,  36, 247, 
    121, 188, 187, 145,  47,  57, 
     83,  85, 251, 147, 158, 125, 
    230, 157, 157, 125, 231, 221, 
    125, 247,  52,  47,  62,  21, 
     61,  94, 254, 250, 120, 147, 
    254, 226,  89, 233, 238,  55, 
     82, 136,   1,   6,   0, 195, 
     30,  43,  57,  94, 133, 248, 
    237,  19,  94, 133,  24, 229, 
    197, 129, 176, 160,   0,  51, 
    208,  22, 226,  50, 156, 247, 
    142, 135,  10,  40, 111,  60, 
    193,  53,   5, 149,  32, 171, 
    132, 104, 192,  79,  65, 121, 
    104,  12,  26, 132, 250, 209, 
     16, 183, 218,  13, 145,  93, 
    188, 244, 177,   7, 226,  51, 
     72, 181,  77,  84,  43, 247, 
     79,  67, 219, 112, 131,  29, 
    184,  10, 177, 254, 157, 224, 
    163, 204,  23,  17, 213, 201, 
    247, 253, 175, 193, 118,  68, 
    125,  34, 236,  71,  63,  46, 
     20, 125, 175, 107,  97,  31, 
    163,  37,  63, 135, 113, 212, 
    203,  13, 104,  39, 186, 160, 
    255, 187, 115,  60,   5, 145, 
      4, 164, 197, 213, 113, 237, 
    252,  52, 174, 229, 155, 113, 
    141,   9, 141,   5,  26,  63, 
    148,  70,  83,  53,  26, 169, 
    147,  16,  26, 171, 241,  67, 
    104,  52,  82,  99,  67, 141, 
    134, 105,  20, 168,  51,  80, 
     22, 218,  11, 225,  99, 235, 
     33,   8, 239, 164, 247,  65, 
    168,  81, 227, 127, 213, 195, 
    208,   8, 180,  31,  58,   0, 
    161,  65, 250,  32, 116,   8, 
     58,  12, 161,   6,  49,  16, 
    252, 193, 189,  49, 208,  78, 
    240, 166,  90,   6, 127, 137, 
     78, 176,  82, 184,  98, 245, 
    255,  63, 248, 222, 248, 204, 
    219, 244, 191,  37,  62,  95, 
     79,  49,  49,  49,  49,  49, 
     49,  49,  49,  49,  49,  49, 
     49,  49,  49,  49,  49,  31, 
     19,  57, 246, 224, 185,  72, 
     60, 218, 232,  74, 209, 126, 
    119,  97, 125, 186, 155, 232, 
     60, 175,  86, 117, 121,  37, 
    179, 182, 238, 136, 206, 102, 
    202, 145, 194, 201, 200, 118, 
     48, 127, 185,  44, 195, 185, 
    251,  98, 109,  93, 228, 223, 
    191, 115, 178, 178,  35,  51, 
    170, 205, 177, 204, 201,  78, 
     87, 202, 246, 235,  87, 175, 
    206, 113,  61, 243, 137, 156, 
     52,  28,  79,  78,  62,  44, 
     51,  79, 244, 124,  48, 247, 
    123,  89, 132, 113,  47, 215, 
    112, 152,  43,  35, 130, 124, 
    163, 178,  67,  23, 121, 230, 
    213, 200, 187, 118, 190, 155, 
     88, 237, 229, 117, 114, 218, 
     36, 144, 143, 247,  29,  33, 
     59,  63, 162, 222, 204, 103, 
     69, 215,  61,  86,  52,   6, 
    239, 211, 100, 124, 170, 224, 
    166, 143,  22, 141, 251,  69, 
    193, 152, 177, 162,  73, 159, 
    132, 159,  40, 152, 142, 204, 
    183,  89, 255, 181, 242, 202, 
    150,  24, 178, 234,  31, 121, 
    164,  61, 203, 241, 160,  85, 
    183, 232,  89, 171,  60, 250, 
     94, 171,   4,  93,  89, 165, 
    232,   3,  86,  37, 233, 218, 
     42,  67, 223, 101,  85, 150, 
    158, 180,  42,  71, 223, 109, 
    213,  48,  61, 101, 213,  40, 
    125, 143,  85, 247,  81,  71, 
    158, 227,  97, 171,  10, 244, 
    145,  96,  46, 115,  62, 233, 
     30, 103, 188, 223,  42, 247, 
     92, 210, 100, 102,  82, 238, 
    231, 140,  15,  88, 149, 254, 
     42, 105, 220,  75,  41, 195, 
    117, 227, 156,  19, 216, 239, 
    108, 210, 164,  47, 166, 204, 
     20,  99,   7, 241, 133, 148, 
     57, 195, 177, 180, 234, 107, 
    122, 194, 170,  50,  29, 181, 
     78, 211,  81, 171,  16, 171, 
    235, 251, 216, 100, 192, 211, 
     56, 106,   4, 226,   9,  93, 
     20,  71, 231,  83,  81, 156, 
    133,  72,  20,  83,  17,  72, 
    232, 252,  21, 158,  95, 254, 
     17,  58, 215,  99,  94, 184, 
    219,  39, 156,   1, 127, 135, 
    247, 183,  66, 231,  25,  25, 
    207, 146, 255, 124,  58, 248, 
    109, 250, 206, 149, 162,  10, 
    207, 195,  69, 232, 204, 193, 
    115, 235,  15, 111, 127,  73, 
    175, 134, 115, 163, 161, 251, 
     16, 159, 175, 126, 233, 125, 
     87, 169,  85, 238,  53,  74, 
    205, 229, 250, 242,  15, 165, 
     70, 179, 238,  87,  22,  79, 
    123, 243, 254,  29, 207, 111, 
     53, 253, 250,  82, 165, 230, 
    221, 174, 182, 166, 188,  27, 
    245,  57, 239, 186, 191,  52, 
    239, 215, 189, 233, 201, 233, 
    137, 150, 119,  99, 161, 130, 
    160, 225, 221, 180, 149, 230, 
    220, 194, 172, 223, 154, 157, 
    185, 233, 215, 155, 126, 235, 
     98, 171, 186,  92,  95,  44, 
     85, 107,  19,  19, 165, 133, 
     90, 163, 134, 109,   2, 158, 
    134, 155, 243, 120, 147, 135, 
    226, 139, 149, 239, 151, 196, 
    191, 199,  71, 210, 145,   0, 
      0,   0,  53,  16,   0,   0, 
    207,   0,   0,   0,  21,   0, 
      1,   0,   0,  94,  23,   0, 
    120,   1, 237, 152,  75,  79, 
     19,  81,  20, 199,  79, 103, 
    166,  23,  40, 211,  25, 192, 
    242,  40,  15, 181,  26,  94, 
     49, 212, 169, 184,  32,  26, 
     66,  17,  20,  53,  49,  26, 
     33, 172,  38, 134,  10,  83, 
     49, 150,  87,  91,  73, 117, 
     81, 139, 143,  68,  19,  18, 
    119,  70,  19, 119, 126,   1, 
     23,  46,  13, 101, 163,  43, 
    140, 134, 133, 241,  59, 176, 
    195, 141,  11, 146, 250,  63, 
    243, 128,  46, 100, 173,  49, 
    243,  75, 254, 247, 204, 185, 
    115, 231, 156, 115, 239, 157, 
    213, 185, 213,  74,  54, 198, 
    128,  52, 197, 246, 243, 199, 
    248, 131, 203,  18,  81, 144, 
    157,  42, 150,  35,  60,  18, 
     13, 181, 240,  72, 100, 187, 
      1,   8, 107, 251,  97,  84, 
    232,  57, 252,  36,  44, 191, 
    235, 115, 229, 144, 220, 124, 
    129, 177,  14,  50, 160,  93, 
    124, 179,   2,  59,   0, 113, 
    184,  19,  80,   3, 196, 212, 
    243,   0,   4,  15, 160, 134, 
      7, 224,  89, 134, 211, 242, 
    186,  38, 168, 186,  78, 158, 
    103,  26,  33,  25, 218,  39, 
    198, 195, 159,  25, 131, 184, 
    254, 195, 224, 218, 184,  22, 
    175,  46, 175,  78, 222, 239, 
    191,   6, 239, 223, 187,  39, 
    134, 239, 163,  26,  13, 242, 
    206, 229,  87,  51, 143,   7, 
    103, 214, 231, 222, 171, 119, 
    151, 155, 208,  97,  84, 128, 
    194,  15,  85, 120,  62, 199, 
     23, 116, 221,  16, 129, 151, 
    134, 144, 190,  26,   2,  19, 
      2,  47,   5,  46,  74, 224, 
     32,   5,  46,  82, 212,  66, 
    248,  25,  68,   8, 194, 193, 
     10,  36,  20,  97,   8,   5, 
     10,  29, 194,  33,  11,  92, 
    162, 192,   5, 139,  35,  16, 
    246,  36,  80, 175,  64, 141, 
      2, 255, 171, 104, 131, 162, 
     80,  59, 212,   1, 117,  66, 
     93, 208,  81, 232,  24, 132, 
     26,  40, 232, 252,  25, 246, 
     51,  16,   1, 103, 167,  66, 
    194, 207,   7, 132, 204, 149, 
    194,  42,  94, 229, 255,  23, 
    188, 111,  28, 243,  62, 222, 
     46, 249,  20, 112, 124,  54, 
     51,  60, 248, 248, 248, 248, 
    248, 248, 248, 248, 248, 248, 
    248, 248, 248, 248, 248, 248, 
    252,  37, 164, 216, 227,  13, 
    146, 159, 110,  86,  36,  42, 
    238, 140, 150, 199,  43, 114, 
    105,  35, 157,  22, 201, 138, 
    188,   6, 123,  41, 185, 172, 
    175, 151,  37,  42, 109, 135, 
      2,  18, 201, 182,  21,  36, 
    233,  74,  81, 214,  69, 241, 
     17, 173, 151, 233, 248, 207, 
     29, 169,  65,  42, 177, 149, 
     35,  82, 137, 191,  27,  28, 
    124, 146, 172,  72,  74, 241, 
    203, 214, 214,  48, 199, 115, 
    226,  62, 195, 252, 187, 164, 
     23, 131,  34, 138,  74, 246, 
    115, 139,  29, 143, 116,  42, 
    218, 177, 162,  78,  44, 138, 
     33, 150, 100,  32, 198, 250, 
      8, 231, 162, 136, 161, 182, 
    233, 134, 189,  70, 238, 114, 
    214, 180, 117,  75, 165, 251, 
    168,  79, 239,  37,  45, 207, 
    246, 180, 162, 105, 221, 164, 
    106,   3, 138,  26,  62,  73, 
    106, 248, 148, 162, 206,  16, 
    189, 175, 200, 123,  27, 220, 
    145,  81,  99, 164, 170, 253, 
    138,  26, 160, 239, 219, 220, 
    166, 138,  52,  15, 253,   8, 
     16, 118, 135, 189, 239, 162, 
    222, 150,  86, 199, 167,   0, 
    172,  18,  36,  73, 134,  21, 
     53, 164,   4,  97, 107, 235, 
     72, 212, 192, 134, 234, 105, 
    133, 115, 141, 146, 166,  95, 
     81, 180, 218,  58, 204,  69, 
    219,  73,  27,  65, 222,   9, 
     69,  13, 213, 195, 239, 232, 
    164, 240,  48, 242,  95,  84, 
     84,  62,  63,  53, 140, 185, 
    238,  30,  82, 207,  35, 255, 
    152, 162, 106,  58, 252, 222, 
     62, 106, 104, 132, 229, 124, 
    180,  86, 118, 219, 132, 182, 
    199, 138,  66, 220,  67, 242, 
    124, 175,  31, 234, 249,  44, 
     15,   5,  75, 103, 220, 190, 
    226,  13, 215, 242, 122, 238, 
     69, 105, 118, 148,   3,  74, 
    238, 251, 130, 107, 185, 119, 
    197,  61, 215,  79, 111, 154, 
    174, 133,  87, 175, 246, 188, 
    117, 231,  95, 187, 150,  99, 
    132, 160, 189, 111, 175, 194, 
     81, 183, 135, 253, 193, 125, 
    103,  65, 252, 125, 250, 156, 
    121,  59, 149,  73,  61, 204, 
    197, 243,  75, 217, 165, 123, 
    241,  92,  62, 107, 165,  22, 
    206, 152, 115, 214, 170, 105, 
     21, 242,  86, 118,  49, 149, 
     49, 239, 164,  11, 103, 205, 
    201, 236, 172, 121, 211,  90, 
    156, 179, 178, 230, 248, 224, 
    120, 162,  96,  78, 206, 167, 
    224, 228, 204, 233,  11, 169, 
    252, 236, 252, 148,  85, 152, 
    154, 152, 182, 178, 121, 171, 
     48,  86,  72,  47, 101,  23, 
    226, 233,  76,  34,  17, 159, 
    207, 228,  50,  72, 227, 144, 
    112, 139, 224, 182,  35,  55, 
    171,  23,  82, 119,  23, 233, 
     55,  13, 197, 171,  82,   0, 
      0,   0,  83,  84,  65,  84, 
    148,   0,   0,   0,  14,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   9,   0, 
      0,   0,   6,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0
};
