#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler_srctex                    sampler      NA          NA    0        1
// sampler_tex                       sampler      NA          NA    1        1
// srctex                            texture  float4          2d    0        1
// tex                               texture  float4          2d    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[128]
// Embedded Data:
//  0x00000080 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000007b - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v0.xy
dcl_output o0.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v0.xyxx, t1.zxwy, s1
mov r1.xz, r0.yywy
mov r1.yw, l(0,0.125000,0,0.375000)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.zwzz, t0.xyzw, s0
add r1.xyzw, r1.xyzw, r2.xyzw
mov r0.yw, l(0,0.625000,0,0.875000)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r0.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.zwzz, t0.xyzw, s0
add r1.xyzw, r1.xyzw, r2.xyzw
add o0.xyzw, r0.xyzw, r1.xyzw
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[128], bundle is:[166] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\FDrawablePaletteMap.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask  3, param0, paramSlot 0, DefaultVal={0,0,0,0}

codeLenInByte        = 216;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0:1]
extUserElementCount  = 4;
;  extUserElements 1[0] = IMM_RESOURCE, 0, offset 0:7 dwords
;  extUserElements 1[1] = IMM_RESOURCE, 1, offset 8:15 dwords
;  extUserElements 1[2] = IMM_SAMPLER, 0, offset 16:19 dwords
;  extUserElements 1[3] = IMM_SAMPLER, 1, offset 20:23 dwords
NumVgprs             = 23;
NumSgprs             = 22;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000003
; constBufUsage           = 0x00000000

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000001
SPIC:NUM_INTERP             = 1
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[20:21], exec                          // 000000000000: BE94047E
  s_wqm_b64     exec, exec                              // 000000000004: BEFE0A7E
  s_mov_b32     m0, s2                                  // 000000000008: BEFC0302
  s_load_dwordx8  s[4:11], s[0:1], 0x08                 // 00000000000C: C0C20108
  s_load_dwordx8  s[12:19], s[0:1], 0x10                // 000000000010: C0C60110
  v_interp_p1_f32  v2, v0, attr0.x                      // 000000000014: C8080000
  v_interp_p1_f32  v3, v0, attr0.y                      // 000000000018: C80C0100
  v_interp_p2_f32  v2, v1, attr0.x                      // 00000000001C: C8090001
  v_interp_p2_f32  v3, v1, attr0.y                      // 000000000020: C80D0101
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[16:19], v[2:3], s[4:11], s[16:19] dmask:0xf // 000000000028: F0800F00 00811002
  s_load_dwordx8  s[0:7], s[0:1], 0x00                  // 000000000030: C0C00100
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000034: BF8C0F70
  v_mov_b32     v0, v17                                 // 000000000038: 7E000311
  v_mov_b32     v1, 0x3ec00000                          // 00000000003C: 7E0202FF 3EC00000
  s_waitcnt     lgkmcnt(0)                              // 000000000044: BF8C007F
  image_sample  v[8:11], v[0:1], s[0:7], s[12:15] dmask:0xf // 000000000048: F0800F00 00600800
  v_mov_b32     v0, v18                                 // 000000000050: 7E000312
  v_mov_b32     v1, 0x3f200000                          // 000000000054: 7E0202FF 3F200000
  image_sample  v[12:15], v[0:1], s[0:7], s[12:15] dmask:0xf // 00000000005C: F0800F00 00600C00
  v_mov_b32     v4, v16                                 // 000000000064: 7E080310
  v_mov_b32     v5, 0x3e000000                          // 000000000068: 7E0A02FF 3E000000
  image_sample  v[4:7], v[4:5], s[0:7], s[12:15] dmask:0xf // 000000000070: F0800F00 00600404
  v_mov_b32     v20, 0x3f600000                         // 000000000078: 7E2802FF 3F600000
  image_sample  v[0:3], v[19:20], s[0:7], s[12:15] dmask:0xf // 000000000080: F0800F00 00600013
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000088: BF8C0F71
  v_add_f32     v4, v4, v8                              // 00000000008C: 06081104
  v_add_f32     v5, v5, v9                              // 000000000090: 060A1305
  v_add_f32     v6, v6, v10                             // 000000000094: 060C1506
  v_add_f32     v7, v7, v11                             // 000000000098: 060E1707
  v_add_f32     v4, v4, v12                             // 00000000009C: 06081904
  v_add_f32     v5, v5, v13                             // 0000000000A0: 060A1B05
  v_add_f32     v6, v6, v14                             // 0000000000A4: 060C1D06
  v_add_f32     v7, v7, v15                             // 0000000000A8: 060E1F07
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 0000000000AC: BF8C0F70
  v_add_f32     v0, v0, v4                              // 0000000000B0: 06000900
  v_add_f32     v1, v1, v5                              // 0000000000B4: 06020B01
  v_add_f32     v2, v2, v6                              // 0000000000B8: 06040D02
  v_add_f32     v3, v3, v7                              // 0000000000BC: 06060F03
  s_mov_b64     exec, s[20:21]                          // 0000000000C0: BEFE0414
  v_cvt_pkrtz_f16_f32  v0, v0, v1                       // 0000000000C4: 5E000300
  v_cvt_pkrtz_f16_f32  v1, v2, v3                       // 0000000000C8: 5E020702
  exp           mrt0, v0, v0, v1, v1 compr vm           // 0000000000CC: F800140F 00000100
  s_endpgm                                              // 0000000000D4: BF810000
end


// Approximately 12 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_FDrawablePaletteMap[] =
{
     68,  88,  66,  67,  75, 173, 
    229, 205, 112, 216, 242, 252, 
      8,  78,  48,  97, 199, 137, 
    159, 161,   1,   0,   0,   0, 
      8,   7,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     92,   1,   0,   0, 144,   1, 
      0,   0, 196,   1,   0,   0, 
    108,   6,   0,   0,  82,  68, 
     69,  70,  32,   1,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    255, 255,   0, 129,   0,   0, 
    226,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
    188,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0, 203,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   1,   0,   0,   0, 
      1,   0,   0,   0, 215,   0, 
      0,   0,   2,   0,   0,   0, 
      5,   0,   0,   0,   4,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0,   1,   0, 
      0,   0,  13,   0,   0,   0, 
    222,   0,   0,   0,   2,   0, 
      0,   0,   5,   0,   0,   0, 
      4,   0,   0,   0, 255, 255, 
    255, 255,   1,   0,   0,   0, 
      1,   0,   0,   0,  13,   0, 
      0,   0, 115,  97, 109, 112, 
    108, 101, 114,  95, 115, 114, 
     99, 116, 101, 120,   0, 115, 
     97, 109, 112, 108, 101, 114, 
     95, 116, 101, 120,   0, 115, 
    114,  99, 116, 101, 120,   0, 
    116, 101, 120,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  70, 111, 114, 
     32,  68, 117, 114,  97, 110, 
    103, 111,  32,  57,  46,  51, 
     48,  46,  49,  50,  48,  57, 
     56,  46,  48,   0, 171, 171, 
     73,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   3,   0,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0, 171, 171, 171,  79,  83, 
     71,  78,  44,   0,   0,   0, 
      1,   0,   0,   0,   8,   0, 
      0,   0,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,  83,  86,  95,  84, 
     97, 114, 103, 101, 116,   0, 
    171, 171,  83,  72,  69,  88, 
    160,   4,   0,   0,  80,   0, 
      0,   0,  40,   1,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 128,   0,   0,   0, 
     80,   0,   0,   0, 123,   0, 
      0,   0, 106,   8,   0,   1, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   1,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  88,  24, 
      0,   4,   0, 112,  16,   0, 
      1,   0,   0,   0,  85,  85, 
      0,   0,  98,  16,   0,   3, 
     50,  16,  16,   0,   0,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 104,   0,   0,   2, 
      3,   0,   0,   0,  69,   0, 
      0, 139, 194,   0,   0, 128, 
     67,  85,  21,   0, 242,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  16,  16,   0,   0,   0, 
      0,   0,  38, 119,  16,   0, 
      1,   0,   0,   0,   0,  96, 
     16,   0,   1,   0,   0,   0, 
     54,   0,   0,   5,  82,   0, 
     16,   0,   1,   0,   0,   0, 
     86,   7,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   8, 
    162,   0,  16,   0,   1,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,  62,   0,   0,   0,   0, 
      0,   0, 192,  62,  69,   0, 
      0, 139, 194,   0,   0, 128, 
     67,  85,  21,   0, 242,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   0,  16,   0,   1,   0, 
      0,   0,  70, 126,  16,   0, 
      0,   0,   0,   0,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     69,   0,   0, 139, 194,   0, 
      0, 128,  67,  85,  21,   0, 
    242,   0,  16,   0,   1,   0, 
      0,   0, 230,  10,  16,   0, 
      1,   0,   0,   0,  70, 126, 
     16,   0,   0,   0,   0,   0, 
      0,  96,  16,   0,   0,   0, 
      0,   0,   0,   0,   0,   7, 
    242,   0,  16,   0,   1,   0, 
      0,   0,  70,  14,  16,   0, 
      1,   0,   0,   0,  70,  14, 
     16,   0,   2,   0,   0,   0, 
     54,   0,   0,   8, 162,   0, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,  32,  63, 
      0,   0,   0,   0,   0,   0, 
     96,  63,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 242,   0,  16,   0, 
      2,   0,   0,   0,  70,   0, 
     16,   0,   0,   0,   0,   0, 
     70, 126,  16,   0,   0,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,  69,   0, 
      0, 139, 194,   0,   0, 128, 
     67,  85,  21,   0, 242,   0, 
     16,   0,   0,   0,   0,   0, 
    230,  10,  16,   0,   0,   0, 
      0,   0,  70, 126,  16,   0, 
      0,   0,   0,   0,   0,  96, 
     16,   0,   0,   0,   0,   0, 
      0,   0,   0,   7, 242,   0, 
     16,   0,   1,   0,   0,   0, 
     70,  14,  16,   0,   1,   0, 
      0,   0,  70,  14,  16,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   7, 242,  32,  16,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   0,   0,   0,   0, 
     70,  14,  16,   0,   1,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 168,   0, 
      0,   0,  21,   0,   1,   0, 
     41, 194,  10,   0, 120,   1, 
    237,  86,  61, 107,  84,  65, 
     20, 189, 239,  35, 147, 205, 
    230,  99,  55,  38,  49, 137, 
     70, 252,  66,  73,  33,  11, 
    107, 196, 194,  34, 166,   8, 
    130, 130,  16,  76, 183,  60, 
    194, 123, 155, 188,  24, 241, 
    229, 195, 221,  69, 151, 128, 
     49, 105,  37,  69,  10, 211, 
     11,  54, 226,  47, 176, 218, 
     93,  82, 200, 182, 118, 150, 
    150,  22,  22, 150,  22,  33, 
    241, 156, 183,  51, 201,  67, 
     76, 183, 160,  96,  14, 156, 
    185, 115, 238, 204, 187, 115, 
    223,  12, 204, 157, 189, 180, 
    196, 216, 217, 189, 127, 133, 
    246, 245, 194, 185, 253, 239, 
    150,  72,   7, 250,  48, 177, 
     37, 170,  41, 182,  34, 111, 
    187, 216, 138, 140, 179, 225, 
      4,  91, 100,  24, 230,  44, 
    248,   5, 156,   2,  57, 102, 
    216, 194,  84, 227,  51, 218, 
     65, 112,   8,  44,  56,  34, 
     15,  96, 175, 131,  10,  28, 
      5, 123,  65, 134,  35, 204, 
    154,   4, 199,   9, 151,  77, 
      2, 157,  96,  31, 104, 192, 
    113, 132, 141, 193, 111, 146, 
     49, 228,  26, 155,  63, 227, 
      6, 200, 252,  79,   2, 115, 
     51, 177, 152,  31, 243,  36, 
    248, 191, 127,  27, 173, 253, 
    194,   1,   0, 230, 223, 205, 
     57,  17,  60, 143,  36, 184, 
     95, 173, 111,  68, 102, 244, 
     57, 154, 125, 245, 181,  54, 
    103, 217,   0,  79, 194,  33, 
     48, 194,  78,   2,  70,  51, 
    190,  58, 202, 230, 255, 132, 
    217,  83, 238,   5,  79,  39, 
     11, 102,  64,   3, 142, 231, 
     65, 145, 205,  58, 185,  51, 
     34,  63, 169, 140, 182, 126, 
    211,  14,  53, 131,  37,  53, 
    183, 216, 145,  57, 187, 211, 
    158, 203, 140, 233, 113,  71, 
     60, 104,  47, 161,  11, 208, 
    133, 132, 246, 161, 253, 132, 
     46,  66,  23, 143, 180, 142, 
    159, 137, 215, 179,  29, 158, 
     51, 156,  27, 255,  50,  79, 
    115, 108,  15,  79, 115, 108, 
     15,  79, 115, 108,  27,  99, 
    108, 184, 111, 106,  27, 233, 
    131, 154, 237, 236, 215,  82, 
    214,  94,  35, 107, 125,  66, 
    105,  74,  53, 197, 234, 105, 
     90, 210, 213, 180, 172, 222, 
    230,  43, 217, 174,  75, 102, 
    243, 135, 157, 221, 194, 165, 
    219, 104, 172, 101, 182, 235, 
    253,  14, 254, 211, 182,  17, 
    167,  49, 105, 198,  37, 229, 
    203, 153,  35, 255, 165, 187, 
    177, 175, 199, 151, 172, 147, 
    130,  47,  13, 159,  76, 210, 
    231, 186, 190,  28, 218, 227, 
    208, 126,  60, 103,  64, 124, 
    121, 134, 152, 110, 127,  74, 
    117,  12, 164, 149,  26, 234, 
     81, 157, 195, 125, 202,  29, 
    133,  62,  15, 125,   1, 250, 
     98, 159, 226, 186, 210,  37, 
    202, 234, 182, 149, 221, 235, 
     42,  39, 163, 212, 160, 123, 
     80, 195,  61, 219, 186, 167, 
      7, 205,  61, 187,  85, 231, 
    187,  34, 238,   2, 173,  10, 
    126,  12, 148, 240, 120, 136, 
     13, 203,  57, 117, 236,   0, 
     88,  75,  80,  63,  98,  77, 
    242,  77,  69, 221, 212, 245, 
    251, 163, 182, 122,  30, 106, 
     62, 103,  29, 227, 155,  30, 
    255, 170,  45, 227, 119, 131, 
    234, 106, 237, 246, 196, 246, 
    251,  85,  87, 191,   7,  69, 
     91, 198,  96, 247, 242, 135, 
    119, 235,  47, 181, 111,  76, 
    219,   0, 228, 247, 139, 119, 
    188,  98,  16,   5, 235, 229, 
     92, 101, 181, 180, 250,  52, 
     87, 174, 148, 194,  96, 249, 
    166, 183,  16,  62, 247, 194, 
    106,  37,  44, 173,   4, 145, 
    247, 120, 177, 122, 203, 155, 
     45, 205, 123, 143, 194, 149, 
    133, 176, 228,  77,  79,  76, 
    231, 171, 222, 236,  82,   0, 
     81, 246, 238,  77, 151, 130, 
     23,  65,  49,  10, 103, 130, 
     40, 172,  84, 194, 135, 193, 
     90, 110,  49, 202, 231, 115, 
     75,  81,  57, 194,  18,  45, 
    236, 234, 133, 249,  32, 227, 
      3, 112,  57, 120, 178,  34, 
    191,   0, 134,  66,  55, 180, 
     83,  84,  65,  84, 148,   0, 
      0,   0,  12,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   5,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0
};
