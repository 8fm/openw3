#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4x4 vfmuniforms[24];          // Offset:    0 Size:  1536
//   float4 vfuniforms[96];             // Offset: 1536 Size:  1536
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// SV_InstanceID            0   x           1   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xy          2     NONE   float   xy  
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[198]
// Embedded Data:
//  0x000000c6 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000c1 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[192], dynamicIndexed
dcl_input v0.xyzw
dcl_input_sgv v1.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output_siv o3.xyzw, position
dcl_temps 1
ishl r0.x, v1.x, l(2)
utof r0.x, r0.x
add r0.x, r0.x, l(0.100000)
ftou r0.x, r0.x
mov o0.xyzw, cb0[r0.x + 96].xyzw
bfi r0.xyz, l(30, 30, 30, 0), l(2, 2, 2, 0), v1.xxxx, l(2, 2, 1, 0)
utof r0.xyz, r0.xyzx
add r0.xyz, r0.xyzx, l(0.100000, 1.100000, 0.100000, 0.000000)
ftou r0.xyz, r0.xyzx
mov o1.xyzw, cb0[r0.z + 96].xyzw
dp4 o2.x, v0.xyzw, cb0[r0.x + 96].xyzw
dp4 o2.y, v0.xyzw, cb0[r0.y + 96].xyzw
utof r0.x, v1.x
add r0.x, r0.x, l(0.100000)
ftou r0.x, r0.x
ishl r0.x, r0.x, l(2)
dp4 o3.x, v0.xyzw, cb0[r0.x + 0].xyzw
dp4 o3.y, v0.xyzw, cb0[r0.x + 1].xyzw
dp4 o3.z, v0.xyzw, cb0[r0.x + 2].xyzw
dp4 o3.w, v0.xyzw, cb0[r0.x + 3].xyzw
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[198], bundle is:[205] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedPosition3dTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [2] generic, usageIdx  2, paramIdx 2, paramSlot 0

codeLenInByte        = 396;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 36;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000004
SVOC:VS_EXPORT_COUNT        = 2
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_cvt_f32_u32  v1, v3                                 // 000000000008: 7E020D03
  v_add_f32     v1, 0x3dcccccd, v1                      // 00000000000C: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v1, v1                                 // 000000000014: 7E020F01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_lshlrev_b32  v1, 2, v1                              // 00000000001C: 34020282
  v_add_i32     v8, vcc, 1, v1                          // 000000000020: 4A100281
  v_add_i32     v9, vcc, 2, v1                          // 000000000024: 4A120282
  v_add_i32     v10, vcc, 3, v1                         // 000000000028: 4A140283
  s_waitcnt     lgkmcnt(0)                              // 00000000002C: BF8C007F
  tbuffer_load_format_xyzw  v[12:15], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000030: EBF32000 80020C01
  tbuffer_load_format_xyzw  v[16:19], v8, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000038: EBF32000 80021008
  tbuffer_load_format_xyzw  v[20:23], v9, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 80021409
  tbuffer_load_format_xyzw  v[24:27], v10, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000048: EBF32000 8002180A
  v_lshlrev_b32  v0, 2, v3                              // 000000000050: 34000682
  v_bfi_b32     v2, -4, v0, 2                           // 000000000054: D2940002 020A00C4
  v_cvt_f32_u32  v2, v2                                 // 00000000005C: 7E040D02
  v_add_f32     v3, 0x3dcccccd, v2                      // 000000000060: 060604FF 3DCCCCCD
  v_bfi_b32     v11, -4, v0, 1                          // 000000000068: D294000B 020600C4
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000070: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v3, v3                                 // 000000000078: 7E060F03
  v_cvt_f32_u32  v0, v0                                 // 00000000007C: 7E000D00
  v_cvt_u32_f32  v2, v2                                 // 000000000080: 7E040F02
  v_add_i32     v3, vcc, 0x00000060, v3                 // 000000000084: 4A0606FF 00000060
  v_add_f32     v0, 0x3dcccccd, v0                      // 00000000008C: 060000FF 3DCCCCCD
  v_add_i32     v2, vcc, 0x00000060, v2                 // 000000000094: 4A0404FF 00000060
  v_cvt_u32_f32  v0, v0                                 // 00000000009C: 7E000F00
  v_add_i32     v0, vcc, 0x00000060, v0                 // 0000000000A0: 4A0000FF 00000060
  v_cvt_f32_u32  v11, v11                               // 0000000000A8: 7E160D0B
  v_add_f32     v1, 0x3dcccccd, v11                     // 0000000000AC: 060216FF 3DCCCCCD
  tbuffer_load_format_xyzw  v[8:11], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B4: EBF32000 80020803
  tbuffer_load_format_xyzw  v[28:31], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000BC: EBF32000 80021C02
  tbuffer_load_format_xyzw  v[32:35], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C4: EBF32000 80022000
  v_cvt_u32_f32  v1, v1                                 // 0000000000CC: 7E020F01
  v_add_i32     v1, vcc, 0x00000060, v1                 // 0000000000D0: 4A0202FF 00000060
  tbuffer_load_format_xyzw  v[0:3], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D8: EBF32000 80020001
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 0000000000E0: BF8C0F77
  v_mul_legacy_f32  v15, v7, v15                        // 0000000000E4: 0E1E1F07
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 0000000000E8: BF8C0F76
  v_mul_legacy_f32  v19, v7, v19                        // 0000000000EC: 0E262707
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000F0: BF8C0F75
  v_mul_legacy_f32  v23, v7, v23                        // 0000000000F4: 0E2E2F07
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000F8: BF8C0F74
  v_mul_legacy_f32  v27, v7, v27                        // 0000000000FC: 0E363707
  s_waitcnt     vmcnt(3) & lgkmcnt(15)                  // 000000000100: BF8C0F73
  v_mul_legacy_f32  v11, v7, v11                        // 000000000104: 0E161707
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 000000000108: BF8C0F72
  v_mul_legacy_f32  v7, v7, v31                         // 00000000010C: 0E0E3F07
  v_mac_legacy_f32  v15, v6, v14                        // 000000000110: 0C1E1D06
  v_mac_legacy_f32  v19, v6, v18                        // 000000000114: 0C262506
  v_mac_legacy_f32  v23, v6, v22                        // 000000000118: 0C2E2D06
  v_mac_legacy_f32  v27, v6, v26                        // 00000000011C: 0C363506
  v_mac_legacy_f32  v11, v6, v10                        // 000000000120: 0C161506
  v_mac_legacy_f32  v7, v6, v30                         // 000000000124: 0C0E3D06
  v_mac_legacy_f32  v15, v5, v13                        // 000000000128: 0C1E1B05
  v_mac_legacy_f32  v19, v5, v17                        // 00000000012C: 0C262305
  v_mac_legacy_f32  v23, v5, v21                        // 000000000130: 0C2E2B05
  v_mac_legacy_f32  v27, v5, v25                        // 000000000134: 0C363305
  v_mac_legacy_f32  v11, v5, v9                         // 000000000138: 0C161305
  v_mac_legacy_f32  v7, v5, v29                         // 00000000013C: 0C0E3B05
  v_mac_legacy_f32  v15, v4, v12                        // 000000000140: 0C1E1904
  v_mac_legacy_f32  v19, v4, v16                        // 000000000144: 0C262104
  v_mac_legacy_f32  v23, v4, v20                        // 000000000148: 0C2E2904
  v_mac_legacy_f32  v27, v4, v24                        // 00000000014C: 0C363104
  v_mac_legacy_f32  v11, v4, v8                         // 000000000150: 0C161104
  v_mac_legacy_f32  v7, v4, v28                         // 000000000154: 0C0E3904
  v_mov_b32     v4, 0                                   // 000000000158: 7E080280
  v_mov_b32     v5, 1.0                                 // 00000000015C: 7E0A02F2
  exp           pos0, v15, v19, v23, v27 done           // 000000000160: F80008CF 1B17130F
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000168: BF8C0F71
  exp           param0, v32, v33, v34, v35              // 00000000016C: F800020F 23222120
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000174: BF8C0F70
  exp           param1, v0, v1, v2, v3                  // 000000000178: F800021F 03020100
  exp           param2, v11, v7, v4, v5                 // 000000000180: F800022F 0504070B
  s_endpgm                                              // 000000000188: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[405], bundle is:[215] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedPosition3dTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
; Output Semantic Mappings
;   [0] position, usageIdx  3, paramIdx 3, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0

codeLenInByte        = 476;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 36;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 16
; esGsRingItemSize          = 16

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_cvt_f32_u32  v0, v3                                 // 000000000008: 7E000D03
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 00000000000C: C0840300
  v_add_f32     v0, 0x3dcccccd, v0                      // 000000000010: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v0, v0                                 // 000000000018: 7E000F00
  v_lshlrev_b32  v0, 2, v0                              // 00000000001C: 34000082
  s_waitcnt     lgkmcnt(0)                              // 000000000020: BF8C007F
  tbuffer_load_format_xyzw  v[8:11], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000024: EBF32000 80020800
  v_add_i32     v1, vcc, 1, v0                          // 00000000002C: 4A020081
  v_add_i32     v2, vcc, 2, v0                          // 000000000030: 4A040082
  v_add_i32     v0, vcc, 3, v0                          // 000000000034: 4A000083
  tbuffer_load_format_xyzw  v[20:23], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000038: EBF32000 80021400
  v_lshlrev_b32  v0, 2, v3                              // 000000000040: 34000682
  v_cvt_f32_u32  v0, v0                                 // 000000000044: 7E000D00
  tbuffer_load_format_xyzw  v[12:15], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000048: EBF32000 80020C01
  v_add_f32     v0, 0x3dcccccd, v0                      // 000000000050: 060000FF 3DCCCCCD
  tbuffer_load_format_xyzw  v[16:19], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000058: EBF32000 80021002
  v_cvt_u32_f32  v0, v0                                 // 000000000060: 7E000F00
  v_add_i32     v0, vcc, 0x00000060, v0                 // 000000000064: 4A0000FF 00000060
  tbuffer_load_format_xyzw  v[24:27], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000006C: EBF32000 80021800
  v_lshlrev_b32  v1, 2, v3                              // 000000000074: 34020682
  v_bfi_b32     v2, -4, v1, 2                           // 000000000078: D2940002 020A02C4
  v_cvt_f32_u32  v2, v2                                 // 000000000080: 7E040D02
  v_bfi_b32     v1, -4, v1, 1                           // 000000000084: D2940001 020602C4
  v_add_f32     v3, 0x3dcccccd, v2                      // 00000000008C: 060604FF 3DCCCCCD
  v_cvt_f32_u32  v1, v1                                 // 000000000094: 7E020D01
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000098: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v3, v3                                 // 0000000000A0: 7E060F03
  v_add_f32     v1, 0x3dcccccd, v1                      // 0000000000A4: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v2, v2                                 // 0000000000AC: 7E040F02
  v_add_i32     v3, vcc, 0x00000060, v3                 // 0000000000B0: 4A0606FF 00000060
  v_cvt_u32_f32  v0, v1                                 // 0000000000B8: 7E000F01
  v_add_i32     v1, vcc, 0x00000060, v2                 // 0000000000BC: 4A0204FF 00000060
  tbuffer_load_format_xyzw  v[28:31], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C4: EBF32000 80021C03
  tbuffer_load_format_xyzw  v[32:35], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000CC: EBF32000 80022001
  v_add_i32     v0, vcc, 0x00000060, v0                 // 0000000000D4: 4A0000FF 00000060
  tbuffer_load_format_xyzw  v[0:3], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000DC: EBF32000 80020000
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 0000000000E4: BF8C0F77
  v_mul_legacy_f32  v11, v7, v11                        // 0000000000E8: 0E161707
  v_mac_legacy_f32  v11, v6, v10                        // 0000000000EC: 0C161506
  s_load_dwordx4  s[8:11], s[2:3], 0x0c                 // 0000000000F0: C084030C
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000F4: BF8C0F75
  v_mul_legacy_f32  v10, v7, v15                        // 0000000000F8: 0E141F07
  v_mac_legacy_f32  v11, v5, v9                         // 0000000000FC: 0C161305
  v_mac_legacy_f32  v10, v6, v14                        // 000000000100: 0C141D06
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 000000000104: BF8C0F74
  v_mul_legacy_f32  v9, v7, v19                         // 000000000108: 0E122707
  v_mac_legacy_f32  v11, v4, v8                         // 00000000010C: 0C161104
  v_mac_legacy_f32  v10, v5, v13                        // 000000000110: 0C141B05
  v_mac_legacy_f32  v9, v6, v18                         // 000000000114: 0C122506
  v_mul_legacy_f32  v8, v7, v23                         // 000000000118: 0E102F07
  v_mac_legacy_f32  v10, v4, v12                        // 00000000011C: 0C141904
  v_mac_legacy_f32  v9, v5, v17                         // 000000000120: 0C122305
  v_mac_legacy_f32  v8, v6, v22                         // 000000000124: 0C102D06
  v_mac_legacy_f32  v9, v4, v16                         // 000000000128: 0C122104
  v_mac_legacy_f32  v8, v5, v21                         // 00000000012C: 0C102B05
  v_mac_legacy_f32  v8, v4, v20                         // 000000000130: 0C102904
  s_waitcnt     lgkmcnt(0)                              // 000000000134: BF8C007F
  buffer_store_dword  v11, v0, s[8:11], s4 offset:48 glc slc // 000000000138: E0704030 04420B00
  buffer_store_dword  v10, v0, s[8:11], s4 offset:52 glc slc // 000000000140: E0704034 04420A00
  buffer_store_dword  v9, v0, s[8:11], s4 offset:56 glc slc // 000000000148: E0704038 04420900
  buffer_store_dword  v8, v0, s[8:11], s4 offset:60 glc slc // 000000000150: E070403C 04420800
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 000000000158: BF8C0F77
  buffer_store_dword  v24, v0, s[8:11], s4 glc slc      // 00000000015C: E0704000 04421800
  buffer_store_dword  v25, v0, s[8:11], s4 offset:4 glc slc // 000000000164: E0704004 04421900
  s_waitcnt     vmcnt(8) & lgkmcnt(15)                  // 00000000016C: BF8C0F78
  v_mul_legacy_f32  v8, v7, v31                         // 000000000170: 0E103F07
  buffer_store_dword  v26, v0, s[8:11], s4 offset:8 glc slc // 000000000174: E0704008 04421A00
  v_mac_legacy_f32  v8, v6, v30                         // 00000000017C: 0C103D06
  s_waitcnt     vmcnt(8) & lgkmcnt(15)                  // 000000000180: BF8C0F78
  v_mul_legacy_f32  v7, v7, v35                         // 000000000184: 0E0E4707
  buffer_store_dword  v27, v0, s[8:11], s4 offset:12 glc slc // 000000000188: E070400C 04421B00
  v_mac_legacy_f32  v8, v5, v29                         // 000000000190: 0C103B05
  v_mac_legacy_f32  v7, v6, v34                         // 000000000194: 0C0E4506
  s_waitcnt     vmcnt(8) & lgkmcnt(15)                  // 000000000198: BF8C0F78
  buffer_store_dword  v0, v0, s[8:11], s4 offset:16 glc slc // 00000000019C: E0704010 04420000
  v_mac_legacy_f32  v8, v4, v28                         // 0000000001A4: 0C103904
  v_mac_legacy_f32  v7, v5, v33                         // 0000000001A8: 0C0E4305
  buffer_store_dword  v1, v0, s[8:11], s4 offset:20 glc slc // 0000000001AC: E0704014 04420100
  v_mac_legacy_f32  v7, v4, v32                         // 0000000001B4: 0C0E4104
  buffer_store_dword  v2, v0, s[8:11], s4 offset:24 glc slc // 0000000001B8: E0704018 04420200
  buffer_store_dword  v3, v0, s[8:11], s4 offset:28 glc slc // 0000000001C0: E070401C 04420300
  buffer_store_dword  v8, v0, s[8:11], s4 offset:32 glc slc // 0000000001C8: E0704020 04420800
  buffer_store_dword  v7, v0, s[8:11], s4 offset:36 glc slc // 0000000001D0: E0704024 04420700
  s_endpgm                                              // 0000000001D8: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[622], bundle is:[206] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedPosition3dTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
; Output Semantic Mappings
;   [0] position, usageIdx  3, paramIdx 3, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0

codeLenInByte        = 416;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 40;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 16
; lsStride                  = 64

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_cvt_f32_u32  v0, v3                                 // 000000000008: 7E000D03
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 00000000000C: C0840300
  v_add_f32     v0, 0x3dcccccd, v0                      // 000000000010: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v0, v0                                 // 000000000018: 7E000F00
  v_lshlrev_b32  v0, 2, v0                              // 00000000001C: 34000082
  v_add_i32     v2, vcc, 1, v0                          // 000000000020: 4A040081
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  tbuffer_load_format_xyzw  v[12:15], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000028: EBF32000 80020C00
  tbuffer_load_format_xyzw  v[16:19], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000030: EBF32000 80021002
  v_add_i32     v9, vcc, 2, v0                          // 000000000038: 4A120082
  v_add_i32     v10, vcc, 3, v0                         // 00000000003C: 4A140083
  tbuffer_load_format_xyzw  v[20:23], v9, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 80021409
  tbuffer_load_format_xyzw  v[24:27], v10, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000048: EBF32000 8002180A
  v_lshlrev_b32  v8, 2, v3                              // 000000000050: 34100682
  v_lshlrev_b32  v3, 2, v3                              // 000000000054: 34060682
  v_bfi_b32     v11, -4, v8, 2                          // 000000000058: D294000B 020A10C4
  v_cvt_f32_u32  v0, v3                                 // 000000000060: 7E000D03
  v_cvt_f32_u32  v2, v11                                // 000000000064: 7E040D0B
  v_add_f32     v0, 0x3dcccccd, v0                      // 000000000068: 060000FF 3DCCCCCD
  v_bfi_b32     v3, -4, v8, 1                           // 000000000070: D2940003 020610C4
  v_add_f32     v8, 0x3dcccccd, v2                      // 000000000078: 061004FF 3DCCCCCD
  v_cvt_u32_f32  v0, v0                                 // 000000000080: 7E000F00
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000084: 060404FF 3F8CCCCD
  v_cvt_f32_u32  v3, v3                                 // 00000000008C: 7E060D03
  v_cvt_u32_f32  v8, v8                                 // 000000000090: 7E100F08
  v_add_i32     v0, vcc, 0x00000060, v0                 // 000000000094: 4A0000FF 00000060
  v_cvt_u32_f32  v2, v2                                 // 00000000009C: 7E040F02
  v_add_f32     v3, 0x3dcccccd, v3                      // 0000000000A0: 060606FF 3DCCCCCD
  v_add_i32     v8, vcc, 0x00000060, v8                 // 0000000000A8: 4A1010FF 00000060
  v_add_i32     v2, vcc, 0x00000060, v2                 // 0000000000B0: 4A0404FF 00000060
  v_cvt_u32_f32  v3, v3                                 // 0000000000B8: 7E060F03
  v_add_i32     v3, vcc, 0x00000060, v3                 // 0000000000BC: 4A0606FF 00000060
  tbuffer_load_format_xyzw  v[28:31], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C4: EBF32000 80021C00
  tbuffer_load_format_xyzw  v[32:35], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000CC: EBF32000 80022002
  tbuffer_load_format_xyzw  v[36:39], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D4: EBF32000 80022403
  tbuffer_load_format_xyzw  v[8:11], v8, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000DC: EBF32000 80020808
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 0000000000E4: BF8C0F77
  v_mul_legacy_f32  v0, v7, v15                         // 0000000000E8: 0E001F07
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 0000000000EC: BF8C0F76
  v_mul_legacy_f32  v2, v7, v19                         // 0000000000F0: 0E042707
  v_mac_legacy_f32  v0, v6, v14                         // 0000000000F4: 0C001D06
  v_mac_legacy_f32  v2, v6, v18                         // 0000000000F8: 0C042506
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000FC: BF8C0F75
  v_mul_legacy_f32  v3, v7, v23                         // 000000000100: 0E062F07
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 000000000104: BF8C0F74
  v_mul_legacy_f32  v14, v7, v27                        // 000000000108: 0E1C3707
  v_mac_legacy_f32  v0, v5, v13                         // 00000000010C: 0C001B05
  v_mac_legacy_f32  v2, v5, v17                         // 000000000110: 0C042305
  v_mac_legacy_f32  v3, v6, v22                         // 000000000114: 0C062D06
  v_mac_legacy_f32  v14, v6, v26                        // 000000000118: 0C1C3506
  s_mov_b32     m0, 0x00010000                          // 00000000011C: BEFC03FF 00010000
  v_mac_legacy_f32  v0, v4, v12                         // 000000000124: 0C001904
  v_mac_legacy_f32  v2, v4, v16                         // 000000000128: 0C042104
  v_mac_legacy_f32  v3, v5, v21                         // 00000000012C: 0C062B05
  v_mac_legacy_f32  v14, v5, v25                        // 000000000130: 0C1C3305
  v_lshlrev_b32  v1, 6, v1                              // 000000000134: 34020286
  v_mac_legacy_f32  v3, v4, v20                         // 000000000138: 0C062904
  v_mac_legacy_f32  v14, v4, v24                        // 00000000013C: 0C1C3104
  ds_write2_b32  v1, v0, v2 offset0:12 offset1:13       // 000000000140: D8380D0C 00020001
  ds_write2_b32  v1, v3, v14 offset0:14 offset1:15      // 000000000148: D8380F0E 000E0301
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000150: BF8C0F70
  v_mul_legacy_f32  v0, v7, v11                         // 000000000154: 0E001707
  v_mul_legacy_f32  v2, v7, v35                         // 000000000158: 0E044707
  ds_write2_b32  v1, v28, v29 offset1:1                 // 00000000015C: D8380100 001D1C01
  v_mac_legacy_f32  v0, v6, v10                         // 000000000164: 0C001506
  v_mac_legacy_f32  v2, v6, v34                         // 000000000168: 0C044506
  ds_write2_b32  v1, v30, v31 offset0:2 offset1:3       // 00000000016C: D8380302 001F1E01
  v_mac_legacy_f32  v0, v5, v9                          // 000000000174: 0C001305
  v_mac_legacy_f32  v2, v5, v33                         // 000000000178: 0C044305
  ds_write2_b32  v1, v36, v37 offset0:4 offset1:5       // 00000000017C: D8380504 00252401
  v_mac_legacy_f32  v0, v4, v8                          // 000000000184: 0C001104
  v_mac_legacy_f32  v2, v4, v32                         // 000000000188: 0C044104
  ds_write2_b32  v1, v38, v39 offset0:6 offset1:7       // 00000000018C: D8380706 00272601
  ds_write2_b32  v1, v0, v2 offset0:8 offset1:9         // 000000000194: D8380908 00020001
  s_endpgm                                              // 00000000019C: BF810000
end


// Approximately 21 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VInstancedPosition3dTexTGCxform[] =
{
     68,  88,  66,  67,   7, 160, 
     10,   4, 171, 178, 141, 166, 
     40, 151, 247,  48,  55, 174, 
     82,  68,   1,   0,   0,   0, 
     60,  16,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    188,   1,   0,   0,  24,   2, 
      0,   0, 160,   2,   0,   0, 
    160,  15,   0,   0,  82,  68, 
     69,  70, 128,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
     68,   1,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      2,   0,   0,   0, 128,   0, 
      0,   0,   0,  12,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 208,   0,   0,   0, 
      0,   0,   0,   0,   0,   6, 
      0,   0,   2,   0,   0,   0, 
    232,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
     12,   1,   0,   0,   0,   6, 
      0,   0,   0,   6,   0,   0, 
      2,   0,   0,   0,  32,   1, 
      0,   0,   0,   0,   0,   0, 
    255, 255, 255, 255,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 118, 102, 
    109, 117, 110, 105, 102, 111, 
    114, 109, 115,   0, 102, 108, 
    111,  97, 116,  52, 120,  52, 
      0, 171, 171, 171,   3,   0, 
      3,   0,   4,   0,   4,   0, 
     24,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    220,   0,   0,   0, 118, 102, 
    117, 110, 105, 102, 111, 114, 
    109, 115,   0, 102, 108, 111, 
     97, 116,  52,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  23,   1,   0,   0, 
     77, 105,  99, 114, 111, 115, 
    111, 102, 116,  32,  40,  82, 
     41,  32,  72,  76,  83,  76, 
     32,  83, 104,  97, 100, 101, 
    114,  32,  67, 111, 109, 112, 
    105, 108, 101, 114,  32,  70, 
    111, 114,  32,  68, 117, 114, 
     97, 110, 103, 111,  32,  57, 
     46,  51,  48,  46,  49,  50, 
     48,  57,  56,  46,  48,   0, 
     73,  83,  71,  78,  84,   0, 
      0,   0,   2,   0,   0,   0, 
      8,   0,   0,   0,  56,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,  15,   0,   0,  68,   0, 
      0,   0,   0,   0,   0,   0, 
      8,   0,   0,   0,   1,   0, 
      0,   0,   1,   0,   0,   0, 
      1,   1,   0,   0,  83,  86, 
     95,  80, 111, 115, 105, 116, 
    105, 111, 110,   0,  83,  86, 
     95,  73, 110, 115, 116,  97, 
    110,  99, 101,  73,  68,   0, 
    171, 171,  79,  83,  71,  78, 
    128,   0,   0,   0,   4,   0, 
      0,   0,   8,   0,   0,   0, 
    104,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
    104,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    104,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   3,  12,   0,   0, 
    113,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,  15,   0,   0,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171, 171, 171, 
     83,  72,  69,  88, 248,  12, 
      0,   0,  80,   0,   1,   0, 
     62,   3,   0,   0,  53,  16, 
      0,   0,   5,   0,   0,   0, 
    198,   0,   0,   0,  80,   0, 
      1,   0, 193,   0,   0,   0, 
    106,   8,   0,   1,  89,   8, 
      0,   4,  70, 142,  32,   0, 
      0,   0,   0,   0, 192,   0, 
      0,   0,  95,   0,   0,   3, 
    242,  16,  16,   0,   0,   0, 
      0,   0,  96,   0,   0,   4, 
     18,  16,  16,   0,   1,   0, 
      0,   0,   8,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3,  50,  32, 
     16,   0,   2,   0,   0,   0, 
    103,   0,   0,   4, 242,  32, 
     16,   0,   3,   0,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   2,   1,   0,   0,   0, 
     41,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,  16,  16,   0,   1,   0, 
      0,   0,   1,  64,   0,   0, 
      2,   0,   0,   0,  86,   0, 
      0,   5,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
      0,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
    205, 204, 204,  61,  28,   0, 
      0,   5,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   8, 242,  32, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   6,   0,   0, 
      0,   0,  96,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0, 140,   0,   0,  20, 
    114,   0,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
     30,   0,   0,   0,  30,   0, 
      0,   0,  30,   0,   0,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      6,  16,  16,   0,   1,   0, 
      0,   0,   2,  64,   0,   0, 
      2,   0,   0,   0,   2,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  86,   0, 
      0,   5, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
      0,   0,   0,  10, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
    205, 204, 204,  61, 205, 204, 
    140,  63, 205, 204, 204,  61, 
      0,   0,   0,   0,  28,   0, 
      0,   5, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   8, 242,  32, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   6,   0,   0, 
      0,   0,  96,   0,   0,   0, 
     42,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,  10, 
     18,  32,  16,   0,   2,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   6,   0,   0,   0,   0, 
     96,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,  10,  34,  32, 
     16,   0,   2,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   6, 
      0,   0,   0,   0,  96,   0, 
      0,   0,  26,   0,  16,   0, 
      0,   0,   0,   0,  86,   0, 
      0,   5,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,  16, 
     16,   0,   1,   0,   0,   0, 
      0,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
    205, 204, 204,  61,  28,   0, 
      0,   5,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     41,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      2,   0,   0,   0,  17,   0, 
      0,   9,  18,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,  10,  34,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   6,   0,   0, 
      0,   0,   1,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,  10, 
     66,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   6,   0,   0,   0,   0, 
      2,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,  10, 130,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   6, 
      0,   0,   0,   0,   3,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    207,   0,   0,   0,  21,   0, 
      1,   0,  32, 106,  23,   0, 
    120,   1, 237, 152, 189,  79, 
     83,  81,  24, 198,  79,  79, 
    111,  95,  74,  57, 189, 229, 
    179, 128,  64,   1, 145, 170, 
     17, 139,   8,  98,  80,  17, 
     18,  73, 140, 141, 137,  70, 
    136, 211,  53, 177, 210,  34, 
     96, 105, 177, 173, 216,  16, 
    115,  45, 136,  27, 131,  38, 
    142,  14, 254,   7,  46,  14, 
     78, 194, 224, 224, 128,  49, 
    113, 101, 114, 102, 211, 133, 
    193, 164,  62, 111, 239, 189, 
    210,  65, 102, 141, 185, 191, 
    228, 121, 159, 123,  62, 238, 
     57, 239, 249, 152, 206,  98, 
    171, 168,  48,  59, 241, 237, 
     45, 251, 238, 222, 157,  93, 
    205,  43, 132, 143,  11,  64, 
    227,   0, 150, 155,  57,  10, 
    113,  41, 204,  81, 136,  78, 
     14,  30,  72,  10, 113,  12, 
    166, 160,  77, 148,  39, 225, 
    220, 118, 194, 150, 197, 228, 
    246,  11,  68, 130,   6, 161, 
     85, 252,  19, 135,  95, 134, 
    116, 104,  24,  10,  66, 206, 
     92, 140, 159,   3, 168, 227, 
      0, 120, 170, 106, 184,  62, 
     10,  97, 168, 223,  56, 125, 
     56,  23,  44, 225, 128,  94, 
     14, 127, 230,  58, 196, 249, 
     31,   6, 231, 230, 228, 194, 
    249, 113, 158,  12, 207, 241, 
    175, 193, 235, 119, 206, 137, 
    225, 243, 168, 134, 247, 218, 
    217, 151, 159,  45,  28,  15, 
    246, 108, 192,  62,  87, 231, 
     44, 183, 161, 195,  40, 131, 
    234, 179,  98, 156,  50, 143, 
     71, 226, 198,  25, 194,   7, 
    225, 112,   8,  19,  18,  26, 
      9,  23, 138, 112,   1, 168, 
      6, 194, 134,  82,  45,  20, 
    128, 112, 144, 132,   9,   9, 
     27,  75,  72, 144,  66,  80, 
     61, 212,   0,  53,  66,  77, 
     16, 214,  68, 200, 151, 144, 
     35, 225, 190,  82,  27, 212, 
     14,  29, 129,  58,  32,  92, 
     56, 234, 130,  34,  80, 183, 
    181,  70, 190, 107,  12, 121, 
     56,  35, 184, 172, 190,  41, 
    255,  63, 188,   7, 213, 247, 
    150, 197, 112, 189, 243, 237, 
    226, 226, 226, 226, 226, 226, 
    226, 226, 226, 226, 226, 226, 
    226, 226, 226, 242,  55, 145, 
    189, 235,  31, 150,  67, 155, 
     91, 222, 160,  52, 203,  82, 
    210, 231, 157, 157, 113,  79, 
     72, 154, 194, 187, 177, 189, 
     46, 229, 200, 154, 172, 143, 
    175, 203, 198, 248,  51, 217, 
     28, 127,  42,  54, 183,  68, 
    207, 143,  61, 143, 146,  37, 
    118, 127, 189, 229, 181, 205, 
    150,   7, 218, 100, 105, 157, 
    196, 136,  20, 175, 190, 126, 
     20,   1,  41, 131, 154,  89, 
    214, 168,  50, 102,  93, 165, 
    142, 100,  89, 211,  80, 222, 
    156, 240, 134, 200,  20,  65, 
     97, 202,  16, 250,  16, 197, 
    239,  34, 151, 178,  16, 149, 
    190, 232,  83,  41, 139, 144, 
     48,  81,  87, 249, 174,  11, 
    134, 205, 114, 216, 202, 143, 
    231, 242, 250, 173,  57, 101, 
    167, 229, 162,  71, 150,  56, 
    111, 172, 193, 250,  23, 117, 
     30,  33,  75, 143, 177, 182, 
    154, 238, 136, 190, 194, 126, 
     60, 170,  63,  98,  31, 140, 
    233,   5, 246, 243, 163, 122, 
    158, 189,  53, 172, 231, 216, 
     39, 116, 157, 186,  34, 138, 
    250, 163, 138,  78, 199,  20, 
    157,  27,  85, 212,  18,  86, 
     52, 174,  43,  95,  71,  68, 
    249, 250, 162, 202, 119,  42, 
    166, 124, 195, 163, 202, 215, 
     20,  86, 190, 139, 186, 210, 
    218,  35,  74, 235, 141,  42, 
    237, 100,  76, 105,  67, 163, 
     74, 107,   8,  43, 109,  76, 
     87,  37, 233,  55, 191, 203, 
    128, 249, 197,  47, 246,  67, 
     77, 173,  29,  15,  49, 126, 
     72, 138, 253, 158, 222, 163, 
    125, 188, 223, 221, 248,  22, 
     30, 233,  29, 132, 215, 213, 
    104,  62,  33, 214, 182, 236, 
    167, 194, 202,  91,  43, 171, 
     29, 226,  87,  53, 167,  92, 
     15,  49,  78, 153, 229, 160, 
    161, 107, 210, 126,  91, 156, 
    177, 157, 251, 243,  27, 148, 
     94,  25, 229, 128,  13, 187, 
    253, 137, 237, 252, 126, 197, 
    239, 188, 193,  79, 239,  90, 
    159, 143, 189, 156, 125,  99, 
    215, 191, 182, 157, 199,   8, 
     64, 139,  59,   3, 253, 253, 
    246,  59, 246, 123, 187, 109, 
      9, 226, 255, 231,  46,  24, 
    247,  18, 233, 196, 106,  62, 
     86, 200, 230, 178,  15,  98, 
    249,  66,  46, 149,  88,  58, 
    107,  36,  83,  43,  70, 170, 
     88,  72, 229,  50, 137, 180, 
    113, 127, 174,  56,  98,  76, 
    231, 102, 141,  91, 169,  76, 
     50, 149,  51, 166, 134, 167, 
    134, 138, 198, 244, 124,   2, 
    133, 188, 113, 251,  90,  38, 
     95,  72, 100, 102,  83, 201, 
    155, 217, 252,  66,  97,  33, 
    155,  25,  78, 206, 164, 138, 
     51,  87, 175,  20, 231, 178, 
    185, 165, 216,  92, 122, 104, 
     40,  54, 159, 206, 167,  49, 
    157, 197, 184, 157,  12, 118, 
     79, 212,  64,  75, 137, 133, 
    140, 248,   5, 106, 246, 174, 
    251,   0,  53,  16,   0,   0, 
    217,   0,   0,   0,  21,   0, 
      1,   0,  16, 202,  23,   0, 
    120,   1, 237, 152, 207, 111, 
     19,  71,  20, 199, 223, 142, 
    199, 227,  16, 198, 235, 197, 
     56, 142,  67,  66,  73,   4, 
    136,  86,  64,  32, 224,   3, 
     63,  75, 186, 128,  16,  17, 
     18,  85,  65, 156,  22, 169, 
    110, 226,  64, 192, 177,  35, 
    219, 109, 173,  30, 140,  49, 
    112,  11,   7, 164,  30, 219, 
    255, 130, 115,  19,  85,  28, 
    170,  42, 189, 244,  10, 135, 
     30, 122, 227, 200, 181, 146, 
    249, 126, 151, 221,  52,  72, 
    112,   6, 161, 253,  72, 223, 
    121, 243, 222, 238, 188,  55, 
     63, 118,  47, 243, 231, 168, 
    132,  52,  78, 253, 174, 105, 
    159, 191, 188, 249,  92, 167, 
     68, 210, 116, 128,  98,   3, 
     86,  10, 108,  69, 126,  41, 
    178,  21, 153,  96, 227,  64, 
    120,  97,  31, 140, 133,  94, 
    192, 159, 133, 229, 179, 207, 
     35, 189,  97, 118, 253,  49, 
    218, 109, 208,  33, 168, 143, 
    252,   1, 236, 151,  80,   9, 
     58,   6, 185, 208,  86, 134, 
     32, 198, 182,  67, 132, 165, 
    182, 194,  92,   7, 160, 120, 
    126,  36, 238, 115, 138, 111, 
    229, 155,  98, 243, 110, 110, 
     64, 156, 255, 251, 224, 220, 
    162,  37, 135, 196, 121, 185, 
    222, 143,  13, 238,  81, 124, 
     78, 132, 231, 177,  21, 206, 
     61,  60, 100, 112,  37,  90, 
     84, 252, 202, 106, 228, 199, 
    103, 185,  14, 189, 143,   1, 
    136, 243,  16, 246, 203,  16, 
     97,  62,  35,  87, 143,  26, 
    116,  12,  14, 196, 224, 172, 
     13,  94,  48, 248, 160, 140, 
    129,  50,  16,  14, 215, 224, 
      0, 205,  48, 132,   3,  54, 
     40, 104, 178,  16,  38, 104, 
    114, 144,   7, 237, 128, 242, 
    208,  78,   8, 107,  50,  35, 
     16, 230, 104, 240, 189,  26, 
    124,  52, 102,  12, 218,   5, 
    141,  67, 248, 224, 204, 110, 
    232,  51, 104,  79, 180, 198, 
     20,  10,   3, 148,  12,  49, 
     14, 103,   6, 171, 226, 175, 
    228, 211, 134, 123, 192, 127, 
     40,  38, 220,  19, 192,  93, 
    193, 246, 134,  74,  72,  72, 
     72,  72,  72,  72,  72,  72, 
     72,  72,  72,  72,  72,  72, 
     72, 248, 144, 168, 169, 254, 
    111,  43, 185, 213, 181,  84, 
     86, 186, 146, 122, 184,  62, 
     16,  49, 127, 109, 108, 156, 
    149, 156, 116, 251,  34, 229, 
    123, 178, 186,  38, 147, 175, 
     94, 202, 144, 234, 221,  23, 
     53, 215,  23,  61, 247,  64, 
    100,  46, 140,  21,  84, 175, 
    111, 164,  44,  28,  11, 223, 
    177, 170, 183,  57,  30, 190, 
    242,  84, 143, 121,  16, 155, 
    251, 150, 197,  16, 147,  18, 
    199, 168, 178, 146, 159, 255, 
    126, 166, 134, 149, 202, 234, 
    174,  19, 246, 141,  26, 104, 
     19, 142, 117, 178, 170,  59, 
    208,  26, 253, 213, 115, 169, 
    156, 233,  14, 148,  10, 227, 
     42, 167, 187,   3,  99, 194, 
     92,  14, 243, 106, 181, 153, 
     55,  53, 129,  90, 176, 206, 
    100,  56, 135, 205,  56,  86, 
    216, 251,  17, 235, 203, 140, 
     22,  93,  51,  82, 180,  22, 
    107, 252, 158, 254, 158, 130, 
    155, 222,  89, 180, 102, 119, 
    193, 182, 233,  31, 200, 187, 
    122,  71, 209, 166, 199,  11, 
    214, 236, 207, 219, 204,  17, 
    207, 213,  99,   5, 155, 222, 
    155, 183, 230, 176, 103, 245, 
     84, 222, 166,  15, 194, 126, 
    225,  89, 238, 201, 209, 217, 
    149, 127, 100, 187, 175, 203, 
    180, 195, 190,  62,  65, 187, 
    205, 215, 103, 104, 135, 124, 
    205, 154, 194, 126, 201, 215, 
    154, 118, 204, 215,  29, 214, 
     57, 231, 185,  67, 244, 119, 
    249, 218, 156, 245, 108,  24, 
    187, 228, 186, 150, 177, 113, 
     95, 167,  79, 123, 214,  92, 
    116, 195, 184, 199, 152,  96, 
    252,  73, 207, 166, 207, 187, 
    182,  64, 223, 129, 255, 149, 
    107,  75, 236,  43,  95,  79, 
    208, 166, 124,  61,  73, 139, 
    186, 251, 104,  51, 190,  22, 
    185, 191,  54, 194,  61,   0, 
    188, 137, 163, 198,  32, 222, 
    206, 197,  62, 239, 132,  73, 
    236, 199, 119,  85, 177,  79, 
    197,  32, 161, 243,  44, 186, 
    187, 124,  26,  89, 190, 143, 
    184, 184,  97, 214, 255, 249, 
     55, 122, 254,  34, 178, 188, 
     31, 227, 253, 114, 246, 143, 
    167, 163, 143,  78,  62, 153, 
    151, 232,  46, 252, 191, 232, 
     57, 115,  12,  67, 119,  54, 
     14, 237, 127,  20,  61,  43, 
     69, 118,  25, 226, 248, 197, 
     83, 193, 119, 149,  90, 229, 
    167, 214, 116, 187, 209, 108, 
    220, 157, 110, 181, 155, 213, 
    202, 242, 177,  96, 161, 250, 
     67,  80, 237, 180, 171, 205, 
    122, 165,  22, 220,  90, 236, 
    148, 131, 107, 205, 249, 224, 
    155, 106, 125, 161, 218,  12, 
     46,  28, 191,  48, 211,   9, 
    174, 221, 174, 192, 105,   5, 
     55,  46, 215,  91, 237,  74, 
    125, 190, 186, 240, 117, 163, 
    181, 212,  94, 106, 212, 143, 
     47,  92, 175, 118, 174,  95, 
     58, 223,  89, 108,  52, 151, 
    167,  23, 107,  51,  51, 211, 
    183, 107, 173,  26, 202, 189, 
    225, 215, 104,  18, 188, 164, 
    207,  64, 203, 149, 165, 186, 
    188,   6, 207,  44, 196, 245, 
     53,  16,   0,   0, 208,   0, 
      0,   0,  21,   0,   1,   0, 
      0, 126,  23,   0, 120,   1, 
    237, 152, 207,  79,  19,  65, 
     20, 199,  95, 119, 167, 175, 
      5, 166, 219,  21,  65,  68, 
    139,  64,  20, 209, 168, 104, 
    161, 198,  31, 209, 136,  81, 
     67, 108,  98,  68,  49, 158, 
    214, 196,  10, 173, 160, 165, 
     37, 109, 197, 198,  67,  69, 
    252, 113, 226, 160, 137,   7, 
    143, 254,   5, 234, 193, 179, 
    112, 240, 224,   1,  15, 122, 
    209, 132,  63, 193, 163,  87, 
    147, 250, 125, 219,  93, 169, 
     81, 207,  26, 179, 159, 228, 
     59, 111, 223, 236, 236, 204, 
    155,  55, 179, 151,  87, 235, 
     34, 151, 220, 135, 151, 159, 
    196, 174, 125, 185, 178, 166, 
     76, 162, 176,  56,  77, 204, 
    117,  72,  75,  52, 190,  73, 
     90, 162, 205, 210, 132,  32, 
    131, 104,  23, 140, 134, 158, 
    195,  31, 133, 149, 119, 210, 
     39, 106,  48, 186, 178, 132, 
    150, 161,  97, 232,   5, 190, 
     73, 195,  30, 131,  54,  64, 
     35,  80,  27,  36,  68, 164, 
      1,  81, 105, 128, 111, 241, 
    201,  79, 180,  64,  50, 127, 
    115, 191, 132,  35, 196,  33, 
    108,  97, 157, 126, 105, 126, 
    207,  57, 104,  61, 206,  95, 
    145, 216,  36,   6,  63,  46, 
     63,  78, 217, 239, 191, 134, 
    236, 223,  63,  39,  65, 206, 
    163,  25,  11, 242, 243,  98, 
    123, 231, 232,  15,  25, 245, 
    124, 201, 133, 236, 109,   5, 
    250,  19, 117, 160, 228, 161, 
      9, 223, 151, 249, 152, 206, 
     31,  96,  60,  48,  14, 135, 
    177,  32, 227,  37, 227,  66, 
     49,  46,   0,  35, 145, 140, 
    132,  50,  14, 144,  91,  33, 
     36, 148, 177,  32, 199,  32, 
      4, 200,  56,  60, 182,  33, 
     92,  12, 110, 135,  54,  66, 
    216,  19, 119,  66, 136, 145, 
    113,  95,  25,  23, 140, 187, 
    161,  45, 208,  86,  40,   1, 
    245,  64, 219, 160,  94,  47, 
     22, 179, 177,  83, 185, 115, 
      2, 135,  36,  50,  88, 163, 
    249, 198, 252, 191,  72,  14, 
    228, 222, 250, 184,  57,   1, 
    146,  21, 164, 215,  69, 254, 
    213, 128, 128, 128, 128, 128, 
    128, 128, 128, 128, 128, 128, 
    128, 128, 128, 128, 128, 191, 
    133, 209, 191, 248, 102,  46, 
    190, 180, 108, 198, 168,  70, 
    230, 131, 149,  58,  17, 191, 
     95,  93,  61,  78, 113, 170, 
     45,  18, 165, 238, 145,  74, 
    223, 165, 165, 101, 234, 251, 
    250, 133, 180, 177,  32, 214, 
    176, 141, 133,  69, 106,  79, 
    223, 167, 142, 180, 248,  45, 
     29, 141, 254, 214, 205, 232, 
    103,  59, 181, 200, 156, 106, 
    163, 167,  31, 223, 218, 173, 
    134, 204, 219,  22,  83,  53, 
    127,  94, 211, 237, 103, 163, 
    174, 236,  31, 235, 212, 149, 
    194, 243, 210,   9,  51, 198, 
    181, 104, 220, 150, 177, 233, 
    171,  18,  91,  28, 223,  49, 
    187, 227, 234, 182, 237, 246, 
     97, 172, 107, 205,  56, 203, 
     59, 247,  89, 214, 166, 132, 
     23,  91,  95, 195, 154,  59, 
     26,  54,  26,  53,  22, 110, 
     99, 127, 145,  94, 178, 230, 
    197,  14,  42, 139, 123,  72, 
    243, 128, 210, 183, 196, 223, 
    207,  86,  69, 236, 161, 132, 
     21, 222,  74,  58, 188,  93, 
    105, 222, 199, 154,  15,  38, 
    116, 221, 252, 246,  70,  42, 
    109, 170, 155, 180, 234,  87, 
     58, 188, 135, 117, 120,  36, 
    161,  31,  25,  70,  74, 237, 
    102, 173, 146,   9, 173,  99, 
    135,  63, 135, 200,  32,  43, 
     14, 107,  90,  36, 185, 140, 
    116, 145,  21,  25,  83,  22, 
    133, 208, 151, 232, 145, 154, 
    154, 230,  51,  74,  27,  38, 
    252, 109, 189,  20, 222, 136, 
    117,  78,  41, 173, 194, 240, 
    119,  12, 144, 218, 128, 249, 
     79,  98, 221,   8, 252, 157, 
    131,  20, 109, 129, 117,  43, 
    174, 247, 150,  59, 209,  10, 
    226, 137, 186,  33, 169, 176, 
    249, 190,  95,  99, 242, 125, 
    145, 143, 194, 208, 170,  87, 
    111, 156, 246, 172, 140, 151, 
     26,  21, 130,  67, 187, 206, 
     51, 239, 253,  99, 207,  74, 
     77,  75, 106, 176, 177, 119, 
    175, 187,  30,  30, 121,  50, 
    249, 218, 235, 127, 229,  89, 
    153, 163,  21, 186, 177, 186, 
    119, 224, 136,  87, 219,  94, 
    245, 222, 205,  66, 242, 125, 
    238, 168, 115,  45, 147, 207, 
    220,  41,  15,  85, 138, 165, 
    226, 205, 161, 114, 165, 148, 
    205, 204,  14,  59,  83, 217, 
    121,  39,  91, 173, 100,  75, 
    133,  76, 222, 185, 158, 171, 
    166, 156, 137, 210, 164, 115, 
     49,  91, 152, 202, 150, 156, 
    211,  35, 167, 147,  85, 103, 
     98,  58,   3, 167, 236,  92, 
     62,  91,  40,  87,  50, 133, 
    201, 236, 212, 120, 177,  60, 
     83, 153,  41,  22,  70, 166, 
     46, 101, 171, 151, 198,  78, 
     85, 115, 197, 210, 236,  80, 
     46, 159,  76,  14,  77, 231, 
    203, 121,  44, 215, 224, 130, 
     23, 140,  20, 214, 165, 152, 
     60, 155, 153,  41, 208, 119, 
    239, 200, 173, 103,  83,  84, 
     65,  84, 148,   0,   0,   0, 
     21,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      6,   0,   0,   0,   9,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      6,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0
};
