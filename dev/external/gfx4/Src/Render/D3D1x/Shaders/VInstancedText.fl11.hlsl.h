#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4 vfuniforms[96];             // Offset:    0 Size:  1536
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// SV_Position              0   xyzw        2     NONE   float   xyzw
// SV_InstanceID            0   x           3   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// COLOR                    0   xyzw        1     NONE   float   xyzw
// SV_Position              0   xyzw        2      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[141]
// Embedded Data:
//  0x0000008d - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x00000088 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[96], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xyzw
dcl_input_sgv v3.x, instance_id
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output_siv o2.xyzw, position
dcl_temps 1
mov o0.xy, v1.xyxx
ishl r0.x, v3.x, l(2)
utof r0.x, r0.x
add r0.x, r0.x, l(0.100000)
bfi r0.yzw, l(0, 30, 30, 30), l(0, 2, 2, 2), v3.xxxx, l(0, 2, 2, 1)
utof r0.yzw, r0.yyzw
add r0.yzw, r0.yyzw, l(0.000000, 0.100000, 1.100000, 0.100000)
ftou r0.xyzw, r0.xyzw
mad o1.xyzw, v0.xyzw, cb0[r0.w + 0].xyzw, cb0[r0.x + 0].xyzw
dp4 o2.x, v2.xyzw, cb0[r0.y + 0].xyzw
dp4 o2.y, v2.xyzw, cb0[r0.z + 0].xyzw
mov o2.zw, l(0,0,0,1.000000)
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[141], bundle is:[171] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedText.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0

codeLenInByte        = 224;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 28;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000002
SVOC:VS_EXPORT_COUNT        = 1
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_lshlrev_b32  v0, 2, v3                              // 000000000008: 34000682
  v_bfi_b32     v1, -4, v0, 2                           // 00000000000C: D2940001 020A00C4
  v_cvt_f32_u32  v1, v1                                 // 000000000014: 7E020D01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v2, 0x3dcccccd, v1                      // 00000000001C: 060402FF 3DCCCCCD
  v_add_f32     v1, 0x3f8ccccd, v1                      // 000000000024: 060202FF 3F8CCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000002C: 7E020F01
  v_bfi_b32     v0, -4, v0, 1                           // 000000000030: D2940000 020600C4
  v_cvt_f32_u32  v0, v0                                 // 000000000038: 7E000D00
  s_waitcnt     lgkmcnt(0)                              // 00000000003C: BF8C007F
  tbuffer_load_format_xyzw  v[20:23], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 80021401
  v_add_f32     v0, 0x3dcccccd, v0                      // 000000000048: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v2, v2                                 // 000000000050: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 000000000054: 7E000F00
  tbuffer_load_format_xyzw  v[16:19], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000058: EBF32000 80021002
  tbuffer_load_format_xyzw  v[24:27], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000060: EBF32000 80021800
  v_lshlrev_b32  v3, 2, v3                              // 000000000068: 34060682
  v_cvt_f32_u32  v3, v3                                 // 00000000006C: 7E060D03
  v_add_f32     v1, 0x3dcccccd, v3                      // 000000000070: 060206FF 3DCCCCCD
  v_cvt_u32_f32  v1, v1                                 // 000000000078: 7E020F01
  tbuffer_load_format_xyzw  v[0:3], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000007C: EBF32000 80020001
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 000000000084: BF8C0F72
  v_mul_legacy_f32  v10, v15, v19                       // 000000000088: 0E14270F
  v_mul_legacy_f32  v11, v15, v23                       // 00000000008C: 0E162F0F
  v_mac_legacy_f32  v10, v14, v18                       // 000000000090: 0C14250E
  v_mac_legacy_f32  v11, v14, v22                       // 000000000094: 0C162D0E
  v_mac_legacy_f32  v10, v13, v17                       // 000000000098: 0C14230D
  v_mac_legacy_f32  v11, v13, v21                       // 00000000009C: 0C162B0D
  v_mac_legacy_f32  v10, v12, v16                       // 0000000000A0: 0C14210C
  v_mac_legacy_f32  v11, v12, v20                       // 0000000000A4: 0C16290C
  v_mov_b32     v12, 0                                  // 0000000000A8: 7E180280
  v_mov_b32     v13, 1.0                                // 0000000000AC: 7E1A02F2
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 0000000000B0: BF8C0F70
  v_mac_legacy_f32  v0, v4, v24                         // 0000000000B4: 0C003104
  v_mac_legacy_f32  v1, v5, v25                         // 0000000000B8: 0C023305
  v_mac_legacy_f32  v2, v6, v26                         // 0000000000BC: 0C043506
  v_mac_legacy_f32  v3, v7, v27                         // 0000000000C0: 0C063707
  exp           pos0, v10, v11, v12, v13 done           // 0000000000C4: F80008CF 0D0C0B0A
  exp           param0, v8, v9, v12, v13                // 0000000000CC: F800020F 0D0C0908
  exp           param1, v0, v1, v2, v3                  // 0000000000D4: F800021F 03020100
  s_endpgm                                              // 0000000000DC: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[314], bundle is:[181] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedText.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] position, usageIdx  2, paramIdx 2, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0

codeLenInByte        = 288;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 28;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 12
; esGsRingItemSize          = 12

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_lshlrev_b32  v0, 2, v3                              // 000000000008: 34000682
  v_bfi_b32     v1, -4, v0, 2                           // 00000000000C: D2940001 020A00C4
  v_cvt_f32_u32  v1, v1                                 // 000000000014: 7E020D01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v2, 0x3dcccccd, v1                      // 00000000001C: 060402FF 3DCCCCCD
  v_add_f32     v1, 0x3f8ccccd, v1                      // 000000000024: 060202FF 3F8CCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000002C: 7E020F01
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  tbuffer_load_format_xyzw  v[20:23], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000034: EBF32000 80021401
  v_bfi_b32     v0, -4, v0, 1                           // 00000000003C: D2940000 020600C4
  v_cvt_f32_u32  v0, v0                                 // 000000000044: 7E000D00
  v_add_f32     v0, 0x3dcccccd, v0                      // 000000000048: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v2, v2                                 // 000000000050: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 000000000054: 7E000F00
  tbuffer_load_format_xyzw  v[16:19], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000058: EBF32000 80021002
  tbuffer_load_format_xyzw  v[24:27], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000060: EBF32000 80021800
  v_lshlrev_b32  v1, 2, v3                              // 000000000068: 34020682
  v_cvt_f32_u32  v1, v1                                 // 00000000006C: 7E020D01
  v_add_f32     v1, 0x3dcccccd, v1                      // 000000000070: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v1, v1                                 // 000000000078: 7E020F01
  tbuffer_load_format_xyzw  v[0:3], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000007C: EBF32000 80020001
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 000000000084: BF8C0F72
  v_mul_legacy_f32  v10, v15, v19                       // 000000000088: 0E14270F
  s_load_dwordx4  s[8:11], s[2:3], 0x0c                 // 00000000008C: C084030C
  v_mac_legacy_f32  v10, v14, v18                       // 000000000090: 0C14250E
  v_mul_legacy_f32  v11, v15, v23                       // 000000000094: 0E162F0F
  v_mac_legacy_f32  v10, v13, v17                       // 000000000098: 0C14230D
  v_mac_legacy_f32  v11, v14, v22                       // 00000000009C: 0C162D0E
  v_mac_legacy_f32  v10, v12, v16                       // 0000000000A0: 0C14210C
  v_mac_legacy_f32  v11, v13, v21                       // 0000000000A4: 0C162B0D
  v_mac_legacy_f32  v11, v12, v20                       // 0000000000A8: 0C16290C
  v_mov_b32     v12, 0                                  // 0000000000AC: 7E180280
  s_waitcnt     lgkmcnt(0)                              // 0000000000B0: BF8C007F
  buffer_store_dword  v10, v0, s[8:11], s4 offset:32 glc slc // 0000000000B4: E0704020 04420A00
  v_mov_b32     v10, 1.0                                // 0000000000BC: 7E1402F2
  buffer_store_dword  v11, v0, s[8:11], s4 offset:36 glc slc // 0000000000C0: E0704024 04420B00
  buffer_store_dword  v12, v0, s[8:11], s4 offset:40 glc slc // 0000000000C8: E0704028 04420C00
  s_waitcnt     vmcnt(3) & lgkmcnt(15)                  // 0000000000D0: BF8C0F73
  v_mac_legacy_f32  v0, v4, v24                         // 0000000000D4: 0C003104
  buffer_store_dword  v10, v0, s[8:11], s4 offset:44 glc slc // 0000000000D8: E070402C 04420A00
  v_mac_legacy_f32  v1, v5, v25                         // 0000000000E0: 0C023305
  buffer_store_dword  v8, v0, s[8:11], s4 glc slc       // 0000000000E4: E0704000 04420800
  v_mac_legacy_f32  v2, v6, v26                         // 0000000000EC: 0C043506
  buffer_store_dword  v9, v0, s[8:11], s4 offset:4 glc slc // 0000000000F0: E0704004 04420900
  v_mac_legacy_f32  v3, v7, v27                         // 0000000000F8: 0C063707
  buffer_store_dword  v0, v0, s[8:11], s4 offset:16 glc slc // 0000000000FC: E0704010 04420000
  buffer_store_dword  v1, v0, s[8:11], s4 offset:20 glc slc // 000000000104: E0704014 04420100
  buffer_store_dword  v2, v0, s[8:11], s4 offset:24 glc slc // 00000000010C: E0704018 04420200
  buffer_store_dword  v3, v0, s[8:11], s4 offset:28 glc slc // 000000000114: E070401C 04420300
  s_endpgm                                              // 00000000011C: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[497], bundle is:[175] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedText.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] position, usageIdx  2, paramIdx 2, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0

codeLenInByte        = 256;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 32;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 12
; lsStride                  = 48

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_lshlrev_b32  v0, 2, v3                              // 000000000008: 34000682
  v_bfi_b32     v2, -4, v0, 2                           // 00000000000C: D2940002 020A00C4
  v_cvt_f32_u32  v2, v2                                 // 000000000014: 7E040D02
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v10, 0x3dcccccd, v2                     // 00000000001C: 061404FF 3DCCCCCD
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000024: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v2, v2                                 // 00000000002C: 7E040F02
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  tbuffer_load_format_xyzw  v[20:23], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000034: EBF32000 80021402
  v_lshlrev_b32  v2, 2, v3                              // 00000000003C: 34040682
  v_bfi_b32     v0, -4, v0, 1                           // 000000000040: D2940000 020600C4
  v_cvt_f32_u32  v2, v2                                 // 000000000048: 7E040D02
  v_cvt_f32_u32  v0, v0                                 // 00000000004C: 7E000D00
  v_add_f32     v2, 0x3dcccccd, v2                      // 000000000050: 060404FF 3DCCCCCD
  v_add_f32     v0, 0x3dcccccd, v0                      // 000000000058: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v10, v10                               // 000000000060: 7E140F0A
  v_cvt_u32_f32  v2, v2                                 // 000000000064: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 000000000068: 7E000F00
  tbuffer_load_format_xyzw  v[16:19], v10, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000006C: EBF32000 8002100A
  tbuffer_load_format_xyzw  v[24:27], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000074: EBF32000 80021800
  tbuffer_load_format_xyzw  v[28:31], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000007C: EBF32000 80021C02
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 000000000084: BF8C0F72
  v_mul_legacy_f32  v0, v15, v19                        // 000000000088: 0E00270F
  v_mul_legacy_f32  v2, v15, v23                        // 00000000008C: 0E042F0F
  v_mac_legacy_f32  v0, v14, v18                        // 000000000090: 0C00250E
  v_mac_legacy_f32  v2, v14, v22                        // 000000000094: 0C042D0E
  v_mac_legacy_f32  v0, v13, v17                        // 000000000098: 0C00230D
  v_mac_legacy_f32  v2, v13, v21                        // 00000000009C: 0C042B0D
  s_mov_b32     m0, 0x00010000                          // 0000000000A0: BEFC03FF 00010000
  v_mac_legacy_f32  v0, v12, v16                        // 0000000000A8: 0C00210C
  v_mac_legacy_f32  v2, v12, v20                        // 0000000000AC: 0C04290C
  v_mul_lo_i32  v1, v1, 48                              // 0000000000B0: D2D60001 00016101
  ds_write2_b32  v1, v0, v2 offset0:8 offset1:9         // 0000000000B8: D8380908 00020001
  v_mov_b32     v0, 0                                   // 0000000000C0: 7E000280
  v_mov_b32     v2, 1.0                                 // 0000000000C4: 7E0402F2
  ds_write2_b32  v1, v0, v2 offset0:10 offset1:11       // 0000000000C8: D8380B0A 00020001
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 0000000000D0: BF8C0F70
  v_mac_legacy_f32  v28, v4, v24                        // 0000000000D4: 0C383104
  v_mac_legacy_f32  v29, v5, v25                        // 0000000000D8: 0C3A3305
  ds_write2_b32  v1, v8, v9 offset1:1                   // 0000000000DC: D8380100 00090801
  v_mac_legacy_f32  v30, v6, v26                        // 0000000000E4: 0C3C3506
  v_mac_legacy_f32  v31, v7, v27                        // 0000000000E8: 0C3E3707
  ds_write2_b32  v1, v28, v29 offset0:4 offset1:5       // 0000000000EC: D8380504 001D1C01
  ds_write2_b32  v1, v30, v31 offset0:6 offset1:7       // 0000000000F4: D8380706 001F1E01
  s_endpgm                                              // 0000000000FC: BF810000
end


// Approximately 13 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VInstancedText[] =
{
     68,  88,  66,  67, 219, 193, 
    174, 153, 145, 133, 143, 124, 
      5, 213, 231, 219, 148, 129, 
    210, 207,   1,   0,   0,   0, 
    148,  13,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     88,   1,   0,   0, 244,   1, 
      0,   0, 104,   2,   0,   0, 
    248,  12,   0,   0,  82,  68, 
     69,  70,  28,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
    224,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      1,   0,   0,   0, 128,   0, 
      0,   0,   0,   6,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 168,   0,   0,   0, 
      0,   0,   0,   0,   0,   6, 
      0,   0,   2,   0,   0,   0, 
    188,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 102, 
    108, 111,  97, 116,  52,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 179,   0, 
      0,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
    148,   0,   0,   0,   4,   0, 
      0,   0,   8,   0,   0,   0, 
    104,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,  15,   0,   0, 
    110,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,   3,   3,   0,   0, 
    119,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  15,  15,   0,   0, 
    131,   0,   0,   0,   0,   0, 
      0,   0,   8,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   1,   1,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0,  83,  86,  95, 
     73, 110, 115, 116,  97, 110, 
     99, 101,  73,  68,   0, 171, 
    171, 171,  79,  83,  71,  78, 
    108,   0,   0,   0,   3,   0, 
      0,   0,   8,   0,   0,   0, 
     80,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,  12,   0,   0, 
     89,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
     95,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  15,   0,   0,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  67,  79,  76, 
     79,  82,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88, 136,  10,   0,   0, 
     80,   0,   1,   0, 162,   2, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 141,   0, 
      0,   0,  80,   0,   1,   0, 
    136,   0,   0,   0, 106,   8, 
      0,   1,  89,   8,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  96,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3,  50,  16, 
     16,   0,   1,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   2,   0,   0,   0, 
     96,   0,   0,   4,  18,  16, 
     16,   0,   3,   0,   0,   0, 
      8,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      2,   0,   0,   0,   1,   0, 
      0,   0, 104,   0,   0,   2, 
      1,   0,   0,   0,  54,   0, 
      0,   5,  50,  32,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   1,   0,   0,   0, 
     41,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,  16,  16,   0,   3,   0, 
      0,   0,   1,  64,   0,   0, 
      2,   0,   0,   0,  86,   0, 
      0,   5,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
      0,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
    205, 204, 204,  61, 140,   0, 
      0,  20, 226,   0,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
     30,   0,   0,   0,  30,   0, 
      0,   0,  30,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   0,   0,   2,   0, 
      0,   0,   6,  16,  16,   0, 
      3,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,   2,   0, 
      0,   0,   1,   0,   0,   0, 
     86,   0,   0,   5, 226,   0, 
     16,   0,   0,   0,   0,   0, 
     86,  14,  16,   0,   0,   0, 
      0,   0,   0,   0,   0,  10, 
    226,   0,  16,   0,   0,   0, 
      0,   0,  86,  14,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
    205, 204, 204,  61, 205, 204, 
    140,  63, 205, 204, 204,  61, 
     28,   0,   0,   5, 242,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  14,  16,   0,   0,   0, 
      0,   0,  50,   0,   0,  13, 
    242,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,   9,  18,  32, 
     16,   0,   2,   0,   0,   0, 
     70,  30,  16,   0,   2,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  26,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,   9,  34,  32, 
     16,   0,   2,   0,   0,   0, 
     70,  30,  16,   0,   2,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  42,   0, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   8, 194,  32, 
     16,   0,   2,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  62,   0,   0,   1, 
     53,  16,   0,   0, 173,   0, 
      0,   0,  21,   0,   1,   0, 
     32, 173,  22,   0, 120,   1, 
    237, 152, 207, 107,  19,  65, 
     20, 199, 223,  78, 210, 215, 
     54, 157, 221, 141,  26,  99, 
     91, 127, 180, 181, 138,  74, 
     49,  54, 182,  34,  40, 197, 
     30, 138,  40,   8, 138,  21, 
     47,  46,  66, 108,  83, 171, 
    166, 105,  77, 130,  20, 149, 
    184,  86, 143,  61, 120,  16, 
    252,   7, 164, 120, 241, 238, 
     69, 219, 131, 199,  74, 197, 
    147,  55, 189, 120, 242,  34, 
     42, 210,  91, 252, 190, 100, 
    167,   4, 161, 103,   5, 231, 
      3, 159, 121,  59, 187, 179, 
    111, 102, 231, 237, 105,  94, 
    166, 169, 206, 185,  47,  87, 
    251,  37, 222, 251,  52, 118, 
    187,  87,  17, 181,  72,   7, 
    196, 165,   1, 115,  41, 105, 
    137, 158, 108, 151, 150, 104, 
    159,  52,  14, 196, 216,  93, 
      8,  26, 126, 134, 163,  80, 
    158,  29, 140, 108,  48, 186, 
    114,  31,  45, 195,  62, 232, 
    225, 157,  51, 136, 123,  97, 
     59, 220,  13,  91,  97,  12, 
     26, 204, 188, 102,  29,  50, 
     85,  51, 242, 222,  86, 136, 
     84,  27, 152,  49, 127, 230, 
    170,  79, 186,   9,   3,  80, 
    214, 191,  25, 178,  54, 179, 
     22, 201,  41, 185,   5, 249, 
    222, 127,  13, 249, 126,  83, 
     39,  65, 234, 209, 140,   7, 
    205, 190,  92, 136, 234, 104, 
    246,  44, 140, 250, 166, 150, 
     43, 112,  51, 106, 192, 236, 
    137, 161, 121, 143, 152, 206, 
     15, 178, 243,  40, 201, 106, 
    109, 144, 113, 131, 241, 144, 
     81,  72, 198,  15, 192, 216, 
     64, 110, 131,  40,  32,  39, 
     96,   7, 196, 132, 236,  66, 
     44, 144, 125, 152, 132,  91, 
     32,  10, 204, 219,  32, 190, 
    137, 177,  62, 198, 191, 202, 
     59,  96,  39, 236, 130, 221, 
    112,  39, 196, 162,  25, 133, 
    226,  61, 176, 167, 241,  79, 
    200, 191,  38, 176,  99, 190, 
    240, 255,  66, 246,   0, 219, 
     92,  71, 174, 155, 235,  99, 
    174,  45,  22, 139, 197,  98, 
    177,  88,  44,  22, 139, 197, 
     98, 177,  88, 254,  38, 170, 
    111, 225, 205, 156, 191, 184, 
    188, 192,  52, 236, 208, 211, 
     15, 111,  41, 161,  28,  87, 
     85,  41, 246, 120, 165, 166, 
    226, 252, 110, 117, 117, 164, 
    166,  20, 226, 226,  41, 199, 
    199, 253, 250,  24,  86, 228, 
     82, 245,   1,  45,  46,  83, 
    239, 143, 175,  78,  74, 133, 
     53, 162, 250,  88, 229, 199, 
    171, 228,  83,  85, 238, 171, 
    164,  10,  37,  82, 167,  10, 
     23, 152, 135,  99,  46,  87, 
    107,  44, 185,  86,  71, 234, 
    185, 240, 204,  33,  21, 150, 
     48, 191, 127,  32, 229, 249, 
     71, 210, 158, 183,  63, 165, 
    189, 195, 105, 237, 246, 167, 
    180,  59, 144, 214, 186,  47, 
    165, 245, 161, 180,  14,  85, 
    103, 245, 187, 234, 174, 202, 
     90, 227,  89, 210,  45,  67, 
     74, 243, 177, 184, 110,  61, 
    206, 122, 173, 141, 214,  19, 
     29, 218, 245,  21, 173, 183, 
    181, 107, 183,   7, 145,  28, 
     21,  35, 122, 184,  28,  29, 
    183, 213, 207, 102, 196,  46, 
     40,  39,  85, 166, 159, 132, 
    130, 233, 139, 134,  56, 134, 
    190, 138,  18, 188, 136, 162, 
    140, 151, 115,  29, 111, 227, 
     68, 175, 193, 199, 232, 249, 
    251,  40, 202, 153,  80,   7, 
     28,  56, 249, 108, 233, 202, 
    210, 243,  95,  63, 163, 251, 
    223, 162,  40,  57,  18, 240, 
    230, 235, 211, 131, 211, 209, 
    217, 176, 142,  98,   0, 229, 
    253, 169,  19, 193, 181,  92, 
     33, 119, 183, 156, 169, 204, 
    150, 102, 111, 101, 202, 149, 
     82,  62,  55, 115,  52, 152, 
    204, 223,   9, 242, 243, 149, 
    124, 169, 152,  43,   4, 215, 
    167, 230, 135, 131, 241, 210, 
     68, 112,  49,  95, 156, 204, 
    151, 130, 177, 161, 177, 236, 
    124,  48,  62, 157,  67, 167, 
     28,  92,  62,  91,  44,  87, 
    114, 197, 137, 252, 228,  37, 
    188, 145, 153,  42, 100, 179, 
    153, 233,  66, 185, 128, 236, 
     13, 194, 104,  78,  57, 255, 
    149,  51, 215, 153, 220, 141, 
     34, 253,   6, 193,  78, 128, 
    247,   0,  53,  16,   0,   0, 
    183,   0,   0,   0,  21,   0, 
      1,   0,  16, 253,  22,   0, 
    120,   1, 237, 152, 207, 107, 
     19,  65,  20, 199, 223,  78, 
    183, 211,  95, 155,  31, 234, 
     26,  83, 173, 154,  98, 197, 
     74,  53,  54,  54,  34,  40, 
    197, 176, 132, 130,  94,   4, 
     43,  94, 220,  75, 180, 169, 
     85, 211, 180,  38,  65, 138, 
     66, 140,  85, 240, 210, 131, 
      7, 193, 127,  64, 250,  47, 
     40, 136, 182,   7, 143,  21, 
    139,  55,  79, 246, 238,  77, 
     65, 188,  72, 252, 126, 147, 
    221,  82, 133, 158,  21, 153, 
     15, 124, 247, 205, 155, 125, 
    251, 102, 118, 222, 156, 222, 
    207, 132, 180, 248, 244, 242, 
    117, 129, 246, 254, 231, 252, 
    157, 148,  18, 233, 164,   3, 
     48, 108,  49, 239, 242,  41, 
    178, 177, 155,  79, 145,  33, 
     62,  44,   8,   1,   3,  48, 
     14, 148, 130, 159, 131, 229, 
    187, 225,  64, 109, 114, 171, 
     79, 240, 236, 129,   6, 161, 
    137,  14, 145,  11, 176, 140, 
    139,  67, 251,  33, 190, 219, 
    138,  13, 245,  66,  26,  34, 
     92, 106,  43, 140, 223,   9, 
    133, 251,  35, 225,  56,  10, 
    253, 150, 143, 139, 110,  67, 
     22, 226, 254, 183, 131, 123, 
     99, 190, 144,  48,  47, 255, 
    247,  95, 131, 103,  20, 214, 
    137, 176,  30,  91, 225, 127, 
    240,  92, 201, 211, 160, 142, 
     97, 200, 122, 224, 135, 181, 
     92, 133, 182, 163,   9, 194, 
     60, 132,  99, 158,  35,  65, 
    105,  81, 179, 139, 163, 218, 
    122,  20, 215, 234, 195, 168, 
    198, 132,  70, 128, 198, 133, 
    210,  40, 166, 238, 130, 186, 
     33,  28, 164,  70, 129, 117, 
     31, 132,   5, 117,   4, 194, 
      6, 117,  12, 194, 165, 208, 
     59,  32,  20,  88, 239, 130, 
    240,  79,  26, 251, 211, 184, 
    171, 122,  15, 148, 132, 250, 
    161, 189, 208,  62,   8, 155, 
    214,  40, 148,  62,   0,  29, 
    108, 239,  65,  84, 251,  54, 
    132, 247,  71,  91, 127,  28, 
    198, 127,  14, 207,   0, 199, 
    188,   9, 107,  68,  56, 207, 
    250,  82,   6, 131, 193,  96, 
     48,  24,  12,   6, 131, 193, 
     96,  48,  24,  12, 127,  19, 
     53, 184, 248, 118,  62, 182, 
    180, 178, 168,  37, 107, 201, 
    179, 143, 239, 164,  87,  89, 
     17,  85, 151, 142, 199, 171, 
     77, 101, 235, 247, 107, 107, 
    227,  77, 165,  96, 151, 206, 
     89,  49,  85, 127,  32,  75, 
     43, 146, 250, 246, 197, 114, 
     85,  67,  90, 241,  90,  73, 
     68, 234,  77, 145,  86, 172, 
    138, 217, 117, 137,  73, 157, 
     49,  42, 142,  24,  88,  73, 
    170, 198, 162,  86,  89, 230, 
    109, 231,  90,  27, 103,  46, 
    190, 179,  68,  53,  42,  88, 
     63, 118, 196, 141,  58,  88, 
     51, 122, 216, 117,  98,  39, 
     18, 209, 200,  33, 215, 137, 
     30,  79,  56, 206, 160, 235, 
     68,  70,  96, 143,  38, 156, 
    134,  74, 182, 214,  79, 229, 
    230,  55, 164, 215, 179, 191, 
     42, 183,  62, 196, 113, 159, 
    103,  15, 211,  58, 158,  93, 
     69,  46,  59,  35, 206,  49, 
    250, 136, 233,  28,  83, 142, 
    112, 220, 237, 217, 250, 148, 
    237, 216,  28, 247, 120, 118, 
    215, 105, 237, 196,  57,  22, 
    207, 118, 105,  45, 207,  78, 
    210,  42, 207,  30, 160, 237, 
    240, 108, 145, 135,  43,  65, 
    187, 174, 213, 243, 164, 250, 
     33, 118, 184,  66,  63,   9, 
    145, 208, 103, 159, 149, 132, 
     62,  21, 130, 132,  86, 119, 
    208,   7, 254,  17,  36, 102, 
     60, 230,  37, 186, 217,  33, 
    108,  51,  28, 196, 165,   2, 
    203,  30,  83,  31,  52, 114, 
    246, 249, 242, 213, 229,  23, 
    223, 243, 193, 124,  46, 176, 
    204, 193,  62, 238, 173,  55, 
     19, 163, 175, 130,  57,  63, 
    180,  16, 191, 159,  62, 227, 
     95,  43, 148,  10, 247, 170, 
    233, 218,  92, 101, 238, 118, 
    186,  90, 171,  20,  11, 179, 
     39, 253, 169, 226,  93, 191, 
    184,  80,  43,  86, 202, 133, 
    146, 127,  99, 122,  33, 235, 
     79,  86, 174, 251, 151, 138, 
    229, 169,  98, 197, 207, 143, 
    229,  51,  11, 254, 228,  76, 
      1,  78, 213, 191, 114, 190, 
     92, 173,  21, 202, 215, 139, 
     83, 151, 241,  69, 122, 186, 
    148, 201, 164, 103,  74, 213, 
     18, 178, 183,  89,  15, 214, 
    100,  95, 187,  11, 154,  45, 
    220,  44, 203,  47,  18,  72, 
    146, 170,  53,  16,   0,   0, 
    177,   0,   0,   0,  21,   0, 
      1,   0,   0, 205,  22,   0, 
    120,   1, 237, 152, 191,  79, 
     20,  65,  20, 199, 223,  14, 
    195,  28,  28, 123, 183, 167, 
    158,  10, 202, 207,  16,  81, 
    131,  30, 119, 130, 145, 224, 
     47,  10,  98,  66, 101,  34, 
    106, 227,  54, 171,  44, 162, 
     30,   7, 222,  93,  12, 209, 
    100,  61, 209, 130, 130, 202, 
    152, 216,  82,  24, 106, 123, 
     35,  80,  88,  88,  64,  76, 
     40,  12, 157, 127, 128, 141, 
    193, 196,  88, 152, 156, 223, 
    119, 187,  19, 193,  72, 173, 
     49, 243,  73,  62, 243, 238, 
    221, 206, 219, 157,  95, 213, 
    172,  31, 160,  26, 215, 182, 
    122, 222, 112, 124, 244, 105, 
    228, 126, 167,  32, 170, 231, 
    100,  27,  51, 105, 110, 137, 
     94, 239, 231, 150, 168, 147, 
     27,  11, 162,  47, 255, 182, 
     33, 231, 195,   8, 156,  31, 
    139,  12,  25,  94, 157,  71, 
    171,  96,  15, 124, 142, 154, 
     81, 196, 110, 200, 117, 237, 
    176,   1,  50, 250, 187, 146, 
     27, 160, 115, 148, 236, 160, 
     17, 238, 133, 117,  80, 195, 
    195,  97, 248, 217, 142, 254, 
     93, 220, 252, 153,  62, 200, 
    227, 221,  13,  30,  27, 143, 
     69, 143,  67, 143, 179,  54, 
    223, 127,  12, 158, 191, 222, 
    167,  26, 122,  65,  34, 146, 
     80, 175, 215,  76, 180, 143, 
    186, 203, 226, 182, 125, 229, 
    185, 173, 194, 221, 168,   2, 
    189,  63,  26, 157, 243, 251, 
     21,  93, 206,  42, 235, 105, 
     74, 137,  15,  89, 133,  63, 
     20,  30,  42,  44, 160, 194, 
      1,  80,  49, 136,  69,  84, 
    216,  36,  21, 135,  77,  16, 
     31,  84,   9, 136,   1,  42, 
      7, 166, 224,  30, 136,  13, 
     86, 251,  32, 230, 164,  48, 
     62, 133, 179, 170,  14, 194, 
    102, 216,   2,  15, 193, 195, 
    176,  21, 182,  65, 108, 150, 
    234, 136, 230,  40, 194,  19, 
    192, 103, 142,  81, 214, 111, 
    139, 241, 159, 195, 107, 160, 
    207,  42, 179, 125, 127, 120, 
    127, 153,  44,  55,   6, 131, 
    193,  96,  48,  24,  12,   6, 
    131, 193,  96,  48,  24,  12, 
    127,   9, 209,  53, 183,  60, 
    227,  44, 172, 204,  41,  26, 
     16, 244,  98, 227,  29, 197, 
    133,  72, 200, 128, 234, 158, 
    173,  86, 101,  90, 173, 175, 
    173, 157, 175,  74, 137, 184, 
    112,  81,  56,  50, 120,  76, 
     11,  43, 212, 249, 245, 179, 
     72, 139, 202, 156, 146,   3, 
     84, 171,  81,  97,  77, 130, 
    130, 176,  47, 106, 136, 106, 
     49, 238, 164,   3, 174,  35, 
    135,   2, 174, 139, 167,  68, 
    133,  35,  53, 135,  81, 180, 
    138,  74,  17, 223, 119, 142, 
     82, 210, 233, 147, 201, 228, 
     17, 178, 147,  39, 165, 157, 
    232,  38,  59, 209,  43, 237, 
    106, 221, 143, 101, 190,  61, 
    179, 187, 200, 182, 143,  75, 
    219, 162, 143,  27, 150, 103, 
     81,  67, 227, 224, 166,  69, 
    130,  42, 130, 130,  45,  33, 
    131, 120,  83, 152, 243,  92, 
    100, 110, 208, 174, 239,  31, 
    178, 201, 194, 127,  13, 141, 
    164,  78, 159, 179,  99, 103, 
     46, 216, 178,  30, 121, 107, 
     27, 169,  24,  98, 123,   7, 
    102, 255, 100,  37, 186, 142, 
     67, 101, 104,  11, 228,  27, 
     44, 157, 167,  32, 163, 115, 
     86,  35, 209, 117,  51, 122, 
    193, 251,  40, 114, 127, 190, 
      3,  74, 214, 222, 242, 139, 
    239, 209, 243,  47,  81, 228, 
     59, 163,  38, 216, 123, 246, 
    229, 210, 141, 165,  87, 223, 
    210, 209, 253, 112,  42, 138, 
    252, 142,  56, 188, 251, 246, 
     82, 118,  62, 250, 239,  68, 
     20,  93, 200, 245,  19,  67, 
    238,  77,  47, 239,  61,  44, 
    101, 202, 211, 197, 233, 123, 
    153,  82, 185, 232, 123,  83, 
    167, 220, 113, 255, 129, 235, 
    207, 150, 253,  98, 193, 203, 
    187, 183,  39, 102,   7, 220, 
    177, 226,  45, 247, 138,  95, 
     24, 247, 139, 238,  72, 255, 
     72, 110, 214,  29, 155, 244, 
    144, 148, 220, 235, 163, 133, 
     82, 217,  43, 220, 242, 199, 
    175, 162,  34,  51, 145, 207, 
    229,  50, 147, 249,  82,  30, 
    111,  15,  89, 140, 190, 201, 
    247, 178,  49,  56, 229, 221, 
     41, 208,  79,  37,  67, 135, 
     64,   0,  83,  84,  65,  84, 
    148,   0,   0,   0,  13,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   7,   0, 
      0,   0,   5,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0
};
