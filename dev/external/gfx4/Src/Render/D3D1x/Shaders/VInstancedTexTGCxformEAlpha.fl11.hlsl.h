#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4 vfuniforms[144];            // Offset:    0 Size:  2304
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// SV_Position              0   xyzw        1     NONE   float   xyzw
// SV_InstanceID            0   x           2   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xy          3     NONE   float   xy  
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[176]
// Embedded Data:
//  0x000000b0 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000ab - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[144], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input_sgv v2.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output_siv o4.xyzw, position
dcl_temps 1
mov o0.xyzw, v0.xyzw
imul null, r0.x, v2.x, l(6)
imad r0.y, v2.x, l(6), l(1)
utof r0.xy, r0.xyxx
add r0.xy, r0.xyxx, l(0.100000, 0.100000, 0.000000, 0.000000)
ftou r0.xy, r0.xyxx
mov o2.xyzw, cb0[r0.y + 0].xyzw
mov o1.xyzw, cb0[r0.x + 0].xyzw
imad r0.xyzw, v2.xxxx, l(6, 6, 6, 6), l(2, 2, 4, 4)
utof r0.xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, l(0.100000, 1.100000, 0.100000, 1.100000)
ftou r0.xyzw, r0.xyzw
dp4 o3.x, v1.xyzw, cb0[r0.z + 0].xyzw
dp4 o3.y, v1.xyzw, cb0[r0.w + 0].xyzw
dp4 o4.x, v1.xyzw, cb0[r0.x + 0].xyzw
dp4 o4.y, v1.xyzw, cb0[r0.y + 0].xyzw
mov o4.zw, l(0,0,0,1.000000)
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[176], bundle is:[191] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedTexTGCxformEAlpha.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [2] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [3] generic, usageIdx  3, paramIdx 3, paramSlot 0

codeLenInByte        = 308;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 34;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_mul_lo_i32  v0, v3, 6                               // 000000000008: D2D60000 00010D03
  v_add_i32     v1, vcc, 2, v0                          // 000000000010: 4A020082
  v_cvt_f32_u32  v1, v1                                 // 000000000014: 7E020D01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v12, 0x3dcccccd, v1                     // 00000000001C: 061802FF 3DCCCCCD
  v_add_f32     v1, 0x3f8ccccd, v1                      // 000000000024: 060202FF 3F8CCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000002C: 7E020F01
  v_add_i32     v2, vcc, 4, v0                          // 000000000030: 4A040084
  v_cvt_f32_u32  v2, v2                                 // 000000000034: 7E040D02
  v_add_i32     v0, vcc, 1, v0                          // 000000000038: 4A000081
  s_waitcnt     lgkmcnt(0)                              // 00000000003C: BF8C007F
  tbuffer_load_format_xyzw  v[18:21], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 80021201
  v_add_f32     v13, 0x3dcccccd, v2                     // 000000000048: 061A04FF 3DCCCCCD
  v_cvt_f32_u32  v0, v0                                 // 000000000050: 7E000D00
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000054: 060404FF 3F8CCCCD
  v_add_f32     v0, 0x3dcccccd, v0                      // 00000000005C: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v2, v2                                 // 000000000064: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 000000000068: 7E000F00
  tbuffer_load_format_xyzw  v[26:29], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000006C: EBF32000 80021A02
  tbuffer_load_format_xyzw  v[30:33], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000074: EBF32000 80021E00
  v_cvt_u32_f32  v12, v12                               // 00000000007C: 7E180F0C
  v_cvt_u32_f32  v13, v13                               // 000000000080: 7E1A0F0D
  tbuffer_load_format_xyzw  v[14:17], v12, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000084: EBF32000 80020E0C
  v_mul_lo_i32  v3, v3, 6                               // 00000000008C: D2D60003 00010D03
  tbuffer_load_format_xyzw  v[22:25], v13, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000094: EBF32000 8002160D
  v_cvt_f32_u32  v1, v3                                 // 00000000009C: 7E020D03
  v_add_f32     v1, 0x3dcccccd, v1                      // 0000000000A0: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v1, v1                                 // 0000000000A8: 7E020F01
  tbuffer_load_format_xyzw  v[0:3], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80020001
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 0000000000B4: BF8C0F72
  v_mul_legacy_f32  v12, v11, v17                       // 0000000000B8: 0E18230B
  v_mac_legacy_f32  v12, v10, v16                       // 0000000000BC: 0C18210A
  v_mul_legacy_f32  v13, v11, v21                       // 0000000000C0: 0E1A2B0B
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 0000000000C4: BF8C0F71
  v_mul_legacy_f32  v16, v11, v25                       // 0000000000C8: 0E20330B
  v_mul_legacy_f32  v11, v11, v29                       // 0000000000CC: 0E163B0B
  v_mac_legacy_f32  v13, v10, v20                       // 0000000000D0: 0C1A290A
  v_mac_legacy_f32  v12, v9, v15                        // 0000000000D4: 0C181F09
  v_mac_legacy_f32  v16, v10, v24                       // 0000000000D8: 0C20310A
  v_mac_legacy_f32  v11, v10, v28                       // 0000000000DC: 0C16390A
  v_mac_legacy_f32  v13, v9, v19                        // 0000000000E0: 0C1A2709
  v_mac_legacy_f32  v12, v8, v14                        // 0000000000E4: 0C181D08
  v_mac_legacy_f32  v16, v9, v23                        // 0000000000E8: 0C202F09
  v_mac_legacy_f32  v11, v9, v27                        // 0000000000EC: 0C163709
  v_mac_legacy_f32  v13, v8, v18                        // 0000000000F0: 0C1A2508
  v_mov_b32     v10, 0                                  // 0000000000F4: 7E140280
  v_mov_b32     v14, 1.0                                // 0000000000F8: 7E1C02F2
  v_mac_legacy_f32  v16, v8, v22                        // 0000000000FC: 0C202D08
  v_mac_legacy_f32  v11, v8, v26                        // 000000000100: 0C163508
  exp           pos0, v12, v13, v10, v14 done           // 000000000104: F80008CF 0E0A0D0C
  exp           param0, v4, v5, v6, v7                  // 00000000010C: F800020F 07060504
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000114: BF8C0F70
  exp           param1, v0, v1, v2, v3                  // 000000000118: F800021F 03020100
  exp           param2, v30, v31, v32, v33              // 000000000120: F800022F 21201F1E
  exp           param3, v16, v11, v10, v14              // 000000000128: F800023F 0E0A0B10
  s_endpgm                                              // 000000000130: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[369], bundle is:[206] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedTexTGCxformEAlpha.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] position, usageIdx  4, paramIdx 4, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [4] generic, usageIdx  3, paramIdx 3, paramSlot 0

codeLenInByte        = 428;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 32;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_mul_lo_i32  v0, v3, 6                               // 000000000008: D2D60000 00010D03
  v_add_i32     v1, vcc, 2, v0                          // 000000000010: 4A020082
  v_cvt_f32_u32  v1, v1                                 // 000000000014: 7E020D01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v2, 0x3dcccccd, v1                      // 00000000001C: 060402FF 3DCCCCCD
  v_add_f32     v1, 0x3f8ccccd, v1                      // 000000000024: 060202FF 3F8CCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000002C: 7E020F01
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  tbuffer_load_format_xyzw  v[16:19], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000034: EBF32000 80021001
  v_cvt_u32_f32  v2, v2                                 // 00000000003C: 7E040F02
  v_mul_lo_i32  v1, v3, 6                               // 000000000040: D2D60001 00010D03
  v_cvt_f32_u32  v1, v1                                 // 000000000048: 7E020D01
  tbuffer_load_format_xyzw  v[12:15], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000004C: EBF32000 80020C02
  v_add_f32     v1, 0x3dcccccd, v1                      // 000000000054: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000005C: 7E020F01
  tbuffer_load_format_xyzw  v[20:23], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000060: EBF32000 80021401
  v_add_i32     v2, vcc, 4, v0                          // 000000000068: 4A040084
  v_cvt_f32_u32  v2, v2                                 // 00000000006C: 7E040D02
  v_add_f32     v3, 0x3dcccccd, v2                      // 000000000070: 060604FF 3DCCCCCD
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000078: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v3, v3                                 // 000000000080: 7E060F03
  v_cvt_u32_f32  v1, v2                                 // 000000000084: 7E020F02
  tbuffer_load_format_xyzw  v[24:27], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000088: EBF32000 80021803
  tbuffer_load_format_xyzw  v[28:31], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000090: EBF32000 80021C01
  v_add_i32     v0, vcc, 1, v0                          // 000000000098: 4A000081
  v_cvt_f32_u32  v0, v0                                 // 00000000009C: 7E000D00
  v_add_f32     v0, 0x3dcccccd, v0                      // 0000000000A0: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v0, v0                                 // 0000000000A8: 7E000F00
  tbuffer_load_format_xyzw  v[0:3], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80020000
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000B4: BF8C0F74
  v_mul_legacy_f32  v15, v11, v15                       // 0000000000B8: 0E1E1F0B
  v_mac_legacy_f32  v15, v10, v14                       // 0000000000BC: 0C1E1D0A
  s_load_dwordx4  s[8:11], s[2:3], 0x0c                 // 0000000000C0: C084030C
  v_mul_legacy_f32  v14, v11, v19                       // 0000000000C4: 0E1C270B
  v_mac_legacy_f32  v15, v9, v13                        // 0000000000C8: 0C1E1B09
  v_mac_legacy_f32  v14, v10, v18                       // 0000000000CC: 0C1C250A
  v_mac_legacy_f32  v15, v8, v12                        // 0000000000D0: 0C1E1908
  v_mac_legacy_f32  v14, v9, v17                        // 0000000000D4: 0C1C2309
  v_mac_legacy_f32  v14, v8, v16                        // 0000000000D8: 0C1C2108
  v_mov_b32     v12, 0                                  // 0000000000DC: 7E180280
  s_waitcnt     lgkmcnt(0)                              // 0000000000E0: BF8C007F
  buffer_store_dword  v15, v0, s[8:11], s4 offset:64 glc slc // 0000000000E4: E0704040 04420F00
  v_mov_b32     v13, 1.0                                // 0000000000EC: 7E1A02F2
  buffer_store_dword  v14, v0, s[8:11], s4 offset:68 glc slc // 0000000000F0: E0704044 04420E00
  buffer_store_dword  v12, v0, s[8:11], s4 offset:72 glc slc // 0000000000F8: E0704048 04420C00
  buffer_store_dword  v13, v0, s[8:11], s4 offset:76 glc slc // 000000000100: E070404C 04420D00
  buffer_store_dword  v4, v0, s[8:11], s4 glc slc       // 000000000108: E0704000 04420400
  buffer_store_dword  v5, v0, s[8:11], s4 offset:4 glc slc // 000000000110: E0704004 04420500
  buffer_store_dword  v6, v0, s[8:11], s4 offset:8 glc slc // 000000000118: E0704008 04420600
  buffer_store_dword  v7, v0, s[8:11], s4 offset:12 glc slc // 000000000120: E070400C 04420700
  s_waitcnt     vmcnt(11) & lgkmcnt(15)                 // 000000000128: BF8C0F7B
  buffer_store_dword  v20, v0, s[8:11], s4 offset:16 glc slc // 00000000012C: E0704010 04421400
  buffer_store_dword  v21, v0, s[8:11], s4 offset:20 glc slc // 000000000134: E0704014 04421500
  s_waitcnt     vmcnt(12) & lgkmcnt(15)                 // 00000000013C: BF8C0F7C
  v_mul_legacy_f32  v4, v11, v27                        // 000000000140: 0E08370B
  buffer_store_dword  v22, v0, s[8:11], s4 offset:24 glc slc // 000000000144: E0704018 04421600
  v_mac_legacy_f32  v4, v10, v26                        // 00000000014C: 0C08350A
  s_waitcnt     vmcnt(12) & lgkmcnt(15)                 // 000000000150: BF8C0F7C
  v_mul_legacy_f32  v5, v11, v31                        // 000000000154: 0E0A3F0B
  buffer_store_dword  v23, v0, s[8:11], s4 offset:28 glc slc // 000000000158: E070401C 04421700
  v_mac_legacy_f32  v4, v9, v25                         // 000000000160: 0C083309
  v_mac_legacy_f32  v5, v10, v30                        // 000000000164: 0C0A3D0A
  s_waitcnt     vmcnt(12) & lgkmcnt(15)                 // 000000000168: BF8C0F7C
  buffer_store_dword  v0, v0, s[8:11], s4 offset:32 glc slc // 00000000016C: E0704020 04420000
  v_mac_legacy_f32  v4, v8, v24                         // 000000000174: 0C083108
  v_mac_legacy_f32  v5, v9, v29                         // 000000000178: 0C0A3B09
  buffer_store_dword  v1, v0, s[8:11], s4 offset:36 glc slc // 00000000017C: E0704024 04420100
  v_mac_legacy_f32  v5, v8, v28                         // 000000000184: 0C0A3908
  buffer_store_dword  v2, v0, s[8:11], s4 offset:40 glc slc // 000000000188: E0704028 04420200
  buffer_store_dword  v3, v0, s[8:11], s4 offset:44 glc slc // 000000000190: E070402C 04420300
  buffer_store_dword  v4, v0, s[8:11], s4 offset:48 glc slc // 000000000198: E0704030 04420400
  buffer_store_dword  v5, v0, s[8:11], s4 offset:52 glc slc // 0000000001A0: E0704034 04420500
  s_endpgm                                              // 0000000001A8: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[577], bundle is:[196] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedTexTGCxformEAlpha.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] position, usageIdx  4, paramIdx 4, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [4] generic, usageIdx  3, paramIdx 3, paramSlot 0

codeLenInByte        = 360;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 37;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_mul_lo_i32  v0, v3, 6                               // 000000000008: D2D60000 00010D03
  v_add_i32     v2, vcc, 2, v0                          // 000000000010: 4A040082
  v_cvt_f32_u32  v2, v2                                 // 000000000014: 7E040D02
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v12, 0x3dcccccd, v2                     // 00000000001C: 061804FF 3DCCCCCD
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000024: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v2, v2                                 // 00000000002C: 7E040F02
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  tbuffer_load_format_xyzw  v[16:19], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000034: EBF32000 80021002
  v_mul_lo_i32  v2, v3, 6                               // 00000000003C: D2D60002 00010D03
  v_add_i32     v3, vcc, 4, v0                          // 000000000044: 4A060084
  v_add_i32     v0, vcc, 1, v0                          // 000000000048: 4A000081
  v_cvt_f32_u32  v2, v2                                 // 00000000004C: 7E040D02
  v_cvt_f32_u32  v0, v0                                 // 000000000050: 7E000D00
  v_add_f32     v2, 0x3dcccccd, v2                      // 000000000054: 060404FF 3DCCCCCD
  v_add_f32     v0, 0x3dcccccd, v0                      // 00000000005C: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v12, v12                               // 000000000064: 7E180F0C
  v_cvt_u32_f32  v2, v2                                 // 000000000068: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 00000000006C: 7E000F00
  tbuffer_load_format_xyzw  v[12:15], v12, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000070: EBF32000 80020C0C
  tbuffer_load_format_xyzw  v[21:24], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000078: EBF32000 80021502
  tbuffer_load_format_xyzw  v[33:36], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000080: EBF32000 80022100
  v_cvt_f32_u32  v3, v3                                 // 000000000088: 7E060D03
  v_add_f32     v20, 0x3dcccccd, v3                     // 00000000008C: 062806FF 3DCCCCCD
  v_add_f32     v3, 0x3f8ccccd, v3                      // 000000000094: 060606FF 3F8CCCCD
  v_cvt_u32_f32  v20, v20                               // 00000000009C: 7E280F14
  v_cvt_u32_f32  v3, v3                                 // 0000000000A0: 7E060F03
  tbuffer_load_format_xyzw  v[25:28], v20, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A4: EBF32000 80021914
  tbuffer_load_format_xyzw  v[29:32], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80021D03
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000B4: BF8C0F74
  v_mul_legacy_f32  v0, v11, v15                        // 0000000000B8: 0E001F0B
  v_mul_legacy_f32  v2, v11, v19                        // 0000000000BC: 0E04270B
  v_mac_legacy_f32  v0, v10, v14                        // 0000000000C0: 0C001D0A
  v_mac_legacy_f32  v2, v10, v18                        // 0000000000C4: 0C04250A
  v_mac_legacy_f32  v0, v9, v13                         // 0000000000C8: 0C001B09
  v_mac_legacy_f32  v2, v9, v17                         // 0000000000CC: 0C042309
  s_movk_i32    s0, 0x0050                              // 0000000000D0: B0000050
  s_mov_b32     m0, 0x00010000                          // 0000000000D4: BEFC03FF 00010000
  v_mac_legacy_f32  v0, v8, v12                         // 0000000000DC: 0C001908
  v_mac_legacy_f32  v2, v8, v16                         // 0000000000E0: 0C042108
  v_mul_lo_i32  v1, v1, s0                              // 0000000000E4: D2D60001 00000101
  ds_write2_b32  v1, v0, v2 offset0:16 offset1:17       // 0000000000EC: D8381110 00020001
  v_mov_b32     v0, 0                                   // 0000000000F4: 7E000280
  v_mov_b32     v2, 1.0                                 // 0000000000F8: 7E0402F2
  ds_write2_b32  v1, v0, v2 offset0:18 offset1:19       // 0000000000FC: D8381312 00020001
  ds_write2_b32  v1, v4, v5 offset1:1                   // 000000000104: D8380100 00050401
  ds_write2_b32  v1, v6, v7 offset0:2 offset1:3         // 00000000010C: D8380302 00070601
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000114: BF8C0F71
  v_mul_legacy_f32  v0, v11, v28                        // 000000000118: 0E00390B
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 00000000011C: BF8C0F70
  v_mul_legacy_f32  v2, v11, v32                        // 000000000120: 0E04410B
  ds_write2_b32  v1, v21, v22 offset0:4 offset1:5       // 000000000124: D8380504 00161501
  v_mac_legacy_f32  v0, v10, v27                        // 00000000012C: 0C00370A
  v_mac_legacy_f32  v2, v10, v31                        // 000000000130: 0C043F0A
  ds_write2_b32  v1, v23, v24 offset0:6 offset1:7       // 000000000134: D8380706 00181701
  v_mac_legacy_f32  v0, v9, v26                         // 00000000013C: 0C003509
  v_mac_legacy_f32  v2, v9, v30                         // 000000000140: 0C043D09
  ds_write2_b32  v1, v33, v34 offset0:8 offset1:9       // 000000000144: D8380908 00222101
  v_mac_legacy_f32  v0, v8, v25                         // 00000000014C: 0C003308
  v_mac_legacy_f32  v2, v8, v29                         // 000000000150: 0C043B08
  ds_write2_b32  v1, v35, v36 offset0:10 offset1:11     // 000000000154: D8380B0A 00242301
  ds_write2_b32  v1, v0, v2 offset0:12 offset1:13       // 00000000015C: D8380D0C 00020001
  s_endpgm                                              // 000000000164: BF810000
end


// Approximately 18 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VInstancedTexTGCxformEAlpha[] =
{
     68,  88,  66,  67, 224, 216, 
    227, 211,  96, 120, 140, 159, 
    175, 186, 157, 163, 246,   0, 
    200,  16,   1,   0,   0,   0, 
     52,  15,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     88,   1,   0,   0, 208,   1, 
      0,   0, 116,   2,   0,   0, 
    152,  14,   0,   0,  82,  68, 
     69,  70,  28,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
    224,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      1,   0,   0,   0, 128,   0, 
      0,   0,   0,   9,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 168,   0,   0,   0, 
      0,   0,   0,   0,   0,   9, 
      0,   0,   2,   0,   0,   0, 
    188,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 102, 
    108, 111,  97, 116,  52,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0, 144,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 179,   0, 
      0,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
    112,   0,   0,   0,   3,   0, 
      0,   0,   8,   0,   0,   0, 
     80,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,  15,   0,   0, 
     86,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,  15,   0,   0, 
     98,   0,   0,   0,   0,   0, 
      0,   0,   8,   0,   0,   0, 
      1,   0,   0,   0,   2,   0, 
      0,   0,   1,   1,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     83,  86,  95,  80, 111, 115, 
    105, 116, 105, 111, 110,   0, 
     83,  86,  95,  73, 110, 115, 
    116,  97, 110,  99, 101,  73, 
     68,   0,  79,  83,  71,  78, 
    156,   0,   0,   0,   5,   0, 
      0,   0,   8,   0,   0,   0, 
    128,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
    134,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    134,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  15,   0,   0,   0, 
    134,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,   3,  12,   0,   0, 
    143,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   4,   0, 
      0,   0,  15,   0,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88,  28,  12,   0,   0, 
     80,   0,   1,   0,   7,   3, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 176,   0, 
      0,   0,  80,   0,   1,   0, 
    171,   0,   0,   0, 106,   8, 
      0,   1,  89,   8,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0, 144,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   1,   0,   0,   0, 
     96,   0,   0,   4,  18,  16, 
     16,   0,   2,   0,   0,   0, 
      8,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      3,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      4,   0,   0,   0,   1,   0, 
      0,   0, 104,   0,   0,   2, 
      1,   0,   0,   0,  54,   0, 
      0,   5, 242,  32,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     38,   0,   0,   8,   0, 208, 
      0,   0,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,  16, 
     16,   0,   2,   0,   0,   0, 
      1,  64,   0,   0,   6,   0, 
      0,   0,  35,   0,   0,   9, 
     34,   0,  16,   0,   0,   0, 
      0,   0,  10,  16,  16,   0, 
      2,   0,   0,   0,   1,  64, 
      0,   0,   6,   0,   0,   0, 
      1,  64,   0,   0,   1,   0, 
      0,   0,  86,   0,   0,   5, 
     50,   0,  16,   0,   0,   0, 
      0,   0,  70,   0,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,  10,  50,   0,  16,   0, 
      0,   0,   0,   0,  70,   0, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0, 205, 204, 
    204,  61, 205, 204, 204,  61, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  28,   0,   0,   5, 
     50,   0,  16,   0,   0,   0, 
      0,   0,  70,   0,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   7, 242,  32,  16,   0, 
      2,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     26,   0,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   7, 
    242,  32,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     35,   0,   0,  15, 242,   0, 
     16,   0,   0,   0,   0,   0, 
      6,  16,  16,   0,   2,   0, 
      0,   0,   2,  64,   0,   0, 
      6,   0,   0,   0,   6,   0, 
      0,   0,   6,   0,   0,   0, 
      6,   0,   0,   0,   2,  64, 
      0,   0,   2,   0,   0,   0, 
      2,   0,   0,   0,   4,   0, 
      0,   0,   4,   0,   0,   0, 
     86,   0,   0,   5, 242,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  14,  16,   0,   0,   0, 
      0,   0,   0,   0,   0,  10, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0, 205, 204, 204,  61, 
    205, 204, 140,  63, 205, 204, 
    204,  61, 205, 204, 140,  63, 
     28,   0,   0,   5, 242,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  14,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,   9, 
     18,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     42,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,   9, 
     34,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,   9, 
     18,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,   9, 
     34,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     26,   0,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   8, 
    194,  32,  16,   0,   4,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    193,   0,   0,   0,  21,   0, 
      1,   0,  32,  14,  23,   0, 
    120,   1, 237, 152, 207,  79, 
     19,  65,  20, 199, 223,  78, 
    151, 161,  63, 166, 187, 136, 
     88,  75,   5, 218, 138,   6, 
     80, 249,  37,  24,  35, 134, 
    128,  17, 127, 192,  69,  35, 
    196, 211,  30, 172, 208,  10, 
    177,  20, 108, 137, 105,  60, 
     44, 133, 112, 240,  64, 244, 
    159, 224, 104, 226,  89,  77, 
    132, 171,  17,  99,  98, 140, 
    119,  19, 111, 222, 244, 194, 
    193, 164, 126,  95, 187,  67, 
     56, 200,  89,  99, 246, 147, 
    124, 231, 237, 155, 125,  59, 
    239, 237, 204, 156, 158, 117, 
    156, 106, 156, 121,  77,  47, 
    217, 190,  95, 157, 239, 124, 
     33, 136,  26, 216,   1,  38, 
     15,  96, 185, 133,  71, 162, 
    111, 199, 120,  36, 106, 227, 
    193, 128,  16, 123,  18,  70, 
     65, 195, 240, 199,  97, 249, 
     93, 183, 167,  58, 227,  59, 
     79,  49,  74, 168,   7, 186, 
    142, 111,  38,  97, 123, 161, 
     40, 212,   5,   5,  33, 157, 
    147, 225,  88,  70,  91,  78, 
    117,  16, 206, 215,  10,  97, 
    169, 125, 116,  76,   4,  58, 
    184,  22, 165, 121, 248,  51, 
     35,  16, 215, 127,  24,  92, 
    155, 174, 129, 215, 228,  58, 
     25, 206, 255, 175, 193, 255, 
    175, 207, 137, 225, 243,  56, 
    136,   5,   5,  32, 102, 203, 
     59,  71,  29, 242, 217, 243, 
    245,  89, 238,  64, 135,  81, 
      5, 250,  94, 104, 180, 207, 
    231,  33, 233, 214, 128,  52, 
    158,  15,  72,  56,  18,   9, 
     37,  94,  74, 108, 158, 196, 
     70, 202,  70,   8, 155,  40, 
     67,  80,  24, 194,  97,  73, 
     36, 148, 184,   8,  18,   5, 
     74,  27, 106, 130, 142,  64, 
    205, 208,  81,   8, 255,  36, 
     81, 159, 140,  65, 184, 175, 
     50,  14, 225, 240, 101,   2, 
     58,   1, 225, 194, 201, 118, 
    168,   3,  74, 214, 107, 209, 
    103,  38, 141, 250,  31,  74, 
    193, 149, 193,   6, 244,  14, 
    252, 223, 240,  30, 232, 187, 
    202, 123, 193,  62, 195, 127, 
    175, 159, 125, 124, 124, 124, 
    124, 124, 124, 124, 124, 124, 
    124, 124, 124, 124, 124, 124, 
    254,  38,  34, 189, 254, 118, 
    217, 222, 220,  38, 250, 242, 
     41,  16,  53, 104, 157, 196, 
    148,  17,  21,  46,   5,  54, 
    118, 170,  34,  46,  63, 236, 
    238, 142,  86, 133, 128, 221, 
     28,  51, 108, 225, 110, 144, 
     57,  37, 162, 166, 187,  70, 
     52, 181,  74, 248,  46, 245, 
    243, 187, 209,  44,  42,  85, 
     51,  81, 139, 165,  40, 185, 
     85, 211, 172, 197,  87, 137, 
    106, 115, 194,  54,  93, 178, 
    201, 229,  88, 145,  16,  21, 
    182, 212,  33,  42, 202, 142, 
    187,  81,  59,  81, 155,  87, 
    150, 168,   4, 188,  26, 216, 
    143, 198, 224, 163, 142, 122, 
    238, 221,  81, 206, 205, 243, 
      6, 137,  74,  17, 245,  70, 
     58, 227,  86,  56,  29,  87, 
    145, 179,   9, 235,  17, 251, 
     67,  41,  43, 114,  57, 102, 
    133, 123,  18,  42, 148, 140, 
    171, 240,  96,  74, 133,  47, 
    197,  84, 168,  43, 161, 130, 
    237, 113,  21, 234,  79, 169, 
    208, 197, 152,  10, 158,  78, 
    168, 138, 104, 113, 127, 136, 
     54,  55, 216, 155,  82, 193, 
     11,  49, 245,  49,  72, 123, 
     42,  26, 182, 108,  65, 123, 
    102, 131, 108, 228, 253,  72, 
    226, 153,  12,  17, 232, 135, 
    237,  72, 166, 210,  99, 176, 
     77, 145, 176,  69, 180, 182, 
    237, 181, 240, 106,  61,  56, 
     22, 247,  71, 185, 251, 165, 
    253,  38, 136, 209,  62,  75, 
     99,  34,  84, 197, 248, 137, 
    232, 151, 183,  16, 199, 115, 
    175, 200, 218, 239,  18, 214, 
     57, 231, 197, 157, 242,  44, 
    247, 153, 184, 231, 186, 183, 
    213, 250, 202, 125, 246, 102, 
    224, 166,  55,  63, 225,  89, 
     94,  35,  12,  89, 161, 238, 
    219, 239, 188, 185, 123, 158, 
     93, 128, 248, 251, 220, 136, 
    115,  63, 147, 207,  60,  41, 
    245, 173,  44,  21, 151,  30, 
    246, 149,  86, 138, 217, 204, 
    226, 121, 103,  46, 251, 216, 
    201, 150,  87, 178, 197,  66, 
     38, 239,  60, 200, 149, 135, 
    157, 233, 226, 172, 115,  39, 
     91, 152, 203,  22, 157, 137, 
    161, 137, 193, 178,  51,  61, 
    159, 129,  83, 114, 238,  78, 
     22,  74,  43, 153, 194, 108, 
    118, 110,  38,  91, 158, 185, 
    113, 181, 156,  91,  42,  46, 
     94, 187, 146,  95, 158, 207, 
    244, 229, 242, 131, 131, 125, 
    243, 249,  82,  30, 169, 234, 
    124, 245,  10, 224, 166, 110, 
     35, 180, 152,  89,  40, 208, 
    111,  79,   7, 151,  63,   0, 
     53,  16,   0,   0, 208,   0, 
      0,   0,  21,   0,   1,   0, 
     16, 150,  23,   0, 120,   1, 
    237, 152, 207,  79,  19,  65, 
     20, 199, 223,  78, 199, 161, 
     93, 182,  45,  42,  40, 104, 
    173,  16,  53, 112,  48, 132, 
     42, 198, 168,  33, 224, 138, 
     81, 209, 196,  31,  24,  79, 
    123, 169, 176,   8, 177,  20, 
    210,  54, 166,  81,  83, 171, 
    225,  72, 244,  98, 252,  11, 
     60, 114, 212, 131,  49,  81, 
    238,  98,  98,  60, 120, 246, 
    104, 226,  77,  47, 220, 234, 
    247, 187, 221,  37,  28, 244, 
    172,  49, 251,  73, 190, 243, 
    230, 205, 190, 153, 121,  59, 
    111,  78, 243,  98, 175,   4, 
    108, 222, 246,  95, 211, 126, 
    120,  52, 127, 104,  77, 137, 
    236, 160,   3, 208,  13,  88, 
    238, 102,  43,  82, 218, 195, 
     86, 164, 159, 141,   5,  33, 
    128, 125,   7,  90, 131,  63, 
      1,  75, 127,  40,  84, 155, 
    137, 245, 103, 104,  83, 208, 
     32, 228, 106, 145,  25, 216, 
      2, 180,  15, 226,  24, 231, 
    111, 199,  64, 187,  32, 206, 
     33, 220, 106,  59, 140, 239, 
    131, 162, 252,  72, 212, 239, 
    133, 210, 208,  22,   3, 108, 
    126, 207, 101, 136, 249, 254, 
      9, 230, 198, 245,  34, 162, 
     60,  35, 251,  47, 193,  51, 
    138, 234,  68,  88, 143, 237, 
    100,  32,  28, 125,  64,  46, 
    172,  99,  20, 226, 109, 171, 
     43, 255, 109,  29, 250,  19, 
     45,  16, 173,  67, 216,  31, 
    133,   8, 107,  96, 228, 234, 
    136, 177, 158, 141,  24,  56, 
     38,   1,  33, 192, 224,  66, 
     25,  20, 213, 116,  64,  73, 
      8, 133,  53,  54, 212,   9, 
     97,  67, 131, 130,  25,  36, 
    104, 178,  80,  23, 180,  19, 
    194,   5,  48, 187,  33, 252, 
    147, 233, 129, 144, 163, 193, 
    125,  53,  40, 136,  65, 241, 
     13,  46, 143, 217,  15, 229, 
    160,   3,  80,  30,  58,  24, 
    222,  93, 205, 172, 224, 179, 
      1, 198, 106, 255, 169,  81, 
    204,  16,  54, 129, 196, 254, 
     99, 120,   6,  56, 230,  45, 
    218, 167,  33, 194, 191, 230, 
     21, 161,  98,  98,  98,  98, 
     98,  98,  98,  98,  98,  98, 
     98,  98,  98,  98,  98,  98, 
    254,  38, 106, 224, 201, 187, 
    229, 236, 234, 123, 145,  47, 
    159,  19, 105,  75, 158, 136, 
    154, 178, 210, 170,  33, 137, 
    149, 245, 150, 210, 230, 227, 
    198, 198,  88,  75,  41, 216, 
    213, 113,  43, 171,  26, 143, 
      4, 177, 253,  63, 191,  91, 
     93, 170, 169, 178, 186,  97, 
    133, 243, 130,  57,  24,  87, 
    142, 106, 182, 227,  55, 198, 
     24,  31, 196, 118, 171, 230, 
    138, 232,  41, 149, 214, 141, 
    150,  54, 193, 183, 150, 230, 
    218, 171, 227, 137, 172, 105, 
    168,  48,  46, 209, 171, 154, 
     65, 124,  78,  53,  31, 139, 
     76,  73,  90,  26,  45, 145, 
     32,  94, 178,  18, 196,  32, 
    227, 102,  13, 249, 118,  30, 
    204, 103, 236,   3, 121, 199, 
     65, 158, 157, 131, 185,  76, 
    106, 127, 222, 177, 143, 228, 
    156, 100,  95, 222,  73,  29, 
    130,  29, 200,  57,  77, 213, 
     27, 228,  59,  49, 177, 252, 
     85, 178, 174, 254, 161, 246, 
     53,  38, 217, 207, 184, 250, 
     34, 173, 227, 234,  43, 180, 
    105,  87,  11, 173, 118, 181, 
    166, 221, 225, 234,  36, 173, 
    113, 181,  67, 219, 225, 234, 
      7, 216, 179, 139, 253, 110, 
     87, 119, 211, 246, 184, 250, 
     33, 243,  56, 153, 204, 244, 
    210, 223, 227, 106, 251,  68, 
    210,   9, 198, 198, 237,  76, 
    142,  99, 123,  93, 157,  58, 
    158, 116, 236,  49,  59,  24, 
    239, 231, 152,  96, 237,  66, 
    210,  73, 157, 177, 157, 195, 
    244,  45, 248, 167, 108, 103, 
    136, 125, 229, 234, 163, 180, 
      9,  87, 143, 208,  34, 159, 
     81,  90, 228,  35, 242, 248, 
    125,  15,  11,   6, 248, 178, 
     70, 241,  93, 150, 175, 109, 
    145,  31, 189, 159,  70, 126, 
     23,  68,  34, 159, 138, 192, 
    130, 214, 243, 240,  45, 114, 
     37, 180, 140, 199, 184, 100, 
    182,  94,  43, 219, 188,  10, 
    191, 175, 133, 150, 239,  93, 
    157, 208, 230, 203, 190,  55, 
    141, 167, 111,  71,  62, 133, 
    227,  27, 161, 229,  26,  54, 
    148,  73,  13,  93, 187,  30, 
    190, 123, 127,  11, 191,  45, 
     64, 156,  63, 119, 218, 187, 
     93,  44,  21, 239,  87, 135, 
    107,  75, 149, 165, 187, 195, 
    213,  90, 197,  47,  46,  30, 
    243, 102, 253, 123, 158,  95, 
    175, 249, 149, 114, 177, 228, 
    221, 153, 171, 143, 122, 211, 
    149,  25, 239, 134,  95, 158, 
    245,  43, 222, 228, 241, 201, 
     66, 221, 155, 158,  47, 194, 
    169, 122, 183,  46, 149, 171, 
    181,  98, 121, 198, 159, 189, 
    233, 215, 111,  94,  56,  87, 
    159,  91, 170,  44, 158,  63, 
     91,  90, 158,  47,  14, 207, 
    149,  10, 133, 225, 249,  82, 
    181, 132, 173, 218,  44, 132, 
    137, 240, 193, 174,   3,  90, 
     44,  46, 148, 229,  23,   9, 
    150, 189, 190,   0,  53,  16, 
      0,   0, 198,   0,   0,   0, 
     21,   0,   1,   0,   0,  66, 
     23,   0, 120,   1, 237, 152, 
     75,  79,  19,  81,  20, 199, 
     79, 103,  46, 183, 175, 233, 
    131,  71, 161,  21,  17, 107, 
     37, 118,  97, 106,  17, 141, 
    175,  16,  64,  49,  70,  54, 
     18,  33, 198, 197, 152,  56, 
    194, 212,  18,  75, 193, 182, 
     49, 141,  49,  67,  33,  44, 
      9, 186, 240,  35, 184, 116, 
    225, 214, 152,   0, 123, 113, 
    227, 194, 176, 243,   3, 184, 
    211, 141,  11, 181, 254,  79, 
    103,   6, 186, 144, 181, 198, 
    204,  47, 249, 223, 211, 115, 
    231, 158, 123,  79, 207, 189, 
    171, 115, 181, 143,  90, 116, 
    108, 126, 206, 176, 125, 191, 
     82, 204, 188,  86, 224, 179, 
    211, 198, 114,  15, 143,  68, 
    201,  94,  30,  97, 121, 240, 
     65,  88,  59,   4, 163,  65, 
     69, 248, 227, 176, 252,  45, 
    235, 200, 102, 124, 231,   5, 
     70,   9, 157, 134, 126,  33, 
    230,  30, 236,  25, 168,  11, 
    226, 117,  33, 136,   9, 242, 
      0, 120,  45, 227,  90, 132, 
    236, 195, 199, 242, 121,  41, 
     72, 133,  92, 120, 158, 137, 
     65, 237, 243, 148, 230, 225, 
    207,  76,  64, 156, 255,  97, 
    112, 110, 156, 131, 155, 151, 
    155,  39, 159, 255, 175, 193, 
    255, 223, 189,  39, 134, 239, 
    163, 157,  40, 228, 214, 101, 
     47, 193, 227,  65, 205,   2, 
    206, 189, 186, 119, 185,   3, 
     29,  70,  19,   8, 254, 209, 
    134, 235, 243,  61,  73, 186, 
    149, 151, 190, 231, 121,   9, 
     71, 226,  64, 137, 143,  18, 
     15,  74, 162, 144, 210,  15, 
      5,  32,  20,  84, 162, 152, 
     50,  12, 225,  64,  25, 129, 
    144, 160, 196, 229, 201,  56, 
    212,   9, 225, 113, 200, 110, 
      8, 255,  73,  34,  95, 137, 
     28,  37, 222, 171, 196,   3, 
    147, 184, 124, 121,   4, 234, 
    135, 142,  66,   3, 208,  49, 
    104, 208, 121, 187, 194, 206, 
    136, 239, 142, 145,  62, 251, 
    159,  74, 133,  51, 132,  85, 
    221,  74, 252, 159, 112,  13, 
     80, 230, 125, 236, 106, 216, 
    247, 239,  62, 145, 105,  30, 
     60,  60,  60,  60,  60,  60, 
     60,  60,  60,  60,  60,  60, 
     60,  60,  60,  60, 254,  18, 
     74, 122, 109, 107,  57, 182, 
    177,  77, 244, 233, 163,  26, 
    241, 209,  26, 137,  41,  37, 
     34,  44,  82, 215, 119, 154, 
     34,  41,  63, 236, 238, 142, 
     54, 133, 128, 221,  24,  83, 
     98, 194,  90,  33, 172,  61, 
    254, 237, 139,  18,  87,  26, 
    138,  19, 179,  78, 114, 106, 
    149, 200, 142, 139, 144, 101, 
    175,  71,  28,  81, 203, 106, 
    177, 164, 197, 177,  20,  35, 
    139,  99,  53,  77, 105, 180, 
    246,  72, 216, 150, 210,  74, 
     67, 141,  72, 171,  41, 179, 
    118, 156, 148, 176,  27,  99, 
     61, 177, 172, 165, 198, 100, 
     43, 166,  39, 101, 175,  85, 
      7, 148,  70,  13, 249, 134, 
      7,  41,  26,  62,  37, 162, 
    161,   1, 210,  66,  67,  66, 
     11, 246, 147,  22, 204,   8, 
    109, 154, 232,  77,  83, 253, 
    177, 197,  29, 183,  64, 138, 
    180,  64,  90, 104,  62, 228, 
    201, 109, 169, 120, 231, 197, 
     61,  31,  41, 132, 196, 173, 
    175, 138, 176, 186, 186, 109, 
    159, 124, 176, 162, 131,  20, 
     21,  86, 250, 233,  49, 239, 
    127, 137, 162,  92, 151, 240, 
    132, 136, 138,  14, 204,  39, 
    122,  41, 116,   1, 103, 141, 
      9,  77, 250, 225, 247,  37, 
     41, 120,  30, 103, 142,  10, 
     45,  16, 132, 159,  62,  65, 
    129,  17, 156, 119,  69, 104, 
    161,  48, 252, 204,  73, 210, 
     34, 176, 188,  63, 173, 110, 
     59, 109, 192, 150, 199, 226, 
    158,  42, 119, 202,  92,  63, 
     14,  49, 174, 207, 114,  17, 
     88,  58, 238, 244,  13, 243, 
    142, 229, 245, 220, 107, 138, 
    182, 118,  57, 224, 190, 243, 
    253, 174,  99, 185,  55,  21, 
    134, 190, 191,  74, 189, 181, 
     54, 223, 229, 159,  57, 243, 
    117, 199, 242,  30, 220, 107, 
    141,   6, 179, 211,  63, 157, 
    185, 151, 142,  93, 128,  56, 
    190, 112,  89, 127,  96, 148, 
    140, 167, 213,  92, 109, 169, 
    178, 244,  40,  87, 173,  85, 
     76,  99, 241, 172,  62, 111, 
     62, 209, 205, 122, 205, 172, 
    148, 141, 146, 254, 176,  80, 
     63, 167, 207,  84, 230, 244, 
    219, 102, 121, 222, 172, 232, 
    147,  35, 147, 195, 117, 125, 
    166, 104, 192, 169, 234, 119, 
    110, 150, 171,  53, 163,  60, 
    103, 206, 207, 154, 245, 217, 
     27, 215, 234, 133, 165, 202, 
    226, 245, 137, 210, 114, 209, 
    200,  21,  74, 195, 195, 185, 
     98, 169,  90, 194,  81,  54, 
      9, 183,  89,  14, 249, 161, 
     69,  99, 161,  76, 191,   1, 
    117, 185, 159, 203,  83,  84, 
     65,  84, 148,   0,   0,   0, 
     18,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      8,   0,   0,   0,   6,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   4,   0, 
      0,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0
};
