#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler_tex                       sampler      NA          NA    0        1
// tex                               texture  float4          2d    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float      w
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[112]
// Embedded Data:
//  0x00000070 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000006b - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v0.w
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 2
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v3.xyxx, t0.xyzw, s0
add r0.xyz, r0.xyzx, l(-0.501961, -0.000000, -0.501961, 0.000000)
mad r0.w, -r0.x, l(0.186593), r0.y
mad_sat r1.y, -r0.z, l(0.466296), r0.w
mad_sat r1.xz, r0.zzxz, l(1.568648, 0.000000, 1.848352, 0.000000), r0.yyyy
mov r1.w, l(1.000000)
mad r0.xyzw, r1.xyzw, v2.xyzw, v1.xyzw
mul o0.w, r0.w, v0.w
mov o0.xyz, r0.xyzx
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[112], bundle is:[180] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\FYUY2CxformEAlpha.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask  8, param0, paramSlot 0, DefaultVal={0,0,0,0};   [1] generic, usageIdx  1, channelMask 15, param1, paramSlot 1, DefaultVal={0,0,0,0};   [2] generic, usageIdx  2, channelMask 15, param2, paramSlot 2, DefaultVal={0,0,0,0};   [3] generic, usageIdx  3, channelMask  3, param3, paramSlot 3, DefaultVal={0,0,0,0}

codeLenInByte        = 248;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0:1]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_RESOURCE, 0, offset 0:7 dwords
;  extUserElements 1[1] = IMM_SAMPLER, 0, offset 8:11 dwords
NumVgprs             = 14;
NumSgprs             = 14;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000000

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000004
SPIC:NUM_INTERP             = 4
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[12:13], exec                          // 000000000000: BE8C047E
  s_wqm_b64     exec, exec                              // 000000000004: BEFE0A7E
  s_mov_b32     m0, s2                                  // 000000000008: BEFC0302
  s_load_dwordx8  s[4:11], s[0:1], 0x00                 // 00000000000C: C0C20100
  s_load_dwordx4  s[0:3], s[0:1], 0x08                  // 000000000010: C0800108
  v_interp_p1_f32  v2, v0, attr3.x                      // 000000000014: C8080C00
  v_interp_p1_f32  v3, v0, attr3.y                      // 000000000018: C80C0D00
  v_interp_p2_f32  v2, v1, attr3.x                      // 00000000001C: C8090C01
  v_interp_p2_f32  v3, v1, attr3.y                      // 000000000020: C80D0D01
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[2:5], v[2:3], s[4:11], s[0:3] dmask:0x7 // 000000000028: F0800700 00010202
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000030: BF8C0F70
  v_add_f32     v2, 0xbf008084, v2                      // 000000000034: 060404FF BF008084
  s_mov_b32     s0, 0x3e3f123c                          // 00000000003C: BE8003FF 3E3F123C
  v_mad_legacy_f32  v7, -v2, s0, v3                     // 000000000044: D2800007 240C0102
  v_interp_p1_f32  v5, v0, attr1.w                      // 00000000004C: C8140700
  v_interp_p1_f32  v6, v0, attr2.w                      // 000000000050: C8180B00
  v_add_f32     v4, 0xbf008084, v4                      // 000000000054: 060808FF BF008084
  s_mov_b32     s0, 0x3eeebe59                          // 00000000005C: BE8003FF 3EEEBE59
  v_interp_p1_f32  v8, v0, attr1.x                      // 000000000064: C8200400
  v_interp_p1_f32  v9, v0, attr1.y                      // 000000000068: C8240500
  v_interp_p1_f32  v10, v0, attr1.z                     // 00000000006C: C8280600
  v_interp_p1_f32  v11, v0, attr2.x                     // 000000000070: C82C0800
  v_interp_p1_f32  v12, v0, attr2.y                     // 000000000074: C8300900
  v_interp_p1_f32  v13, v0, attr2.z                     // 000000000078: C8340A00
  s_mov_b32     s1, 0x3fc8c975                          // 00000000007C: BE8103FF 3FC8C975
  v_interp_p1_f32  v0, v0, attr0.w                      // 000000000084: C8000300
  v_mad_legacy_f32  v7, -v4, s0, v7 clamp               // 000000000088: D2800807 241C0104
  s_mov_b32     s2, 0x3fec96cc                          // 000000000090: BE8203FF 3FEC96CC
  v_interp_p2_f32  v5, v1, attr1.w                      // 000000000098: C8150701
  v_interp_p2_f32  v6, v1, attr2.w                      // 00000000009C: C8190B01
  v_mad_legacy_f32  v4, v4, s1, v3 clamp                // 0000000000A0: D2800804 040C0304
  v_mad_legacy_f32  v3, v2, s2, v3 clamp                // 0000000000A8: D2800803 040C0502
  v_interp_p2_f32  v8, v1, attr1.x                      // 0000000000B0: C8210401
  v_interp_p2_f32  v9, v1, attr1.y                      // 0000000000B4: C8250501
  v_interp_p2_f32  v10, v1, attr1.z                     // 0000000000B8: C8290601
  v_interp_p2_f32  v11, v1, attr2.x                     // 0000000000BC: C82D0801
  v_interp_p2_f32  v12, v1, attr2.y                     // 0000000000C0: C8310901
  v_interp_p2_f32  v13, v1, attr2.z                     // 0000000000C4: C8350A01
  v_interp_p2_f32  v0, v1, attr0.w                      // 0000000000C8: C8010301
  v_add_f32     v2, v5, v6                              // 0000000000CC: 06040D05
  v_mac_legacy_f32  v8, v4, v11                         // 0000000000D0: 0C101704
  v_mac_legacy_f32  v9, v7, v12                         // 0000000000D4: 0C121907
  v_mac_legacy_f32  v10, v3, v13                        // 0000000000D8: 0C141B03
  v_mul_legacy_f32  v0, v2, v0                          // 0000000000DC: 0E000102
  s_mov_b64     exec, s[12:13]                          // 0000000000E0: BEFE040C
  v_cvt_pkrtz_f16_f32  v1, v8, v9                       // 0000000000E4: 5E021308
  v_cvt_pkrtz_f16_f32  v0, v10, v0                      // 0000000000E8: 5E00010A
  exp           mrt0, v1, v1, v0, v0 compr vm           // 0000000000EC: F800140F 00000001
  s_endpgm                                              // 0000000000F4: BF810000
end


// Approximately 10 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_FYUY2CxformEAlpha[] =
{
     68,  88,  66,  67, 151,  58, 
     22, 240, 195, 230, 143, 133, 
    147,  67,   9, 147,  26, 131, 
    111, 154,   1,   0,   0,   0, 
    244,   6,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
      4,   1,   0,   0, 132,   1, 
      0,   0, 184,   1,   0,   0, 
     88,   6,   0,   0,  82,  68, 
     69,  70, 200,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    255, 255,   0, 129,   0,   0, 
    140,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
    124,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   0,   0,   5,   0, 
      0,   0,   4,   0,   0,   0, 
    255, 255, 255, 255,   0,   0, 
      0,   0,   1,   0,   0,   0, 
     13,   0,   0,   0, 115,  97, 
    109, 112, 108, 101, 114,  95, 
    116, 101, 120,   0, 116, 101, 
    120,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
    120,   0,   0,   0,   4,   0, 
      0,   0,   8,   0,   0,   0, 
    104,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   8,   0,   0, 
    110,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,  15,   0,   0, 
    110,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  15,  15,   0,   0, 
    110,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,   3,   3,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0, 171,  79,  83, 
     71,  78,  44,   0,   0,   0, 
      1,   0,   0,   0,   8,   0, 
      0,   0,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,  83,  86,  95,  84, 
     97, 114, 103, 101, 116,   0, 
    171, 171,  83,  72,  69,  88, 
    152,   4,   0,   0,  80,   0, 
      0,   0,  38,   1,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 112,   0,   0,   0, 
     80,   0,   0,   0, 107,   0, 
      0,   0, 106,   8,   0,   1, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  98,  16, 
      0,   3, 130,  16,  16,   0, 
      0,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      1,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      2,   0,   0,   0,  98,  16, 
      0,   3,  50,  16,  16,   0, 
      3,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 104,   0, 
      0,   2,   2,   0,   0,   0, 
     69,   0,   0, 139, 194,   0, 
      0, 128,  67,  85,  21,   0, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,  16,  16,   0, 
      3,   0,   0,   0,  70, 126, 
     16,   0,   0,   0,   0,   0, 
      0,  96,  16,   0,   0,   0, 
      0,   0,   0,   0,   0,  10, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0, 132, 128,   0, 191, 
      0,   0,   0, 128, 132, 128, 
      0, 191,   0,   0,   0,   0, 
     50,   0,   0,  10, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,  60,  18, 
     63,  62,  26,   0,  16,   0, 
      0,   0,   0,   0,  50,  32, 
      0,  10,  34,   0,  16,   0, 
      1,   0,   0,   0,  42,   0, 
     16, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,   1,  64, 
      0,   0,  89, 190, 238,  62, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  50,  32,   0,  12, 
     82,   0,  16,   0,   1,   0, 
      0,   0, 166,   8,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0, 117, 201, 200,  63, 
      0,   0,   0,   0, 204, 150, 
    236,  63,   0,   0,   0,   0, 
     86,   5,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
    130,   0,  16,   0,   1,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  50,   0, 
      0,   9, 242,   0,  16,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   2,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   7, 130,  32,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     58,  16,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
    114,  32,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    182,   0,   0,   0,  21,   0, 
      1,   0,  41, 192,  10,   0, 
    120,   1, 237,  86,  79,  72, 
     20,  81,  24, 255, 222, 204, 
    219, 153, 217, 117, 214,  53, 
    219,  74,  73, 200, 106,   5, 
      3, 219,  90, 181, 162,   8, 
     53, 210,  78, 157,  18,  15, 
    202,  96, 142, 185, 155, 209, 
    250, 135,  93, 139, 165, 192, 
     70, 233, 150, 135,  32, 232, 
     22, 117, 234, 212, 205,  75, 
    167, 217, 165, 211,  11,  58, 
     25, 116,  45,  58, 117,   8, 
    233, 232,  65, 220, 190, 111, 
    230,  61, 157,  32,  59,  73, 
     68, 248, 131, 223, 247, 123, 
    191, 121, 243, 222, 251, 120, 
    223, 240, 222, 212,  18,  16, 
    224, 235, 199, 205, 117, 210, 
    213, 207,  67,  39, 222,  48, 
    128,  24, 182,  81,   2,  37, 
     84,  44, 138,   0, 175, 226, 
     20,   1,  58,  41, 208,  11, 
     26,  64,  35,  10, 113,   3, 
     57, 128, 164,  62, 197,  16, 
      3, 181, 215,  24, 155, 144, 
      7, 144, 203,  56, 230,  58, 
    106,  23, 210,  64, 158,  68, 
     38, 145,  52,  29,  65,  41, 
     65, 167, 128, 144, 203, 255, 
      2,  74, 133,  35,   9, 135, 
    145,  56, 109,   0, 210, 232, 
     28, 208,  65, 225, 247, 232, 
     70,  82, 238, 187, 129, 114, 
     83, 115, 145,  82, 158, 132, 
     63, 141, 249,  91,   8, 243, 
    138, 198, 157,  58,  17, 168, 
     30,  81,  80, 206, 234, 189, 
    121,  89,  71, 181, 103, 158, 
    244, 244,  14, 177, 134, 220, 
     13, 117, 132,  77, 141,   8, 
    148, 167, 122,  24, 178,  90, 
      6,  59,   6, 237, 164, 218, 
    153, 224, 187,  48, 244,  30, 
    152,  64, 253, 223, 161, 190, 
     73,  82, 218,  95, 250, 238, 
     83,  72,   5, 122, 126,  17, 
    137, 187,  94,  37,  62, 109, 
     81, 165,  10,  61,  67,  31, 
    238,  96, 232, 117, 242,  65, 
    125,  34,  30, 157, 117,  80, 
     27,  79,  48,  24,  79, 181, 
    193,   6, 213,  21, 189, 131, 
    222, 137, 248,  49, 244,  99, 
     17,  63, 129, 126,  34, 226, 
     39, 209,  79,  42, 175, 230, 
     79,   5, 235,  37, 130,  58, 
    227, 195, 197, 127, 153, 251, 
     57, 238,  13, 247, 115, 220, 
     27, 238, 231, 184, 103,  12, 
    176, 200,  87, 252, 197, 196, 
    150, 175, 233, 155,  62, 176, 
    119,  53, 139, 121,  53, 176, 
     45,   1,  73,  91,  48,  59, 
     46,  88,  50,  41,  30, 193, 
     74,  21,  76, 239, 135, 166, 
     49, 152,  79, 173,  84, 235, 
    156,  27, 143,  61, 168, 214, 
    117, 207, 191, 220, 220, 223, 
    103, 130, 183, 166,  49,  59, 
      3, 102,  90,  64,  67, 139, 
    168,  91, 214, 118, 255, 168, 
    191, 222,   7, 188,  93,  64, 
     44,  35, 192, 232,  20,  96, 
    117,   9, 136, 159,  21, 144, 
    232,  21, 117, 125, 201, 191, 
    247,  94, 244, 227,  79, 136, 
     48,  45, 111, 141, 179, 182, 
     76,  93,  95, 246,  63,  60, 
    255, 222, 207, 204,  67, 130, 
     53, 180,  10,  78, 207, 117, 
    155, 235, 168,  90, 204, 230, 
    140,  31,  23,  44, 214,  33, 
    152, 113,  74,  48, 235, 180, 
     96, 241, 156,  96, 137, 115, 
    130, 233,  76, 196, 146, 220, 
    224,  71, 154, 108, 179, 181, 
    217, 214, 143, 166, 109,  76, 
    183, 209, 230,  91,  62, 158, 
    195, 225,  57, 158,  86, 231, 
    240,  82, 181,  21,  99, 216, 
    222, 185, 163,  21, 240, 236, 
    103, 170, 143, 238,   1, 188, 
     79, 152, 144, 247, 247,  91, 
    169, 116, 231, 208,  61, 211, 
    184,  61,  75, 136, 111, 178, 
    255, 139,  84,  26, 223, 128, 
    156,  74, 127,  90, 117, 218, 
    207,  63, 225, 242, 127,  16, 
    164, 210,  28, 212, 236, 123, 
    241, 242, 194,  67, 249, 172, 
     77, 234,  77,  36, 141,  47, 
     92, 114,  38, 221, 162, 251, 
    160, 156,  93, 152,  43, 205, 
    221, 205, 150,  23,  74, 121, 
    119, 166, 219, 153, 202, 223, 
    119, 242, 149, 133, 124, 105, 
    214,  45,  58, 183,  11, 149, 
     94, 103, 184, 116, 203, 185, 
    145, 159, 157, 202, 151, 156, 
    193, 158, 193,  92, 197,  25, 
    158, 118, 209, 148, 157, 107, 
    163,  35, 163, 221,  87,  43, 
    133, 185, 210, 204, 208, 149, 
    226, 252, 180, 155,  45,  20, 
    115, 185, 236, 116, 177,  92, 
    196,   5,  66,  60, 147, 203, 
    210,  47, 169, 137, 156, 113, 
    239, 204, 194,  79,  53,   7, 
     77, 180,   0,   0,  83,  84, 
     65,  84, 148,   0,   0,   0, 
     10,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      5,   0,   0,   0,   6,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0
};
