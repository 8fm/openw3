#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4x4 vfmuniforms[24];          // Offset:    0 Size:  1536
//   float4 vfuniforms[144];            // Offset: 1536 Size:  2304
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// SV_Position              0   xyzw        1     NONE   float   xyzw
// SV_InstanceID            0   x           2   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xy          3     NONE   float   xy  
// TEXCOORD                 3     zw        3     NONE   float     zw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[234]
// Embedded Data:
//  0x000000ea - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000e5 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[240], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input_sgv v2.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output o3.zw
dcl_output_siv o4.xyzw, position
dcl_temps 1
mov o0.xyzw, v0.xyzw
imul null, r0.x, v2.x, l(6)
imad r0.y, v2.x, l(6), l(1)
utof r0.xy, r0.xyxx
add r0.xy, r0.xyxx, l(0.100000, 0.100000, 0.000000, 0.000000)
ftou r0.xy, r0.xyxx
mov o2.xyzw, cb0[r0.y + 96].xyzw
mov o1.xyzw, cb0[r0.x + 96].xyzw
imad r0.x, v2.x, l(6), l(2)
utof r0.x, r0.x
add r0.xyzw, r0.xxxx, l(0.100000, 1.100000, 2.100000, 3.100000)
ftou r0.xyzw, r0.xyzw
dp4 o3.x, v1.xyzw, cb0[r0.x + 96].xyzw
dp4 o3.y, v1.xyzw, cb0[r0.y + 96].xyzw
dp4 o3.z, v1.xyzw, cb0[r0.z + 96].xyzw
dp4 o3.w, v1.xyzw, cb0[r0.w + 96].xyzw
utof r0.x, v2.x
add r0.x, r0.x, l(0.100000)
ftou r0.x, r0.x
ishl r0.x, r0.x, l(2)
dp4 o4.x, v1.xyzw, cb0[r0.x + 0].xyzw
dp4 o4.y, v1.xyzw, cb0[r0.x + 1].xyzw
dp4 o4.z, v1.xyzw, cb0[r0.x + 2].xyzw
dp4 o4.w, v1.xyzw, cb0[r0.x + 3].xyzw
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[234], bundle is:[226] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedPosition3dTexTGTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [2] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [3] generic, usageIdx  3, paramIdx 3, paramSlot 0

codeLenInByte        = 480;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 50;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_cvt_f32_u32  v1, v3                                 // 000000000008: 7E020D03
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 00000000000C: C0840300
  v_add_f32     v1, 0x3dcccccd, v1                      // 000000000010: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v1, v1                                 // 000000000018: 7E020F01
  v_lshlrev_b32  v1, 2, v1                              // 00000000001C: 34020282
  v_mul_lo_i32  v0, v3, 6                               // 000000000020: D2D60000 00010D03
  v_add_i32     v2, vcc, 2, v0                          // 000000000028: 4A040082
  s_waitcnt     lgkmcnt(0)                              // 00000000002C: BF8C007F
  tbuffer_load_format_xyzw  v[18:21], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000030: EBF32000 80021201
  v_add_i32     v14, vcc, 1, v1                         // 000000000038: 4A1C0281
  v_add_i32     v15, vcc, 2, v1                         // 00000000003C: 4A1E0282
  v_add_i32     v16, vcc, 3, v1                         // 000000000040: 4A200283
  tbuffer_load_format_xyzw  v[22:25], v14, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000044: EBF32000 8002160E
  tbuffer_load_format_xyzw  v[26:29], v15, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000004C: EBF32000 80021A0F
  tbuffer_load_format_xyzw  v[30:33], v16, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000054: EBF32000 80021E10
  v_cvt_f32_u32  v2, v2                                 // 00000000005C: 7E040D02
  v_add_f32     v3, 0x3dcccccd, v2                      // 000000000060: 060604FF 3DCCCCCD
  v_add_f32     v12, 0x3f8ccccd, v2                     // 000000000068: 061804FF 3F8CCCCD
  v_cvt_u32_f32  v3, v3                                 // 000000000070: 7E060F03
  v_add_i32     v17, vcc, 1, v0                         // 000000000074: 4A220081
  v_add_f32     v13, 0x40066666, v2                     // 000000000078: 061A04FF 40066666
  v_cvt_u32_f32  v12, v12                               // 000000000080: 7E180F0C
  v_add_i32     v3, vcc, 0x00000060, v3                 // 000000000084: 4A0606FF 00000060
  v_add_f32     v2, 0x40466666, v2                      // 00000000008C: 060404FF 40466666
  v_cvt_u32_f32  v13, v13                               // 000000000094: 7E1A0F0D
  v_add_i32     v12, vcc, 0x00000060, v12               // 000000000098: 4A1818FF 00000060
  v_cvt_f32_u32  v17, v17                               // 0000000000A0: 7E220D11
  v_cvt_u32_f32  v2, v2                                 // 0000000000A4: 7E040F02
  v_add_i32     v13, vcc, 0x00000060, v13               // 0000000000A8: 4A1A1AFF 00000060
  v_add_f32     v1, 0x3dcccccd, v17                     // 0000000000B0: 060222FF 3DCCCCCD
  v_add_i32     v2, vcc, 0x00000060, v2                 // 0000000000B8: 4A0404FF 00000060
  v_cvt_u32_f32  v1, v1                                 // 0000000000C0: 7E020F01
  v_add_i32     v1, vcc, 0x00000060, v1                 // 0000000000C4: 4A0202FF 00000060
  tbuffer_load_format_xyzw  v[14:17], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000CC: EBF32000 80020E03
  tbuffer_load_format_xyzw  v[42:45], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D4: EBF32000 80022A02
  tbuffer_load_format_xyzw  v[46:49], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000DC: EBF32000 80022E01
  tbuffer_load_format_xyzw  v[34:37], v12, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000E4: EBF32000 8002220C
  tbuffer_load_format_xyzw  v[38:41], v13, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000EC: EBF32000 8002260D
  v_cvt_f32_u32  v0, v0                                 // 0000000000F4: 7E000D00
  v_add_f32     v0, 0x3dcccccd, v0                      // 0000000000F8: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v0, v0                                 // 000000000100: 7E000F00
  v_add_i32     v0, vcc, 0x00000060, v0                 // 000000000104: 4A0000FF 00000060
  tbuffer_load_format_xyzw  v[0:3], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000010C: EBF32000 80020000
  s_waitcnt     vmcnt(9) & lgkmcnt(15)                  // 000000000114: BF8C0F79
  v_mul_legacy_f32  v12, v11, v21                       // 000000000118: 0E182B0B
  s_waitcnt     vmcnt(8) & lgkmcnt(15)                  // 00000000011C: BF8C0F78
  v_mul_legacy_f32  v13, v11, v25                       // 000000000120: 0E1A330B
  v_mac_legacy_f32  v12, v10, v20                       // 000000000124: 0C18290A
  v_mac_legacy_f32  v13, v10, v24                       // 000000000128: 0C1A310A
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 00000000012C: BF8C0F77
  v_mul_legacy_f32  v21, v11, v29                       // 000000000130: 0E2A3B0B
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 000000000134: BF8C0F76
  v_mul_legacy_f32  v25, v11, v33                       // 000000000138: 0E32430B
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 00000000013C: BF8C0F75
  v_mul_legacy_f32  v17, v11, v17                       // 000000000140: 0E22230B
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 000000000144: BF8C0F72
  v_mul_legacy_f32  v20, v11, v37                       // 000000000148: 0E284B0B
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 00000000014C: BF8C0F71
  v_mul_legacy_f32  v24, v11, v41                       // 000000000150: 0E30530B
  v_mul_legacy_f32  v11, v11, v45                       // 000000000154: 0E165B0B
  v_mac_legacy_f32  v21, v10, v28                       // 000000000158: 0C2A390A
  v_mac_legacy_f32  v25, v10, v32                       // 00000000015C: 0C32410A
  v_mac_legacy_f32  v17, v10, v16                       // 000000000160: 0C22210A
  v_mac_legacy_f32  v20, v10, v36                       // 000000000164: 0C28490A
  v_mac_legacy_f32  v24, v10, v40                       // 000000000168: 0C30510A
  v_mac_legacy_f32  v11, v10, v44                       // 00000000016C: 0C16590A
  v_mac_legacy_f32  v12, v9, v19                        // 000000000170: 0C182709
  v_mac_legacy_f32  v13, v9, v23                        // 000000000174: 0C1A2F09
  v_mac_legacy_f32  v21, v9, v27                        // 000000000178: 0C2A3709
  v_mac_legacy_f32  v25, v9, v31                        // 00000000017C: 0C323F09
  v_mac_legacy_f32  v17, v9, v15                        // 000000000180: 0C221F09
  v_mac_legacy_f32  v20, v9, v35                        // 000000000184: 0C284709
  v_mac_legacy_f32  v24, v9, v39                        // 000000000188: 0C304F09
  v_mac_legacy_f32  v11, v9, v43                        // 00000000018C: 0C165709
  v_mac_legacy_f32  v12, v8, v18                        // 000000000190: 0C182508
  v_mac_legacy_f32  v13, v8, v22                        // 000000000194: 0C1A2D08
  v_mac_legacy_f32  v21, v8, v26                        // 000000000198: 0C2A3508
  v_mac_legacy_f32  v25, v8, v30                        // 00000000019C: 0C323D08
  v_mac_legacy_f32  v17, v8, v14                        // 0000000001A0: 0C221D08
  v_mac_legacy_f32  v20, v8, v34                        // 0000000001A4: 0C284508
  v_mac_legacy_f32  v24, v8, v38                        // 0000000001A8: 0C304D08
  v_mac_legacy_f32  v11, v8, v42                        // 0000000001AC: 0C165508
  exp           pos0, v12, v13, v21, v25 done           // 0000000001B0: F80008CF 19150D0C
  exp           param0, v4, v5, v6, v7                  // 0000000001B8: F800020F 07060504
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 0000000001C0: BF8C0F70
  exp           param1, v0, v1, v2, v3                  // 0000000001C4: F800021F 03020100
  exp           param2, v46, v47, v48, v49              // 0000000001CC: F800022F 31302F2E
  exp           param3, v17, v20, v24, v11              // 0000000001D4: F800023F 0B181411
  s_endpgm                                              // 0000000001DC: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[462], bundle is:[240] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedPosition3dTexTGTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] position, usageIdx  4, paramIdx 4, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [4] generic, usageIdx  3, paramIdx 3, paramSlot 0

codeLenInByte        = 612;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 50;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_cvt_f32_u32  v0, v3                                 // 000000000008: 7E000D03
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 00000000000C: C0840300
  v_add_f32     v0, 0x3dcccccd, v0                      // 000000000010: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v0, v0                                 // 000000000018: 7E000F00
  v_lshlrev_b32  v0, 2, v0                              // 00000000001C: 34000082
  s_waitcnt     lgkmcnt(0)                              // 000000000020: BF8C007F
  tbuffer_load_format_xyzw  v[12:15], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000024: EBF32000 80020C00
  v_add_i32     v1, vcc, 1, v0                          // 00000000002C: 4A020081
  v_add_i32     v2, vcc, 2, v0                          // 000000000030: 4A040082
  v_add_i32     v0, vcc, 3, v0                          // 000000000034: 4A000083
  tbuffer_load_format_xyzw  v[24:27], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000038: EBF32000 80021800
  tbuffer_load_format_xyzw  v[16:19], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 80021001
  tbuffer_load_format_xyzw  v[20:23], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000048: EBF32000 80021402
  v_mul_lo_i32  v0, v3, 6                               // 000000000050: D2D60000 00010D03
  v_mul_lo_i32  v1, v3, 6                               // 000000000058: D2D60001 00010D03
  v_cvt_f32_u32  v0, v0                                 // 000000000060: 7E000D00
  v_add_f32     v0, 0x3dcccccd, v0                      // 000000000064: 060000FF 3DCCCCCD
  v_add_i32     v2, vcc, 2, v1                          // 00000000006C: 4A040282
  v_cvt_u32_f32  v0, v0                                 // 000000000070: 7E000F00
  v_add_i32     v1, vcc, 1, v1                          // 000000000074: 4A020281
  v_add_i32     v0, vcc, 0x00000060, v0                 // 000000000078: 4A0000FF 00000060
  tbuffer_load_format_xyzw  v[30:33], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000080: EBF32000 80021E00
  v_cvt_f32_u32  v2, v2                                 // 000000000088: 7E040D02
  v_add_f32     v3, 0x3dcccccd, v2                      // 00000000008C: 060604FF 3DCCCCCD
  v_cvt_f32_u32  v1, v1                                 // 000000000094: 7E020D01
  v_add_f32     v28, 0x3f8ccccd, v2                     // 000000000098: 063804FF 3F8CCCCD
  v_cvt_u32_f32  v3, v3                                 // 0000000000A0: 7E060F03
  v_add_f32     v1, 0x3dcccccd, v1                      // 0000000000A4: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v28, v28                               // 0000000000AC: 7E380F1C
  v_add_i32     v3, vcc, 0x00000060, v3                 // 0000000000B0: 4A0606FF 00000060
  v_cvt_u32_f32  v0, v1                                 // 0000000000B8: 7E000F01
  v_add_f32     v29, 0x40066666, v2                     // 0000000000BC: 063A04FF 40066666
  v_add_f32     v1, 0x40466666, v2                      // 0000000000C4: 060204FF 40466666
  v_add_i32     v28, vcc, 0x00000060, v28               // 0000000000CC: 4A3838FF 00000060
  v_cvt_u32_f32  v2, v29                                // 0000000000D4: 7E040F1D
  v_add_i32     v0, vcc, 0x00000060, v0                 // 0000000000D8: 4A0000FF 00000060
  v_add_i32     v2, vcc, 0x00000060, v2                 // 0000000000E0: 4A0404FF 00000060
  tbuffer_load_format_xyzw  v[34:37], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000E8: EBF32000 80022203
  tbuffer_load_format_xyzw  v[42:45], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000F0: EBF32000 80022A00
  tbuffer_load_format_xyzw  v[46:49], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000F8: EBF32000 80022E02
  v_cvt_u32_f32  v1, v1                                 // 000000000100: 7E020F01
  v_add_i32     v1, vcc, 0x00000060, v1                 // 000000000104: 4A0202FF 00000060
  tbuffer_load_format_xyzw  v[38:41], v28, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000010C: EBF32000 8002261C
  tbuffer_load_format_xyzw  v[0:3], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000114: EBF32000 80020001
  s_waitcnt     vmcnt(9) & lgkmcnt(15)                  // 00000000011C: BF8C0F79
  v_mul_legacy_f32  v15, v11, v15                       // 000000000120: 0E1E1F0B
  v_mac_legacy_f32  v15, v10, v14                       // 000000000124: 0C1E1D0A
  s_load_dwordx4  s[8:11], s[2:3], 0x0c                 // 000000000128: C084030C
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 00000000012C: BF8C0F77
  v_mul_legacy_f32  v14, v11, v19                       // 000000000130: 0E1C270B
  v_mac_legacy_f32  v15, v9, v13                        // 000000000134: 0C1E1B09
  v_mac_legacy_f32  v14, v10, v18                       // 000000000138: 0C1C250A
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 00000000013C: BF8C0F76
  v_mul_legacy_f32  v13, v11, v23                       // 000000000140: 0E1A2F0B
  v_mac_legacy_f32  v15, v8, v12                        // 000000000144: 0C1E1908
  v_mac_legacy_f32  v14, v9, v17                        // 000000000148: 0C1C2309
  v_mac_legacy_f32  v13, v10, v22                       // 00000000014C: 0C1A2D0A
  v_mul_legacy_f32  v12, v11, v27                       // 000000000150: 0E18370B
  v_mac_legacy_f32  v14, v8, v16                        // 000000000154: 0C1C2108
  v_mac_legacy_f32  v13, v9, v21                        // 000000000158: 0C1A2B09
  v_mac_legacy_f32  v12, v10, v26                       // 00000000015C: 0C18350A
  v_mac_legacy_f32  v13, v8, v20                        // 000000000160: 0C1A2908
  v_mac_legacy_f32  v12, v9, v25                        // 000000000164: 0C183309
  v_mac_legacy_f32  v12, v8, v24                        // 000000000168: 0C183108
  s_waitcnt     lgkmcnt(0)                              // 00000000016C: BF8C007F
  buffer_store_dword  v15, v0, s[8:11], s4 offset:64 glc slc // 000000000170: E0704040 04420F00
  buffer_store_dword  v14, v0, s[8:11], s4 offset:68 glc slc // 000000000178: E0704044 04420E00
  buffer_store_dword  v13, v0, s[8:11], s4 offset:72 glc slc // 000000000180: E0704048 04420D00
  buffer_store_dword  v12, v0, s[8:11], s4 offset:76 glc slc // 000000000188: E070404C 04420C00
  buffer_store_dword  v4, v0, s[8:11], s4 glc slc       // 000000000190: E0704000 04420400
  buffer_store_dword  v5, v0, s[8:11], s4 offset:4 glc slc // 000000000198: E0704004 04420500
  buffer_store_dword  v6, v0, s[8:11], s4 offset:8 glc slc // 0000000001A0: E0704008 04420600
  buffer_store_dword  v7, v0, s[8:11], s4 offset:12 glc slc // 0000000001A8: E070400C 04420700
  s_waitcnt     vmcnt(13) & lgkmcnt(15)                 // 0000000001B0: BF8C0F7D
  buffer_store_dword  v30, v0, s[8:11], s4 offset:16 glc slc // 0000000001B4: E0704010 04421E00
  buffer_store_dword  v31, v0, s[8:11], s4 offset:20 glc slc // 0000000001BC: E0704014 04421F00
  s_waitcnt     vmcnt(14) & lgkmcnt(15)                 // 0000000001C4: BF8C0F7E
  v_mul_legacy_f32  v4, v11, v37                        // 0000000001C8: 0E084B0B
  buffer_store_dword  v32, v0, s[8:11], s4 offset:24 glc slc // 0000000001CC: E0704018 04422000
  v_mac_legacy_f32  v4, v10, v36                        // 0000000001D4: 0C08490A
  s_waitcnt     vmcnt(12) & lgkmcnt(15)                 // 0000000001D8: BF8C0F7C
  v_mul_legacy_f32  v5, v11, v41                        // 0000000001DC: 0E0A530B
  buffer_store_dword  v33, v0, s[8:11], s4 offset:28 glc slc // 0000000001E0: E070401C 04422100
  v_mac_legacy_f32  v4, v9, v35                         // 0000000001E8: 0C084709
  v_mac_legacy_f32  v5, v10, v40                        // 0000000001EC: 0C0A510A
  v_mul_legacy_f32  v6, v11, v49                        // 0000000001F0: 0E0C630B
  buffer_store_dword  v42, v0, s[8:11], s4 offset:32 glc slc // 0000000001F4: E0704020 04422A00
  v_mac_legacy_f32  v4, v8, v34                         // 0000000001FC: 0C084508
  v_mac_legacy_f32  v5, v9, v39                         // 000000000200: 0C0A4F09
  v_mac_legacy_f32  v6, v10, v48                        // 000000000204: 0C0C610A
  s_waitcnt     vmcnt(13) & lgkmcnt(15)                 // 000000000208: BF8C0F7D
  v_mul_legacy_f32  v3, v11, v3                         // 00000000020C: 0E06070B
  buffer_store_dword  v43, v0, s[8:11], s4 offset:36 glc slc // 000000000210: E0704024 04422B00
  v_mac_legacy_f32  v5, v8, v38                         // 000000000218: 0C0A4D08
  v_mac_legacy_f32  v6, v9, v47                         // 00000000021C: 0C0C5F09
  v_mac_legacy_f32  v3, v10, v2                         // 000000000220: 0C06050A
  buffer_store_dword  v44, v0, s[8:11], s4 offset:40 glc slc // 000000000224: E0704028 04422C00
  v_mac_legacy_f32  v6, v8, v46                         // 00000000022C: 0C0C5D08
  v_mac_legacy_f32  v3, v9, v1                          // 000000000230: 0C060309
  buffer_store_dword  v45, v0, s[8:11], s4 offset:44 glc slc // 000000000234: E070402C 04422D00
  v_mac_legacy_f32  v3, v8, v0                          // 00000000023C: 0C060108
  buffer_store_dword  v4, v0, s[8:11], s4 offset:48 glc slc // 000000000240: E0704030 04420400
  buffer_store_dword  v5, v0, s[8:11], s4 offset:52 glc slc // 000000000248: E0704034 04420500
  buffer_store_dword  v6, v0, s[8:11], s4 offset:56 glc slc // 000000000250: E0704038 04420600
  buffer_store_dword  v3, v0, s[8:11], s4 offset:60 glc slc // 000000000258: E070403C 04420300
  s_endpgm                                              // 000000000260: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[704], bundle is:[230] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedPosition3dTexTGTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] position, usageIdx  4, paramIdx 4, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [4] generic, usageIdx  3, paramIdx 3, paramSlot 0

codeLenInByte        = 544;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 55;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_cvt_f32_u32  v0, v3                                 // 000000000008: 7E000D03
  v_add_f32     v0, 0x3dcccccd, v0                      // 00000000000C: 060000FF 3DCCCCCD
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000014: C0840300
  v_cvt_u32_f32  v0, v0                                 // 000000000018: 7E000F00
  v_lshlrev_b32  v0, 2, v0                              // 00000000001C: 34000082
  v_add_i32     v2, vcc, 1, v0                          // 000000000020: 4A040081
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  tbuffer_load_format_xyzw  v[14:17], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000028: EBF32000 80020E00
  tbuffer_load_format_xyzw  v[18:21], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000030: EBF32000 80021202
  v_add_i32     v12, vcc, 2, v0                         // 000000000038: 4A180082
  v_add_i32     v13, vcc, 3, v0                         // 00000000003C: 4A1A0083
  tbuffer_load_format_xyzw  v[22:25], v12, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 8002160C
  tbuffer_load_format_xyzw  v[26:29], v13, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000048: EBF32000 80021A0D
  v_mul_lo_i32  v0, v3, 6                               // 000000000050: D2D60000 00010D03
  v_mul_lo_i32  v2, v3, 6                               // 000000000058: D2D60002 00010D03
  v_add_i32     v3, vcc, 2, v0                          // 000000000060: 4A060082
  v_cvt_f32_u32  v2, v2                                 // 000000000064: 7E040D02
  v_cvt_f32_u32  v3, v3                                 // 000000000068: 7E060D03
  v_add_f32     v2, 0x3dcccccd, v2                      // 00000000006C: 060404FF 3DCCCCCD
  v_add_i32     v0, vcc, 1, v0                          // 000000000074: 4A000081
  v_add_f32     v12, 0x3dcccccd, v3                     // 000000000078: 061806FF 3DCCCCCD
  v_cvt_u32_f32  v2, v2                                 // 000000000080: 7E040F02
  v_add_f32     v13, 0x3f8ccccd, v3                     // 000000000084: 061A06FF 3F8CCCCD
  v_cvt_u32_f32  v12, v12                               // 00000000008C: 7E180F0C
  v_add_i32     v2, vcc, 0x00000060, v2                 // 000000000090: 4A0404FF 00000060
  v_add_f32     v30, 0x40066666, v3                     // 000000000098: 063C06FF 40066666
  v_cvt_u32_f32  v13, v13                               // 0000000000A0: 7E1A0F0D
  v_add_i32     v12, vcc, 0x00000060, v12               // 0000000000A4: 4A1818FF 00000060
  v_cvt_f32_u32  v0, v0                                 // 0000000000AC: 7E000D00
  v_add_f32     v3, 0x40466666, v3                      // 0000000000B0: 060606FF 40466666
  v_cvt_u32_f32  v30, v30                               // 0000000000B8: 7E3C0F1E
  v_add_i32     v13, vcc, 0x00000060, v13               // 0000000000BC: 4A1A1AFF 00000060
  v_add_f32     v0, 0x3dcccccd, v0                      // 0000000000C4: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v3, v3                                 // 0000000000CC: 7E060F03
  v_add_i32     v30, vcc, 0x00000060, v30               // 0000000000D0: 4A3C3CFF 00000060
  v_cvt_u32_f32  v0, v0                                 // 0000000000D8: 7E000F00
  v_add_i32     v3, vcc, 0x00000060, v3                 // 0000000000DC: 4A0606FF 00000060
  v_add_i32     v0, vcc, 0x00000060, v0                 // 0000000000E4: 4A0000FF 00000060
  tbuffer_load_format_xyzw  v[31:34], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000EC: EBF32000 80021F02
  tbuffer_load_format_xyzw  v[51:54], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000F4: EBF32000 80023300
  tbuffer_load_format_xyzw  v[35:38], v12, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000FC: EBF32000 8002230C
  tbuffer_load_format_xyzw  v[47:50], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000104: EBF32000 80022F03
  tbuffer_load_format_xyzw  v[39:42], v13, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000010C: EBF32000 8002270D
  tbuffer_load_format_xyzw  v[43:46], v30, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000114: EBF32000 80022B1E
  s_waitcnt     vmcnt(9) & lgkmcnt(15)                  // 00000000011C: BF8C0F79
  v_mul_legacy_f32  v0, v11, v17                        // 000000000120: 0E00230B
  s_waitcnt     vmcnt(8) & lgkmcnt(15)                  // 000000000124: BF8C0F78
  v_mul_legacy_f32  v2, v11, v21                        // 000000000128: 0E042B0B
  v_mac_legacy_f32  v0, v10, v16                        // 00000000012C: 0C00210A
  v_mac_legacy_f32  v2, v10, v20                        // 000000000130: 0C04290A
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 000000000134: BF8C0F77
  v_mul_legacy_f32  v3, v11, v25                        // 000000000138: 0E06330B
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 00000000013C: BF8C0F76
  v_mul_legacy_f32  v12, v11, v29                       // 000000000140: 0E183B0B
  v_mac_legacy_f32  v0, v9, v15                         // 000000000144: 0C001F09
  v_mac_legacy_f32  v2, v9, v19                         // 000000000148: 0C042709
  v_mac_legacy_f32  v3, v10, v24                        // 00000000014C: 0C06310A
  v_mac_legacy_f32  v12, v10, v28                       // 000000000150: 0C18390A
  s_movk_i32    s0, 0x0050                              // 000000000154: B0000050
  s_mov_b32     m0, 0x00010000                          // 000000000158: BEFC03FF 00010000
  v_mac_legacy_f32  v0, v8, v14                         // 000000000160: 0C001D08
  v_mac_legacy_f32  v2, v8, v18                         // 000000000164: 0C042508
  v_mac_legacy_f32  v3, v9, v23                         // 000000000168: 0C062F09
  v_mac_legacy_f32  v12, v9, v27                        // 00000000016C: 0C183709
  v_mul_lo_i32  v1, v1, s0                              // 000000000170: D2D60001 00000101
  v_mac_legacy_f32  v3, v8, v22                         // 000000000178: 0C062D08
  v_mac_legacy_f32  v12, v8, v26                        // 00000000017C: 0C183508
  ds_write2_b32  v1, v0, v2 offset0:16 offset1:17       // 000000000180: D8381110 00020001
  ds_write2_b32  v1, v3, v12 offset0:18 offset1:19      // 000000000188: D8381312 000C0301
  ds_write2_b32  v1, v4, v5 offset1:1                   // 000000000190: D8380100 00050401
  ds_write2_b32  v1, v6, v7 offset0:2 offset1:3         // 000000000198: D8380302 00070601
  s_waitcnt     vmcnt(3) & lgkmcnt(15)                  // 0000000001A0: BF8C0F73
  v_mul_legacy_f32  v0, v11, v38                        // 0000000001A4: 0E004D0B
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 0000000001A8: BF8C0F71
  v_mul_legacy_f32  v2, v11, v42                        // 0000000001AC: 0E04550B
  ds_write2_b32  v1, v31, v32 offset0:4 offset1:5       // 0000000001B0: D8380504 00201F01
  v_mac_legacy_f32  v0, v10, v37                        // 0000000001B8: 0C004B0A
  v_mac_legacy_f32  v2, v10, v41                        // 0000000001BC: 0C04530A
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 0000000001C0: BF8C0F70
  v_mul_legacy_f32  v3, v11, v46                        // 0000000001C4: 0E065D0B
  v_mul_legacy_f32  v4, v11, v50                        // 0000000001C8: 0E08650B
  ds_write2_b32  v1, v33, v34 offset0:6 offset1:7       // 0000000001CC: D8380706 00222101
  v_mac_legacy_f32  v0, v9, v36                         // 0000000001D4: 0C004909
  v_mac_legacy_f32  v2, v9, v40                         // 0000000001D8: 0C045109
  v_mac_legacy_f32  v3, v10, v45                        // 0000000001DC: 0C065B0A
  v_mac_legacy_f32  v4, v10, v49                        // 0000000001E0: 0C08630A
  ds_write2_b32  v1, v51, v52 offset0:8 offset1:9       // 0000000001E4: D8380908 00343301
  v_mac_legacy_f32  v0, v8, v35                         // 0000000001EC: 0C004708
  v_mac_legacy_f32  v2, v8, v39                         // 0000000001F0: 0C044F08
  v_mac_legacy_f32  v3, v9, v44                         // 0000000001F4: 0C065909
  v_mac_legacy_f32  v4, v9, v48                         // 0000000001F8: 0C086109
  ds_write2_b32  v1, v53, v54 offset0:10 offset1:11     // 0000000001FC: D8380B0A 00363501
  v_mac_legacy_f32  v3, v8, v43                         // 000000000204: 0C065708
  v_mac_legacy_f32  v4, v8, v47                         // 000000000208: 0C085F08
  ds_write2_b32  v1, v0, v2 offset0:12 offset1:13       // 00000000020C: D8380D0C 00020001
  ds_write2_b32  v1, v3, v4 offset0:14 offset1:15       // 000000000214: D8380F0E 00040301
  s_endpgm                                              // 00000000021C: BF810000
end


// Approximately 25 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VInstancedPosition3dTexTGTexTGCxform[] =
{
     68,  88,  66,  67,  59,  64, 
      5, 196, 214, 200,  32, 133, 
      5, 198, 107,  12, 226, 124, 
     30, 232,   1,   0,   0,   0, 
     52,  18,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    188,   1,   0,   0,  52,   2, 
      0,   0, 240,   2,   0,   0, 
    152,  17,   0,   0,  82,  68, 
     69,  70, 128,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
     68,   1,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      2,   0,   0,   0, 128,   0, 
      0,   0,   0,  15,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 208,   0,   0,   0, 
      0,   0,   0,   0,   0,   6, 
      0,   0,   2,   0,   0,   0, 
    232,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
     12,   1,   0,   0,   0,   6, 
      0,   0,   0,   9,   0,   0, 
      2,   0,   0,   0,  32,   1, 
      0,   0,   0,   0,   0,   0, 
    255, 255, 255, 255,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 118, 102, 
    109, 117, 110, 105, 102, 111, 
    114, 109, 115,   0, 102, 108, 
    111,  97, 116,  52, 120,  52, 
      0, 171, 171, 171,   3,   0, 
      3,   0,   4,   0,   4,   0, 
     24,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    220,   0,   0,   0, 118, 102, 
    117, 110, 105, 102, 111, 114, 
    109, 115,   0, 102, 108, 111, 
     97, 116,  52,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0, 144,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  23,   1,   0,   0, 
     77, 105,  99, 114, 111, 115, 
    111, 102, 116,  32,  40,  82, 
     41,  32,  72,  76,  83,  76, 
     32,  83, 104,  97, 100, 101, 
    114,  32,  67, 111, 109, 112, 
    105, 108, 101, 114,  32,  70, 
    111, 114,  32,  68, 117, 114, 
     97, 110, 103, 111,  32,  57, 
     46,  51,  48,  46,  49,  50, 
     48,  57,  56,  46,  48,   0, 
     73,  83,  71,  78, 112,   0, 
      0,   0,   3,   0,   0,   0, 
      8,   0,   0,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,  15,   0,   0,  86,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,  15,   0,   0,  98,   0, 
      0,   0,   0,   0,   0,   0, 
      8,   0,   0,   0,   1,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   1,   0,   0,  67,  79, 
     76,  79,  82,   0,  83,  86, 
     95,  80, 111, 115, 105, 116, 
    105, 111, 110,   0,  83,  86, 
     95,  73, 110, 115, 116,  97, 
    110,  99, 101,  73,  68,   0, 
     79,  83,  71,  78, 180,   0, 
      0,   0,   6,   0,   0,   0, 
      8,   0,   0,   0, 152,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0, 158,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 158,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
     15,   0,   0,   0, 158,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
      3,  12,   0,   0, 158,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
     12,   3,   0,   0, 167,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   4,   0,   0,   0, 
     15,   0,   0,   0,  67,  79, 
     76,  79,  82,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
    160,  14,   0,   0,  80,   0, 
      1,   0, 168,   3,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 234,   0,   0,   0, 
     80,   0,   1,   0, 229,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   8,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
    240,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      1,   0,   0,   0,  96,   0, 
      0,   4,  18,  16,  16,   0, 
      2,   0,   0,   0,   8,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   1,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   2,   0, 
      0,   0, 101,   0,   0,   3, 
     50,  32,  16,   0,   3,   0, 
      0,   0, 101,   0,   0,   3, 
    194,  32,  16,   0,   3,   0, 
      0,   0, 103,   0,   0,   4, 
    242,  32,  16,   0,   4,   0, 
      0,   0,   1,   0,   0,   0, 
    104,   0,   0,   2,   1,   0, 
      0,   0,  54,   0,   0,   5, 
    242,  32,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  38,   0, 
      0,   8,   0, 208,   0,   0, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,  16,  16,   0, 
      2,   0,   0,   0,   1,  64, 
      0,   0,   6,   0,   0,   0, 
     35,   0,   0,   9,  34,   0, 
     16,   0,   0,   0,   0,   0, 
     10,  16,  16,   0,   2,   0, 
      0,   0,   1,  64,   0,   0, 
      6,   0,   0,   0,   1,  64, 
      0,   0,   1,   0,   0,   0, 
     86,   0,   0,   5,  50,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   0,  16,   0,   0,   0, 
      0,   0,   0,   0,   0,  10, 
     50,   0,  16,   0,   0,   0, 
      0,   0,  70,   0,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0, 205, 204, 204,  61, 
    205, 204, 204,  61,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     28,   0,   0,   5,  50,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   0,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   8, 
    242,  32,  16,   0,   2,   0, 
      0,   0,  70, 142,  32,   6, 
      0,   0,   0,   0,  96,   0, 
      0,   0,  26,   0,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   8, 242,  32,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   6,   0,   0,   0,   0, 
     96,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     35,   0,   0,   9,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,  16,  16,   0,   2,   0, 
      0,   0,   1,  64,   0,   0, 
      6,   0,   0,   0,   1,  64, 
      0,   0,   2,   0,   0,   0, 
     86,   0,   0,   5,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,   0,   0,   0,  10, 
    242,   0,  16,   0,   0,   0, 
      0,   0,   6,   0,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0, 205, 204, 204,  61, 
    205, 204, 140,  63, 102, 102, 
      6,  64, 102, 102,  70,  64, 
     28,   0,   0,   5, 242,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  14,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,  10, 
     18,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   6,   0,   0,   0,   0, 
     96,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,  10,  34,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   6, 
      0,   0,   0,   0,  96,   0, 
      0,   0,  26,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,  10,  66,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   6,   0,   0, 
      0,   0,  96,   0,   0,   0, 
     42,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,  10, 
    130,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   6,   0,   0,   0,   0, 
     96,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     86,   0,   0,   5,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,  16,  16,   0,   2,   0, 
      0,   0,   0,   0,   0,   7, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,   1,  64, 
      0,   0, 205, 204, 204,  61, 
     28,   0,   0,   5,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  41,   0,   0,   7, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,   1,  64, 
      0,   0,   2,   0,   0,   0, 
     17,   0,   0,   9,  18,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,  10,  34,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   6, 
      0,   0,   0,   0,   1,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,  10,  66,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   6,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,  10, 
    130,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   6,   0,   0,   0,   0, 
      3,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 228,   0,   0,   0, 
     21,   0,   1,   0,  32, 195, 
     23,   0, 120,   1, 237, 152, 
    205, 111,  19,  71,  24, 198, 
    199, 227, 101, 178, 187, 153, 
    221,  37, 148, 152, 205,  22, 
     18, 226,  10, 112,  93, 213, 
    177,  29,  40, 234,  71, 148, 
     32, 190,  20,  83, 196,  71, 
    160,  21,  98,  15, 184, 196, 
     46,  17, 142,  77, 109,  23, 
     92,  14,  91,  39, 229,  24, 
    169, 173,  84,  85, 226,   0, 
     71, 196, 159,   0,  23,  18, 
    137,  43,  85, 171,  30, 170, 
     30, 122, 104,  15,  72,  72, 
     92,  42, 149,  67, 110, 203, 
    243, 238,   7,  74, 165, 114, 
     46,  66, 251, 147, 158, 121, 
    230, 157, 157, 221, 121, 103, 
    102,  79, 239, 195, 109,  44, 
     96, 194, 124, 188,  78, 206, 
    246, 188, 119, 227, 135,  52, 
     99, 155, 168,  15,  20, 106, 
    192, 149, 173, 212,  50, 246, 
     93, 134,  90, 198,  54,  83, 
    147, 130,  56,  99, 101, 152, 
    132, 254,  68,  60,   3, 167, 
    103, 185,  72,  33,  51, 107, 
    183, 208,  10, 104,  10, 186, 
    141, 119, 102, 225, 199,  32, 
    154,  59,  13,  25,  80, 188, 
     38, 161,  83,   3,   6, 169, 
      1, 180, 212,  70, 104, 124, 
     18, 218,  56,  30, 247,  45, 
     40, 206,  59,  96, 156, 154, 
    255, 230,  60,  68, 249, 191, 
     12, 202,  45, 206, 133, 242, 
    163,  60,   9, 218, 239, 171, 
      6, 237,  63, 190,  39, 130, 
    238,  99,  35,  38, 132, 171, 
     13,  56,  25, 221,  99,  60, 
    165,  31, 197, 241,  93, 174, 
     65,  47, 195,   7, 255,  58, 
     95,  16, 199, 184,  90, 220, 
    243, 137, 162,  72, 125,  91, 
     20,   8,   4,  22,  20, 120, 
     40, 112, 120,   2,  63, 128, 
     24, 128,  84,  72, 131, 112, 
    176,   2,  23,  41, 176, 160, 
    192, 193,  10,  36,  40, 112, 
    121,   2,  63, 133,  24, 130, 
    182,  64, 111,  64, 216, 147, 
     24, 134, 144, 163, 192, 255, 
     42, 108, 104,   4, 114, 160, 
     55, 161, 237, 208,  14, 104, 
     20,  26,  11, 115, 161, 127, 
    141,  16, 169, 112, 135, 130, 
     83, 102, 240, 116, 124,   2, 
    175,  55, 116,   6,  56, 230, 
      0,  58,  11, 138,   9, 218, 
    125, 220,  79,  72,  72,  72, 
     72,  72,  72,  72,  72,  72, 
     72,  72,  72,  72,  72,  72, 
    248,  63, 225, 227, 203,  15, 
    174,  88,  43, 171, 105, 131, 
    123,  44, 125,  99, 205, 231, 
     92, 252, 244, 232, 209,  84, 
    202, 226, 222,  50, 231, 123, 
     25, 251, 237, 215, 180, 145, 
     98, 203,  76, 169, 124, 205, 
     86,  86, 217, 206, 127, 158, 
    166, 182, 240, 254,  18, 223, 
     94,  89, 230, 163, 149, 111, 
    248, 206,  10, 141, 153,  25, 
    222,  39, 183, 156, 208,  55, 
    143, 242,  62,  55,  20, 207, 
     87,  68, 240,  61,  95, 177, 
    225,  43, 211, 105,  75, 120, 
     75,  44,  91, 241,  21,  71, 
    212, 235,  98,  70,  90, 182, 
    231,  11,  81, 185, 128,  92, 
    124,  69, 193, 216, 145,  25, 
    195, 114,  60, 223, 182, 131, 
    177,  33,  35, 235, 113,  11, 
    223, 113, 156, 112,  78,  54, 
    204,  15, 115, 131, 152, 242, 
     68, 206,  65, 159, 214,  77, 
    155, 225, 250,  60,  31, 122, 
    170,  16, 186, 204, 134, 110, 
    236, 134,  27, 204, 243,  25, 
     11, 190, 195, 172, 160, 255, 
    226, 125, 156,  72, 255,  43, 
    156, 199, 224,  59, 182, 217, 
     35, 159, 116,  76, 253, 109, 
     91, 234,  37,  71,  94, 163, 
    248, 195, 188, 121, 149, 252, 
     96, 217, 252, 146, 252, 173, 
    172, 217,  38,  63, 150,  51, 
    191,  32, 159,  43, 154, 131, 
    231,  51, 166, 254, 126,  94, 
    234,   7, 202,  82,  31, 207, 
     74, 125,  54,  39, 245,  83, 
     69, 169, 159, 203,  72, 109, 
    143,  45, 181,   9,  71, 106, 
    251, 243,  82, 155,  46,  75, 
    109,  44,  43, 181, 163,  57, 
    169, 157,  40,  74, 237, 211, 
    140,  84, 119, 217,  82, 125, 
    215, 145, 234, 190, 188,  84, 
    167, 202,  82, 221, 145, 149, 
    234, 225, 156,  84, 143,  23, 
    165, 122,  54,  35, 127,  86, 
    217, 186,  52, 134,  71,  44, 
    206, 214, 149,  77,  98, 128, 
    238, 110,  12, 125, 150, 226, 
    233,   9, 120,  97, 162,  88, 
    154, 134,  15, 109, 181,   7, 
     25,  91,  90,  29, 166, 125, 
      1, 170, 202, 145,  70,  32, 
    170, 212, 197,  49, 213, 133, 
    137,  56,  38, 197,  40, 152, 
    122,  47, 170,  87, 222, 141, 
    156, 230,  83,  93, 203, 124, 
     81, 209,  12, 249,  61, 122, 
    254,  75, 228,  84,  19,  67, 
      2, 236, 163, 103, 223, 223, 
    255, 248,  66, 225, 206, 179, 
    104, 252, 239, 200, 233,  27, 
     84, 239, 125, 114, 243, 143, 
    191, 188, 168,  54,  46,  35, 
    111,  67, 244, 126, 253,   3, 
    247, 179, 106, 163, 122, 189, 
     83, 232, 182, 218, 173, 203, 
    133,  78, 183,  93, 171,  46, 
    150, 221, 249, 218,  85, 183, 
    214, 235, 214, 218, 205, 106, 
    195, 253, 188, 222, 219, 235, 
    206, 181,  47, 186, 167, 107, 
    205, 249,  90, 219,  61,  52, 
    121, 168, 212, 115, 231,  46, 
     85,  17, 116, 220,  79, 102, 
    155, 157, 110, 181, 121, 177, 
     54, 127, 178, 213,  89, 232, 
     46, 180, 154, 147, 243, 103, 
    106, 189,  51,  71, 131, 230, 
     96, 175, 222, 106,  47,  22, 
    234, 141,  82, 169, 112, 169, 
    209, 105,  96, 205, 144,  31, 
    163,  76, 168,  18,  61,   0, 
     45,  86,  23, 154, 236,  57, 
    227, 113, 201,  43,  53,  16, 
      0,   0, 242,   0,   0,   0, 
     21,   0,   1,   0,  16,  87, 
     24,   0, 120,   1, 237,  88, 
     65, 111,  27,  69,  20, 126, 
    187, 158,  76, 236, 245, 120, 
     29,  74,  10, 142, 235,  56, 
      9,  45, 180, 164, 173,  73, 
    154,   0,  86,  21, 132, 181, 
      4,  74,  77,  80, 129,  84, 
     32,  33,  35, 106,  98, 155, 
     70,  56, 118, 100,  91, 197, 
    160,  98, 156, 144,   3, 135, 
     72,   8, 137,  11,   7,  36, 
     78, 253,   5,  92, 184, 144, 
    252, 128, 114,  65, 136,  19, 
      7, 184,  33, 113, 132, 187, 
    249,  62, 123,  55,  13,  18, 
     61, 131, 208, 126, 210,  55, 
    223, 188,  55, 179, 111, 222, 
    190, 153, 211, 123,  35,  37, 
     67, 124, 179, 112, 122, 140, 
     42, 103, 159, 218, 251,  34, 
     34,  50,  50,  68, 108,  14, 
    192, 246,  36,  71, 145,  51, 
     15, 115,  20, 153, 224,  96, 
    129, 216, 112,   9,  98, 192, 
     10, 230,   5,  40, 215, 206, 
    249,  28, 161, 112, 248,  21, 
    198,  24, 152,   7, 223,  84, 
     34, 183, 161, 107, 224,  44, 
    200, 111,  92, 240,  56,  28, 
    144,  71, 198,  65, 130,  71, 
     29,   7, 253,  75,  32, 142, 
     60,  66,  48, 207, 130, 127, 
    139,  55, 199, 225, 159,  81, 
      7, 153, 255, 253, 192, 220, 
     24,  47,  64,  16, 151, 255, 
    251,  95,   3, 107,  20, 220, 
     19, 193, 251,  56,  14, 230, 
    142, 210,  15, 241, 227,  67, 
     28, 239, 213, 117, 210, 191, 
    215, 224,  46,  15, 193, 251, 
     97,   0,   4, 113,   8, 206, 
    151,  65, 130,  71, 106, 185, 
    182, 160, 173, 207,  22,  52, 
     12, 141, 183, 164, 177,  65, 
    227,  65, 105,  13, 142, 131, 
     81,  16, 143,  65, 227, 146, 
     53,  46,  82, 227,  64, 157, 
      0, 145, 160,  78, 130, 120, 
     64, 250,   1, 240,   4, 248, 
     32, 136, 127, 210,  39,  65, 
    228, 172, 145, 167, 198, 155, 
    213,  83,  96,  26,  60,   5, 
    102, 192, 105,  16,  23, 165, 
    103, 252, 183, 171, 152,  21, 
    108,  14, 128, 182,  70, 127, 
    170, 109, 102,   8, 141,  32, 
    177, 255,  49,  88,   3, 148, 
    249,   8, 163, 106, 136, 240, 
    175, 249,  68, 200,  16,  33, 
     66, 132,   8,  17,  34,  68, 
    136,  16,  33,  66, 132,   8, 
     17,  34,  68, 136, 127,  19, 
    246, 220, 238, 119, 219, 201, 
    253, 131,  72,  66, 122,  18, 
    217,  59,  28, 136, 232, 239, 
    239, 222, 125,  70, 146, 210, 
    219,  21,  89, 254,  88, 246, 
     15, 100, 246, 143, 223, 197, 
    216, 253,  29, 177, 139, 187, 
    162, 138, 159, 136,  20, 135, 
    190, 148, 221, 167,  90,  19, 
     35, 181,  39, 161, 242, 211, 
     15, 145, 132,  37, 150, 175, 
    130, 184,  65, 204,  93,  91, 
     21,  25, 119, 199, 182, 139, 
    240,  21, 111,  48,   1, 124, 
     39,  89, 187, 111,  39,  84, 
    111, 160, 244, 112, 159, 149, 
    176,  49, 207,  99, 190, 255, 
    108,  36, 169, 123,   3, 219, 
     30, 250,  51, 201, 124, 111, 
    160, 245, 240,  59,  11, 113, 
      6, 234, 178, 174, 213, 116, 
     97, 160, 108, 232,  11, 133, 
     65,  62,  63,  92, 155,  78, 
     34, 150,  31, 127, 160, 212, 
     80, 121,  78, 228, 145,  81, 
    158,  50,  63,  82,  59, 103, 
    247, 173,  36, 206,  66,  62, 
    193, 158, 204,  99, 163,  53, 
     75, 236, 254,   7, 168,  75, 
    124,  38, 235,  58, 211,  89, 
     99,  80, 155, 247, 105, 159, 
    205, 184, 177,  83,  89, 227, 
     60, 154,  49, 183, 104,  63, 
    145, 118, 163,  83,  89,  19, 
     59, 157,  49, 206, 197, 180, 
    137,  63, 157, 114, 163, 115, 
     25,  19,  59, 159,  54, 206, 
    147,  41,  19, 125,  60, 109, 
     98,  75, 208, 197, 148,  97, 
     45,  11, 133, 237,  95,  36, 
    233, 169,  85, 170, 235, 169, 
     23, 169,   9,  79, 173,  81, 
    141, 167, 132, 170,  60, 165, 
    168,  99, 158, 138,  82, 181, 
    167,  12, 117, 220,  83,  31, 
    225, 204,   9, 206, 179, 158, 
    154, 164, 206, 120, 170, 199, 
     60,  94, 138, 186,  41, 218, 
    179, 158, 114, 174,  70, 205, 
    109, 250, 214,  29,  55,  67, 
    223, 156, 167,  98,  87, 162, 
    198, 121, 213,  49, 241,  13, 
    227, 206, 210,  55, 143, 216, 
    207,  71,  77, 236, 154,  99, 
    156, 178,  49, 140,  27,  31, 
    215, 238,  25, 174, 157, 199, 
    218, 203, 142, 137, 189, 109, 
    140,  51, 166, 205,  57, 250, 
     46, 192, 247, 150,  49, 177, 
    136,  54,  23, 104,  95, 132, 
    109, 105, 179, 192,  57, 242, 
     93, 166,  34, 223,  60,  21, 
    249, 174,  80,  35, 248,  31, 
    217,  57,  56, 201, 218,   2, 
    236,   8, 146,  83,  32, 187, 
    132, 129, 237, 183, 198, 143, 
    108, 246, 181, 137, 192,  38, 
      3,  32, 160, 181, 230, 247, 
     80,  87, 124, 229, 126, 248, 
    197,  29,  70, 189, 135, 186, 
    191,  94, 241, 149, 125,  58, 
    246, 179,  87, 254, 252, 252, 
    219, 181,  27, 185,  59, 159, 
    250, 254,  61,  95,  25, 131, 
    253, 240, 223, 190, 252, 249, 
    215,  19, 126,  82,  95, 251, 
    107,  45, 144, 223, 215,  46, 
    151, 222,  41, 215, 203,  31, 
    182, 115, 157, 102, 171, 249, 
     94, 174, 221, 105,  85, 203, 
     91, 151,  74, 149, 234, 173, 
     82, 181, 219, 169, 182,  26, 
    229, 122, 233, 221,  90, 119, 
    185, 180, 222, 218,  40, 189, 
     86, 109,  84, 170, 173, 210, 
    234, 210, 234,  98, 183, 180, 
    126, 179,  12, 163,  93, 122, 
    253, 106, 163, 221,  41,  55, 
     54, 170, 149,  87, 154, 237, 
    205, 206, 102, 179, 177,  84, 
    185,  94, 237,  94, 191,  50, 
     28, 158, 235, 214, 154, 173, 
    173,  92, 173, 190, 184, 152, 
    187,  89, 111, 179, 111,  62, 
    194, 188, 159,  17,  59, 142, 
    227, 224,  86, 121, 179,  33, 
    127,   1, 103, 183, 229,  62, 
     53,  16,   0,   0, 232,   0, 
      0,   0,  21,   0,   1,   0, 
      0,   3,  24,   0, 120,   1, 
    237, 152,  77, 108,  19,  71, 
     24, 134,  63, 239, 110, 190, 
    172, 237, 217, 221,  16, 126, 
    186,  24, 200,  15,   8,   5, 
    132,  48,   9,  14,  80, 138, 
    161, 169, 138,  64, 152,  32, 
     82, 194, 143,  16, 139, 192, 
     36, 107, 136, 112, 108, 106, 
     91, 212, 244,  96, 146, 148, 
     99, 164, 182,  82,  47,  61, 
    244, 218, 115, 175, 189,  36, 
    185, 113,   1, 169, 234,   1, 
    245, 208,  75, 111,  72,  28, 
    219,   3, 135,  74, 219, 247, 
    243, 238, 134,   8, 193, 185, 
     85, 181, 143, 244, 206, 187, 
     51, 187, 158, 121,  61,  51, 
    167,  79, 119, 169,  75, 245, 
    196, 211, 147, 226,  52, 114, 
    244, 201, 119,  58,  81, 143, 
     60, 111, 224, 193,  22, 105, 
    137, 126, 217,  38,  45,  81, 
    159,  52,  41,  72,  35,  58, 
      6,  83, 208,  16, 158,  39, 
    224, 242, 110,  95, 164, 144, 
    137, 181,  31, 208,  50, 116, 
     10, 202,  97, 254, 187, 240, 
     73, 232,   3, 232,  19, 200, 
    134, 132, 140,  52, 224, 109, 
    199, 212, 235, 200, 178,  89, 
    168,   0,  97, 170, 117, 100, 
     92, 144, 168,  27, 199, 105, 
     88, 154, 119,  51,   3,  73, 
    254, 247,  33, 217,  36,  67, 
    156,  35, 206,  41, 255, 247, 
    191, 134, 252, 255, 248, 156, 
      4,  57, 143, 141,  72, 246, 
    120,  95, 190, 137, 206,  49, 
    222, 179, 181, 168,  31, 159, 
    229,  26, 244,  62,   2,  96, 
    200, 195,   6, 226, 190,  44, 
    201, 116, 113, 148,  83,  95, 
    143,  50,  58, 140,   5,  25, 
     47,  25,  23, 138, 113,   1, 
    184,  23,  50, 161,  52, 132, 
     77, 101,  28,  36,  99,  65, 
    182,  32,   4, 100,   7, 194, 
      5, 226,  77,  80,  63, 180, 
     25, 194, 127, 226, 173,  16, 
     50,  50,  46,  12, 227, 206, 
    242, 118,  40,   7, 237, 128, 
    118,  66, 187, 160,   1, 104, 
     48, 186, 187,  70, 152,  72, 
    238, 156, 192, 169, 240, 159, 
    178,  38,   9, 225, 122, 188, 
     19, 255,  79, 100,  15, 176, 
    205, 235, 132, 187,  17, 158, 
    127, 124,  69, 166, 164,  73, 
     72,  72,  72,  72,  72,  72, 
     72,  72,  72,  72,  72,  72, 
     72,  72,  72, 248, 151, 208, 
    134, 151,  86,  30,  56, 203, 
    171, 186,  69, 157, 128, 136, 
    159,  63, 123, 118, 146, 244, 
     39, 107, 228,  80, 103, 137, 
    104, 124, 145, 140, 210,  99, 
     90,  94, 165, 161,  63,  95, 
    145, 173,  45, 136, 107, 253, 
    218, 194,  18, 185, 165, 175, 
     40,  87, 146, 190, 218,  22, 
    142,  91,  57,  56, 189, 248, 
     85, 183,  82, 164,  69, 190, 
     68,  92, 210,  44, 163, 163, 
     91, 220,   9,  12, 163,  59, 
    255,  34,  81,  41,  96, 183, 
    251, 172,  57,  70,  39, 224, 
     28, 158, 151,  63,  86, 142, 
     43, 223, 148, 110,  35,  87, 
    192,  69, 174,  84, 120, 194, 
    114, 114, 157, 192, 117, 187, 
     99,  36,  25, 153,  49, 126, 
    102,  98, 192,  41, 118, 130, 
     92,  46, 252,  54, 202, 173, 
     59,  88, 163,  88,  12, 191, 
     69, 126, 124,  27, 191,  15, 
    199, 144,  81,  27,  12, 179, 
     82,  33, 116, 181,  39, 116, 
    253,  80, 232, 214,  72, 232, 
      3,   7, 180, 133,  71, 216, 
    151, 236,  30, 178, 219, 226, 
      7,  12,  59,  51,  76,  42, 
    179, 223,  80,  95,  72, 191, 
    192, 246,  67, 241,  19, 174, 
    157,  30,  36, 149,  30,  49, 
     84, 102, 140,  85, 230, 184, 
    171, 166, 136, 126,  10, 244, 
    191,  87, 164, 234, 103, 238, 
     34, 101, 238,  53,  84, 250, 
     16, 171, 244,  49,  87, 165, 
    176,  47,  82,  34,  51,  15, 
    178,  50, 143, 184, 170, 111, 
    211, 135, 191, 201, 110, 245, 
    111, 134, 235,  10,  63, 129, 
     27,  61, 164, 233, 112, 238, 
    165, 166, 172, 113, 129, 236, 
    207, 197, 175,  24, 182, 209, 
    131, 241, 193,  33, 202, 156, 
     71, 150, 105,  67, 201, 217, 
    101, 111, 178, 157, 245,  77, 
    155, 123, 241, 110, 120,  55, 
    165, 207,  33, 207, 103, 200, 
    115,   3, 121, 102,  76, 101, 
    166,  49,  94,  24,  39, 243, 
     44, 178,  92,  68, 150, 235, 
    200,  82,  54,  85,  38, 139, 
    241,  35,  71, 201, 188, 134, 
     44, 183,  76, 165,  44, 244, 
    145, 197, 118, 224, 186,  84, 
    178,  22,  87, 183, 162,  21, 
    164, 154,  39, 218,  14,  73, 
    133,  47, 238,  75,  13,  90, 
    136, 251, 162,  24, 204, 144, 
    122,  29, 213,  59,  95,  70, 
     46, 223, 203, 204, 118, 119, 
    150,  55, 184,  82, 160,   6, 
    125, 145,  75,  77,  77, 106, 
    207, 197, 191, 190, 253, 121, 
    242, 118, 254, 199, 241, 104, 
    124,  52, 114, 153,  67, 106, 
    197,  47, 191, 255, 253, 143, 
    149, 104, 108,  50, 242,   6, 
     36, 191, 175, 124, 228, 221, 
     41,  87, 203,  95,  54, 243, 
    173, 122, 163, 126,  63, 223, 
    108,  53, 252, 242, 252,  97, 
    111, 214, 127, 232, 249, 237, 
    150, 223, 168, 149, 171, 222, 
    221,  74, 123, 220, 155, 110, 
    204, 120, 151, 252, 218, 172, 
    223, 240,  78,  23,  78, 143, 
    181, 189, 233, 123, 101, 116, 
    154, 222, 213, 115, 181, 102, 
    171,  92, 155, 241, 103, 167, 
    234, 205, 185, 214,  92, 189, 
     86, 152, 189, 236, 183,  47, 
    159, 237,  54, 159, 182,  43, 
    245, 198, 124, 190,  82,  29, 
     27, 203, 223, 171,  54, 171, 
     88,  51, 228,  69, 148,  68, 
    170, 131, 189, 208, 124, 121, 
    174,  70, 255,   0, 199,  76, 
    205, 226,   0,   0,  83,  84, 
     65,  84, 148,   0,   0,   0, 
     25,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      9,   0,   0,   0,  11,   0, 
      0,   0,   4,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      6,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0
};
