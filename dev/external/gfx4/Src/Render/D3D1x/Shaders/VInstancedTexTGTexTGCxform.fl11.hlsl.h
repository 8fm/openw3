#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4 vfuniforms[192];            // Offset:    0 Size:  3072
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// SV_Position              0   xyzw        1     NONE   float   xyzw
// SV_InstanceID            0   x           2   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xy          3     NONE   float   xy  
// TEXCOORD                 3     zw        3     NONE   float     zw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[204]
// Embedded Data:
//  0x000000cc - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000c7 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[192], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input_sgv v2.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output o3.zw
dcl_output_siv o4.xyzw, position
dcl_temps 2
mov o0.xyzw, v0.xyzw
ishl r0.x, v2.x, l(3)
utof r0.x, r0.x
add r0.x, r0.x, l(0.100000)
ftou r0.x, r0.x
mov o1.xyzw, cb0[r0.x + 0].xyzw
bfi r0.xyz, l(29, 29, 29, 0), l(3, 3, 3, 0), v2.xxxx, l(2, 4, 1, 0)
utof r0.xyz, r0.xyzx
add r1.xyz, r0.yyzy, l(2.100000, 3.100000, 0.100000, 0.000000)
add r0.xyzw, r0.xxyy, l(0.100000, 1.100000, 0.100000, 1.100000)
ftou r0.xyzw, r0.xyzw
ftou r1.xyz, r1.xyzx
mov o2.xyzw, cb0[r1.z + 0].xyzw
dp4 o3.x, v1.xyzw, cb0[r0.z + 0].xyzw
dp4 o3.y, v1.xyzw, cb0[r0.w + 0].xyzw
dp4 o3.z, v1.xyzw, cb0[r1.x + 0].xyzw
dp4 o3.w, v1.xyzw, cb0[r1.y + 0].xyzw
dp4 o4.x, v1.xyzw, cb0[r0.x + 0].xyzw
dp4 o4.y, v1.xyzw, cb0[r0.y + 0].xyzw
mov o4.zw, l(0,0,0,1.000000)
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[204], bundle is:[207] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedTexTGTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [2] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [3] generic, usageIdx  3, paramIdx 3, paramSlot 0

codeLenInByte        = 392;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 40;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_lshlrev_b32  v0, 3, v3                              // 000000000008: 34000683
  v_bfi_b32     v1, -8, v0, 2                           // 00000000000C: D2940001 020A00C8
  v_cvt_f32_u32  v1, v1                                 // 000000000014: 7E020D01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v12, 0x3dcccccd, v1                     // 00000000001C: 061802FF 3DCCCCCD
  v_add_f32     v1, 0x3f8ccccd, v1                      // 000000000024: 060202FF 3F8CCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000002C: 7E020F01
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  tbuffer_load_format_xyzw  v[20:23], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000034: EBF32000 80021401
  v_bfi_b32     v2, -8, v0, 4                           // 00000000003C: D2940002 021200C8
  v_cvt_f32_u32  v2, v2                                 // 000000000044: 7E040D02
  v_add_f32     v13, 0x40066666, v2                     // 000000000048: 061A04FF 40066666
  v_add_f32     v15, 0x3dcccccd, v2                     // 000000000050: 061E04FF 3DCCCCCD
  v_cvt_u32_f32  v12, v12                               // 000000000058: 7E180F0C
  v_cvt_u32_f32  v15, v15                               // 00000000005C: 7E1E0F0F
  v_cvt_u32_f32  v13, v13                               // 000000000060: 7E1A0F0D
  v_lshlrev_b32  v3, 3, v3                              // 000000000064: 34060683
  v_add_f32     v14, 0x40466666, v2                     // 000000000068: 061C04FF 40466666
  v_cvt_f32_u32  v1, v3                                 // 000000000070: 7E020D03
  tbuffer_load_format_xyzw  v[16:19], v12, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000074: EBF32000 8002100C
  tbuffer_load_format_xyzw  v[24:27], v15, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000007C: EBF32000 8002180F
  tbuffer_load_format_xyzw  v[32:35], v13, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000084: EBF32000 8002200D
  v_add_f32     v2, 0x3f8ccccd, v2                      // 00000000008C: 060404FF 3F8CCCCD
  v_add_f32     v1, 0x3dcccccd, v1                      // 000000000094: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v2, v2                                 // 00000000009C: 7E040F02
  v_cvt_u32_f32  v1, v1                                 // 0000000000A0: 7E020F01
  tbuffer_load_format_xyzw  v[28:31], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A4: EBF32000 80021C02
  tbuffer_load_format_xyzw  v[36:39], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80022401
  v_cvt_u32_f32  v14, v14                               // 0000000000B4: 7E1C0F0E
  v_bfi_b32     v0, -8, v0, 1                           // 0000000000B8: D2940000 020600C8
  v_cvt_f32_u32  v0, v0                                 // 0000000000C0: 7E000D00
  tbuffer_load_format_xyzw  v[12:15], v14, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C4: EBF32000 80020C0E
  v_add_f32     v0, 0x3dcccccd, v0                      // 0000000000CC: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v0, v0                                 // 0000000000D4: 7E000F00
  tbuffer_load_format_xyzw  v[0:3], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D8: EBF32000 80020000
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 0000000000E0: BF8C0F76
  v_mul_legacy_f32  v19, v11, v19                       // 0000000000E4: 0E26270B
  v_mul_legacy_f32  v23, v11, v23                       // 0000000000E8: 0E2E2F0B
  v_mac_legacy_f32  v19, v10, v18                       // 0000000000EC: 0C26250A
  v_mac_legacy_f32  v23, v10, v22                       // 0000000000F0: 0C2E2D0A
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000F4: BF8C0F75
  v_mul_legacy_f32  v18, v11, v27                       // 0000000000F8: 0E24370B
  s_waitcnt     vmcnt(3) & lgkmcnt(15)                  // 0000000000FC: BF8C0F73
  v_mul_legacy_f32  v22, v11, v31                       // 000000000100: 0E2C3F0B
  v_mul_legacy_f32  v27, v11, v35                       // 000000000104: 0E36470B
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000108: BF8C0F71
  v_mul_legacy_f32  v11, v11, v15                       // 00000000010C: 0E161F0B
  v_mac_legacy_f32  v18, v10, v26                       // 000000000110: 0C24350A
  v_mac_legacy_f32  v22, v10, v30                       // 000000000114: 0C2C3D0A
  v_mac_legacy_f32  v27, v10, v34                       // 000000000118: 0C36450A
  v_mac_legacy_f32  v11, v10, v14                       // 00000000011C: 0C161D0A
  v_mac_legacy_f32  v19, v9, v17                        // 000000000120: 0C262309
  v_mac_legacy_f32  v23, v9, v21                        // 000000000124: 0C2E2B09
  v_mac_legacy_f32  v18, v9, v25                        // 000000000128: 0C243309
  v_mac_legacy_f32  v22, v9, v29                        // 00000000012C: 0C2C3B09
  v_mac_legacy_f32  v27, v9, v33                        // 000000000130: 0C364309
  v_mac_legacy_f32  v11, v9, v13                        // 000000000134: 0C161B09
  v_mac_legacy_f32  v19, v8, v16                        // 000000000138: 0C262108
  v_mac_legacy_f32  v23, v8, v20                        // 00000000013C: 0C2E2908
  v_mov_b32     v10, 0                                  // 000000000140: 7E140280
  v_mov_b32     v14, 1.0                                // 000000000144: 7E1C02F2
  v_mac_legacy_f32  v18, v8, v24                        // 000000000148: 0C243108
  v_mac_legacy_f32  v22, v8, v28                        // 00000000014C: 0C2C3908
  v_mac_legacy_f32  v27, v8, v32                        // 000000000150: 0C364108
  v_mac_legacy_f32  v11, v8, v12                        // 000000000154: 0C161908
  exp           pos0, v19, v23, v10, v14 done           // 000000000158: F80008CF 0E0A1713
  exp           param0, v4, v5, v6, v7                  // 000000000160: F800020F 07060504
  exp           param1, v36, v37, v38, v39              // 000000000168: F800021F 27262524
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000170: BF8C0F70
  exp           param2, v0, v1, v2, v3                  // 000000000174: F800022F 03020100
  exp           param3, v18, v22, v27, v11              // 00000000017C: F800023F 0B1B1612
  s_endpgm                                              // 000000000184: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[413], bundle is:[224] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedTexTGTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] position, usageIdx  4, paramIdx 4, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [4] generic, usageIdx  3, paramIdx 3, paramSlot 0

codeLenInByte        = 520;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 41;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_lshlrev_b32  v0, 3, v3                              // 000000000008: 34000683
  v_bfi_b32     v1, -8, v0, 2                           // 00000000000C: D2940001 020A00C8
  v_cvt_f32_u32  v1, v1                                 // 000000000014: 7E020D01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v2, 0x3dcccccd, v1                      // 00000000001C: 060402FF 3DCCCCCD
  v_add_f32     v1, 0x3f8ccccd, v1                      // 000000000024: 060202FF 3F8CCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000002C: 7E020F01
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  tbuffer_load_format_xyzw  v[16:19], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000034: EBF32000 80021001
  v_cvt_u32_f32  v2, v2                                 // 00000000003C: 7E040F02
  v_lshlrev_b32  v1, 3, v3                              // 000000000040: 34020683
  v_cvt_f32_u32  v1, v1                                 // 000000000044: 7E020D01
  v_add_f32     v1, 0x3dcccccd, v1                      // 000000000048: 060202FF 3DCCCCCD
  tbuffer_load_format_xyzw  v[12:15], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000050: EBF32000 80020C02
  v_cvt_u32_f32  v1, v1                                 // 000000000058: 7E020F01
  tbuffer_load_format_xyzw  v[21:24], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000005C: EBF32000 80021501
  v_bfi_b32     v2, -8, v0, 4                           // 000000000064: D2940002 021200C8
  v_bfi_b32     v0, -8, v0, 1                           // 00000000006C: D2940000 020600C8
  v_cvt_f32_u32  v2, v2                                 // 000000000074: 7E040D02
  v_cvt_f32_u32  v0, v0                                 // 000000000078: 7E000D00
  v_add_f32     v3, 0x3dcccccd, v2                      // 00000000007C: 060604FF 3DCCCCCD
  v_add_f32     v1, 0x40066666, v2                      // 000000000084: 060204FF 40066666
  v_add_f32     v0, 0x3dcccccd, v0                      // 00000000008C: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v3, v3                                 // 000000000094: 7E060F03
  v_cvt_u32_f32  v1, v1                                 // 000000000098: 7E020F01
  v_cvt_u32_f32  v0, v0                                 // 00000000009C: 7E000F00
  tbuffer_load_format_xyzw  v[25:28], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A0: EBF32000 80021903
  tbuffer_load_format_xyzw  v[33:36], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A8: EBF32000 80022100
  tbuffer_load_format_xyzw  v[37:40], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B0: EBF32000 80022501
  v_add_f32     v20, 0x3f8ccccd, v2                     // 0000000000B8: 062804FF 3F8CCCCD
  v_add_f32     v2, 0x40466666, v2                      // 0000000000C0: 060404FF 40466666
  v_cvt_u32_f32  v20, v20                               // 0000000000C8: 7E280F14
  v_cvt_u32_f32  v2, v2                                 // 0000000000CC: 7E040F02
  tbuffer_load_format_xyzw  v[29:32], v20, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D0: EBF32000 80021D14
  tbuffer_load_format_xyzw  v[0:3], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D8: EBF32000 80020002
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 0000000000E0: BF8C0F76
  v_mul_legacy_f32  v15, v11, v15                       // 0000000000E4: 0E1E1F0B
  v_mac_legacy_f32  v15, v10, v14                       // 0000000000E8: 0C1E1D0A
  s_load_dwordx4  s[8:11], s[2:3], 0x0c                 // 0000000000EC: C084030C
  v_mul_legacy_f32  v14, v11, v19                       // 0000000000F0: 0E1C270B
  v_mac_legacy_f32  v15, v9, v13                        // 0000000000F4: 0C1E1B09
  v_mac_legacy_f32  v14, v10, v18                       // 0000000000F8: 0C1C250A
  v_mac_legacy_f32  v15, v8, v12                        // 0000000000FC: 0C1E1908
  v_mac_legacy_f32  v14, v9, v17                        // 000000000100: 0C1C2309
  v_mac_legacy_f32  v14, v8, v16                        // 000000000104: 0C1C2108
  v_mov_b32     v12, 0                                  // 000000000108: 7E180280
  s_waitcnt     lgkmcnt(0)                              // 00000000010C: BF8C007F
  buffer_store_dword  v15, v0, s[8:11], s4 offset:64 glc slc // 000000000110: E0704040 04420F00
  v_mov_b32     v13, 1.0                                // 000000000118: 7E1A02F2
  buffer_store_dword  v14, v0, s[8:11], s4 offset:68 glc slc // 00000000011C: E0704044 04420E00
  buffer_store_dword  v12, v0, s[8:11], s4 offset:72 glc slc // 000000000124: E0704048 04420C00
  buffer_store_dword  v13, v0, s[8:11], s4 offset:76 glc slc // 00000000012C: E070404C 04420D00
  buffer_store_dword  v4, v0, s[8:11], s4 glc slc       // 000000000134: E0704000 04420400
  buffer_store_dword  v5, v0, s[8:11], s4 offset:4 glc slc // 00000000013C: E0704004 04420500
  buffer_store_dword  v6, v0, s[8:11], s4 offset:8 glc slc // 000000000144: E0704008 04420600
  buffer_store_dword  v7, v0, s[8:11], s4 offset:12 glc slc // 00000000014C: E070400C 04420700
  s_waitcnt     vmcnt(13) & lgkmcnt(15)                 // 000000000154: BF8C0F7D
  buffer_store_dword  v21, v0, s[8:11], s4 offset:16 glc slc // 000000000158: E0704010 04421500
  buffer_store_dword  v22, v0, s[8:11], s4 offset:20 glc slc // 000000000160: E0704014 04421600
  s_waitcnt     vmcnt(14) & lgkmcnt(15)                 // 000000000168: BF8C0F7E
  v_mul_legacy_f32  v4, v11, v28                        // 00000000016C: 0E08390B
  buffer_store_dword  v23, v0, s[8:11], s4 offset:24 glc slc // 000000000170: E0704018 04421700
  v_mac_legacy_f32  v4, v10, v27                        // 000000000178: 0C08370A
  s_waitcnt     vmcnt(12) & lgkmcnt(15)                 // 00000000017C: BF8C0F7C
  v_mul_legacy_f32  v5, v11, v32                        // 000000000180: 0E0A410B
  buffer_store_dword  v24, v0, s[8:11], s4 offset:28 glc slc // 000000000184: E070401C 04421800
  v_mac_legacy_f32  v4, v9, v26                         // 00000000018C: 0C083509
  v_mac_legacy_f32  v5, v10, v31                        // 000000000190: 0C0A3F0A
  v_mul_legacy_f32  v6, v11, v40                        // 000000000194: 0E0C510B
  buffer_store_dword  v33, v0, s[8:11], s4 offset:32 glc slc // 000000000198: E0704020 04422100
  v_mac_legacy_f32  v4, v8, v25                         // 0000000001A0: 0C083308
  v_mac_legacy_f32  v5, v9, v30                         // 0000000001A4: 0C0A3D09
  v_mac_legacy_f32  v6, v10, v39                        // 0000000001A8: 0C0C4F0A
  s_waitcnt     vmcnt(13) & lgkmcnt(15)                 // 0000000001AC: BF8C0F7D
  v_mul_legacy_f32  v3, v11, v3                         // 0000000001B0: 0E06070B
  buffer_store_dword  v34, v0, s[8:11], s4 offset:36 glc slc // 0000000001B4: E0704024 04422200
  v_mac_legacy_f32  v5, v8, v29                         // 0000000001BC: 0C0A3B08
  v_mac_legacy_f32  v6, v9, v38                         // 0000000001C0: 0C0C4D09
  v_mac_legacy_f32  v3, v10, v2                         // 0000000001C4: 0C06050A
  buffer_store_dword  v35, v0, s[8:11], s4 offset:40 glc slc // 0000000001C8: E0704028 04422300
  v_mac_legacy_f32  v6, v8, v37                         // 0000000001D0: 0C0C4B08
  v_mac_legacy_f32  v3, v9, v1                          // 0000000001D4: 0C060309
  buffer_store_dword  v36, v0, s[8:11], s4 offset:44 glc slc // 0000000001D8: E070402C 04422400
  v_mac_legacy_f32  v3, v8, v0                          // 0000000001E0: 0C060108
  buffer_store_dword  v4, v0, s[8:11], s4 offset:48 glc slc // 0000000001E4: E0704030 04420400
  buffer_store_dword  v5, v0, s[8:11], s4 offset:52 glc slc // 0000000001EC: E0704034 04420500
  buffer_store_dword  v6, v0, s[8:11], s4 offset:56 glc slc // 0000000001F4: E0704038 04420600
  buffer_store_dword  v3, v0, s[8:11], s4 offset:60 glc slc // 0000000001FC: E070403C 04420300
  s_endpgm                                              // 000000000204: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[639], bundle is:[214] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedTexTGTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] position, usageIdx  4, paramIdx 4, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [4] generic, usageIdx  3, paramIdx 3, paramSlot 0

codeLenInByte        = 452;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 47;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_lshlrev_b32  v0, 3, v3                              // 000000000008: 34000683
  v_bfi_b32     v2, -8, v0, 2                           // 00000000000C: D2940002 020A00C8
  v_cvt_f32_u32  v2, v2                                 // 000000000014: 7E040D02
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v12, 0x3dcccccd, v2                     // 00000000001C: 061804FF 3DCCCCCD
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000024: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v2, v2                                 // 00000000002C: 7E040F02
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  tbuffer_load_format_xyzw  v[16:19], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000034: EBF32000 80021002
  v_lshlrev_b32  v2, 3, v3                              // 00000000003C: 34040683
  v_bfi_b32     v3, -8, v0, 4                           // 000000000040: D2940003 021200C8
  v_bfi_b32     v0, -8, v0, 1                           // 000000000048: D2940000 020600C8
  v_cvt_f32_u32  v2, v2                                 // 000000000050: 7E040D02
  v_cvt_f32_u32  v0, v0                                 // 000000000054: 7E000D00
  v_add_f32     v2, 0x3dcccccd, v2                      // 000000000058: 060404FF 3DCCCCCD
  v_add_f32     v0, 0x3dcccccd, v0                      // 000000000060: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v12, v12                               // 000000000068: 7E180F0C
  v_cvt_u32_f32  v2, v2                                 // 00000000006C: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 000000000070: 7E000F00
  tbuffer_load_format_xyzw  v[12:15], v12, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000074: EBF32000 80020C0C
  tbuffer_load_format_xyzw  v[23:26], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000007C: EBF32000 80021702
  tbuffer_load_format_xyzw  v[43:46], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000084: EBF32000 80022B00
  v_cvt_f32_u32  v3, v3                                 // 00000000008C: 7E060D03
  v_add_f32     v20, 0x3dcccccd, v3                     // 000000000090: 062806FF 3DCCCCCD
  v_add_f32     v21, 0x3f8ccccd, v3                     // 000000000098: 062A06FF 3F8CCCCD
  v_add_f32     v22, 0x40066666, v3                     // 0000000000A0: 062C06FF 40066666
  v_add_f32     v3, 0x40466666, v3                      // 0000000000A8: 060606FF 40466666
  v_cvt_u32_f32  v20, v20                               // 0000000000B0: 7E280F14
  v_cvt_u32_f32  v21, v21                               // 0000000000B4: 7E2A0F15
  v_cvt_u32_f32  v22, v22                               // 0000000000B8: 7E2C0F16
  v_cvt_u32_f32  v3, v3                                 // 0000000000BC: 7E060F03
  tbuffer_load_format_xyzw  v[27:30], v20, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C0: EBF32000 80021B14
  tbuffer_load_format_xyzw  v[31:34], v21, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C8: EBF32000 80021F15
  tbuffer_load_format_xyzw  v[35:38], v22, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D0: EBF32000 80022316
  tbuffer_load_format_xyzw  v[39:42], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D8: EBF32000 80022703
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 0000000000E0: BF8C0F76
  v_mul_legacy_f32  v0, v11, v15                        // 0000000000E4: 0E001F0B
  v_mul_legacy_f32  v2, v11, v19                        // 0000000000E8: 0E04270B
  v_mac_legacy_f32  v0, v10, v14                        // 0000000000EC: 0C001D0A
  v_mac_legacy_f32  v2, v10, v18                        // 0000000000F0: 0C04250A
  v_mac_legacy_f32  v0, v9, v13                         // 0000000000F4: 0C001B09
  v_mac_legacy_f32  v2, v9, v17                         // 0000000000F8: 0C042309
  s_movk_i32    s0, 0x0050                              // 0000000000FC: B0000050
  s_mov_b32     m0, 0x00010000                          // 000000000100: BEFC03FF 00010000
  v_mac_legacy_f32  v0, v8, v12                         // 000000000108: 0C001908
  v_mac_legacy_f32  v2, v8, v16                         // 00000000010C: 0C042108
  v_mul_lo_i32  v1, v1, s0                              // 000000000110: D2D60001 00000101
  ds_write2_b32  v1, v0, v2 offset0:16 offset1:17       // 000000000118: D8381110 00020001
  v_mov_b32     v0, 0                                   // 000000000120: 7E000280
  v_mov_b32     v2, 1.0                                 // 000000000124: 7E0402F2
  ds_write2_b32  v1, v0, v2 offset0:18 offset1:19       // 000000000128: D8381312 00020001
  ds_write2_b32  v1, v4, v5 offset1:1                   // 000000000130: D8380100 00050401
  ds_write2_b32  v1, v6, v7 offset0:2 offset1:3         // 000000000138: D8380302 00070601
  s_waitcnt     vmcnt(3) & lgkmcnt(15)                  // 000000000140: BF8C0F73
  v_mul_legacy_f32  v0, v11, v30                        // 000000000144: 0E003D0B
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 000000000148: BF8C0F72
  v_mul_legacy_f32  v2, v11, v34                        // 00000000014C: 0E04450B
  ds_write2_b32  v1, v23, v24 offset0:4 offset1:5       // 000000000150: D8380504 00181701
  v_mac_legacy_f32  v0, v10, v29                        // 000000000158: 0C003B0A
  v_mac_legacy_f32  v2, v10, v33                        // 00000000015C: 0C04430A
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000160: BF8C0F71
  v_mul_legacy_f32  v3, v11, v38                        // 000000000164: 0E064D0B
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000168: BF8C0F70
  v_mul_legacy_f32  v4, v11, v42                        // 00000000016C: 0E08550B
  ds_write2_b32  v1, v25, v26 offset0:6 offset1:7       // 000000000170: D8380706 001A1901
  v_mac_legacy_f32  v0, v9, v28                         // 000000000178: 0C003909
  v_mac_legacy_f32  v2, v9, v32                         // 00000000017C: 0C044109
  v_mac_legacy_f32  v3, v10, v37                        // 000000000180: 0C064B0A
  v_mac_legacy_f32  v4, v10, v41                        // 000000000184: 0C08530A
  ds_write2_b32  v1, v43, v44 offset0:8 offset1:9       // 000000000188: D8380908 002C2B01
  v_mac_legacy_f32  v0, v8, v27                         // 000000000190: 0C003708
  v_mac_legacy_f32  v2, v8, v31                         // 000000000194: 0C043F08
  v_mac_legacy_f32  v3, v9, v36                         // 000000000198: 0C064909
  v_mac_legacy_f32  v4, v9, v40                         // 00000000019C: 0C085109
  ds_write2_b32  v1, v45, v46 offset0:10 offset1:11     // 0000000001A0: D8380B0A 002E2D01
  v_mac_legacy_f32  v3, v8, v35                         // 0000000001A8: 0C064708
  v_mac_legacy_f32  v4, v8, v39                         // 0000000001AC: 0C084F08
  ds_write2_b32  v1, v0, v2 offset0:12 offset1:13       // 0000000001B0: D8380D0C 00020001
  ds_write2_b32  v1, v3, v4 offset0:14 offset1:15       // 0000000001B8: D8380F0E 00040301
  s_endpgm                                              // 0000000001C0: BF810000
end


// Approximately 21 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VInstancedTexTGTexTGCxform[] =
{
     68,  88,  66,  67, 146, 161, 
    101, 183, 247,  35, 192, 110, 
      9,  27,  37, 223, 237,  13, 
    159, 246,   1,   0,   0,   0, 
    140,  16,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     88,   1,   0,   0, 208,   1, 
      0,   0, 140,   2,   0,   0, 
    240,  15,   0,   0,  82,  68, 
     69,  70,  28,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
    224,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      1,   0,   0,   0, 128,   0, 
      0,   0,   0,  12,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 168,   0,   0,   0, 
      0,   0,   0,   0,   0,  12, 
      0,   0,   2,   0,   0,   0, 
    188,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 102, 
    108, 111,  97, 116,  52,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0, 192,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 179,   0, 
      0,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
    112,   0,   0,   0,   3,   0, 
      0,   0,   8,   0,   0,   0, 
     80,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,  15,   0,   0, 
     86,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,  15,   0,   0, 
     98,   0,   0,   0,   0,   0, 
      0,   0,   8,   0,   0,   0, 
      1,   0,   0,   0,   2,   0, 
      0,   0,   1,   1,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     83,  86,  95,  80, 111, 115, 
    105, 116, 105, 111, 110,   0, 
     83,  86,  95,  73, 110, 115, 
    116,  97, 110,  99, 101,  73, 
     68,   0,  79,  83,  71,  78, 
    180,   0,   0,   0,   6,   0, 
      0,   0,   8,   0,   0,   0, 
    152,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
    158,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    158,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  15,   0,   0,   0, 
    158,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,   3,  12,   0,   0, 
    158,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,  12,   3,   0,   0, 
    167,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   4,   0, 
      0,   0,  15,   0,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88,  92,  13,   0,   0, 
     80,   0,   1,   0,  87,   3, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 204,   0, 
      0,   0,  80,   0,   1,   0, 
    199,   0,   0,   0, 106,   8, 
      0,   1,  89,   8,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0, 192,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   1,   0,   0,   0, 
     96,   0,   0,   4,  18,  16, 
     16,   0,   2,   0,   0,   0, 
      8,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      3,   0,   0,   0, 101,   0, 
      0,   3, 194,  32,  16,   0, 
      3,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      4,   0,   0,   0,   1,   0, 
      0,   0, 104,   0,   0,   2, 
      2,   0,   0,   0,  54,   0, 
      0,   5, 242,  32,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     41,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,  16,  16,   0,   2,   0, 
      0,   0,   1,  64,   0,   0, 
      3,   0,   0,   0,  86,   0, 
      0,   5,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
      0,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
    205, 204, 204,  61,  28,   0, 
      0,   5,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   7, 242,  32, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0, 140,   0, 
      0,  20, 114,   0,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0,  29,   0,   0,   0, 
     29,   0,   0,   0,  29,   0, 
      0,   0,   0,   0,   0,   0, 
      2,  64,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   6,  16,  16,   0, 
      2,   0,   0,   0,   2,  64, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     86,   0,   0,   5, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,   0,   0,   0,  10, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  86,   6,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0, 102, 102,   6,  64, 
    102, 102,  70,  64, 205, 204, 
    204,  61,   0,   0,   0,   0, 
      0,   0,   0,  10, 242,   0, 
     16,   0,   0,   0,   0,   0, 
      6,   5,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
    205, 204, 204,  61, 205, 204, 
    140,  63, 205, 204, 204,  61, 
    205, 204, 140,  63,  28,   0, 
      0,   5, 242,   0,  16,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   0,   0,   0,   0, 
     28,   0,   0,   5, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  54,   0,   0,   7, 
    242,  32,  16,   0,   2,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  42,   0, 
     16,   0,   1,   0,   0,   0, 
     17,   0,   0,   9,  18,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  42,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,   9,  34,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,   9,  66,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   1,   0,   0,   0, 
     17,   0,   0,   9, 130,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  26,   0, 
     16,   0,   1,   0,   0,   0, 
     17,   0,   0,   9,  18,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,   9,  34,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  26,   0, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   8, 194,  32, 
     16,   0,   4,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  62,   0,   0,   1, 
     53,  16,   0,   0, 209,   0, 
      0,   0,  21,   0,   1,   0, 
     32,  97,  23,   0, 120,   1, 
    237, 152,  75,  79,  19,  81, 
     20, 199, 239, 220,  14, 151, 
    118, 122,  59, 131,  60, 202, 
    171,  80, 192,  82,  48,  98, 
      1,  65,  84,  12,   1,   3, 
    138, 184, 209,   8,  49,  44, 
    102,  97, 133,  86, 140, 165, 
     96, 139, 164, 186,  24, 171, 
    184, 112, 129, 113, 161,  11, 
     18, 253,  24, 172, 133, 165, 
     11, 140, 137, 241,  11, 184, 
    118,  39,  27, 118, 245, 127, 
    230,   1,  36, 234,  90,  99, 
    230, 151, 252, 239, 153, 251, 
    154, 115, 238, 185, 119, 117, 
    210, 141, 204, 230, 241, 183, 
    149, 125, 178, 215, 222, 117, 
    205, 199,   2, 140,  85,  81, 
      7, 168, 212, 128, 213, 122, 
    106,  25, 187,  16, 165, 150, 
    177,  38, 106,  20, 136,  51, 
    214,  11,  35, 161, 151, 232, 
     79, 192, 210,  28, 141, 145, 
     28,  38, 118, 223, 160,  21, 
    208,  16, 180, 142,  61,  51, 
    176, 163,  80,  13,  68,  99, 
     26, 228, 249,  36, 130, 212, 
      0, 207, 146, 171, 227, 232, 
     80,  23, 132,  80,  15, 241, 
    214,  68, 160, 227, 255,  98, 
    157, 212, 252, 158, 235, 208, 
     81, 156, 191,  66, 177, 121, 
     49, 208,  63,  41,  78, 130, 
    206, 251, 175,  65, 231, 247, 
    238, 137, 160, 251,  56,  14, 
    229, 204, 203, 215,  65,   3, 
    181,  71,  57, 235, 117, 239, 
    149, 114,  65, 103, 219, 133, 
    254,  68,   5, 120, 239, 194, 
    195, 235, 227, 106, 113, 207, 
     55,   6, 132, 242, 122,  64, 
    160,  35, 224,  80,  96,  82, 
     32, 121,   2,  15,  64,  84, 
     67,  72, 168,   8,  65,  72, 
    166,   8,  67, 112,  40, 112, 
    105,   2,   1,  10,   3, 194, 
    163,  16,  39, 160,  90, 168, 
     14, 194, 153,   4, 226,  21, 
    136,  81, 224, 189,  10,  60, 
     48, 209,  12, 181,  64, 173, 
     80,  12, 106, 131, 218, 161, 
    184,  19,  11, 189,  53,  66, 
     40, 206,   9,   5, 167, 200, 
     96,   3,  94,   6, 254, 111, 
     40,   7, 222, 187, 165,  92, 
     80, 159, 160, 211, 123, 223, 
     62,  62,  62,  62,  62,  62, 
     62,  62,  62,  62,  62,  62, 
     62,  62,  62,  62, 127,  19, 
    222, 249, 252, 195, 170, 177, 
    185, 179,  33, 216, 176, 194, 
    222, 126, 249, 200,  52, 174, 
     68, 184, 197,   2,  47, 118, 
     43, 188,  73, 124, 218, 219, 
     27, 171, 112,  14, 187,  57, 
    174,  24, 220, 122, 202,  54, 
    119,  88, 199, 254, 119, 165, 
    158, 151, 185, 189, 190, 150, 
    243, 136, 106,  85, 212,  22, 
    145, 205, 138, 137, 138, 218, 
    110, 239, 145,  70, 147, 101, 
     24, 237,  86, 196, 104, 177, 
     54, 132,  24, 174, 168,  49, 
    204,  95, 157,   8, 208, 191, 
    177,  95, 214, 240,  50,  89, 
    163, 201, 177, 145,  14,  94, 
    174, 168, 170, 237, 199, 241, 
    183,  55, 198,  13, 213,  34, 
    159,  52, 207,  99, 206,  58, 
     37, 193, 203, 186,  17, 179, 
    152, 237,  91, 112,  22,  97, 
    246, 188,  46, 177, 159,  49, 
    123,  31,  51, 156,  49, 156, 
    174, 188, 142, 179, 133, 123, 
    146, 122, 184,  63, 165, 107, 
    221,  73, 169, 157,  73, 201, 
     71,  52, 118,  62, 161,  23, 
    201, 142, 247, 233, 225, 233, 
     17, 253,  33, 125, 199, 163, 
    186, 118,  46,  33, 181, 177, 
     62, 169,  93,  25, 145,  90, 
     91,  84, 134,  78,  38, 101, 
    232, 116,  74, 134, 134,  18, 
     50, 116, 169,  79, 134,  38, 
     71, 100, 168,  53,  42, 131, 
    157,  73,  25,  60, 149, 146, 
    101,  94, 111, 253, 224,  49, 
     43,  56, 152, 144, 193, 139, 
    125,  50, 120, 121,  68,   6, 
    155, 163, 242, 115, 144,  29, 
    212,  53, 106, 186, 193, 217, 
    129,  90,  37, 170, 227, 176, 
    137, 238, 100,  15, 229, 186, 
     31, 223,  76, 225, 129, 113, 
    216, 218, 104, 107, 152, 177, 
    103,  59, 110, 153, 208, 174, 
    235, 145, 154,  33, 170, 168, 
    121, 125, 170, 223,  18,  94, 
    159, 228, 161,  98, 233,  29, 
    183, 174, 120, 211, 181, 180, 
    158, 234,  79, 250,  97, 229, 
    209, 161, 236, 206, 151,  92, 
     75, 181,  43,   4, 192, 162, 
     13,  13, 213, 219, 175, 182, 
    190, 190, 119, 199, 183,  92, 
     75, 255, 160,  90, 108, 205, 
    124, 220, 136, 185,  53, 236, 
    109, 119, 110,   9, 162, 253, 
    217,  81, 243, 110,  58, 151, 
    126,  82,  76, 173, 173,  20, 
     86,  30, 164, 138, 107, 133, 
     76, 122, 249, 172, 185, 152, 
     89,  55,  51, 165, 181,  76, 
     33, 159, 206, 153, 247, 178, 
    165,  97, 115, 182, 176,  96, 
    222, 202, 228,  23,  51,   5, 
    115, 106, 104, 106, 176, 100, 
    206,  46, 165, 209,  41, 154, 
    183, 103, 242, 197, 181, 116, 
    126,  33, 179,  56, 151,  41, 
    205,  77, 219, 205, 100,  41, 
    187,  82,  88,  78, 101, 115, 
    131, 131, 169, 165,  92,  49, 
      7,  79,  14, 195, 110,  28, 
     84,  39, 174, 134, 150, 211, 
    247, 243, 236,  39,  78, 199, 
    172, 101,  53,  16,   0,   0, 
    226,   0,   0,   0,  21,   0, 
      1,   0,  16, 241,  23,   0, 
    120,   1, 237, 152,  77, 111, 
     27,  69,  28, 198, 103, 199, 
    147, 241, 122,  61,  94, 155, 
     18, 167,  78, 235,  56, 117, 
    218,  10,  35,  85,  33,  33, 
     70, 188,  53, 138,  89,  34, 
    104,  85, 160, 130,  86, 168, 
     18, 203, 193,  52,  54,  65, 
     56,  78, 100,  91, 149, 133, 
     96,  49, 148,  99,  16,  23, 
     14,   8, 190,   2,  71,  14, 
    156,  72,  14,  28, 122,   8, 
     23, 196,   7, 232, 137,  11, 
     23,  94,  62, 128, 251,  60, 
    251,  18,  69, 136, 158,  65, 
    104, 127, 210,  51, 207, 254, 
    103, 231, 229,  63,  59, 179, 
    151, 249, 227, 180,   8, 121, 
    251, 234, 175,  59, 244,  43, 
    223,  44, 221, 170, 102, 132, 
    152,  97,   0,  36,  11, 176, 
     55, 203,  82, 136, 123, 115, 
     44, 133,   8,  67,  11,  66, 
    131, 199,  97,   6, 178, 241, 
    220, 130, 243,  93,  35,  86, 
     68, 235, 240, 107, 148,  57, 
    232,   9, 232,  53,  37, 196, 
      8, 126,  25,  90, 132, 214, 
     32, 246,  63, 137,  13, 113, 
     28, 246,  33, 156, 234,  36, 
     46, 180,   4,  33, 213,  99, 
     48, 125,  72,  21,  42,  66, 
    199, 212,  89, 252,  51, 111, 
     65, 204, 255,  97,  48,  55, 
    142, 151, 144, 228, 249, 247, 
    124, 255,  11, 240,  27,  37, 
    251,  68, 184,  31,  39, 225, 
     55, 195, 167,  15,  25, 199, 
    251, 152, 124, 215, 239, 227, 
     56, 217, 203,  67, 232,  97, 
     76,  65,  50,  14, 225, 115, 
     19,  34, 156,  82, 139, 235, 
     43, 218, 250,  98,  69,  35, 
    208, 216,  32, 141,   6,  26, 
      7,  74, 107,  40,  11,  97, 
    115,  53,  54,  86,  59,  80, 
     30, 194, 132, 186,   0,  33, 
     65, 141, 141, 211,  37, 232, 
     17, 232,  20, 244,  40, 132, 
     53, 233,  50, 132,  28,  53, 
    206, 171, 174,  64, 243, 208, 
     25, 232,  44, 132,  13, 210, 
     11,  80,  13, 194, 129,  10, 
    207, 174,  98,  86, 136,  89, 
      0, 109,  69,  43, 213, 146, 
     25, 194,  51,  39,  79, 206, 
    255,  15, 126,   3, 254,  67, 
      9, 209, 215, 136, 254,  23, 
     30,  17,  42,  37,  37,  37, 
     37,  37,  37,  37,  37,  37, 
     37,  37,  37,  37,  37,  37, 
    229, 223,  68, 214,  63, 253, 
     97, 175, 184, 127, 112,  87, 
    139, 166,  37, 190, 252, 249, 
    158, 112, 164,  85, 144, 129, 
    200, 124, 118,  56, 149,  74, 
    255, 116, 116, 180,  62, 149, 
     18, 190, 191,  97,  21, 101, 
    240, 177, 216,  63,  16, 231, 
    254, 250, 205,  42, 201, 137, 
     44, 170, 224, 174, 150,  77, 
    182, 143, 218,  28, 173, 243, 
    157,  52, 114, 194, 182,  97, 
    187,  50, 218, 133, 227, 158, 
    146,  34, 116,  45, 101,  65, 
      5, 162,  32, 130, 169, 210, 
     97, 159, 169, 146, 186, 219, 
    213, 173, 169,  16,  97, 156, 
     41, 234,  32, 236,  95,  20, 
    225,  24, 153, 121,  57, 161, 
    139, 122, 228, 214,  69,  57, 
    153, 170,   6, 218, 238, 111, 
     76, 149,  66, 223, 151,  90, 
    179, 197,  70, 192, 124, 248, 
    126, 118,  33, 106,  39, 133, 
    156, 220, 193, 218, 242, 139, 
     53, 215,  89, 168,  25, 131, 
     53, 229,  31, 171, 186, 185, 
    179,  53, 227,  92, 172,  26, 
    123, 190, 102, 114, 231, 225, 
    245, 170, 153, 200,  74, 184, 
    182,  86, 107, 239, 190,  40, 
    122, 234,  79, 121,  38, 216, 
    228, 179, 235, 169,  43, 116, 
    227, 169,  87, 232,   5,  79, 
      9, 186, 242, 148, 162, 207, 
    120, 202, 166, 107,  79,  25, 
    122, 214,  83,  31,  97, 206, 
     18, 159, 203, 158, 154, 165, 
    207, 121,  42,  96,  30, 207, 
    218, 110, 133, 241, 105,  79, 
     57,  79, 219, 230,  67, 214, 
    189, 224, 184,  85, 214,  85, 
     60, 149, 123, 202,  54, 206, 
    134,  99, 242, 175,  27, 247, 
     28, 235, 234,  24, 123, 205, 
     54, 185, 117, 199,  56, 215, 
    141, 225, 184, 249, 172, 118, 
     47, 240, 221,  18, 222,  61, 
    239, 152, 220, 171, 198,  56, 
     51, 218,  52,  88, 119,  30, 
    117, 215, 140, 201, 101, 180, 
    185, 196, 248,   2,  98,  75, 
    155,  21,  62,  35, 223,  38, 
     29, 249,  62,  67,  71, 190, 
    151, 233,  25, 172,  71, 124, 
    114,  80, 230,  97,   0, 188, 
    181, 163, 230,  33, 222, 228, 
     37, 113,   5,  34,  73,  92, 
    130,  72,  18,  83,   9,  24, 
    208, 250,  61, 190, 231, 188, 
     31,  59, 219, 163,  94, 184, 
    199,  55, 161,  17, 165, 248, 
     94, 220,  78,  28, 202,  67, 
    115, 229, 114, 246, 187, 207, 
    191, 250, 229,  82,  92, 223, 
    136, 157,  99,  56,  80, 233, 
    214,  98, 241, 219, 184, 110, 
     51, 246, 109, 136, 253, 187, 
    207, 249, 239, 180, 123, 237, 
     15, 134, 203, 163, 221, 193, 
    238, 251, 203, 195, 209, 160, 
    211, 222, 121, 210, 223, 234, 
    220, 241,  59, 227,  81, 103, 
    208, 111, 247, 252, 119, 187, 
    227, 166, 127,  99, 112, 219, 
    127, 163, 211, 223, 234,  12, 
    252, 205, 181, 205, 213, 177, 
    127,  99, 187, 141,  96, 232, 
    191, 121, 181,  63,  28, 181, 
    251, 183,  59,  91,  55,  59, 
    227, 155,  47, 135, 197, 139, 
    227, 238, 238,  96, 103, 185, 
    219,  91,  93,  93, 222, 238, 
     13, 123, 152,  41, 226, 199, 
    120, 126, 222,   5, 102, 161, 
    157, 246, 123, 125, 241,   0, 
    221, 197, 206,  20,   0,   0, 
     53,  16,   0,   0, 216,   0, 
      0,   0,  21,   0,   1,   0, 
      0, 157,  23,   0, 120,   1, 
    237, 152, 207, 111,  19,  71, 
     20, 199, 159, 103,  39, 207, 
    107, 123, 188, 107, 146,  56, 
     63,   8,  52,   4,  84,  17, 
     65, 106,  72, 107,   9,  74, 
     65,   9, 130,  54,  32, 132, 
     66,  19, 168, 114, 216, 139, 
    155, 216,  77, 133, 227, 164, 
    182, 133, 172,  30,  22,  83, 
     56,  26, 113, 233,   1,  68, 
    251,  63, 244, 192, 177,  34, 
     57, 112, 232, 129,  94,  34, 
     84, 241,  63, 244,  82, 193, 
     21, 201, 124, 223, 254,  40, 
     57, 148, 115, 171, 106,  63, 
    210, 119, 190, 122,  51,  59, 
     51, 111, 103, 230, 244, 126, 
     30, 165, 128, 204,  13, 115, 
     79, 252, 210, 227, 195,  43, 
      7,  44, 162,   1,   9, 246, 
    176,  53,  44,  45,  81, 123, 
     68,  90, 162,  32,  76,  65, 
    138, 232,   4, 204,  64, 207, 
     16, 207, 195, 101, 108,  58, 
     82, 200, 252, 206,  35, 180, 
     12, 149, 161,  51,  88, 127, 
     29, 126,  22, 146, 229, 164, 
     79, 230,  11,  89, 105, 128, 
     45,  13, 136,  29, 219, 252, 
    141, 108, 235,  64, 135,  33, 
     13, 197,  72, 191,  48,   8, 
     97, 139, 119,  76,  73, 243, 
    207,  44,  65, 146, 255, 251, 
    144, 220,  36, 135,  56, 175, 
     56, 207, 216, 255,  75, 200, 
    255, 199, 247,  36, 200, 125, 
    236,  69, 206,  44,  62, 151, 
    114, 116, 143, 241,  39, 107, 
     81,  28, 223, 229,  14, 244, 
     62, 250,  96, 239, 185,  11, 
    113,  44, 247, 196, 180, 120, 
    146,  83,  15,  78,  50,   2, 
    198, 134, 140,  65, 198, 131, 
     98,  60,   0,  78,  67,  56, 
     80, 206,  64,  56,  84, 206, 
     65, 216, 144, 243,  16,  18, 
    100,  23,  42,  64, 251,  32, 
     92,  36,  15,  65, 248,  39, 
     46,  66, 200, 145, 241,  94, 
    121,  12,  26, 135, 246,  67, 
     19, 208,   1, 232,  32, 244, 
      1,  52,  25, 189,  93,  29, 
    102,  36, 111,  78, 224,  84, 
    248, 167, 172,  36,  67, 184, 
     21, 159, 196, 255,  19,  57, 
      3, 121, 183,  49, 225, 105, 
    132, 247,  31,  63, 145, 107, 
    210,  36,  36,  36,  36,  36, 
     36,  36,  36,  36,  36,  36, 
     36,  36,  36,  36,  36, 252, 
     75, 168, 169,  31, 158, 110, 
    185, 189, 237, 187,  76, 101, 
     69,  63, 238, 254,  70,  89, 
    165, 242, 218,  39, 235, 222, 
     78,  95, 143, 241, 239, 207, 
    159, 159, 235, 107,  13, 239, 
    205,  41,  87, 251, 183, 169, 
    183,  77, 135,  94, 255, 169, 
     10, 170, 123, 151, 117, 217, 
     10, 230,  12,  42,  10, 156, 
    195, 185, 121, 242, 195,  57, 
    152,  75,  20, 184, 113, 199, 
    124, 153,  79,  46, 249,  50, 
    223,  24, 213,  13, 214,  25, 
     13, 157, 142, 171, 174, 149, 
    103, 191, 207, 211, 225,  60, 
     62,   6, 239, 205, 245, 121, 
    134, 107,  53, 158, 239,  51, 
    195, 191, 152,  31, 118, 167, 
    253, 162, 123, 204,  31, 113, 
    103, 124, 203, 229,  96, 173, 
    225, 137, 112, 141, 226, 100, 
    232,  35,  71,  66, 183, 142, 
    170, 238,  45, 252,  91, 110, 
    146, 156, 220,  81, 237, 100, 
     15, 146, 201, 126, 168,  77, 
    102, 130,  76, 230, 136,  54, 
    215, 136, 126, 233,  91, 111, 
    158,  74, 117, 206,  30,  39, 
     99,  79, 105, 147, 162,  63, 
    118, 165, 132,  85, 216, 119, 
    250, 101, 138,  20, 117,  21, 
    249, 175, 148, 246,   7, 135, 
    194, 152,  82, 112,  61,  64, 
    202, 130, 115, 154,  90, 178, 
    254,  57, 114, 154, 226, 159, 
    107,  71,  15, 160, 127, 116, 
    140, 178, 159,  97, 175,  11, 
    218, 124,  39, 253,  87, 217, 
    145,  51, 206, 221, 176,  29, 
     78,  99, 124, 124,  63, 101, 
     62,  69,  14, 231, 181, 201, 
     94,  97, 147,  93, 182, 141, 
    157,  65, 255, 241,  25, 178, 
     79,  33, 143,  57, 228, 120, 
    153,  77, 230,  75, 219, 100, 
    115, 232, 255, 168,  68, 246, 
      2,  27, 123, 209,  54,  38, 
    143,  24, 121,  56,  46, 220, 
    146, 106, 211, 157, 237,  34, 
     90,   1, 217,   5,  26, 135, 
    164,  10,  23, 199,   5,  72, 
    136,  99,  81,  12,  86,  72, 
    253,  20, 213,  36, 123, 145, 
    203, 247, 178, 178,  19, 172, 
    242, 142,  95, 163, 241,  39, 
    145,  75, 221,  43,   7, 141, 
     20, 139, 233,  39, 247,  31, 
    190, 120,  25, 245, 191, 136, 
     92, 214, 144, 122, 110,  97, 
    101, 210,  93, 137, 234, 223, 
    127,  69,  99,  82, 151, 150, 
    249, 181,  51, 222, 215, 149, 
    122, 229, 251,  86, 169, 189, 
    217, 220, 188,  89, 106, 181, 
    155, 213, 202, 198, 199, 222, 
     90, 245, 150,  87, 237, 180, 
    171, 205,  70, 165, 238, 125, 
     83, 235, 148, 189, 229, 230, 
    170, 183,  84, 109, 172,  85, 
    155, 222, 197,  79,  46, 206, 
    118, 188, 229, 245,  10, 130, 
    150, 247, 213, 229,  70, 171, 
     93, 105, 172,  86, 215, 174, 
     87,  59, 215,  23, 130, 230, 
     66, 167, 182, 217, 220,  40, 
    213, 234, 179, 179, 165, 245, 
    122, 171, 142, 157,  66, 182, 
    162,  60, 164, 110, 151, 134, 
     54,  42, 223,  54, 232,  45, 
     99, 104, 182,  52,   0,   0, 
     83,  84,  65,  84, 148,   0, 
      0,   0,  21,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   9,   0,   0,   0, 
      9,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0
};
