#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4x4 vfmuniforms[24];          // Offset:    0 Size:  1536
//   float4 vfuniforms[96];             // Offset: 1536 Size:  1536
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// SV_Position              0   xyzw        1     NONE   float   xyzw
// SV_InstanceID            0   x           2   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// SV_Position              0   xyzw        2      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[173]
// Embedded Data:
//  0x000000ad - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000a8 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[192], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input_sgv v2.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xy
dcl_output o1.zw
dcl_output_siv o2.xyzw, position
dcl_temps 1
mov o0.xyzw, v0.xyzw
ishl r0.x, v2.x, l(2)
utof r0.x, r0.x
add r0.xyzw, r0.xxxx, l(0.100000, 1.100000, 2.100000, 3.100000)
ftou r0.xyzw, r0.xyzw
dp4 o1.x, v1.xyzw, cb0[r0.x + 96].xyzw
dp4 o1.y, v1.xyzw, cb0[r0.y + 96].xyzw
dp4 o1.z, v1.xyzw, cb0[r0.z + 96].xyzw
dp4 o1.w, v1.xyzw, cb0[r0.w + 96].xyzw
utof r0.x, v2.x
add r0.x, r0.x, l(0.100000)
ftou r0.x, r0.x
ishl r0.x, r0.x, l(2)
dp4 o2.x, v1.xyzw, cb0[r0.x + 0].xyzw
dp4 o2.y, v1.xyzw, cb0[r0.x + 1].xyzw
dp4 o2.z, v1.xyzw, cb0[r0.x + 2].xyzw
dp4 o2.w, v1.xyzw, cb0[r0.x + 3].xyzw
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[173], bundle is:[197] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedPosition3dTexTGTexTG.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0

codeLenInByte        = 372;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 36;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000002
SVOC:VS_EXPORT_COUNT        = 1
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_lshlrev_b32  v0, 2, v3                              // 000000000008: 34000682
  v_cvt_f32_u32  v0, v0                                 // 00000000000C: 7E000D00
  v_add_f32     v1, 0x3dcccccd, v0                      // 000000000010: 060200FF 3DCCCCCD
  exp           param0, v4, v5, v6, v7                  // 000000000018: F800020F 07060504
  v_add_f32     v2, 0x3f8ccccd, v0                      // 000000000020: 060400FF 3F8CCCCD
  v_cvt_u32_f32  v1, v1                                 // 000000000028: 7E020F01
  s_waitcnt     expcnt(0) & lgkmcnt(15)                 // 00000000002C: BF8C0F0F
  v_add_f32     v4, 0x40066666, v0                      // 000000000030: 060800FF 40066666
  v_cvt_u32_f32  v2, v2                                 // 000000000038: 7E040F02
  v_add_i32     v1, vcc, 0x00000060, v1                 // 00000000003C: 4A0202FF 00000060
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000044: C0840300
  v_add_f32     v0, 0x40466666, v0                      // 000000000048: 060000FF 40466666
  v_cvt_u32_f32  v4, v4                                 // 000000000050: 7E080F04
  v_add_i32     v2, vcc, 0x00000060, v2                 // 000000000054: 4A0404FF 00000060
  v_cvt_u32_f32  v0, v0                                 // 00000000005C: 7E000F00
  v_add_i32     v4, vcc, 0x00000060, v4                 // 000000000060: 4A0808FF 00000060
  v_cvt_f32_u32  v3, v3                                 // 000000000068: 7E060D03
  v_add_i32     v0, vcc, 0x00000060, v0                 // 00000000006C: 4A0000FF 00000060
  v_add_f32     v3, 0x3dcccccd, v3                      // 000000000074: 060606FF 3DCCCCCD
  v_cvt_u32_f32  v3, v3                                 // 00000000007C: 7E060F03
  v_lshlrev_b32  v3, 2, v3                              // 000000000080: 34060682
  s_waitcnt     lgkmcnt(0)                              // 000000000084: BF8C007F
  tbuffer_load_format_xyzw  v[12:15], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000088: EBF32000 80020C01
  tbuffer_load_format_xyzw  v[16:19], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000090: EBF32000 80021002
  tbuffer_load_format_xyzw  v[24:27], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000098: EBF32000 80021800
  v_add_i32     v5, vcc, 1, v3                          // 0000000000A0: 4A0A0681
  v_add_i32     v6, vcc, 2, v3                          // 0000000000A4: 4A0C0682
  tbuffer_load_format_xyzw  v[20:23], v4, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A8: EBF32000 80021404
  tbuffer_load_format_xyzw  v[28:31], v5, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B0: EBF32000 80021C05
  tbuffer_load_format_xyzw  v[32:35], v6, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B8: EBF32000 80022006
  v_add_i32     v7, vcc, 3, v3                          // 0000000000C0: 4A0E0683
  tbuffer_load_format_xyzw  v[0:3], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C4: EBF32000 80020003
  tbuffer_load_format_xyzw  v[4:7], v7, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000CC: EBF32000 80020407
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 0000000000D4: BF8C0F71
  v_mul_legacy_f32  v3, v11, v3                         // 0000000000D8: 0E06070B
  v_mac_legacy_f32  v3, v10, v2                         // 0000000000DC: 0C06050A
  v_mac_legacy_f32  v3, v9, v1                          // 0000000000E0: 0C060309
  v_mac_legacy_f32  v3, v8, v0                          // 0000000000E4: 0C060108
  v_mul_legacy_f32  v0, v11, v31                        // 0000000000E8: 0E003F0B
  v_mul_legacy_f32  v1, v11, v35                        // 0000000000EC: 0E02470B
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 0000000000F0: BF8C0F70
  v_mul_legacy_f32  v2, v11, v7                         // 0000000000F4: 0E040F0B
  v_mac_legacy_f32  v0, v10, v30                        // 0000000000F8: 0C003D0A
  v_mac_legacy_f32  v1, v10, v34                        // 0000000000FC: 0C02450A
  v_mac_legacy_f32  v2, v10, v6                         // 000000000100: 0C040D0A
  v_mac_legacy_f32  v0, v9, v29                         // 000000000104: 0C003B09
  v_mac_legacy_f32  v1, v9, v33                         // 000000000108: 0C024309
  v_mac_legacy_f32  v2, v9, v5                          // 00000000010C: 0C040B09
  v_mac_legacy_f32  v0, v8, v28                         // 000000000110: 0C003908
  v_mac_legacy_f32  v1, v8, v32                         // 000000000114: 0C024108
  v_mac_legacy_f32  v2, v8, v4                          // 000000000118: 0C040908
  exp           pos0, v3, v0, v1, v2 done               // 00000000011C: F80008CF 02010003
  s_waitcnt     expcnt(0) & lgkmcnt(15)                 // 000000000124: BF8C0F0F
  v_mul_legacy_f32  v0, v11, v15                        // 000000000128: 0E001F0B
  v_mul_legacy_f32  v1, v11, v19                        // 00000000012C: 0E02270B
  v_mul_legacy_f32  v2, v11, v23                        // 000000000130: 0E042F0B
  v_mul_legacy_f32  v3, v11, v27                        // 000000000134: 0E06370B
  v_mac_legacy_f32  v0, v10, v14                        // 000000000138: 0C001D0A
  v_mac_legacy_f32  v1, v10, v18                        // 00000000013C: 0C02250A
  v_mac_legacy_f32  v2, v10, v22                        // 000000000140: 0C042D0A
  v_mac_legacy_f32  v3, v10, v26                        // 000000000144: 0C06350A
  v_mac_legacy_f32  v0, v9, v13                         // 000000000148: 0C001B09
  v_mac_legacy_f32  v1, v9, v17                         // 00000000014C: 0C022309
  v_mac_legacy_f32  v2, v9, v21                         // 000000000150: 0C042B09
  v_mac_legacy_f32  v3, v9, v25                         // 000000000154: 0C063309
  v_mac_legacy_f32  v0, v8, v12                         // 000000000158: 0C001908
  v_mac_legacy_f32  v1, v8, v16                         // 00000000015C: 0C022108
  v_mac_legacy_f32  v2, v8, v20                         // 000000000160: 0C042908
  v_mac_legacy_f32  v3, v8, v24                         // 000000000164: 0C063108
  exp           param1, v0, v1, v2, v3                  // 000000000168: F800021F 03020100
  s_endpgm                                              // 000000000170: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[372], bundle is:[215] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedPosition3dTexTGTexTG.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] position, usageIdx  2, paramIdx 2, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0

codeLenInByte        = 464;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 40;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 12
; esGsRingItemSize          = 12

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_cvt_f32_u32  v0, v3                                 // 000000000008: 7E000D03
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 00000000000C: C0840300
  v_add_f32     v0, 0x3dcccccd, v0                      // 000000000010: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v0, v0                                 // 000000000018: 7E000F00
  v_lshlrev_b32  v0, 2, v0                              // 00000000001C: 34000082
  s_waitcnt     lgkmcnt(0)                              // 000000000020: BF8C007F
  tbuffer_load_format_xyzw  v[12:15], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000024: EBF32000 80020C00
  v_add_i32     v1, vcc, 1, v0                          // 00000000002C: 4A020081
  v_add_i32     v2, vcc, 2, v0                          // 000000000030: 4A040082
  v_add_i32     v0, vcc, 3, v0                          // 000000000034: 4A000083
  tbuffer_load_format_xyzw  v[16:19], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000038: EBF32000 80021001
  tbuffer_load_format_xyzw  v[24:27], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 80021800
  tbuffer_load_format_xyzw  v[20:23], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000048: EBF32000 80021402
  v_lshlrev_b32  v1, 2, v3                              // 000000000050: 34020682
  v_cvt_f32_u32  v1, v1                                 // 000000000054: 7E020D01
  v_add_f32     v0, 0x3dcccccd, v1                      // 000000000058: 060002FF 3DCCCCCD
  v_cvt_u32_f32  v0, v0                                 // 000000000060: 7E000F00
  v_add_f32     v2, 0x3f8ccccd, v1                      // 000000000064: 060402FF 3F8CCCCD
  v_add_i32     v0, vcc, 0x00000060, v0                 // 00000000006C: 4A0000FF 00000060
  v_add_f32     v3, 0x40066666, v1                      // 000000000074: 060602FF 40066666
  v_cvt_u32_f32  v2, v2                                 // 00000000007C: 7E040F02
  v_cvt_u32_f32  v3, v3                                 // 000000000080: 7E060F03
  v_add_i32     v2, vcc, 0x00000060, v2                 // 000000000084: 4A0404FF 00000060
  tbuffer_load_format_xyzw  v[28:31], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000008C: EBF32000 80021C00
  v_add_i32     v3, vcc, 0x00000060, v3                 // 000000000094: 4A0606FF 00000060
  tbuffer_load_format_xyzw  v[32:35], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000009C: EBF32000 80022002
  tbuffer_load_format_xyzw  v[36:39], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A4: EBF32000 80022403
  v_add_f32     v1, 0x40466666, v1                      // 0000000000AC: 060202FF 40466666
  v_cvt_u32_f32  v1, v1                                 // 0000000000B4: 7E020F01
  v_add_i32     v0, vcc, 0x00000060, v1                 // 0000000000B8: 4A0002FF 00000060
  tbuffer_load_format_xyzw  v[0:3], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C0: EBF32000 80020000
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 0000000000C8: BF8C0F77
  v_mul_legacy_f32  v15, v11, v15                       // 0000000000CC: 0E1E1F0B
  v_mac_legacy_f32  v15, v10, v14                       // 0000000000D0: 0C1E1D0A
  s_load_dwordx4  s[8:11], s[2:3], 0x0c                 // 0000000000D4: C084030C
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 0000000000D8: BF8C0F76
  v_mul_legacy_f32  v14, v11, v19                       // 0000000000DC: 0E1C270B
  v_mac_legacy_f32  v15, v9, v13                        // 0000000000E0: 0C1E1B09
  v_mac_legacy_f32  v14, v10, v18                       // 0000000000E4: 0C1C250A
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000E8: BF8C0F74
  v_mul_legacy_f32  v13, v11, v23                       // 0000000000EC: 0E1A2F0B
  v_mac_legacy_f32  v15, v8, v12                        // 0000000000F0: 0C1E1908
  v_mac_legacy_f32  v14, v9, v17                        // 0000000000F4: 0C1C2309
  v_mac_legacy_f32  v13, v10, v22                       // 0000000000F8: 0C1A2D0A
  v_mul_legacy_f32  v12, v11, v27                       // 0000000000FC: 0E18370B
  v_mac_legacy_f32  v14, v8, v16                        // 000000000100: 0C1C2108
  v_mac_legacy_f32  v13, v9, v21                        // 000000000104: 0C1A2B09
  v_mac_legacy_f32  v12, v10, v26                       // 000000000108: 0C18350A
  v_mac_legacy_f32  v13, v8, v20                        // 00000000010C: 0C1A2908
  v_mac_legacy_f32  v12, v9, v25                        // 000000000110: 0C183309
  v_mac_legacy_f32  v12, v8, v24                        // 000000000114: 0C183108
  s_waitcnt     lgkmcnt(0)                              // 000000000118: BF8C007F
  buffer_store_dword  v15, v0, s[8:11], s4 offset:32 glc slc // 00000000011C: E0704020 04420F00
  buffer_store_dword  v14, v0, s[8:11], s4 offset:36 glc slc // 000000000124: E0704024 04420E00
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 00000000012C: BF8C0F75
  v_mul_legacy_f32  v14, v11, v31                       // 000000000130: 0E1C3F0B
  buffer_store_dword  v13, v0, s[8:11], s4 offset:40 glc slc // 000000000134: E0704028 04420D00
  v_mac_legacy_f32  v14, v10, v30                       // 00000000013C: 0C1C3D0A
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 000000000140: BF8C0F75
  v_mul_legacy_f32  v13, v11, v35                       // 000000000144: 0E1A470B
  buffer_store_dword  v12, v0, s[8:11], s4 offset:44 glc slc // 000000000148: E070402C 04420C00
  v_mac_legacy_f32  v14, v9, v29                        // 000000000150: 0C1C3B09
  v_mac_legacy_f32  v13, v10, v34                       // 000000000154: 0C1A450A
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 000000000158: BF8C0F75
  v_mul_legacy_f32  v12, v11, v39                       // 00000000015C: 0E184F0B
  buffer_store_dword  v4, v0, s[8:11], s4 glc slc       // 000000000160: E0704000 04420400
  v_mac_legacy_f32  v14, v8, v28                        // 000000000168: 0C1C3908
  v_mac_legacy_f32  v13, v9, v33                        // 00000000016C: 0C1A4309
  v_mac_legacy_f32  v12, v10, v38                       // 000000000170: 0C184D0A
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 000000000174: BF8C0F75
  v_mul_legacy_f32  v3, v11, v3                         // 000000000178: 0E06070B
  buffer_store_dword  v5, v0, s[8:11], s4 offset:4 glc slc // 00000000017C: E0704004 04420500
  v_mac_legacy_f32  v13, v8, v32                        // 000000000184: 0C1A4108
  v_mac_legacy_f32  v12, v9, v37                        // 000000000188: 0C184B09
  v_mac_legacy_f32  v3, v10, v2                         // 00000000018C: 0C06050A
  buffer_store_dword  v6, v0, s[8:11], s4 offset:8 glc slc // 000000000190: E0704008 04420600
  v_mac_legacy_f32  v12, v8, v36                        // 000000000198: 0C184908
  v_mac_legacy_f32  v3, v9, v1                          // 00000000019C: 0C060309
  buffer_store_dword  v7, v0, s[8:11], s4 offset:12 glc slc // 0000000001A0: E070400C 04420700
  v_mac_legacy_f32  v3, v8, v0                          // 0000000001A8: 0C060108
  buffer_store_dword  v14, v0, s[8:11], s4 offset:16 glc slc // 0000000001AC: E0704010 04420E00
  buffer_store_dword  v13, v0, s[8:11], s4 offset:20 glc slc // 0000000001B4: E0704014 04420D00
  buffer_store_dword  v12, v0, s[8:11], s4 offset:24 glc slc // 0000000001BC: E0704018 04420C00
  buffer_store_dword  v3, v0, s[8:11], s4 offset:28 glc slc // 0000000001C4: E070401C 04420300
  s_endpgm                                              // 0000000001CC: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[589], bundle is:[208] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedPosition3dTexTGTexTG.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] position, usageIdx  2, paramIdx 2, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0

codeLenInByte        = 416;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 44;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 12
; lsStride                  = 48

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_cvt_f32_u32  v0, v3                                 // 000000000008: 7E000D03
  v_add_f32     v0, 0x3dcccccd, v0                      // 00000000000C: 060000FF 3DCCCCCD
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000014: C0840300
  v_cvt_u32_f32  v0, v0                                 // 000000000018: 7E000F00
  v_lshlrev_b32  v0, 2, v0                              // 00000000001C: 34000082
  v_lshlrev_b32  v2, 2, v3                              // 000000000020: 34040682
  v_add_i32     v3, vcc, 1, v0                          // 000000000024: 4A060081
  v_add_i32     v12, vcc, 2, v0                         // 000000000028: 4A180082
  s_waitcnt     lgkmcnt(0)                              // 00000000002C: BF8C007F
  tbuffer_load_format_xyzw  v[20:23], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000030: EBF32000 80021403
  tbuffer_load_format_xyzw  v[16:19], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000038: EBF32000 80021000
  tbuffer_load_format_xyzw  v[24:27], v12, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 8002180C
  v_add_i32     v13, vcc, 3, v0                         // 000000000048: 4A1A0083
  tbuffer_load_format_xyzw  v[28:31], v13, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000004C: EBF32000 80021C0D
  v_cvt_f32_u32  v2, v2                                 // 000000000054: 7E040D02
  v_add_f32     v14, 0x3dcccccd, v2                     // 000000000058: 061C04FF 3DCCCCCD
  v_add_f32     v15, 0x3f8ccccd, v2                     // 000000000060: 061E04FF 3F8CCCCD
  v_cvt_u32_f32  v3, v14                                // 000000000068: 7E060F0E
  v_add_f32     v0, 0x40066666, v2                      // 00000000006C: 060004FF 40066666
  v_cvt_u32_f32  v14, v15                               // 000000000074: 7E1C0F0F
  v_add_i32     v3, vcc, 0x00000060, v3                 // 000000000078: 4A0606FF 00000060
  v_add_f32     v2, 0x40466666, v2                      // 000000000080: 060404FF 40466666
  v_cvt_u32_f32  v0, v0                                 // 000000000088: 7E000F00
  v_add_i32     v12, vcc, 0x00000060, v14               // 00000000008C: 4A181CFF 00000060
  v_cvt_u32_f32  v2, v2                                 // 000000000094: 7E040F02
  v_add_i32     v0, vcc, 0x00000060, v0                 // 000000000098: 4A0000FF 00000060
  v_add_i32     v2, vcc, 0x00000060, v2                 // 0000000000A0: 4A0404FF 00000060
  tbuffer_load_format_xyzw  v[36:39], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A8: EBF32000 80022400
  tbuffer_load_format_xyzw  v[40:43], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B0: EBF32000 80022802
  tbuffer_load_format_xyzw  v[32:35], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B8: EBF32000 80022003
  tbuffer_load_format_xyzw  v[12:15], v12, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C0: EBF32000 80020C0C
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 0000000000C8: BF8C0F76
  v_mul_legacy_f32  v0, v11, v19                        // 0000000000CC: 0E00270B
  v_mul_legacy_f32  v2, v11, v23                        // 0000000000D0: 0E042F0B
  v_mac_legacy_f32  v0, v10, v18                        // 0000000000D4: 0C00250A
  v_mac_legacy_f32  v2, v10, v22                        // 0000000000D8: 0C042D0A
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000DC: BF8C0F75
  v_mul_legacy_f32  v3, v11, v27                        // 0000000000E0: 0E06370B
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000E4: BF8C0F74
  v_mul_legacy_f32  v18, v11, v31                       // 0000000000E8: 0E243F0B
  v_mac_legacy_f32  v0, v9, v17                         // 0000000000EC: 0C002309
  v_mac_legacy_f32  v2, v9, v21                         // 0000000000F0: 0C042B09
  v_mac_legacy_f32  v3, v10, v26                        // 0000000000F4: 0C06350A
  v_mac_legacy_f32  v18, v10, v30                       // 0000000000F8: 0C243D0A
  s_mov_b32     m0, 0x00010000                          // 0000000000FC: BEFC03FF 00010000
  v_mac_legacy_f32  v0, v8, v16                         // 000000000104: 0C002108
  v_mac_legacy_f32  v2, v8, v20                         // 000000000108: 0C042908
  v_mac_legacy_f32  v3, v9, v25                         // 00000000010C: 0C063309
  v_mac_legacy_f32  v18, v9, v29                        // 000000000110: 0C243B09
  v_mul_lo_i32  v1, v1, 48                              // 000000000114: D2D60001 00016101
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 00000000011C: BF8C0F71
  v_mul_legacy_f32  v16, v11, v35                       // 000000000120: 0E20470B
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000124: BF8C0F70
  v_mul_legacy_f32  v15, v11, v15                       // 000000000128: 0E1E1F0B
  v_mac_legacy_f32  v3, v8, v24                         // 00000000012C: 0C063108
  v_mac_legacy_f32  v18, v8, v28                        // 000000000130: 0C243908
  ds_write2_b32  v1, v0, v2 offset0:8 offset1:9         // 000000000134: D8380908 00020001
  v_mac_legacy_f32  v16, v10, v34                       // 00000000013C: 0C20450A
  v_mac_legacy_f32  v15, v10, v14                       // 000000000140: 0C1E1D0A
  v_mul_legacy_f32  v0, v11, v39                        // 000000000144: 0E004F0B
  v_mul_legacy_f32  v2, v11, v43                        // 000000000148: 0E04570B
  ds_write2_b32  v1, v3, v18 offset0:10 offset1:11      // 00000000014C: D8380B0A 00120301
  v_mac_legacy_f32  v16, v9, v33                        // 000000000154: 0C204309
  v_mac_legacy_f32  v15, v9, v13                        // 000000000158: 0C1E1B09
  v_mac_legacy_f32  v0, v10, v38                        // 00000000015C: 0C004D0A
  v_mac_legacy_f32  v2, v10, v42                        // 000000000160: 0C04550A
  ds_write2_b32  v1, v4, v5 offset1:1                   // 000000000164: D8380100 00050401
  v_mac_legacy_f32  v16, v8, v32                        // 00000000016C: 0C204108
  v_mac_legacy_f32  v15, v8, v12                        // 000000000170: 0C1E1908
  v_mac_legacy_f32  v0, v9, v37                         // 000000000174: 0C004B09
  v_mac_legacy_f32  v2, v9, v41                         // 000000000178: 0C045309
  ds_write2_b32  v1, v6, v7 offset0:2 offset1:3         // 00000000017C: D8380302 00070601
  v_mac_legacy_f32  v0, v8, v36                         // 000000000184: 0C004908
  v_mac_legacy_f32  v2, v8, v40                         // 000000000188: 0C045108
  ds_write2_b32  v1, v16, v15 offset0:4 offset1:5       // 00000000018C: D8380504 000F1001
  ds_write2_b32  v1, v0, v2 offset0:6 offset1:7         // 000000000194: D8380706 00020001
  s_endpgm                                              // 00000000019C: BF810000
end


// Approximately 18 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VInstancedPosition3dTexTGTexTG[] =
{
     68,  88,  66,  67, 171, 241, 
     15, 251, 166, 126,  89,   2, 
    141,  24,  90, 254,  82,  77, 
    105, 214,   1,   0,   0,   0, 
    224,  15,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    188,   1,   0,   0,  52,   2, 
      0,   0, 192,   2,   0,   0, 
     68,  15,   0,   0,  82,  68, 
     69,  70, 128,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
     68,   1,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      2,   0,   0,   0, 128,   0, 
      0,   0,   0,  12,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 208,   0,   0,   0, 
      0,   0,   0,   0,   0,   6, 
      0,   0,   2,   0,   0,   0, 
    232,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
     12,   1,   0,   0,   0,   6, 
      0,   0,   0,   6,   0,   0, 
      2,   0,   0,   0,  32,   1, 
      0,   0,   0,   0,   0,   0, 
    255, 255, 255, 255,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 118, 102, 
    109, 117, 110, 105, 102, 111, 
    114, 109, 115,   0, 102, 108, 
    111,  97, 116,  52, 120,  52, 
      0, 171, 171, 171,   3,   0, 
      3,   0,   4,   0,   4,   0, 
     24,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    220,   0,   0,   0, 118, 102, 
    117, 110, 105, 102, 111, 114, 
    109, 115,   0, 102, 108, 111, 
     97, 116,  52,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  23,   1,   0,   0, 
     77, 105,  99, 114, 111, 115, 
    111, 102, 116,  32,  40,  82, 
     41,  32,  72,  76,  83,  76, 
     32,  83, 104,  97, 100, 101, 
    114,  32,  67, 111, 109, 112, 
    105, 108, 101, 114,  32,  70, 
    111, 114,  32,  68, 117, 114, 
     97, 110, 103, 111,  32,  57, 
     46,  51,  48,  46,  49,  50, 
     48,  57,  56,  46,  48,   0, 
     73,  83,  71,  78, 112,   0, 
      0,   0,   3,   0,   0,   0, 
      8,   0,   0,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,  15,   0,   0,  86,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,  15,   0,   0,  98,   0, 
      0,   0,   0,   0,   0,   0, 
      8,   0,   0,   0,   1,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   1,   0,   0,  67,  79, 
     76,  79,  82,   0,  83,  86, 
     95,  80, 111, 115, 105, 116, 
    105, 111, 110,   0,  83,  86, 
     95,  73, 110, 115, 116,  97, 
    110,  99, 101,  73,  68,   0, 
     79,  83,  71,  78, 132,   0, 
      0,   0,   4,   0,   0,   0, 
      8,   0,   0,   0, 104,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0, 110,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
      3,  12,   0,   0, 110,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     12,   3,   0,   0, 119,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
     15,   0,   0,   0,  67,  79, 
     76,  79,  82,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
    124,  12,   0,   0,  80,   0, 
      1,   0,  31,   3,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 173,   0,   0,   0, 
     80,   0,   1,   0, 168,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   8,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      1,   0,   0,   0,  96,   0, 
      0,   4,  18,  16,  16,   0, 
      2,   0,   0,   0,   8,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 101,   0,   0,   3, 
     50,  32,  16,   0,   1,   0, 
      0,   0, 101,   0,   0,   3, 
    194,  32,  16,   0,   1,   0, 
      0,   0, 103,   0,   0,   4, 
    242,  32,  16,   0,   2,   0, 
      0,   0,   1,   0,   0,   0, 
    104,   0,   0,   2,   1,   0, 
      0,   0,  54,   0,   0,   5, 
    242,  32,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  41,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,  16, 
     16,   0,   2,   0,   0,   0, 
      1,  64,   0,   0,   2,   0, 
      0,   0,  86,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,  10, 242,   0,  16,   0, 
      0,   0,   0,   0,   6,   0, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0, 205, 204, 
    204,  61, 205, 204, 140,  63, 
    102, 102,   6,  64, 102, 102, 
     70,  64,  28,   0,   0,   5, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,  10,  18,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   6,   0,   0, 
      0,   0,  96,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,  10, 
     34,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   6,   0,   0,   0,   0, 
     96,   0,   0,   0,  26,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,  10,  66,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   6, 
      0,   0,   0,   0,  96,   0, 
      0,   0,  42,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,  10, 130,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   6,   0,   0, 
      0,   0,  96,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  86,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,  16,  16,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
      1,  64,   0,   0, 205, 204, 
    204,  61,  28,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  41,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,   2,   0, 
      0,   0,  17,   0,   0,   9, 
     18,  32,  16,   0,   2,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,  10, 
     34,  32,  16,   0,   2,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   6,   0,   0,   0,   0, 
      1,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,  10,  66,  32, 
     16,   0,   2,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   6, 
      0,   0,   0,   0,   2,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,  10, 130,  32,  16,   0, 
      2,   0,   0,   0,  70,  30, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   6,   0,   0, 
      0,   0,   3,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 199,   0, 
      0,   0,  21,   0,   1,   0, 
     32,  81,  23,   0, 120,   1, 
    237, 152,  75,  79,  19,  81, 
     20, 199, 111, 239,  76,  79, 
    167, 157, 203,  12,  40,  42, 
      8,   8,  68, 140,  26,  99, 
    165,  60,  98, 124, 240,  48, 
    168,   4,  98, 226,   3, 116, 
     53,  11,  71, 218,  10,  90, 
     90, 108,  27, 211, 184, 168, 
     80,  89, 184,  32, 241,   3, 
    184,  97, 105, 252,  16, 194, 
      7,  64,  77, 220, 185,  55, 
    110,  92, 186,  97,  55, 254, 
     79, 103,  70, 137, 145, 181, 
     38, 206,  47, 249, 159,  51, 
    247, 117, 238, 157, 123, 238, 
    234, 220,  62,  34, 154,  76, 
    189, 125, 147, 100, 127, 247, 
     83, 246, 243, 166,  20,  34, 
    206,  13, 160, 179,   1,  43, 
    237, 108, 133,  24,  56, 204, 
     86, 136, 110,  54,  49,   8, 
    115,   7, 224,  20,  84,  69, 
    123,  18, 158, 199,  78,   5, 
    242, 153, 220, 126,  13,  75, 
     80,  26, 250, 128,  53, 179, 
    240, 227, 144,   9, 141,  66, 
    188, 185,   6, 133,  24, 108, 
     64, 130,  13, 224, 173, 246, 
    194, 253,  28, 107,  47, 225, 
     28, 142, 185,  55, 150, 232, 
    103, 243, 103, 102,  32,  62, 
    255, 126, 240, 217, 194, 179, 
    112, 204, 230,  37,   1, 254, 
    223, 127,  13, 254, 255,  48, 
     79,  12, 231,  99,  47,  22, 
     20, 222, 203, 151,  67, 108, 
    127, 221,  89, 123, 144, 215, 
     48, 151, 219, 208, 126, 120, 
     32, 124,  23,  33,  97,  27, 
    169,  69, 158, 111,  14,  82, 
    236, 213,  32, 161,  65, 216, 
    144,  48,  72, 120,  80, 132, 
      7,  64,  72,  28, 225,  66, 
      9,  23,  73,  41,   8, 201, 
     34, 108,  72,  45,  16,  14, 
     72,  54, 212,  10, 181,  65, 
      7, 160, 131,  16, 254, 137, 
    112,  94, 194,  25,   9, 239, 
    149,  58, 160,  78, 232,  40, 
    212,   5, 225, 193,  81,  15, 
    116,  12, 234,  13, 207, 224, 
     67, 177, 223,  46, 225,  63, 
    129, 239,  32, 124, 183, 252, 
     29, 230, 135, 243,  31, 126, 
     71,  68,  68,  68,  68,  68, 
     68,  68,  68,  68,  68,  68, 
     68,  68,  68,  68, 252,  77, 
    100, 127, 227, 221, 138, 189, 
    177, 213,  32,  49,  34,  90, 
     68, 221,  19, 146, 222, 239, 
    236, 140, 217,  82, 236, 234, 
    113,  74, 120,  66,  71, 123, 
     99,  34, 102, 203, 186, 141, 
    121, 158,  48,  40, 159, 167, 
     73, 105, 235, 117,  79, 202, 
    217, 251,  28,  68,  91, 223, 
    246, 132,  64, 255, 245,  73, 
    221,  54, 234, 158, 174, 251, 
    253,  54, 226,  25,  70, 243, 
     91, 107,  33, 196,  22, 205, 
    111, 143, 168, 185, 135, 102, 
     83, 189,  65,  52, 242,  92, 
    108, 108, 137, 190, 239, 223, 
     98,  74, 174, 178, 151, 173, 
    190,  23,  29, 114, 117, 141, 
     82, 179,  13,  82, 179, 220, 
    214, 219, 253, 254, 120, 183, 
    239, 169,  79, 174, 190,  32, 
    171,  57, 166,   9, 191,  47, 
    161, 203, 213,  39,  56, 167, 
    153,  32,  43,  21,  39, 149, 
    212,  72,  25,  49,  82, 230, 
    132, 176, 204, 105, 105, 241, 
    191, 154, 182, 110, 165, 198, 
    132,  74,  93, 147,  42, 213, 
    162, 171, 228,  37, 161, 146, 
     83,  82,  37,  77,  93,  25, 
     23, 132,  50, 174,  72, 101, 
     36, 117, 245, 209,  16, 187, 
    154, 136,  73, 254, 111, 179, 
     23, 235,  79,  74, 203,  60, 
    167,  91, 230, 121, 196, 238, 
    193, 250,  19,  88, 127,  86, 
     87, 169,  81, 236, 211, 133, 
     24, 199,  17, 227,  12, 226, 
     13,  99, 207,  78, 196, 233, 
     71, 156, 211, 136, 153,  33, 
    213, 139, 251,  68,  40,  77, 
    136, 181, 173, 160,  36, 216, 
    172,  23, 177,  58,  33, 174, 
    158, 133, 237,  86, 136,   9, 
    219, 172,  16,  29,  83, 111, 
      4,  53, 196, 203, 129, 231, 
    249,  92, 107, 178, 126,  86, 
     25, 125,  10, 193, 120,  54, 
    240,  92, 167, 226, 154, 109, 
    231,  35, 179, 228, 106, 109, 
    249, 151,  65, 255, 122, 224, 
     57,  70,  10,  26, 106, 140, 
    127,  85,  65, 189, 122,  51, 
     24,  43,  64, 188,  62, 127, 
    209, 121, 224,  22, 220, 103, 
    149, 116, 181,  84,  46,  61, 
     78,  87, 170, 229, 156, 187, 
     60, 228, 100, 115,  79, 157, 
     92, 173, 154,  43,  23, 221, 
    130, 243,  48,  95,  27, 113, 
    230, 202,  11, 206, 157,  92, 
     49, 155,  43,  59,  87, 135, 
    175, 102, 106, 206, 220, 162, 
    139,  70, 197, 185,  55,  83, 
    172,  84, 221, 226,  66,  46, 
    123, 171,  84,  89, 170,  46, 
    149, 138, 195, 217, 249,  92, 
    109, 126, 186, 105, 210, 249, 
     66,  38, 147,  94,  44,  84, 
    120,  71, 159, 129, 224,  44, 
     92,  43, 231, 122, 244, 178, 
    187,  84,  20,  63,   0,   7, 
    229, 150,  73,   0,  53,  16, 
      0,   0, 217,   0,   0,   0, 
     21,   0,   1,   0,  16, 189, 
     23,   0, 120,   1, 237, 152, 
    207, 110,  27,  85,  20, 198, 
    143, 175,  39,  39, 182, 115, 
     51,  78,  33, 165,  19, 119, 
    234,  38, 106,  17,  69, 128, 
     73, 154,  84,   8,  80, 169, 
    235,  22, 170,   6, 161,  86, 
    109, 128, 205,  44,  48, 181, 
     77,   3, 174,  29, 217, 110, 
     49,  44, 140, 107,  16, 171, 
     72,  84,  60,  65, 151, 125, 
    132, 110,  74, 242,   0,  69, 
    170, 186,   2, 137,  69,  87, 
    108, 216,  32, 209,  29,  11, 
    243, 125, 246,  76,  18, 241, 
    103, 221,  10, 205,  79, 250, 
    238, 153, 115, 238, 248, 220, 
    115, 239,  25, 111, 238, 189, 
      3,  50, 226, 139,  63, 111, 
    255,  66, 251, 254, 195, 202, 
    207, 183, 141, 200,   4,  29, 
    128, 199,  17,  27, 179,  28, 
     69, 110,  61, 199,  81, 196, 
    227, 144, 128, 240, 194,  49, 
     24,  11,  61, 128,  95, 132, 
    229,  28,  99, 212, 152, 226, 
    246, 247,  24, 211, 208,  34, 
    244, 109,  82, 100,  13, 246, 
     12, 196, 180,  39,  32,  23, 
    218,  75,  10,  98, 206,  41, 
    136, 112, 169, 189,  76,  66, 
      5, 104,  47,  81, 173, 204, 
     57,  13, 237, 176, 192, 225, 
    223, 249,  16, 218, 173, 243, 
    159, 176,  54, 230, 139, 136, 
    234, 100, 109,  79,  27,  60, 
    163, 168,  79, 132, 253, 216, 
     11, 107, 119,  32,  82,  12, 
    251,  24, 189, 210,  15, 125, 
    158,   5, 247, 182,  13, 253, 
     23,  67,  16, 229,  33, 124, 
     94, 129,   8, 123, 160, 114, 
     97,  81,  19, 223,  45,  42, 
     28,  69, 175,  21,  47,  40, 
     62,  40,  85,   8, 141,  83, 
     52,  87, 241,  49, 104,   6, 
     66, 131,  21,  11,  42,  26, 
    166,  40,  80, 179, 208,  12, 
    180,  15, 122,   6, 122,  22, 
    194, 158, 116,  63, 132,  26, 
     21, 223, 171, 226,   3, 211, 
     57,  40,   7,  29, 132, 124, 
    232,  16, 148, 135,  14, 139, 
     96,  73,  20, 194,  74, 224, 
    115,   0, 154, 248, 219,  97, 
    252, 207, 225,  25, 240,  63, 
     20, 193,  30,  17, 198, 217, 
     95,  42,  38,  38,  38,  38, 
     38,  38,  38,  38,  38,  38, 
     38,  38,  38,  38,  38, 230, 
     73,  98,  22,   6,  63, 108, 
    100,  55, 183, 146, 211, 210, 
    147, 228,  55, 219,  67,  17, 
    253, 241, 254, 253, 147, 146, 
    149, 222,  64, 100, 229,  43, 
    217, 220, 146, 249,  63, 126, 
     19, 107, 250,  55, 197, 172, 
     14, 196,  89, 253,  90, 100, 
    149, 177, 196, 140, 233, 143, 
    230, 188, 177,  53, 179, 166, 
     63,  80, 179, 146, 152,  54, 
    189, 161, 217, 205,  51,  52, 
     14, 158,  55,  79,  33, 247, 
    234,  71,  88, 115, 104,  84, 
    107,  53,  45, 154, 172, 211, 
     75, 102, 181,  55, 116, 156, 
     81, 124, 148, 203,  55, 253, 
    161, 234, 142, 111, 230, 199, 
    185, 147,  71,  17,  55,   6, 
    191, 123, 167, 152, 200, 142, 
    242, 239, 254,  70,  76, 255, 
    115, 236,  97, 234, 112, 222, 
    205,  28, 202,  91, 139, 125, 
    220, 160, 255, 130, 239, 166, 
     15, 230, 109, 230, 121, 223, 
    118, 232, 191, 154, 115,  83, 
    115, 121, 155,  62, 226, 219, 
    204,  43,  57,  59, 245, 154, 
    231, 166,  22, 124, 155, 126, 
     41, 103,  51,  39,  60, 155, 
    122,  49, 103, 211, 203, 176, 
     75, 158, 229, 190, 231, 139, 
     27, 143,  36,  91, 114, 142, 
    210, 186,  37, 231,  58, 115, 
    156, 242, 221,  99, 244, 167, 
     75,  78, 230, 164, 111,  71, 
    177, 115,  57, 247, 101, 198, 
    108, 201,  73, 191, 137, 220, 
    111, 231, 198, 241,  11, 158, 
     43, 140,  59,  37,  39, 245, 
     58, 214,  57, 131, 117, 222, 
    243, 198, 115, 147, 234,  58, 
    156, 155, 192, 220, 105, 172, 
    251, 174, 103,  51,  19, 106, 
     83, 140,  41,  98, 231,  61, 
    155,  78, 170, 181, 244,  39, 
    225,  39, 212, 206, 240,  25, 
    117, 204, 210,  98, 125, 143, 
     22, 107, 250, 180, 201, 146, 
     35, 114, 115, 107,  63, 207, 
      4, 240,  86, 142, 154, 131, 
    120,  35,  23, 249, 188,  51, 
     38, 145,  63,   3, 145, 200, 
    167,  34, 144,  48, 113,  55, 
    188, 175, 188,  19,  90, 190, 
    143, 184, 184,  59,  55, 154, 
     99, 126,  10, 231,  31, 132, 
    150, 119,  98, 188,  83, 158, 
    251, 116, 170,  89,  78, 238, 
    171,  61,  14, 227, 191, 135, 
    150,  57,  50, 208, 241, 193, 
     91, 191, 118, 195, 187, 113, 
     27, 218,  58, 196, 223, 215, 
    222,   8,  62,  46, 215, 203, 
     95, 182,  11, 157, 102, 171, 
    249,  89, 161, 221, 105,  85, 
    203, 215, 142,   7, 149, 234, 
    141, 160, 218, 237,  84,  91, 
    141, 114,  61, 248, 164, 214, 
     93,   9,  46, 183, 174,   4, 
    151, 170, 141,  74, 181,  21, 
    156,  93,  62, 187, 212,  13, 
     46,  95,  45, 195, 105,   7, 
     31, 156, 111, 180,  59, 229, 
    198, 149, 106, 229,  98, 179, 
    189, 222,  89, 111,  54, 150, 
     43, 107, 213, 238, 218, 185, 
    209,  80, 168, 213, 151, 150, 
     10,  87, 235, 109, 174,  56, 
    230,  86,  88,   3, 239, 229, 
    121, 247, 125, 173, 188, 222, 
    144, 191,   0,  51,  70, 188, 
    102,   0,  53,  16,   0,   0, 
    210,   0,   0,   0,  21,   0, 
      1,   0,   0, 125,  23,   0, 
    120,   1, 237, 152,  75, 111, 
     19,  73,  16, 199, 203,  51, 
    157, 202, 204, 184,  51,  54, 
    239,   4, 140, 113, 132,  17, 
     65, 128,  73,  72, 120, 236, 
     34, 192, 171, 229, 161,   4, 
    161,   4, 194, 227,  50,   7, 
    134, 216,  38,   1,  99, 131, 
    109, 144, 133,  68,  54, 120, 
    247,  24,   9,  36,  46,  28, 
    249,   8,  28,  56, 147, 156, 
    246, 176,  10,  28,  56,  32, 
    248,   2, 123, 225, 178, 210, 
     94,  87,  50, 255, 178, 103, 
     32, 172, 224,  12,  66, 243, 
    147, 254,  93,  83, 213, 221, 
    211, 213, 143,  83, 221, 223, 
     68,  29, 254, 121,  53, 254, 
    167, 216, 139, 175,  11, 239, 
    158,  26,  68,  61, 226, 172, 
    226, 214, 122, 105, 137, 166, 
     54,  74,  75, 212, 113,  99, 
     16, 198, 238, 129, 209, 208, 
     83, 248, 121,  88, 233,  27, 
     10, 212,  37, 191, 252,  24, 
     45,  67,   7, 161, 191,  48, 
    103,  28,  86, 198,  38,  32, 
    137, 197,  33,  65, 198,   8, 
    150,  52,  32, 180, 152, 242, 
     25, 189,  80,  14, 146,  20, 
     66, 194, 111,  23,  50, 161, 
    143,  12,  74, 243, 101,  38, 
     33, 201, 255, 107,  72, 110, 
    146,  67, 152,  87, 152, 167, 
    236, 247, 123,  67, 246,  31, 
    222, 147,  32, 247, 177, 154, 
    213, 231, 146,  12, 238,  49, 
     28, 146,  15, 252, 240,  46, 
    151, 161, 175, 209,   6,  74, 
     62,  86,  17, 250, 114,  79, 
     76, 147, 195,  28, 123,  56, 
    204, 112,  24,  11,  50,  58, 
     25,  15, 138, 113, 136, 140, 
    139,  99,  28,  40, 219, 144, 
      3, 225,  64,  25,  11, 114, 
     31, 132,   4,  25,  15, 130, 
    147, 208,  26, 104,  45, 180, 
     14, 194, 158, 120,   3, 132, 
     28,  25, 239, 149, 251, 161, 
      1, 104,  51, 180,   5,  74, 
     65,  91, 161,  52, 180,  45, 
    216, 163,  33, 153, 192, 151, 
      6, 112, 236, 127, 135, 241, 
    131,  35, 103,  32, 239,  54, 
     36, 188,  31, 137, 203, 253, 
     10, 195, 210,  68,  68,  68, 
     68,  68,  68,  68,  68,  68, 
     68,  68,  68,  68,  68,  68, 
     68, 124,  35, 140, 193, 214, 
    139,  91, 137, 197,  37, 179, 
    143, 230, 219,  68, 252, 114, 
    101, 229,  40, 153, 127,  44, 
     83, 130, 230,  91,  68,  99, 
     45,  86,  99,  15, 136,  39, 
     90, 212,  63, 241,  27,  45, 
     46,  81, 230, 223, 247, 230, 
    122,  99,  65,  44,  37, 187, 
     86, 247,  27,  11, 191, 211, 
    230,   9, 249, 238,  75,  25, 
     11,  70, 159, 154, 111, 171, 
     84, 231,  95, 109, 149, 134, 
     93,  60, 238,  38,  24,  49, 
    226,  82, 137, 243, 137,  68, 
    106, 190, 205,  60, 113,   5, 
    235, 183, 149,  66, 236,  84, 
     94, 214, 107, 167, 250,  59, 
     49,  35, 129, 249,  68,  97, 
    127, 199, 202, 191,  41, 219, 
     93, 207,  24, 234,  90,  51, 
    211, 181,  90,  27,  11, 119, 
    177, 135, 248,  78, 114, 227, 
    251, 148, 235, 236,  32, 237, 
    236,  85, 250, 142, 196,  14, 
    177, 219,  16, 123,  60, 235, 
    218, 219,  73, 219, 187, 149, 
    118,  14, 176, 118, 142, 102, 
    117, 219, 252, 239, 133,  84, 
    230, 172,  65, 210, 214,  46, 
    165, 237,  81, 214, 246, 145, 
    172, 142, 209, 155, 215,  49, 
     63,  70, 183, 101, 222, 233, 
    140,  43, 231,  19, 223, 150, 
    118, 173,  17, 214, 214,  79, 
     89, 109, 217, 135, 223, 198, 
    200,  32, 231, 100,  70,  59, 
     91, 211,  58,  62, 137, 117, 
     47,  99, 221,  56, 226, 230, 
     90, 178, 127, 205, 104, 123, 
     75,  90,  59, 103, 145, 199, 
     69, 165,  41, 134, 184, 234, 
     33, 235, 151, 140, 182,   6, 
    210, 218,  62, 131,  60, 166, 
    149,  54,  76, 196, 185, 151, 
    172, 113, 172, 127,  78, 105, 
    213,   3,  63, 153,  32, 238, 
    133, 237,  84, 248,  30,  44, 
    109,  64,  43, 136,  39,  26, 
    128, 164, 194,  22, 250,  73, 
     72,   8, 125,  81, 136, 194, 
    208, 102,  80, 111, 156,  13, 
    172, 140, 151,  26, 149, 219, 
    249, 203,  39, 158,   4, 253, 
    143,   2,  43,  53,  45, 169, 
    193,  14,  92, 143,  87, 125, 
    115,  77, 233, 121,  16, 127, 
     22,  88, 249, 135,   3, 237, 
    111,  29, 251, 251, 112,  80, 
    219,  94,   9, 250, 202, 144, 
    204,  47, 253, 236,  93, 245, 
    203, 254, 189, 122, 174,  81, 
    173,  85, 111, 228, 234, 141, 
     90, 209, 191, 185, 223,  43, 
     20, 239, 122, 197, 102, 163, 
     88, 171, 248, 101, 239,  90, 
    169,  57, 230,  77, 215, 102, 
    188, 243, 197,  74, 161,  88, 
    243,  78, 140, 158,  24, 105, 
    122, 211, 179,  62, 156, 186, 
    119, 105, 188,  82, 111, 248, 
    149, 153,  98,  97, 170,  90, 
    159, 107, 204,  85,  43, 163, 
    133,  11, 197, 230, 133, 211, 
    157,  38,  87,  42, 143, 140, 
    228, 102, 203, 117,  89, 177, 
    203,  84, 144, 139, 212, 213, 
    165, 118, 125, 211, 159, 171, 
    208,   7, 175, 126, 168,  39, 
      0,   0,  83,  84,  65,  84, 
    148,   0,   0,   0,  18,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   7,   0, 
      0,   0,  10,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   4,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0
};
