#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler_tex                       sampler      NA          NA    0        1
// tex                               texture  float4          2d    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[82]
// Embedded Data:
//  0x00000052 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000004d - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v0.xy
dcl_output o0.xyzw
dcl_temps 1
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v0.xyxx, t0.xyzw, s0
add r0.xyz, r0.xyzx, l(-0.501961, -0.000000, -0.501961, 0.000000)
mad r0.w, -r0.x, l(0.186593), r0.y
mad_sat o0.y, -r0.z, l(0.466296), r0.w
mad_sat o0.xz, r0.zzxz, l(1.568648, 0.000000, 1.848352, 0.000000), r0.yyyy
mov o0.w, l(1.000000)
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[82], bundle is:[153] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\FYUY2Mul.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask  3, param0, paramSlot 0, DefaultVal={0,0,0,0}

codeLenInByte        = 160;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0:1]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_RESOURCE, 0, offset 0:7 dwords
;  extUserElements 1[1] = IMM_SAMPLER, 0, offset 8:11 dwords
NumVgprs             = 6;
NumSgprs             = 14;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000000

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000001
SPIC:NUM_INTERP             = 1
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[12:13], exec                          // 000000000000: BE8C047E
  s_wqm_b64     exec, exec                              // 000000000004: BEFE0A7E
  s_mov_b32     m0, s2                                  // 000000000008: BEFC0302
  s_load_dwordx8  s[4:11], s[0:1], 0x00                 // 00000000000C: C0C20100
  s_load_dwordx4  s[0:3], s[0:1], 0x08                  // 000000000010: C0800108
  v_interp_p1_f32  v2, v0, attr0.x                      // 000000000014: C8080000
  v_interp_p1_f32  v3, v0, attr0.y                      // 000000000018: C80C0100
  v_interp_p2_f32  v2, v1, attr0.x                      // 00000000001C: C8090001
  v_interp_p2_f32  v3, v1, attr0.y                      // 000000000020: C80D0101
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[0:3], v[2:3], s[4:11], s[0:3] dmask:0x7 // 000000000028: F0800700 00010002
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000030: BF8C0F70
  v_add_f32     v0, 0xbf008084, v0                      // 000000000034: 060000FF BF008084
  s_mov_b32     s0, 0x3e3f123c                          // 00000000003C: BE8003FF 3E3F123C
  v_mad_legacy_f32  v3, -v0, s0, v1                     // 000000000044: D2800003 24040100
  v_add_f32     v2, 0xbf008084, v2                      // 00000000004C: 060404FF BF008084
  s_mov_b32     s0, 0x3eeebe59                          // 000000000054: BE8003FF 3EEEBE59
  s_mov_b32     s1, 0x3fc8c975                          // 00000000005C: BE8103FF 3FC8C975
  v_mad_legacy_f32  v3, -v2, s0, v3 clamp               // 000000000064: D2800803 240C0102
  s_mov_b32     s2, 0x3fec96cc                          // 00000000006C: BE8203FF 3FEC96CC
  v_mad_legacy_f32  v2, v2, s1, v1 clamp                // 000000000074: D2800802 04040302
  v_mad_legacy_f32  v1, v0, s2, v1 clamp                // 00000000007C: D2800801 04040500
  v_mov_b32     v0, 1.0                                 // 000000000084: 7E0002F2
  s_mov_b64     exec, s[12:13]                          // 000000000088: BEFE040C
  v_cvt_pkrtz_f16_f32  v2, v2, v3                       // 00000000008C: 5E040702
  v_cvt_pkrtz_f16_f32  v0, v1, v0                       // 000000000090: 5E000101
  exp           mrt0, v2, v2, v0, v0 compr vm           // 000000000094: F800140F 00000002
  s_endpgm                                              // 00000000009C: BF810000
end


// Approximately 7 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_FYUY2Mul[] =
{
     68,  88,  66,  67,  79,   3, 
      5, 186,  70,  32,  64, 134, 
     49, 221, 183,  38, 147, 177, 
     69,  97,   1,   0,   0,   0, 
    196,   5,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
      4,   1,   0,   0,  56,   1, 
      0,   0, 108,   1,   0,   0, 
     40,   5,   0,   0,  82,  68, 
     69,  70, 200,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    255, 255,   0, 129,   0,   0, 
    140,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
    124,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   0,   0,   5,   0, 
      0,   0,   4,   0,   0,   0, 
    255, 255, 255, 255,   0,   0, 
      0,   0,   1,   0,   0,   0, 
     13,   0,   0,   0, 115,  97, 
    109, 112, 108, 101, 114,  95, 
    116, 101, 120,   0, 116, 101, 
    120,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
     44,   0,   0,   0,   1,   0, 
      0,   0,   8,   0,   0,   0, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,   3,   0,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0, 171, 171, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88, 180,   3,   0,   0, 
     80,   0,   0,   0, 237,   0, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0,  82,   0, 
      0,   0,  80,   0,   0,   0, 
     77,   0,   0,   0, 106,   8, 
      0,   1,  90,   0,   0,   3, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  88,  24,   0,   4, 
      0, 112,  16,   0,   0,   0, 
      0,   0,  85,  85,   0,   0, 
     98,  16,   0,   3,  50,  16, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    104,   0,   0,   2,   1,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     70, 126,  16,   0,   0,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,  10, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    132, 128,   0, 191,   0,   0, 
      0,   0,  50,   0,   0,  10, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
     60,  18,  63,  62,  26,   0, 
     16,   0,   0,   0,   0,   0, 
     50,  32,   0,  10,  34,  32, 
     16,   0,   0,   0,   0,   0, 
     42,   0,  16, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,  89, 190, 
    238,  62,  58,   0,  16,   0, 
      0,   0,   0,   0,  50,  32, 
      0,  12,  82,  32,  16,   0, 
      0,   0,   0,   0, 166,   8, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0, 117, 201, 
    200,  63,   0,   0,   0,   0, 
    204, 150, 236,  63,   0,   0, 
      0,   0,  86,   5,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   5, 130,  32,  16,   0, 
      0,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 155,   0,   0,   0, 
     21,   0,   1,   0,  41,  95, 
     10,   0, 120,   1, 237,  86, 
    191, 107,  83,  81,  20,  62, 
    247, 189, 219,  36, 173, 105, 
     83,  68, 164, 106,  55,  43, 
    116,  10,  36, 118,  18, 105, 
     58,  20, 237, 226,  98,  81, 
     72, 120, 212, 188, 152, 196, 
     74,  95, 211, 146,  31,  18, 
     28, 226, 171,  56,  56, 100, 
    200, 228, 170, 163, 131,  46, 
     46, 110,  47,  81,  28,  82, 
    112, 234, 224,  31,  32, 142, 
     34,  42,  14,  14,  98,  60, 
    223, 123, 247, 166,  15, 177, 
     91,  64, 193, 124, 240, 157, 
    243, 190, 251, 227, 188, 243, 
    238, 121, 220, 123, 111,  76, 
    145, 143, 111, 239,  94, 190, 
    128, 255, 226,  61, 127, 188, 
     36, 136,  38, 248, 153, 157, 
    239, 129, 102,  12, 150, 104, 
    109,  18, 150, 104,  17,   6, 
      3,  12, 162,   8, 187,  25, 
    230,  19, 230,  10,  19, 125, 
    154,   1,  86, 122,  13, 182, 
    179,  76, 132, 121, 207, 243, 
    214, 216, 159, 100,  98, 238, 
    180,  34, 194,   1, 218,   3, 
     38,  12,  67, 189, 126,   8, 
    140, 145, 138,   0,  60, 167, 
    226,   3,  62,  28, 131, 206, 
    193, 252,  25, 243,  76, 228, 
    112,  20, 126, 207,  11,  26, 
    192, 247, 254, 109,   4, 121, 
    133, 237,  97, 157,   0, 212, 
     35,  12, 228, 172, 199, 205, 
    169,  58, 234,  53,  91,  84, 
     26, 107, 129, 113,  61, 230, 
     81,  24,  48, 226, 120,   8, 
     65, 107, 196, 143,  12, 171, 
    246, 127,  66, 255, 147,  88, 
     11, 172,  47, 254, 251,   4, 
     83,   3, 253, 103, 153,  68, 
    110,  23, 236, 204, 209, 119, 
     40, 173,   5, 235, 160,  46, 
    129,  54, 161, 253,  37,  13, 
    105,  86,  70,  84, 110,   8, 
     65,  27, 137, 249, 161, 182, 
     88,  91,  33, 157,  99, 157, 
     11, 233,  60, 235, 124,  72, 
     23,  88,  23, 180, 214, 241, 
     19, 254, 251, 132,  95, 103, 
    110, 108, 253, 203,  28, 231, 
     56,  26, 142, 115,  28,  13, 
    199,  57, 142, 140,  62,  90, 
    178, 237, 181, 166, 126, 122, 
    134, 249, 195,  35, 241, 186, 
     23,  19,  46,  31,  77, 177, 
     62, 137, 120,  95, 208, 100, 
     95, 136, 233, 254,  61, 106, 
    119,  41, 234, 126,  54, 120, 
    199, 221,  77, 180, 187, 252, 
    113, 145,   7,  46, 117,   7, 
    166, 235,  93,  60, 158,  89, 
     54, 201,  61,  32,  33,  23, 
      6,  82,  14, 219, 179, 222, 
    167, 229, 129, 185, 231,  53, 
    246, 251,  25,  51, 230,  30, 
     24,  34, 190,  48,  48, 239, 
    123, 111,  31, 125, 204,  24, 
    208, 166, 148, 130,  61,  77, 
     72, 249, 213, 160,  86,  92, 
    114,  14, 122, 191,  61, 161, 
    247, 203, 189, 238,  41, 182, 
    216, 231, 129, 160, 237,  16, 
    124,  20, 243, 240,   0,  56, 
    150, 121, 223,  23, 187, 234, 
    156, 205,  43, 143, 179,   1, 
    231, 193, 204,  48,  74, 128, 
    142, 234, 127, 168,  60, 230, 
     31,  99, 238, 231,  26, 157, 
    226, 229, 206, 135, 103, 170, 
    253, 169, 242, 136, 129, 171, 
    220, 236, 171,  51, 242, 180, 
    186, 211, 189,  81, 125, 215, 
    153, 152,  95, 190,  96,  21, 
    108, 199, 190,  91,  75, 214, 
    119, 170,  59,  91, 201,  90, 
    189,  90, 178, 183, 211,  86, 
    177, 116, 199,  42,  53, 235, 
    165, 106, 197, 118, 172,  91, 
    229, 230, 146, 181,  94, 189, 
    105,  93,  45,  85, 138, 165, 
    170, 181, 122, 126,  53, 213, 
    180, 214,  55, 109,  22,  53, 
    235,  82, 246,  90,  54, 125, 
    165, 225,  36, 203,  78,  42, 
    149, 220, 116, 106,  14, 199, 
     13, 144,  86, 111, 197, 141, 
     49, 202, 220, 182, 111,  87, 
    232,  23, 229, 236,  52, 231, 
     83,  84,  65,  84, 148,   0, 
      0,   0,   7,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0
};
