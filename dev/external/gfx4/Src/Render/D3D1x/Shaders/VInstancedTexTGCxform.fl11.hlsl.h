#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4 vfuniforms[144];            // Offset:    0 Size:  2304
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// SV_InstanceID            0   x           1   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xy          2     NONE   float   xy  
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[165]
// Embedded Data:
//  0x000000a5 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000a0 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[144], dynamicIndexed
dcl_input v0.xyzw
dcl_input_sgv v1.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output_siv o3.xyzw, position
dcl_temps 1
imul null, r0.x, v1.x, l(6)
imad r0.y, v1.x, l(6), l(1)
utof r0.xy, r0.xyxx
add r0.xy, r0.xyxx, l(0.100000, 0.100000, 0.000000, 0.000000)
ftou r0.xy, r0.xyxx
mov o1.xyzw, cb0[r0.y + 0].xyzw
mov o0.xyzw, cb0[r0.x + 0].xyzw
imad r0.xyzw, v1.xxxx, l(6, 6, 6, 6), l(2, 2, 4, 4)
utof r0.xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, l(0.100000, 1.100000, 0.100000, 1.100000)
ftou r0.xyzw, r0.xyzw
dp4 o2.x, v0.xyzw, cb0[r0.z + 0].xyzw
dp4 o2.y, v0.xyzw, cb0[r0.w + 0].xyzw
dp4 o3.x, v0.xyzw, cb0[r0.x + 0].xyzw
dp4 o3.y, v0.xyzw, cb0[r0.y + 0].xyzw
mov o3.zw, l(0,0,0,1.000000)
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[165], bundle is:[185] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [2] generic, usageIdx  2, paramIdx 2, paramSlot 0

codeLenInByte        = 300;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 30;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000004
SVOC:VS_EXPORT_COUNT        = 2
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_mul_lo_i32  v0, v3, 6                               // 000000000008: D2D60000 00010D03
  v_add_i32     v1, vcc, 2, v0                          // 000000000010: 4A020082
  v_cvt_f32_u32  v1, v1                                 // 000000000014: 7E020D01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v8, 0x3dcccccd, v1                      // 00000000001C: 061002FF 3DCCCCCD
  v_add_f32     v1, 0x3f8ccccd, v1                      // 000000000024: 060202FF 3F8CCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000002C: 7E020F01
  v_add_i32     v2, vcc, 4, v0                          // 000000000030: 4A040084
  v_cvt_f32_u32  v2, v2                                 // 000000000034: 7E040D02
  v_add_i32     v0, vcc, 1, v0                          // 000000000038: 4A000081
  s_waitcnt     lgkmcnt(0)                              // 00000000003C: BF8C007F
  tbuffer_load_format_xyzw  v[14:17], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 80020E01
  v_add_f32     v9, 0x3dcccccd, v2                      // 000000000048: 061204FF 3DCCCCCD
  v_cvt_f32_u32  v0, v0                                 // 000000000050: 7E000D00
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000054: 060404FF 3F8CCCCD
  v_add_f32     v0, 0x3dcccccd, v0                      // 00000000005C: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v2, v2                                 // 000000000064: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 000000000068: 7E000F00
  tbuffer_load_format_xyzw  v[22:25], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000006C: EBF32000 80021602
  tbuffer_load_format_xyzw  v[26:29], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000074: EBF32000 80021A00
  v_cvt_u32_f32  v8, v8                                 // 00000000007C: 7E100F08
  v_cvt_u32_f32  v9, v9                                 // 000000000080: 7E120F09
  tbuffer_load_format_xyzw  v[10:13], v8, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000084: EBF32000 80020A08
  v_mul_lo_i32  v3, v3, 6                               // 00000000008C: D2D60003 00010D03
  tbuffer_load_format_xyzw  v[18:21], v9, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000094: EBF32000 80021209
  v_cvt_f32_u32  v1, v3                                 // 00000000009C: 7E020D03
  v_add_f32     v1, 0x3dcccccd, v1                      // 0000000000A0: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v1, v1                                 // 0000000000A8: 7E020F01
  tbuffer_load_format_xyzw  v[0:3], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80020001
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 0000000000B4: BF8C0F72
  v_mul_legacy_f32  v8, v7, v13                         // 0000000000B8: 0E101B07
  v_mac_legacy_f32  v8, v6, v12                         // 0000000000BC: 0C101906
  v_mul_legacy_f32  v9, v7, v17                         // 0000000000C0: 0E122307
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 0000000000C4: BF8C0F71
  v_mul_legacy_f32  v12, v7, v21                        // 0000000000C8: 0E182B07
  v_mul_legacy_f32  v7, v7, v25                         // 0000000000CC: 0E0E3307
  v_mac_legacy_f32  v9, v6, v16                         // 0000000000D0: 0C122106
  v_mac_legacy_f32  v8, v5, v11                         // 0000000000D4: 0C101705
  v_mac_legacy_f32  v12, v6, v20                        // 0000000000D8: 0C182906
  v_mac_legacy_f32  v7, v6, v24                         // 0000000000DC: 0C0E3106
  v_mac_legacy_f32  v9, v5, v15                         // 0000000000E0: 0C121F05
  v_mac_legacy_f32  v8, v4, v10                         // 0000000000E4: 0C101504
  v_mac_legacy_f32  v12, v5, v19                        // 0000000000E8: 0C182705
  v_mac_legacy_f32  v7, v5, v23                         // 0000000000EC: 0C0E2F05
  v_mac_legacy_f32  v9, v4, v14                         // 0000000000F0: 0C121D04
  v_mov_b32     v6, 0                                   // 0000000000F4: 7E0C0280
  v_mov_b32     v10, 1.0                                // 0000000000F8: 7E1402F2
  v_mac_legacy_f32  v12, v4, v18                        // 0000000000FC: 0C182504
  v_mac_legacy_f32  v7, v4, v22                         // 000000000100: 0C0E2D04
  exp           pos0, v8, v9, v6, v10 done              // 000000000104: F80008CF 0A060908
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 00000000010C: BF8C0F70
  exp           param0, v0, v1, v2, v3                  // 000000000110: F800020F 03020100
  exp           param1, v26, v27, v28, v29              // 000000000118: F800021F 1D1C1B1A
  exp           param2, v12, v7, v6, v10                // 000000000120: F800022F 0A06070C
  s_endpgm                                              // 000000000128: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[352], bundle is:[198] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
; Output Semantic Mappings
;   [0] position, usageIdx  3, paramIdx 3, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0

codeLenInByte        = 396;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 28;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 16
; esGsRingItemSize          = 16

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_mul_lo_i32  v0, v3, 6                               // 000000000008: D2D60000 00010D03
  v_add_i32     v1, vcc, 2, v0                          // 000000000010: 4A020082
  v_cvt_f32_u32  v1, v1                                 // 000000000014: 7E020D01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v2, 0x3dcccccd, v1                      // 00000000001C: 060402FF 3DCCCCCD
  v_add_f32     v1, 0x3f8ccccd, v1                      // 000000000024: 060202FF 3F8CCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000002C: 7E020F01
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  tbuffer_load_format_xyzw  v[12:15], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000034: EBF32000 80020C01
  v_cvt_u32_f32  v2, v2                                 // 00000000003C: 7E040F02
  v_mul_lo_i32  v1, v3, 6                               // 000000000040: D2D60001 00010D03
  v_cvt_f32_u32  v1, v1                                 // 000000000048: 7E020D01
  tbuffer_load_format_xyzw  v[8:11], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000004C: EBF32000 80020802
  v_add_f32     v1, 0x3dcccccd, v1                      // 000000000054: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000005C: 7E020F01
  tbuffer_load_format_xyzw  v[16:19], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000060: EBF32000 80021001
  v_add_i32     v2, vcc, 4, v0                          // 000000000068: 4A040084
  v_cvt_f32_u32  v2, v2                                 // 00000000006C: 7E040D02
  v_add_f32     v3, 0x3dcccccd, v2                      // 000000000070: 060604FF 3DCCCCCD
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000078: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v3, v3                                 // 000000000080: 7E060F03
  v_cvt_u32_f32  v1, v2                                 // 000000000084: 7E020F02
  tbuffer_load_format_xyzw  v[20:23], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000088: EBF32000 80021403
  tbuffer_load_format_xyzw  v[24:27], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000090: EBF32000 80021801
  v_add_i32     v0, vcc, 1, v0                          // 000000000098: 4A000081
  v_cvt_f32_u32  v0, v0                                 // 00000000009C: 7E000D00
  v_add_f32     v0, 0x3dcccccd, v0                      // 0000000000A0: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v0, v0                                 // 0000000000A8: 7E000F00
  tbuffer_load_format_xyzw  v[0:3], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80020000
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000B4: BF8C0F74
  v_mul_legacy_f32  v11, v7, v11                        // 0000000000B8: 0E161707
  v_mac_legacy_f32  v11, v6, v10                        // 0000000000BC: 0C161506
  s_load_dwordx4  s[8:11], s[2:3], 0x0c                 // 0000000000C0: C084030C
  v_mul_legacy_f32  v10, v7, v15                        // 0000000000C4: 0E141F07
  v_mac_legacy_f32  v11, v5, v9                         // 0000000000C8: 0C161305
  v_mac_legacy_f32  v10, v6, v14                        // 0000000000CC: 0C141D06
  v_mac_legacy_f32  v11, v4, v8                         // 0000000000D0: 0C161104
  v_mac_legacy_f32  v10, v5, v13                        // 0000000000D4: 0C141B05
  v_mac_legacy_f32  v10, v4, v12                        // 0000000000D8: 0C141904
  v_mov_b32     v8, 0                                   // 0000000000DC: 7E100280
  s_waitcnt     lgkmcnt(0)                              // 0000000000E0: BF8C007F
  buffer_store_dword  v11, v0, s[8:11], s4 offset:48 glc slc // 0000000000E4: E0704030 04420B00
  v_mov_b32     v9, 1.0                                 // 0000000000EC: 7E1202F2
  buffer_store_dword  v10, v0, s[8:11], s4 offset:52 glc slc // 0000000000F0: E0704034 04420A00
  buffer_store_dword  v8, v0, s[8:11], s4 offset:56 glc slc // 0000000000F8: E0704038 04420800
  buffer_store_dword  v9, v0, s[8:11], s4 offset:60 glc slc // 000000000100: E070403C 04420900
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 000000000108: BF8C0F77
  buffer_store_dword  v16, v0, s[8:11], s4 glc slc      // 00000000010C: E0704000 04421000
  buffer_store_dword  v17, v0, s[8:11], s4 offset:4 glc slc // 000000000114: E0704004 04421100
  s_waitcnt     vmcnt(8) & lgkmcnt(15)                  // 00000000011C: BF8C0F78
  v_mul_legacy_f32  v8, v7, v23                         // 000000000120: 0E102F07
  buffer_store_dword  v18, v0, s[8:11], s4 offset:8 glc slc // 000000000124: E0704008 04421200
  v_mac_legacy_f32  v8, v6, v22                         // 00000000012C: 0C102D06
  s_waitcnt     vmcnt(8) & lgkmcnt(15)                  // 000000000130: BF8C0F78
  v_mul_legacy_f32  v7, v7, v27                         // 000000000134: 0E0E3707
  buffer_store_dword  v19, v0, s[8:11], s4 offset:12 glc slc // 000000000138: E070400C 04421300
  v_mac_legacy_f32  v8, v5, v21                         // 000000000140: 0C102B05
  v_mac_legacy_f32  v7, v6, v26                         // 000000000144: 0C0E3506
  s_waitcnt     vmcnt(8) & lgkmcnt(15)                  // 000000000148: BF8C0F78
  buffer_store_dword  v0, v0, s[8:11], s4 offset:16 glc slc // 00000000014C: E0704010 04420000
  v_mac_legacy_f32  v8, v4, v20                         // 000000000154: 0C102904
  v_mac_legacy_f32  v7, v5, v25                         // 000000000158: 0C0E3305
  buffer_store_dword  v1, v0, s[8:11], s4 offset:20 glc slc // 00000000015C: E0704014 04420100
  v_mac_legacy_f32  v7, v4, v24                         // 000000000164: 0C0E3104
  buffer_store_dword  v2, v0, s[8:11], s4 offset:24 glc slc // 000000000168: E0704018 04420200
  buffer_store_dword  v3, v0, s[8:11], s4 offset:28 glc slc // 000000000170: E070401C 04420300
  buffer_store_dword  v8, v0, s[8:11], s4 offset:32 glc slc // 000000000178: E0704020 04420800
  buffer_store_dword  v7, v0, s[8:11], s4 offset:36 glc slc // 000000000180: E0704024 04420700
  s_endpgm                                              // 000000000188: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[552], bundle is:[190] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
; Output Semantic Mappings
;   [0] position, usageIdx  3, paramIdx 3, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0

codeLenInByte        = 336;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 33;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 16
; lsStride                  = 64

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_mul_lo_i32  v0, v3, 6                               // 000000000008: D2D60000 00010D03
  v_add_i32     v2, vcc, 2, v0                          // 000000000010: 4A040082
  v_cvt_f32_u32  v2, v2                                 // 000000000014: 7E040D02
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v8, 0x3dcccccd, v2                      // 00000000001C: 061004FF 3DCCCCCD
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000024: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v2, v2                                 // 00000000002C: 7E040F02
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  tbuffer_load_format_xyzw  v[12:15], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000034: EBF32000 80020C02
  v_mul_lo_i32  v2, v3, 6                               // 00000000003C: D2D60002 00010D03
  v_add_i32     v3, vcc, 4, v0                          // 000000000044: 4A060084
  v_add_i32     v0, vcc, 1, v0                          // 000000000048: 4A000081
  v_cvt_f32_u32  v2, v2                                 // 00000000004C: 7E040D02
  v_cvt_f32_u32  v0, v0                                 // 000000000050: 7E000D00
  v_add_f32     v2, 0x3dcccccd, v2                      // 000000000054: 060404FF 3DCCCCCD
  v_add_f32     v0, 0x3dcccccd, v0                      // 00000000005C: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v8, v8                                 // 000000000064: 7E100F08
  v_cvt_u32_f32  v2, v2                                 // 000000000068: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 00000000006C: 7E000F00
  tbuffer_load_format_xyzw  v[8:11], v8, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000070: EBF32000 80020808
  tbuffer_load_format_xyzw  v[17:20], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000078: EBF32000 80021102
  tbuffer_load_format_xyzw  v[29:32], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000080: EBF32000 80021D00
  v_cvt_f32_u32  v3, v3                                 // 000000000088: 7E060D03
  v_add_f32     v16, 0x3dcccccd, v3                     // 00000000008C: 062006FF 3DCCCCCD
  v_add_f32     v3, 0x3f8ccccd, v3                      // 000000000094: 060606FF 3F8CCCCD
  v_cvt_u32_f32  v16, v16                               // 00000000009C: 7E200F10
  v_cvt_u32_f32  v3, v3                                 // 0000000000A0: 7E060F03
  tbuffer_load_format_xyzw  v[21:24], v16, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A4: EBF32000 80021510
  tbuffer_load_format_xyzw  v[25:28], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80021903
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000B4: BF8C0F74
  v_mul_legacy_f32  v0, v7, v11                         // 0000000000B8: 0E001707
  v_mul_legacy_f32  v2, v7, v15                         // 0000000000BC: 0E041F07
  v_mac_legacy_f32  v0, v6, v10                         // 0000000000C0: 0C001506
  v_mac_legacy_f32  v2, v6, v14                         // 0000000000C4: 0C041D06
  v_mac_legacy_f32  v0, v5, v9                          // 0000000000C8: 0C001305
  v_mac_legacy_f32  v2, v5, v13                         // 0000000000CC: 0C041B05
  s_mov_b32     m0, 0x00010000                          // 0000000000D0: BEFC03FF 00010000
  v_mac_legacy_f32  v0, v4, v8                          // 0000000000D8: 0C001104
  v_mac_legacy_f32  v2, v4, v12                         // 0000000000DC: 0C041904
  v_lshlrev_b32  v1, 6, v1                              // 0000000000E0: 34020286
  ds_write2_b32  v1, v0, v2 offset0:12 offset1:13       // 0000000000E4: D8380D0C 00020001
  v_mov_b32     v0, 0                                   // 0000000000EC: 7E000280
  v_mov_b32     v2, 1.0                                 // 0000000000F0: 7E0402F2
  ds_write2_b32  v1, v0, v2 offset0:14 offset1:15       // 0000000000F4: D8380F0E 00020001
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 0000000000FC: BF8C0F71
  v_mul_legacy_f32  v0, v7, v24                         // 000000000100: 0E003107
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000104: BF8C0F70
  v_mul_legacy_f32  v2, v7, v28                         // 000000000108: 0E043907
  ds_write2_b32  v1, v17, v18 offset1:1                 // 00000000010C: D8380100 00121101
  v_mac_legacy_f32  v0, v6, v23                         // 000000000114: 0C002F06
  v_mac_legacy_f32  v2, v6, v27                         // 000000000118: 0C043706
  ds_write2_b32  v1, v19, v20 offset0:2 offset1:3       // 00000000011C: D8380302 00141301
  v_mac_legacy_f32  v0, v5, v22                         // 000000000124: 0C002D05
  v_mac_legacy_f32  v2, v5, v26                         // 000000000128: 0C043505
  ds_write2_b32  v1, v29, v30 offset0:4 offset1:5       // 00000000012C: D8380504 001E1D01
  v_mac_legacy_f32  v0, v4, v21                         // 000000000134: 0C002B04
  v_mac_legacy_f32  v2, v4, v25                         // 000000000138: 0C043304
  ds_write2_b32  v1, v31, v32 offset0:6 offset1:7       // 00000000013C: D8380706 00201F01
  ds_write2_b32  v1, v0, v2 offset0:8 offset1:9         // 000000000144: D8380908 00020001
  s_endpgm                                              // 00000000014C: BF810000
end


// Approximately 17 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VInstancedTexTGCxform[] =
{
     68,  88,  66,  67, 223,  41, 
      5,   8,  40,  41, 127, 236, 
    170, 153, 148, 158, 139,  93, 
    223, 126,   1,   0,   0,   0, 
    128,  14,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     88,   1,   0,   0, 180,   1, 
      0,   0,  60,   2,   0,   0, 
    228,  13,   0,   0,  82,  68, 
     69,  70,  28,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
    224,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      1,   0,   0,   0, 128,   0, 
      0,   0,   0,   9,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 168,   0,   0,   0, 
      0,   0,   0,   0,   0,   9, 
      0,   0,   2,   0,   0,   0, 
    188,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 102, 
    108, 111,  97, 116,  52,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0, 144,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 179,   0, 
      0,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
     84,   0,   0,   0,   2,   0, 
      0,   0,   8,   0,   0,   0, 
     56,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,  15,   0,   0, 
     68,   0,   0,   0,   0,   0, 
      0,   0,   8,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0,   1,   1,   0,   0, 
     83,  86,  95,  80, 111, 115, 
    105, 116, 105, 111, 110,   0, 
     83,  86,  95,  73, 110, 115, 
    116,  97, 110,  99, 101,  73, 
     68,   0, 171, 171,  79,  83, 
     71,  78, 128,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0, 104,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,   0, 
      0,   0, 104,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,  12, 
      0,   0, 113,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,   0, 
      0,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  83, 
     86,  95,  80, 111, 115, 105, 
    116, 105, 111, 110,   0, 171, 
    171, 171,  83,  72,  69,  88, 
    160,  11,   0,   0,  80,   0, 
      1,   0, 232,   2,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 165,   0,   0,   0, 
     80,   0,   1,   0, 160,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   8,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
    144,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  96,   0, 
      0,   4,  18,  16,  16,   0, 
      1,   0,   0,   0,   8,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   1,   0, 
      0,   0, 101,   0,   0,   3, 
     50,  32,  16,   0,   2,   0, 
      0,   0, 103,   0,   0,   4, 
    242,  32,  16,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
    104,   0,   0,   2,   1,   0, 
      0,   0,  38,   0,   0,   8, 
      0, 208,   0,   0,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,  16,  16,   0,   1,   0, 
      0,   0,   1,  64,   0,   0, 
      6,   0,   0,   0,  35,   0, 
      0,   9,  34,   0,  16,   0, 
      0,   0,   0,   0,  10,  16, 
     16,   0,   1,   0,   0,   0, 
      1,  64,   0,   0,   6,   0, 
      0,   0,   1,  64,   0,   0, 
      1,   0,   0,   0,  86,   0, 
      0,   5,  50,   0,  16,   0, 
      0,   0,   0,   0,  70,   0, 
     16,   0,   0,   0,   0,   0, 
      0,   0,   0,  10,  50,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   0,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
    205, 204, 204,  61, 205, 204, 
    204,  61,   0,   0,   0,   0, 
      0,   0,   0,   0,  28,   0, 
      0,   5,  50,   0,  16,   0, 
      0,   0,   0,   0,  70,   0, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   7, 242,  32, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  26,   0,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   7, 242,  32,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  35,   0,   0,  15, 
    242,   0,  16,   0,   0,   0, 
      0,   0,   6,  16,  16,   0, 
      1,   0,   0,   0,   2,  64, 
      0,   0,   6,   0,   0,   0, 
      6,   0,   0,   0,   6,   0, 
      0,   0,   6,   0,   0,   0, 
      2,  64,   0,   0,   2,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   0,   0,   4,   0, 
      0,   0,  86,   0,   0,   5, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,  10, 242,   0,  16,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0, 205, 204, 
    204,  61, 205, 204, 140,  63, 
    205, 204, 204,  61, 205, 204, 
    140,  63,  28,   0,   0,   5, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  18,  32,  16,   0, 
      2,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  42,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  34,  32,  16,   0, 
      2,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  18,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  34,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  26,   0,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   8, 194,  32,  16,   0, 
      3,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 128,  63, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 187,   0,   0,   0, 
     21,   0,   1,   0,  32,   0, 
     23,   0, 120,   1, 237, 152, 
    207,  79,  19,  65,  20, 199, 
    223,  78, 183, 211,  31,  76, 
    119, 215, 149,  31,   5, 138, 
     64, 148, 160,  81, 138,  21, 
     47,  26, 137, 136,  36,   6, 
     52,  49,  17,  98,  60, 236, 
    165, 194,  86, 140, 165,  96, 
    219, 152, 198, 195,  90,   8, 
    222, 184,  25, 111, 254,  37, 
    154,   8, 127,   0,  70, 163, 
      9,  39,  47, 158, 189, 169, 
      7,  79, 214, 239, 219, 238, 
    106,  15, 114, 214, 152, 253, 
     36, 223, 121, 251, 102, 223, 
    204, 123, 187, 111,  78,  67, 
    125, 228, 147, 126, 247,  41, 
    199, 182, 172,  94,  94, 111, 
     10, 162,  56,  59,  64, 231, 
      1, 108, 116, 243,  72, 244, 
    177, 135,  71, 162,  17,  30, 
     52,   8, 177, 199,  96,  20, 
    116,   6, 254,  12,  44, 191, 
     59,  25, 168, 205, 204, 222, 
     83, 140,  18,  26, 131, 102, 
    177, 102,  30, 118,   2, 226, 
    117, 227,  80,  18,  10, 115, 
     49,  28, 203, 132, 150,  83, 
    117, 194, 235, 250,  33, 108, 
    245, 139,  48,  38,  13, 133, 
    245, 251, 140, 242, 240, 103, 
     46,  64,  92, 255,  97, 112, 
    109,  97,  13,  92,  31, 215, 
    201, 112, 254, 127,  13, 254, 
    254, 176,  79,  12, 247, 163, 
     19,   3, 138,  65, 204, 139, 
    160, 143,  97, 200, 126, 224, 
    135, 189, 220, 131,  14, 163, 
      5,  58, 123, 197, 132,  62, 
    239,  39, 233, 230,  89, 137, 
      7, 137, 230,  72,  36, 148, 
    120,  41, 209,  16, 137,  31, 
     41,  19,  16, 126, 162,  76, 
     65, 104, 148, 236, 130, 144, 
     80, 102,  32,  20,  40,  77, 
    200, 130, 142,  64,  54, 116, 
     20, 194,  55,  73, 212,  39, 
    123,  33, 156,  87, 153, 133, 
    208, 124,  57,   0,  13,  66, 
     56, 185, 114,   8,  66, 241, 
    114, 184, 253, 141,  97, 207, 
    164, 198,  21, 193, 138, 206, 
    147, 242, 255, 195, 255,  32, 
     60, 171, 220,  27,  22, 195, 
    243, 225, 115,  68,  68,  68, 
     68,  68,  68,  68,  68,  68, 
     68,  68,  68,  68,  68,  68, 
    196, 223,  68, 140, 110, 189, 
    222,  48, 119, 118, 137,  14, 
    222, 199,  50,  26, 109, 145, 
     88, 208,  50, 194, 163, 216, 
    246,  94,  75,  88, 242, 205, 
    254, 254, 116,  75,   8, 216, 
    157, 203, 154,  41, 188, 109, 
    210,  23,  68,  70, 247,  54, 
    137,  22, 158,  16, 214, 141, 
    124, 253, 172,  25, 162, 217, 
    210, 109,  63, 150,  50, 228, 
    181, 116, 221, 143, 111,  17, 
    249, 115, 194, 212,  61,  50, 
    201, 227,  88, 209,  43, 154, 
    108, 105,  64,  52, 147, 166, 
    229, 165,  76, 219, 159,  79, 
    166,  69,  51,  22, 212, 192, 
    126, 202, 134, 143,  58, 218, 
    185, 247, 167,  57,  55, 207, 
    107,  36, 154,  85, 212, 155, 
     24, 180,  12, 217, 111, 169, 
    196, 113, 219, 120, 200, 254, 
    233, 172, 145, 152,  50,  12, 
     57, 106, 171, 120, 159, 165, 
    228, 169, 172, 146,   5,  67, 
    197, 135, 109, 165, 247,  88, 
     42,  62, 158,  85, 241,  73, 
     67, 233,  67, 182, 106,  10, 
    229, 125,  17, 221, 158,  62, 
    150,  85, 250, 132, 161, 222, 
     38, 233, 123,  50,  37, 211, 
    252,  31,  76,  65, 223,  73, 
     19, 177,  97, 216, 129, 193, 
    220, 208,  36, 172,  74, 240, 
     13, 218, 230, 110, 112, 117, 
    231, 223, 133, 178, 248,  94, 
    148, 111, 189,  66, 223, 130, 
    152, 208, 103, 133, 232,   8, 
    213, 123, 249, 137, 232,  91, 
    176,  17, 199, 243,  29, 145, 
    225, 239, 242, 155,  19,  65, 
     92,  46, 176, 124, 191, 212, 
      5, 229, 126,  36, 230, 159, 
    207, 222, 136, 207,   4, 243, 
    151,   2, 203, 123, 160,  64, 
     58, 184, 242, 172, 252,  42, 
    152, 187,  19, 216, 101, 136, 
    215, 151,  46,  58, 119, 139, 
    229, 226, 227,  90, 190, 190, 
     94,  93, 127, 144, 175, 213, 
    171, 110, 113, 237, 156, 179, 
    226,  62, 114, 220,  70, 221, 
    173,  86, 138, 101, 231,  94, 
    169, 113, 222,  89, 172,  46, 
     59, 183, 220, 202, 138,  91, 
    117, 230, 166, 230,  10,  13, 
    103, 113, 181,   8, 167, 230, 
    220, 158, 175, 212, 234, 197, 
    202, 178, 187, 178, 228,  54, 
    150, 174,  93, 109, 148, 214, 
    171, 107, 249,  82, 185,  80, 
    200, 175, 150, 107, 101,  36, 
    105, 243,  33,  72, 205,  87, 
    195,   9, 104, 173, 120, 191, 
     66,  63,   1, 176, 190, 144, 
      1,   0,  53,  16,   0,   0, 
    200,   0,   0,   0,  21,   0, 
      1,   0,  16, 112,  23,   0, 
    120,   1, 237, 152, 193,  79, 
     19,  65,  20, 198, 103, 167, 
    211, 105, 129, 237, 118, 129, 
     82, 138, 128,  64,  36,  81, 
     67, 172,  84,  48,  26,   3, 
      1,  23,  12,  17,  72,  76, 
    132, 120, 218,  75, 165,  91, 
     49, 150,  66, 218,  70,  27, 
     15, 117,  33,  92,  76, 122, 
     83, 255,  11,  15, 158,  61, 
      8,  71,  15, 120, 241, 192, 
    217, 187,   7,  19, 189,  26, 
    235, 247, 134,  93, 224,  32, 
    103, 141, 153,  95, 242, 205, 
    155, 153, 125,  51, 243, 118, 
    222, 156, 222,  86,  47,  83, 
    124,  91, 186,  83,  37,  91, 
     50, 223,  47, 249, 156, 177, 
     40,  13,   0, 186, 138, 173, 
     20, 181, 140,  45, 167, 169, 
    101, 108, 148,  26,   3, 130, 
    195,   0, 140,   9,  53,  49, 
    158, 133, 165, 111, 151,   2, 
     29,  49, 187, 255,  18, 109, 
     27, 116,   1,  42,  71,  24, 
     91, 133, 205,  65, 180, 221, 
     69, 136, 214, 159,  70,  66, 
     22,  68, 107,   8,  58, 234, 
     52, 228, 223,   7, 133, 241, 
     17,  97, 159,  66,  77,  64, 
    199, 140,  80, 243, 103,  22, 
     32, 138, 255,  44,  40, 182, 
    224, 215,  21,  97, 156, 161, 
    253, 151, 160,  59,  10, 243, 
     68,  80,  62,  78,  67, 247, 
     41,  32, 226, 103,  15, 181, 
     39, 247,  58,  21, 228,  53, 
    204, 229,  62, 116,  22,  45, 
     16, 238,  67,  80, 127,  18, 
     34, 104,  63, 201, 238, 141, 
     75, 116,  36,  18,  34, 145, 
    107,   9,   7, 137,   7,  37, 
    145,  84,  25, 131, 226,  16, 
     18,  43, 219, 161,  14,   8, 
      7,  74,  36,  76,  34,  64, 
    153, 132, 108, 168,  19, 234, 
    130, 186,  33, 252, 147,  68, 
    188,  18,  49,  74, 188,  87, 
    153, 129, 144, 124, 121,  14, 
    234, 135,  16, 180,  28, 132, 
    206,  67,  67, 193,  63,  70, 
    112,  48, 160, 119,  68,  72, 
    131,  34, 131, 229, 225,  43, 
    249, 191, 161,  59, 192,  53, 
     31, 163, 238,   4, 208, 173, 
    224, 122, 149,  52,  26, 141, 
     70, 163, 209, 104,  52,  26, 
    141,  70, 163, 209, 104, 254, 
     38, 124, 100, 231, 195,  86, 
    178, 185, 199, 216, 225, 231, 
     72, 194,  96,  59, 140,  47, 
     26,   9, 222,  96, 145, 221, 
    253,  22,  23, 242, 211, 193, 
    193, 116, 139, 115, 216, 230, 
    140, 145, 228, 141,  23,  12, 
    190, 195,  63, 190,  26,  38, 
    247, 121,  82,  52, 140,  96, 
    157,  90, 131, 121,  30, 231, 
    254, 145, 255, 193,  52, 249, 
     43,  95, 155, 251, 187,  76, 
     44, 242, 132, 104, 180, 132, 
     84, 223,  90, 130, 246, 110, 
    206,  68, 146, 178, 193,   3, 
    191,  72, 138, 251, 202,  63, 
    195, 253, 109, 198,  22,  89, 
    130,  53,  90, 140,  41, 127, 
    150, 100, 202,   7,  17, 251, 
     53, 196,  27, 235,  77,  91, 
    178,  39, 109, 154, 136,  51, 
     54, 148, 178, 162, 221, 105, 
     83,  14, 166,  76, 209, 153, 
     54, 163, 253, 176, 125,  41, 
    211, 231, 182, 138, 119, 124, 
    118, 235,  11, 235, 112, 196, 
    119, 222, 213, 152, 164, 126, 
    187,  35, 110, 146, 141,  59, 
     98, 138, 108, 155,  35, 158, 
    209,  29,  80, 223, 118, 132, 
     32, 219, 233, 136,  58, 157, 
    115, 213, 182, 226,  52, 238, 
    114, 132, 188,  98, 155, 106, 
    238, 134, 101, 153,  52, 215, 
    237, 136, 232, 152, 109, 202, 
    235, 150, 154, 183, 105, 142, 
     97, 253, 101, 219, 140,  78, 
     88, 102, 138, 198,   6, 198, 
     57, 203, 204,  80, 159,  59, 
     98, 128, 108, 196,  17, 195, 
    100, 113, 254,  40, 217, 152, 
     35,  24, 219, 222,  11,  74, 
    133, 170, 190,  74, 162, 186, 
     43,  85, 211, 194, 113,   6, 
     34, 194, 113,  88,  91,  10, 
    199, 164,  16, 108, 104, 212, 
    130,  90,  99,  33, 176, 228, 
    143, 121, 102, 169,  93,  79, 
    120,  29, 124, 111,   6, 150, 
    234,  89,  29, 208, 192, 175, 
    216, 221,  55, 206, 114, 244, 
     93,  48, 255,  54, 176, 180, 
     71,  59, 116, 120, 251,  85, 
    105,  44, 168, 107, 127,  12, 
    190, 173,  65, 180, 190, 120, 
    203, 125, 152,  47, 229, 159, 
     87, 179, 181, 205, 202, 230, 
    147, 108, 181,  86, 241, 242, 
     27, 215, 220, 130, 247, 212, 
    245, 234,  53, 175,  82, 206, 
    151, 220,  71, 197, 250, 164, 
    187,  82,  89, 115, 239, 123, 
    229, 130,  87, 113, 231,  39, 
    230, 115, 117, 119, 101,  61, 
    143,  65, 213, 125, 112, 183, 
     92, 173, 229, 203, 107,  94, 
     97, 213, 171, 175,  46, 204, 
    213, 139, 155, 149, 141, 108, 
    177, 148, 203, 101, 215,  75, 
    213,  18,  14,  57,  98,  46, 
      8, 129,  74, 233,  49, 104, 
     35, 255, 184, 204, 126,   3, 
     47,   7, 174, 230,  53,  16, 
      0,   0, 192,   0,   0,   0, 
     21,   0,   1,   0,   0,  36, 
     23,   0, 120,   1, 237, 152, 
    207,  79,  19,  65,  20, 199, 
     95, 119, 167, 175,   5, 182, 
    191, 248,  33,  84,  40, 148, 
    196,   3, 137, 177,  88, 193, 
    248,  35,  81,  80,  73,  20, 
     52, 209,   8, 241, 180,   7, 
     43, 221, 138, 177,  20, 108, 
     27, 211,  24, 179,  22,  66, 
    188, 200, 205, 120, 244, 127, 
    240, 228, 193,   3, 244,  15, 
    192,  11,   7, 226, 205, 120, 
    246,  98, 244, 224, 197,  88, 
    191, 175, 187,  11, 245, 128, 
     87, 141, 217,  79, 242, 157, 
    215,  55,  59, 111, 230, 205, 
    155, 233, 101, 142, 245,  83, 
    139, 215, 111, 222, 126,  18, 
     91,  52, 222,  93, 175, 107, 
     68,  65, 113, 218,  88, 237, 
    149,  22,  28, 145, 134, 104, 
     72, 154,   0, 132, 177, 163, 
     48,   6, 116,  11, 254,  52, 
    172, 124,  27, 115, 229,  48, 
    221, 120, 129, 150,  33, 233, 
    219,  69, 204,  28, 236,  56, 
     20, 131, 164, 175,   3,  18, 
     66, 210,   0,  25,  43, 120, 
     22,  33, 191,  33, 235,  29, 
    133, 218, 251,  37,  29,  33, 
      2, 233, 208,  62, 146, 224, 
     33,  92, 132, 254, 240, 185, 
    149, 155, 228, 224, 229, 229, 
    229,  41, 235, 255, 107, 200, 
    254, 247, 207,   9, 200, 121, 
    180,  19, 133, 188, 186,  52, 
    250, 164,  61, 168, 217,  23, 
    215, 151,  90, 200, 222,  26, 
    208,  97,  52, 129, 146,  31, 
    109, 120, 190, 204, 199, 116, 
    243,  36, 227,   7, 227, 112, 
     24,  11,  50,  62,  50,  46, 
     20, 163, 144, 140,  66, 114, 
     24,  66,  33, 185,  19, 234, 
    130, 176,  32, 227, 208,  24, 
      9,  50,  46,   4, 199, 161, 
      4, 212,  13, 245,  64, 216, 
     19,  35,  63, 198, 221,  99, 
    220,  87,  30, 128, 146,  16, 
     46,   0,  15,  66, 184, 112, 
    156, 130, 134, 161,  17,  55, 
     23, 221, 217, 169, 156, 157, 
    192,   1, 201,  12,  86, 107, 
    191,  49, 255,  47,  82,   3, 
    148, 121, 159,  86,  77, 128, 
     84,   5, 229, 109,  33, 255, 
     85,  31,  31,  31,  31,  31, 
     31,  31,  31,  31,  31,  31, 
     31,  31,  31,  31, 159, 191, 
    133,  54, 186, 190, 181,  26, 
    219, 220,  38, 218, 219, 213, 
     35,   1,  90,  39,  53, 167, 
     69, 148,  77, 250,  70, 163, 
    169, 226, 252, 126, 103, 231, 
     66,  83,  41, 216, 205,  41, 
     45, 166, 236, 103, 132, 177, 
    233, 111, 159,  53,  67, 171, 
    107, 110, 204,   6, 241, 220, 
     26, 145,  19,  23,  33, 219, 
     25, 143,  56, 162, 150,  13, 
    199, 226, 182, 196,  82, 140, 
    108, 137,  13, 135, 181, 122, 
    107, 142, 132,  99,  41, 165, 
    213, 245,   8, 219,  77,  78, 
     59, 113, 204, 176, 155,  83, 
    241,  88, 218, 214,  99, 220, 
    138, 137, 247,  57,  99, 245, 
    164,  86, 175,  34, 223,  80, 
     63,  69,  67,  35,  42, 202, 
    125, 100, 112,  74,  25, 193, 
     30,  50, 130, 131, 202, 104, 
    234,  63, 182, 228, 117,  76, 
     37, 200,  80,  73, 101,  60, 
    215, 180,  73,  35, 114, 246, 
     67, 128,  52,  66, 194, 246, 
     87,  77, 217, 209, 152, 227, 
     63, 146, 121, 178,  20, 149, 
    253, 135, 206, 169,  40,   5, 
    208, 159, 232,  38,  30, 199, 
    156, 103, 148, 161, 233, 240, 
    123, 122,  41, 120,   2, 115, 
    159,  86, 134,  10, 194,  79, 
     13, 147,  58, 142, 185,  39, 
    148, 193,  33, 248,  35, 105, 
     10, 119, 192,  98,  62, 162, 
    181, 109, 247, 121, 175, 229, 
    137, 146, 144, 188, 136, 121, 
    190, 247,  38, 228, 249,  34, 
     15, 133, 161,  99, 238, 187, 
    239, 128, 107, 101, 188, 188, 
     41,  33,  57, 180,   7,  92, 
    115, 191,  79, 187,  86, 222, 
    160, 186, 160, 161, 159, 161, 
    217,  87, 151, 111,   4, 243, 
    110, 255,  93, 215, 202,  28, 
    157, 208, 222, 165, 151, 197, 
    143, 110, 223,  83, 215,  46, 
     66,  18,  95,  56, 111, 222, 
    203,  21, 115,  79,  42, 153, 
    234,  74, 121, 229,  97, 166, 
     82,  45,  91, 185, 229,  83, 
    102, 222, 122, 108,  90, 181, 
    170,  85,  46, 229, 138, 230, 
    253,  66, 109, 210, 156,  47, 
     47, 154, 183, 173,  82, 222, 
     42, 155,  51,  19,  51, 217, 
    154,  57, 191, 148, 131,  83, 
     49, 239, 204, 150,  42, 213, 
     92, 105, 209, 202,  47,  88, 
    181, 133, 171,  87, 106, 133, 
    149, 242, 114, 166,  80, 204, 
    102,  51,  75, 197,  74,  17, 
    139,  56, 124, 119, 151, 150, 
    231, 111, 121, 242,  93, 206, 
     61,  40, 209,  47,  24, 167, 
    151, 211,   0,   0,  83,  84, 
     65,  84, 148,   0,   0,   0, 
     17,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      6,   0,   0,   0,   6,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0
};
