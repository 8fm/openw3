#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4x4 vfmuniforms[24];          // Offset:    0 Size:  1536
//   float4 vfuniforms[96];             // Offset: 1536 Size:  1536
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// SV_Position              0   xyzw        1     NONE   float   xyzw
// SV_InstanceID            0   x           2   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xy          3     NONE   float   xy  
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[209]
// Embedded Data:
//  0x000000d1 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000cc - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[192], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input_sgv v2.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output_siv o4.xyzw, position
dcl_temps 1
mov o0.xyzw, v0.xyzw
ishl r0.x, v2.x, l(2)
utof r0.x, r0.x
add r0.x, r0.x, l(0.100000)
ftou r0.x, r0.x
mov o1.xyzw, cb0[r0.x + 96].xyzw
bfi r0.xyz, l(30, 30, 30, 0), l(2, 2, 2, 0), v2.xxxx, l(2, 2, 1, 0)
utof r0.xyz, r0.xyzx
add r0.xyz, r0.xyzx, l(0.100000, 1.100000, 0.100000, 0.000000)
ftou r0.xyz, r0.xyzx
mov o2.xyzw, cb0[r0.z + 96].xyzw
dp4 o3.x, v1.xyzw, cb0[r0.x + 96].xyzw
dp4 o3.y, v1.xyzw, cb0[r0.y + 96].xyzw
utof r0.x, v2.x
add r0.x, r0.x, l(0.100000)
ftou r0.x, r0.x
ishl r0.x, r0.x, l(2)
dp4 o4.x, v1.xyzw, cb0[r0.x + 0].xyzw
dp4 o4.y, v1.xyzw, cb0[r0.x + 1].xyzw
dp4 o4.z, v1.xyzw, cb0[r0.x + 2].xyzw
dp4 o4.w, v1.xyzw, cb0[r0.x + 3].xyzw
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[209], bundle is:[210] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedPosition3dTexTGCxformEAlpha.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [2] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [3] generic, usageIdx  3, paramIdx 3, paramSlot 0

codeLenInByte        = 404;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 40;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_cvt_f32_u32  v1, v3                                 // 000000000008: 7E020D03
  v_add_f32     v1, 0x3dcccccd, v1                      // 00000000000C: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v1, v1                                 // 000000000014: 7E020F01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_lshlrev_b32  v1, 2, v1                              // 00000000001C: 34020282
  v_add_i32     v12, vcc, 1, v1                         // 000000000020: 4A180281
  v_add_i32     v13, vcc, 2, v1                         // 000000000024: 4A1A0282
  v_add_i32     v14, vcc, 3, v1                         // 000000000028: 4A1C0283
  s_waitcnt     lgkmcnt(0)                              // 00000000002C: BF8C007F
  tbuffer_load_format_xyzw  v[16:19], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000030: EBF32000 80021001
  tbuffer_load_format_xyzw  v[20:23], v12, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000038: EBF32000 8002140C
  tbuffer_load_format_xyzw  v[24:27], v13, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 8002180D
  tbuffer_load_format_xyzw  v[28:31], v14, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000048: EBF32000 80021C0E
  v_lshlrev_b32  v0, 2, v3                              // 000000000050: 34000682
  v_bfi_b32     v2, -4, v0, 2                           // 000000000054: D2940002 020A00C4
  v_cvt_f32_u32  v2, v2                                 // 00000000005C: 7E040D02
  v_add_f32     v3, 0x3dcccccd, v2                      // 000000000060: 060604FF 3DCCCCCD
  v_bfi_b32     v15, -4, v0, 1                          // 000000000068: D294000F 020600C4
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000070: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v3, v3                                 // 000000000078: 7E060F03
  v_cvt_f32_u32  v0, v0                                 // 00000000007C: 7E000D00
  v_cvt_u32_f32  v2, v2                                 // 000000000080: 7E040F02
  v_add_i32     v3, vcc, 0x00000060, v3                 // 000000000084: 4A0606FF 00000060
  v_add_f32     v0, 0x3dcccccd, v0                      // 00000000008C: 060000FF 3DCCCCCD
  v_add_i32     v2, vcc, 0x00000060, v2                 // 000000000094: 4A0404FF 00000060
  v_cvt_u32_f32  v0, v0                                 // 00000000009C: 7E000F00
  v_add_i32     v0, vcc, 0x00000060, v0                 // 0000000000A0: 4A0000FF 00000060
  v_cvt_f32_u32  v15, v15                               // 0000000000A8: 7E1E0D0F
  v_add_f32     v1, 0x3dcccccd, v15                     // 0000000000AC: 06021EFF 3DCCCCCD
  tbuffer_load_format_xyzw  v[12:15], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B4: EBF32000 80020C03
  tbuffer_load_format_xyzw  v[32:35], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000BC: EBF32000 80022002
  tbuffer_load_format_xyzw  v[36:39], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C4: EBF32000 80022400
  v_cvt_u32_f32  v1, v1                                 // 0000000000CC: 7E020F01
  v_add_i32     v1, vcc, 0x00000060, v1                 // 0000000000D0: 4A0202FF 00000060
  tbuffer_load_format_xyzw  v[0:3], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D8: EBF32000 80020001
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 0000000000E0: BF8C0F77
  v_mul_legacy_f32  v19, v11, v19                       // 0000000000E4: 0E26270B
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 0000000000E8: BF8C0F76
  v_mul_legacy_f32  v23, v11, v23                       // 0000000000EC: 0E2E2F0B
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000F0: BF8C0F75
  v_mul_legacy_f32  v27, v11, v27                       // 0000000000F4: 0E36370B
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000F8: BF8C0F74
  v_mul_legacy_f32  v31, v11, v31                       // 0000000000FC: 0E3E3F0B
  s_waitcnt     vmcnt(3) & lgkmcnt(15)                  // 000000000100: BF8C0F73
  v_mul_legacy_f32  v15, v11, v15                       // 000000000104: 0E1E1F0B
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 000000000108: BF8C0F72
  v_mul_legacy_f32  v11, v11, v35                       // 00000000010C: 0E16470B
  v_mac_legacy_f32  v19, v10, v18                       // 000000000110: 0C26250A
  v_mac_legacy_f32  v23, v10, v22                       // 000000000114: 0C2E2D0A
  v_mac_legacy_f32  v27, v10, v26                       // 000000000118: 0C36350A
  v_mac_legacy_f32  v31, v10, v30                       // 00000000011C: 0C3E3D0A
  v_mac_legacy_f32  v15, v10, v14                       // 000000000120: 0C1E1D0A
  v_mac_legacy_f32  v11, v10, v34                       // 000000000124: 0C16450A
  v_mac_legacy_f32  v19, v9, v17                        // 000000000128: 0C262309
  v_mac_legacy_f32  v23, v9, v21                        // 00000000012C: 0C2E2B09
  v_mac_legacy_f32  v27, v9, v25                        // 000000000130: 0C363309
  v_mac_legacy_f32  v31, v9, v29                        // 000000000134: 0C3E3B09
  v_mac_legacy_f32  v15, v9, v13                        // 000000000138: 0C1E1B09
  v_mac_legacy_f32  v11, v9, v33                        // 00000000013C: 0C164309
  v_mac_legacy_f32  v19, v8, v16                        // 000000000140: 0C262108
  v_mac_legacy_f32  v23, v8, v20                        // 000000000144: 0C2E2908
  v_mac_legacy_f32  v27, v8, v24                        // 000000000148: 0C363108
  v_mac_legacy_f32  v31, v8, v28                        // 00000000014C: 0C3E3908
  v_mac_legacy_f32  v15, v8, v12                        // 000000000150: 0C1E1908
  v_mac_legacy_f32  v11, v8, v32                        // 000000000154: 0C164108
  v_mov_b32     v8, 0                                   // 000000000158: 7E100280
  v_mov_b32     v9, 1.0                                 // 00000000015C: 7E1202F2
  exp           pos0, v19, v23, v27, v31 done           // 000000000160: F80008CF 1F1B1713
  exp           param0, v4, v5, v6, v7                  // 000000000168: F800020F 07060504
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000170: BF8C0F71
  exp           param1, v36, v37, v38, v39              // 000000000174: F800021F 27262524
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 00000000017C: BF8C0F70
  exp           param2, v0, v1, v2, v3                  // 000000000180: F800022F 03020100
  exp           param3, v15, v11, v8, v9                // 000000000188: F800023F 09080B0F
  s_endpgm                                              // 000000000190: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[421], bundle is:[225] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedPosition3dTexTGCxformEAlpha.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] position, usageIdx  4, paramIdx 4, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [4] generic, usageIdx  3, paramIdx 3, paramSlot 0

codeLenInByte        = 508;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 40;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_cvt_f32_u32  v0, v3                                 // 000000000008: 7E000D03
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 00000000000C: C0840300
  v_add_f32     v0, 0x3dcccccd, v0                      // 000000000010: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v0, v0                                 // 000000000018: 7E000F00
  v_lshlrev_b32  v0, 2, v0                              // 00000000001C: 34000082
  s_waitcnt     lgkmcnt(0)                              // 000000000020: BF8C007F
  tbuffer_load_format_xyzw  v[12:15], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000024: EBF32000 80020C00
  v_add_i32     v1, vcc, 1, v0                          // 00000000002C: 4A020081
  v_add_i32     v2, vcc, 2, v0                          // 000000000030: 4A040082
  v_add_i32     v0, vcc, 3, v0                          // 000000000034: 4A000083
  tbuffer_load_format_xyzw  v[24:27], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000038: EBF32000 80021800
  v_lshlrev_b32  v0, 2, v3                              // 000000000040: 34000682
  v_cvt_f32_u32  v0, v0                                 // 000000000044: 7E000D00
  tbuffer_load_format_xyzw  v[16:19], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000048: EBF32000 80021001
  v_add_f32     v0, 0x3dcccccd, v0                      // 000000000050: 060000FF 3DCCCCCD
  tbuffer_load_format_xyzw  v[20:23], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000058: EBF32000 80021402
  v_cvt_u32_f32  v0, v0                                 // 000000000060: 7E000F00
  v_add_i32     v0, vcc, 0x00000060, v0                 // 000000000064: 4A0000FF 00000060
  tbuffer_load_format_xyzw  v[28:31], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000006C: EBF32000 80021C00
  v_lshlrev_b32  v1, 2, v3                              // 000000000074: 34020682
  v_bfi_b32     v2, -4, v1, 2                           // 000000000078: D2940002 020A02C4
  v_cvt_f32_u32  v2, v2                                 // 000000000080: 7E040D02
  v_bfi_b32     v1, -4, v1, 1                           // 000000000084: D2940001 020602C4
  v_add_f32     v3, 0x3dcccccd, v2                      // 00000000008C: 060604FF 3DCCCCCD
  v_cvt_f32_u32  v1, v1                                 // 000000000094: 7E020D01
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000098: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v3, v3                                 // 0000000000A0: 7E060F03
  v_add_f32     v1, 0x3dcccccd, v1                      // 0000000000A4: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v2, v2                                 // 0000000000AC: 7E040F02
  v_add_i32     v3, vcc, 0x00000060, v3                 // 0000000000B0: 4A0606FF 00000060
  v_cvt_u32_f32  v0, v1                                 // 0000000000B8: 7E000F01
  v_add_i32     v1, vcc, 0x00000060, v2                 // 0000000000BC: 4A0204FF 00000060
  tbuffer_load_format_xyzw  v[32:35], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C4: EBF32000 80022003
  tbuffer_load_format_xyzw  v[36:39], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000CC: EBF32000 80022401
  v_add_i32     v0, vcc, 0x00000060, v0                 // 0000000000D4: 4A0000FF 00000060
  tbuffer_load_format_xyzw  v[0:3], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000DC: EBF32000 80020000
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 0000000000E4: BF8C0F77
  v_mul_legacy_f32  v15, v11, v15                       // 0000000000E8: 0E1E1F0B
  v_mac_legacy_f32  v15, v10, v14                       // 0000000000EC: 0C1E1D0A
  s_load_dwordx4  s[8:11], s[2:3], 0x0c                 // 0000000000F0: C084030C
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000F4: BF8C0F75
  v_mul_legacy_f32  v14, v11, v19                       // 0000000000F8: 0E1C270B
  v_mac_legacy_f32  v15, v9, v13                        // 0000000000FC: 0C1E1B09
  v_mac_legacy_f32  v14, v10, v18                       // 000000000100: 0C1C250A
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 000000000104: BF8C0F74
  v_mul_legacy_f32  v13, v11, v23                       // 000000000108: 0E1A2F0B
  v_mac_legacy_f32  v15, v8, v12                        // 00000000010C: 0C1E1908
  v_mac_legacy_f32  v14, v9, v17                        // 000000000110: 0C1C2309
  v_mac_legacy_f32  v13, v10, v22                       // 000000000114: 0C1A2D0A
  v_mul_legacy_f32  v12, v11, v27                       // 000000000118: 0E18370B
  v_mac_legacy_f32  v14, v8, v16                        // 00000000011C: 0C1C2108
  v_mac_legacy_f32  v13, v9, v21                        // 000000000120: 0C1A2B09
  v_mac_legacy_f32  v12, v10, v26                       // 000000000124: 0C18350A
  v_mac_legacy_f32  v13, v8, v20                        // 000000000128: 0C1A2908
  v_mac_legacy_f32  v12, v9, v25                        // 00000000012C: 0C183309
  v_mac_legacy_f32  v12, v8, v24                        // 000000000130: 0C183108
  s_waitcnt     lgkmcnt(0)                              // 000000000134: BF8C007F
  buffer_store_dword  v15, v0, s[8:11], s4 offset:64 glc slc // 000000000138: E0704040 04420F00
  buffer_store_dword  v14, v0, s[8:11], s4 offset:68 glc slc // 000000000140: E0704044 04420E00
  buffer_store_dword  v13, v0, s[8:11], s4 offset:72 glc slc // 000000000148: E0704048 04420D00
  buffer_store_dword  v12, v0, s[8:11], s4 offset:76 glc slc // 000000000150: E070404C 04420C00
  buffer_store_dword  v4, v0, s[8:11], s4 glc slc       // 000000000158: E0704000 04420400
  buffer_store_dword  v5, v0, s[8:11], s4 offset:4 glc slc // 000000000160: E0704004 04420500
  buffer_store_dword  v6, v0, s[8:11], s4 offset:8 glc slc // 000000000168: E0704008 04420600
  buffer_store_dword  v7, v0, s[8:11], s4 offset:12 glc slc // 000000000170: E070400C 04420700
  s_waitcnt     vmcnt(11) & lgkmcnt(15)                 // 000000000178: BF8C0F7B
  buffer_store_dword  v28, v0, s[8:11], s4 offset:16 glc slc // 00000000017C: E0704010 04421C00
  buffer_store_dword  v29, v0, s[8:11], s4 offset:20 glc slc // 000000000184: E0704014 04421D00
  s_waitcnt     vmcnt(12) & lgkmcnt(15)                 // 00000000018C: BF8C0F7C
  v_mul_legacy_f32  v4, v11, v35                        // 000000000190: 0E08470B
  buffer_store_dword  v30, v0, s[8:11], s4 offset:24 glc slc // 000000000194: E0704018 04421E00
  v_mac_legacy_f32  v4, v10, v34                        // 00000000019C: 0C08450A
  s_waitcnt     vmcnt(12) & lgkmcnt(15)                 // 0000000001A0: BF8C0F7C
  v_mul_legacy_f32  v5, v11, v39                        // 0000000001A4: 0E0A4F0B
  buffer_store_dword  v31, v0, s[8:11], s4 offset:28 glc slc // 0000000001A8: E070401C 04421F00
  v_mac_legacy_f32  v4, v9, v33                         // 0000000001B0: 0C084309
  v_mac_legacy_f32  v5, v10, v38                        // 0000000001B4: 0C0A4D0A
  s_waitcnt     vmcnt(12) & lgkmcnt(15)                 // 0000000001B8: BF8C0F7C
  buffer_store_dword  v0, v0, s[8:11], s4 offset:32 glc slc // 0000000001BC: E0704020 04420000
  v_mac_legacy_f32  v4, v8, v32                         // 0000000001C4: 0C084108
  v_mac_legacy_f32  v5, v9, v37                         // 0000000001C8: 0C0A4B09
  buffer_store_dword  v1, v0, s[8:11], s4 offset:36 glc slc // 0000000001CC: E0704024 04420100
  v_mac_legacy_f32  v5, v8, v36                         // 0000000001D4: 0C0A4908
  buffer_store_dword  v2, v0, s[8:11], s4 offset:40 glc slc // 0000000001D8: E0704028 04420200
  buffer_store_dword  v3, v0, s[8:11], s4 offset:44 glc slc // 0000000001E0: E070402C 04420300
  buffer_store_dword  v4, v0, s[8:11], s4 offset:48 glc slc // 0000000001E8: E0704030 04420400
  buffer_store_dword  v5, v0, s[8:11], s4 offset:52 glc slc // 0000000001F0: E0704034 04420500
  s_endpgm                                              // 0000000001F8: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[648], bundle is:[213] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedPosition3dTexTGCxformEAlpha.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] position, usageIdx  4, paramIdx 4, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [4] generic, usageIdx  3, paramIdx 3, paramSlot 0

codeLenInByte        = 444;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 46;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_cvt_f32_u32  v0, v3                                 // 000000000008: 7E000D03
  v_add_f32     v0, 0x3dcccccd, v0                      // 00000000000C: 060000FF 3DCCCCCD
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000014: C0840300
  v_cvt_u32_f32  v0, v0                                 // 000000000018: 7E000F00
  v_lshlrev_b32  v0, 2, v0                              // 00000000001C: 34000082
  v_add_i32     v2, vcc, 1, v0                          // 000000000020: 4A040081
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  tbuffer_load_format_xyzw  v[14:17], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000028: EBF32000 80020E00
  tbuffer_load_format_xyzw  v[18:21], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000030: EBF32000 80021202
  v_add_i32     v12, vcc, 2, v0                         // 000000000038: 4A180082
  tbuffer_load_format_xyzw  v[22:25], v12, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000003C: EBF32000 8002160C
  v_add_i32     v13, vcc, 3, v0                         // 000000000044: 4A1A0083
  v_lshlrev_b32  v0, 2, v3                              // 000000000048: 34000682
  v_lshlrev_b32  v2, 2, v3                              // 00000000004C: 34040682
  v_bfi_b32     v3, -4, v0, 2                           // 000000000050: D2940003 020A00C4
  v_cvt_f32_u32  v2, v2                                 // 000000000058: 7E040D02
  v_cvt_f32_u32  v3, v3                                 // 00000000005C: 7E060D03
  v_add_f32     v2, 0x3dcccccd, v2                      // 000000000060: 060404FF 3DCCCCCD
  v_bfi_b32     v0, -4, v0, 1                           // 000000000068: D2940000 020600C4
  v_add_f32     v12, 0x3dcccccd, v3                     // 000000000070: 061806FF 3DCCCCCD
  v_cvt_u32_f32  v2, v2                                 // 000000000078: 7E040F02
  v_add_f32     v3, 0x3f8ccccd, v3                      // 00000000007C: 060606FF 3F8CCCCD
  v_cvt_f32_u32  v0, v0                                 // 000000000084: 7E000D00
  v_cvt_u32_f32  v12, v12                               // 000000000088: 7E180F0C
  v_add_i32     v2, vcc, 0x00000060, v2                 // 00000000008C: 4A0404FF 00000060
  v_cvt_u32_f32  v3, v3                                 // 000000000094: 7E060F03
  v_add_f32     v0, 0x3dcccccd, v0                      // 000000000098: 060000FF 3DCCCCCD
  v_add_i32     v12, vcc, 0x00000060, v12               // 0000000000A0: 4A1818FF 00000060
  v_add_i32     v3, vcc, 0x00000060, v3                 // 0000000000A8: 4A0606FF 00000060
  v_cvt_u32_f32  v0, v0                                 // 0000000000B0: 7E000F00
  v_add_i32     v0, vcc, 0x00000060, v0                 // 0000000000B4: 4A0000FF 00000060
  tbuffer_load_format_xyzw  v[30:33], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000BC: EBF32000 80021E02
  tbuffer_load_format_xyzw  v[42:45], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C4: EBF32000 80022A00
  tbuffer_load_format_xyzw  v[26:29], v13, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000CC: EBF32000 80021A0D
  tbuffer_load_format_xyzw  v[34:37], v12, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D4: EBF32000 8002220C
  tbuffer_load_format_xyzw  v[38:41], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000DC: EBF32000 80022603
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 0000000000E4: BF8C0F77
  v_mul_legacy_f32  v0, v11, v17                        // 0000000000E8: 0E00230B
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 0000000000EC: BF8C0F76
  v_mul_legacy_f32  v2, v11, v21                        // 0000000000F0: 0E042B0B
  v_mac_legacy_f32  v0, v10, v16                        // 0000000000F4: 0C00210A
  v_mac_legacy_f32  v2, v10, v20                        // 0000000000F8: 0C04290A
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000FC: BF8C0F75
  v_mul_legacy_f32  v3, v11, v25                        // 000000000100: 0E06330B
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 000000000104: BF8C0F72
  v_mul_legacy_f32  v12, v11, v29                       // 000000000108: 0E183B0B
  v_mac_legacy_f32  v0, v9, v15                         // 00000000010C: 0C001F09
  v_mac_legacy_f32  v2, v9, v19                         // 000000000110: 0C042709
  v_mac_legacy_f32  v3, v10, v24                        // 000000000114: 0C06310A
  v_mac_legacy_f32  v12, v10, v28                       // 000000000118: 0C18390A
  s_movk_i32    s0, 0x0050                              // 00000000011C: B0000050
  s_mov_b32     m0, 0x00010000                          // 000000000120: BEFC03FF 00010000
  v_mac_legacy_f32  v0, v8, v14                         // 000000000128: 0C001D08
  v_mac_legacy_f32  v2, v8, v18                         // 00000000012C: 0C042508
  v_mac_legacy_f32  v3, v9, v23                         // 000000000130: 0C062F09
  v_mac_legacy_f32  v12, v9, v27                        // 000000000134: 0C183709
  v_mul_lo_i32  v1, v1, s0                              // 000000000138: D2D60001 00000101
  v_mac_legacy_f32  v3, v8, v22                         // 000000000140: 0C062D08
  v_mac_legacy_f32  v12, v8, v26                        // 000000000144: 0C183508
  ds_write2_b32  v1, v0, v2 offset0:16 offset1:17       // 000000000148: D8381110 00020001
  ds_write2_b32  v1, v3, v12 offset0:18 offset1:19      // 000000000150: D8381312 000C0301
  ds_write2_b32  v1, v4, v5 offset1:1                   // 000000000158: D8380100 00050401
  ds_write2_b32  v1, v6, v7 offset0:2 offset1:3         // 000000000160: D8380302 00070601
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000168: BF8C0F71
  v_mul_legacy_f32  v0, v11, v37                        // 00000000016C: 0E004B0B
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000170: BF8C0F70
  v_mul_legacy_f32  v2, v11, v41                        // 000000000174: 0E04530B
  ds_write2_b32  v1, v30, v31 offset0:4 offset1:5       // 000000000178: D8380504 001F1E01
  v_mac_legacy_f32  v0, v10, v36                        // 000000000180: 0C00490A
  v_mac_legacy_f32  v2, v10, v40                        // 000000000184: 0C04510A
  ds_write2_b32  v1, v32, v33 offset0:6 offset1:7       // 000000000188: D8380706 00212001
  v_mac_legacy_f32  v0, v9, v35                         // 000000000190: 0C004709
  v_mac_legacy_f32  v2, v9, v39                         // 000000000194: 0C044F09
  ds_write2_b32  v1, v42, v43 offset0:8 offset1:9       // 000000000198: D8380908 002B2A01
  v_mac_legacy_f32  v0, v8, v34                         // 0000000001A0: 0C004508
  v_mac_legacy_f32  v2, v8, v38                         // 0000000001A4: 0C044D08
  ds_write2_b32  v1, v44, v45 offset0:10 offset1:11     // 0000000001A8: D8380B0A 002D2C01
  ds_write2_b32  v1, v0, v2 offset0:12 offset1:13       // 0000000001B0: D8380D0C 00020001
  s_endpgm                                              // 0000000001B8: BF810000
end


// Approximately 22 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VInstancedPosition3dTexTGCxformEAlpha[] =
{
     68,  88,  66,  67, 223,  88, 
     52, 157,  60,  27,  27, 144, 
    151,  82, 157, 217,  90,  49, 
    240, 163,   1,   0,   0,   0, 
    248,  16,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    188,   1,   0,   0,  52,   2, 
      0,   0, 216,   2,   0,   0, 
     92,  16,   0,   0,  82,  68, 
     69,  70, 128,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
     68,   1,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      2,   0,   0,   0, 128,   0, 
      0,   0,   0,  12,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 208,   0,   0,   0, 
      0,   0,   0,   0,   0,   6, 
      0,   0,   2,   0,   0,   0, 
    232,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
     12,   1,   0,   0,   0,   6, 
      0,   0,   0,   6,   0,   0, 
      2,   0,   0,   0,  32,   1, 
      0,   0,   0,   0,   0,   0, 
    255, 255, 255, 255,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 118, 102, 
    109, 117, 110, 105, 102, 111, 
    114, 109, 115,   0, 102, 108, 
    111,  97, 116,  52, 120,  52, 
      0, 171, 171, 171,   3,   0, 
      3,   0,   4,   0,   4,   0, 
     24,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    220,   0,   0,   0, 118, 102, 
    117, 110, 105, 102, 111, 114, 
    109, 115,   0, 102, 108, 111, 
     97, 116,  52,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  23,   1,   0,   0, 
     77, 105,  99, 114, 111, 115, 
    111, 102, 116,  32,  40,  82, 
     41,  32,  72,  76,  83,  76, 
     32,  83, 104,  97, 100, 101, 
    114,  32,  67, 111, 109, 112, 
    105, 108, 101, 114,  32,  70, 
    111, 114,  32,  68, 117, 114, 
     97, 110, 103, 111,  32,  57, 
     46,  51,  48,  46,  49,  50, 
     48,  57,  56,  46,  48,   0, 
     73,  83,  71,  78, 112,   0, 
      0,   0,   3,   0,   0,   0, 
      8,   0,   0,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,  15,   0,   0,  86,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,  15,   0,   0,  98,   0, 
      0,   0,   0,   0,   0,   0, 
      8,   0,   0,   0,   1,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   1,   0,   0,  67,  79, 
     76,  79,  82,   0,  83,  86, 
     95,  80, 111, 115, 105, 116, 
    105, 111, 110,   0,  83,  86, 
     95,  73, 110, 115, 116,  97, 
    110,  99, 101,  73,  68,   0, 
     79,  83,  71,  78, 156,   0, 
      0,   0,   5,   0,   0,   0, 
      8,   0,   0,   0, 128,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0, 134,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 134,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
     15,   0,   0,   0, 134,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
      3,  12,   0,   0, 143,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   4,   0,   0,   0, 
     15,   0,   0,   0,  67,  79, 
     76,  79,  82,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
    124,  13,   0,   0,  80,   0, 
      1,   0,  95,   3,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 209,   0,   0,   0, 
     80,   0,   1,   0, 204,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   8,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      1,   0,   0,   0,  96,   0, 
      0,   4,  18,  16,  16,   0, 
      2,   0,   0,   0,   8,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   1,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   2,   0, 
      0,   0, 101,   0,   0,   3, 
     50,  32,  16,   0,   3,   0, 
      0,   0, 103,   0,   0,   4, 
    242,  32,  16,   0,   4,   0, 
      0,   0,   1,   0,   0,   0, 
    104,   0,   0,   2,   1,   0, 
      0,   0,  54,   0,   0,   5, 
    242,  32,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  41,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,  16, 
     16,   0,   2,   0,   0,   0, 
      1,  64,   0,   0,   2,   0, 
      0,   0,  86,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
      1,  64,   0,   0, 205, 204, 
    204,  61,  28,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   8, 242,  32,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   6,   0,   0,   0,   0, 
     96,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
    140,   0,   0,  20, 114,   0, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0,  30,   0, 
      0,   0,  30,   0,   0,   0, 
     30,   0,   0,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      2,   0,   0,   0,   2,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   6,  16, 
     16,   0,   2,   0,   0,   0, 
      2,  64,   0,   0,   2,   0, 
      0,   0,   2,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  86,   0,   0,   5, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,  10, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0, 205, 204, 
    204,  61, 205, 204, 140,  63, 
    205, 204, 204,  61,   0,   0, 
      0,   0,  28,   0,   0,   5, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   8, 242,  32,  16,   0, 
      2,   0,   0,   0,  70, 142, 
     32,   6,   0,   0,   0,   0, 
     96,   0,   0,   0,  42,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,  10,  18,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   6, 
      0,   0,   0,   0,  96,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,  10,  34,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   6,   0,   0, 
      0,   0,  96,   0,   0,   0, 
     26,   0,  16,   0,   0,   0, 
      0,   0,  86,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,  16,  16,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
      1,  64,   0,   0, 205, 204, 
    204,  61,  28,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  41,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,   2,   0, 
      0,   0,  17,   0,   0,   9, 
     18,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,  10, 
     34,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   6,   0,   0,   0,   0, 
      1,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,  10,  66,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   6, 
      0,   0,   0,   0,   2,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,  10, 130,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   6,   0,   0, 
      0,   0,   3,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 212,   0, 
      0,   0,  21,   0,   1,   0, 
     32, 120,  23,   0, 120,   1, 
    237, 152, 207,  79,  19,  65, 
     20, 199, 167, 211,  50, 108, 
    151, 233,  46, 242, 163, 252, 
    110,  33,  66, 209,  24,  11, 
    181, 136,  81,  67, 129,   0, 
     33,  96,  12,   6, 137, 167, 
     61,  88, 161,  21,  98, 105, 
    177, 173,  88,  77,  92,  11, 
    114,  36, 241,  32,  23,  19, 
    111, 122, 240, 175,   0,  76, 
     60,  66,  76, 188, 248,  71, 
    120, 211, 152, 112, 171, 223, 
    215, 221,   5,  18, 245, 172, 
     49, 251,  73, 190, 243, 246, 
    205, 204, 206, 188,  55,  51, 
    167,  87, 106,  97,  85, 196, 
    225, 151, 183, 100,  39,  50, 
    175, 159,  13, 122,  25, 171, 
     33,   7, 248, 168,   1, 107, 
     77, 212,  50,  54,  25, 164, 
    150, 177,  86, 106,  60,  16, 
    103, 236,  28, 140, 132, 118, 
    224, 143, 193, 210,  24, 245, 
    145,  44, 198, 246,  95, 161, 
     21,  80,  28,  50, 241, 207, 
     12, 108,   2, 210,  33, 234, 
     11,  64, 206, 158, 132,  66, 
     13, 168, 163,   6, 208,  86, 
    167, 161, 254,   8, 132, 165, 
    142, 113, 230, 208,  90,  72, 
    225, 132,  30, 106, 126, 207, 
     77, 232,  36, 206,  95, 161, 
    216, 156,  88,  40,  62,  90, 
    155, 160, 124, 255,  53,  40, 
    127, 231, 158,   8, 186, 143, 
    211, 104, 144, 115,  46,  62, 
    251,  30, 157,  41,  67, 182, 
     79, 103,  65, 185, 237,  67, 
    127, 162,   2, 156, 119, 225, 
    224, 248, 116,  31, 130, 205, 
     13,  10, 207, 203,  65,   1, 
     71,  96,  67, 129,  65, 129, 
    195,  19, 120,   0, 162,  22, 
    194, 129,  10,  63, 164,  66, 
    184,  72, 129,  13,   5,  14, 
     86,  32,  64, 129,   7,  33, 
    234, 161,  51,  80,   3, 212, 
      8,  33,  39, 209,  12,  33, 
     70, 129, 247,  42, 240, 192, 
     68,  27, 212,  14, 117,  64, 
    157,  80,  23,  20, 130, 194, 
     86,  44, 244, 214,   8, 225, 
    177,  50,  20, 156,  34, 131, 
    245,  58,  39, 240, 127,  67, 
    103, 224, 188,  91,  58,  11, 
    242,   9, 202, 222, 249, 118, 
    113, 113, 113, 113, 113, 113, 
    113, 113, 113, 113, 113, 113, 
    113, 113, 113, 249, 155, 240, 
    158, 205, 221,  53, 125, 123, 
    207,  27, 224, 102, 133, 115, 
    113, 120, 112,  48, 226, 209, 
    185, 201, 188,  91, 251, 155, 
    156,  15, 109, 240, 214, 217, 
     77, 222,  62, 251, 130, 119, 
    206,  62, 103, 219, 123, 172, 
    251, 251,  87,  79,  61,  47, 
    147, 149,  77, 150,  13, 180, 
     90,  86, 235, 228, 229,  77, 
    193, 134,  56, 219, 249, 252, 
    145, 169, 156,   7, 124, 102, 
    197,  39, 170, 107, 234, 213, 
     62, 193,  43,  62,  31, 252, 
    237,  81, 175,  46,  76,  22, 
     96,  38, 215,  49,  71, 136, 
    217, 187, 136, 165, 194,  88, 
    117,  46, 230,  84, 125, 166, 
     51,  19, 125, 213, 111,  61, 
     16,  50,  43,  33,  43,  62, 
    218, 203,  43, 173,  61, 121, 
    183, 101,  89,  47,  47,  83, 
    220, 200, 193, 250,  23, 125, 
     30, 198, 203, 143, 145,  91, 
     93, 127,  68,  91,  39,  59, 
     16, 213,  30, 145, 189,  50, 
    172,  21, 201, 142,  38, 180, 
      2, 217, 112,  72, 203, 147, 
    157,  14, 106, 106,  95,  68, 
    170,  23, 163,  82, 189,  60, 
     44, 213, 145, 132,  84, 187, 
     66,  82, 157,  10,  74, 255, 
    217, 136, 244,  95, 136,  74, 
    127, 124,  88, 250, 175,  39, 
    164, 191,  35,  36, 253,  19, 
     65, 169, 244,  68, 164, 114, 
     62,  42, 149, 216, 176,  84, 
    174,  38, 164, 210,  22, 146, 
    202, 120,  80, 150, 121, 189, 
    249, 141,  55, 152, 159,  20, 
    118, 212, 216, 210,  17, 214, 
     57,  59, 242, 213, 136, 218, 
    135, 216,  39, 140, 239, 222, 
    190,  72,  63, 157, 251,   0, 
    190, 153, 135, 123,  71,  97, 
    245,  58, 197, 207, 216, 198, 
     94,  51, 197,  15, 168, 146, 
     70, 106, 131, 168, 186, 230, 
    248, 245,  16, 225, 248,  36, 
      7,  31, 166, 102, 236,  26, 
    163,  97,  91, 154,  79, 181, 
     40, 237, 184,  10, 105, 177, 
    109, 143, 111, 217, 150, 234, 
     88,  84, 239, 157, 126, 242, 
     38, 240,  35,  59, 183, 251, 
    222, 238, 127, 103,  91,  90, 
     67, 133, 244, 249, 252, 135, 
    184,  93, 207, 222, 183, 199, 
     10,  16, 253, 159, 190, 102, 
    220,  75, 102, 146,  79,  11, 
    209,  98,  46, 159, 123,  16, 
     45,  20, 243, 169, 228, 234, 
     37,  99,  41, 181, 110, 164, 
     74, 197,  84,  62, 155, 204, 
     24, 247, 211, 165,  33, 227, 
    118, 126, 209, 152,  79, 101, 
    151,  82, 121,  99,  50,  62, 
     25,  43,  25, 183, 151, 147, 
    112,  10, 198, 157, 153, 108, 
    161, 152, 204,  46, 166, 150, 
    110, 229,  10,  43, 197, 149, 
     92,  54, 190, 180, 144,  42, 
     45,  76,  79, 148, 210, 185, 
    252, 234, 212, 120, 102, 109, 
     57,  25,  77, 103,  98, 177, 
    232, 114, 166, 144, 193, 166, 
     22,  55, 236, 144, 168, 124, 
     92,  11, 173,  38,  87, 178, 
    236,  39,  77, 163, 181,   3, 
      0,   0,  53,  16,   0,   0, 
    227,   0,   0,   0,  21,   0, 
      1,   0,  16, 240,  23,   0, 
    120,   1, 237, 152,  79, 111, 
     27,  69,  24, 198, 223,  29, 
     79,  39, 235, 205, 216,  78, 
     33,   5, 199, 117,  28,  71, 
    109, 213,  34,  32,  56, 141, 
     17,   8,   9,  72,  55, 169, 
     66,  83,  80,  80,  91, 245, 
    128, 246, 128, 105,  28,  18, 
    213, 177,  35, 219, 128, 249, 
    103, 220, 208,  99,  36,  14, 
    112,  65, 226,  27, 192,  71, 
     64,  77,  16,  28, 203,   5, 
    245,   3, 112, 224, 198,   5, 
    129, 122, 171, 100, 158, 103, 
    189,  27, 130, 128,  51,   8, 
    237,  79, 122, 230, 157, 247, 
    245, 236,  59, 239, 252, 241, 
    101, 126, 121,  84,  66, 126, 
    237, 223,  46, 211,  46,  53, 
     62, 255, 176, 146,  18,  57, 
     70,   7,  40,  54,  96, 103, 
    146, 173, 200, 215, 143, 176, 
     21, 201, 179, 113,  32,  12, 
     56,   7,  99, 161,   7, 240, 
     23,  97, 249,  27,  99, 212, 
    136, 197, 131,  79, 209, 166, 
    161,  10, 116,  93, 139, 220, 
    132, 125,   1,  42,  66, 231, 
    161,  44, 116,  20,  23, 122, 
      8,  26, 135,   8, 167,  58, 
     10, 115, 157, 133, 226, 250, 
     72, 220,  47,  64, 127, 202, 
     55, 203, 230, 239, 121,  13, 
    250, 163, 206, 191, 194, 218, 
    152,  47,  38, 206, 203, 245, 
    254, 215, 224,  30, 197, 231, 
     68, 120,  30,  71,  97, 237, 
    216, 250, 144,  70, 116, 142, 
    241, 144, 175,  34, 159, 123, 
    193, 181,  29,  64, 255, 196, 
     16, 196, 121,   8, 251,  85, 
    136, 240,  12, 140, 172,  85, 
    140, 243,  73, 197, 192,  49, 
    184,  75,   6,   3,  12,  46, 
    148,  49, 208,  24, 132, 195, 
     53,  56,  64, 227,  65,  56, 
     96, 131,   9,  77,   6,  66, 
    129,  38,   7,  77,  64, 199, 
     33,  92,   0, 243,  48, 132, 
     53, 153,  19,  16, 106,  52, 
    184, 175,   6,  23, 204,  76, 
     65,  56,  24, 115,  18, 194, 
     37,  50, 211,  80,   9, 154, 
    137, 238, 174, 102,  85, 240, 
    217,   0, 227, 140,  86, 106, 
     20,  43, 132,  77, 161, 176, 
    255,  49, 220,   3, 254, 135, 
     98,  70, 187,  33, 194,  85, 
    243, 138,  80,   9,   9,   9, 
      9,   9,   9,   9,   9,   9, 
      9,   9,   9,   9,   9,   9, 
      9, 255,  38, 106, 118, 247, 
    206,  78, 110, 111,  63, 149, 
    145, 190, 164, 110,  31,  12, 
     69, 204, 247, 119, 239,  62, 
     47,  57, 233, 239, 138,  84, 
     63, 146, 189, 125,  41, 255, 
    246, 179,  88,  53, 184,  37, 
    106, 117,  87, 244, 234, 199, 
     34, 171,  97,  44, 175,   6, 
    187,  70, 170, 194, 111, 225, 
     59,  19, 106, 112, 248,  61, 
    124,  53, 169,   6, 204, 131, 
    216, 234, 235, 156,  12,  49, 
     41, 242,  27,  85,  85, 242, 
    217,  15, 223,  41,  79, 169, 
    140, 238,  59,  97, 223, 168, 
    161,  54, 225, 183,  78,  70, 
    245, 135,  90, 163, 191, 247, 
     98,  42, 103, 250,  67, 165, 
    194, 184, 202, 233, 254, 208, 
    152,  48, 151, 195, 188,  90, 
     29, 230,  77, 149,  49,  23, 
    172, 115,  58, 172, 225,  48, 
    142,  21,  14, 222, 193, 250, 
    198, 103,  74,  89, 111, 186, 
    100,  45, 214, 248,  22, 253, 
    179, 197, 108, 250, 100, 201, 
    122, 103, 138, 182,  75, 255, 
    169,  66, 214, 157,  42, 217, 
    244, 169, 162, 245, 158,  44, 
    216, 241, 103, 242,  89, 119, 
    182, 104, 211, 143,  23, 172, 
    247, 116, 222, 186, 143,  21, 
    108, 122,   1, 118,  62, 111, 
    185,  39, 139, 139,  59,  63, 
     74, 206, 215, 203, 180,  89, 
     95, 191,  68, 155, 241, 245, 
    203, 180, 214, 215,  66, 171, 
    125, 173, 105, 143, 249, 218, 
    165,  53, 190, 182, 180,  99, 
    190, 126,  31, 115,  78, 176, 
     95, 244, 245,  36, 237, 180, 
    175,  63,  96,  29,  43, 110, 
     54,  79, 191, 228, 107, 239, 
    162, 107, 195, 216, 154, 151, 
     45,  50,  54, 227, 235, 244, 
    146, 107, 189,  87, 188,  48, 
     94, 102,  76, 144, 251, 130, 
    107, 211, 151,  61, 123, 154, 
    190,   3, 255, 146, 103, 207, 
    177, 175, 124, 253,   4, 109, 
    202, 215,  21,  90, 212,  83, 
    165,  69,  61,  34, 183, 246, 
     79, 112, 143,   0,  95, 234, 
    168,  41, 136, 175, 119, 177, 
    207, 247, 101,  18, 251,  19, 
     16, 137, 125,  42,   6,   9, 
    157, 159, 162, 183, 205, 123, 
    145, 229, 120, 196,  37, 123, 
    248, 250,  57,  66,  71, 111, 
    225,  15, 162, 113, 124,  63, 
    227, 251, 243, 202, 187,  95, 
    100, 238,  55, 215, 238, 148, 
    163, 223, 139, 145, 101,  14, 
     15, 202,  93, 105, 127, 243, 
    101,  20, 123,  54, 178,  29, 
    136, 223, 111,  60,  23, 188, 
     81, 107, 212, 222, 235, 204, 
    117,  91, 237, 214, 205, 185, 
     78, 183,  93, 175, 109, 159, 
     15, 214, 235, 111,   7, 245, 
     94, 183, 222, 110, 214,  26, 
    193, 155,  27, 189, 106, 112, 
    181, 125,  35, 184,  82, 111, 
    174, 215, 219, 193, 242, 194, 
    242, 124,  47, 184, 186,  89, 
    131, 211,   9, 174,  95, 106, 
    118, 186, 181, 230, 141, 250, 
    250, 171, 173, 206,  86, 119, 
    171, 213,  92,  88, 191,  86, 
    239,  93,  91,  89, 234, 109, 
    180, 218, 219,  23,  47,  52, 
    118,  54, 107, 115,  27, 141, 
    249, 249, 185, 205,  70, 167, 
    129,  73,  71, 124,  27, 149, 
    194, 167, 192,  49, 104, 187, 
    182, 213, 148, 223,   1, 209, 
    116, 210,  64,   0,  53,  16, 
      0,   0, 215,   0,   0,   0, 
     21,   0,   1,   0,   0, 160, 
     23,   0, 120,   1, 237, 152, 
    203, 107,  19,  81,  20, 198, 
     79, 102, 110,  79,  94,  55, 
    147,  90,  95,  99, 181, 173, 
     85, 180,  62,  99, 107, 235, 
    155, 162, 210,  74, 177,  34, 
    173,  86, 116, 225,  32,  70, 
    147, 218,  98, 154, 212,  36, 
    106,  20, 140,  53, 186,  44, 
    184, 113,  35,   8, 250,   7, 
    184, 112, 225,  82, 218,  10, 
     46,  43, 136, 160, 248,  39, 
      8,  46, 197, 157,  16, 191, 
    147, 153, 209,  46, 116, 173, 
    200, 252, 224, 187, 223, 156, 
    123, 239, 220, 123, 238,  99, 
    117, 159, 173, 166,   6,  31, 
    106,  93, 231, 196,   7, 114, 
    143, 239, 116, 155,  68,  77, 
     18,  44,  97, 122, 133, 148, 
     68, 185,  85,  82,  18,  53, 
    194,  16, 100,  16, 165,  96, 
     26, 122, 133, 248,   8,  92, 
    218, 182, 120, 114,  57, 178, 
    240,  20,  37,  67, 123, 161, 
    221,  24, 255,   2, 188,  31, 
    146, 190, 189,  80,   2,  18, 
    162,  82, 128, 136,  20, 192, 
    143,  49, 205,  79, 100,  90, 
    169, 239, 130,  48, 212,  79, 
    164,  94,  88,   6,  45, 173, 
    167,  78,  41, 126, 207,  41, 
     72, 242, 255,  19, 146, 155, 
    228, 226, 231, 225, 231,  41, 
    235, 253, 215, 144, 245, 251, 
    231,  36, 200, 121,  44, 197, 
    130, 252, 125, 217, 225, 157, 
    163, 223, 197, 241,  98, 255, 
     44,  23, 160,  63,  81,   7, 
     74,  62, 150, 224, 199, 114, 
     78,  76,  35, 221,  28, 122, 
    216, 205,   8,  24,  19,  50, 
     26,  25,  23, 138, 113,   1, 
     56,  12,  97,  67,  25,  27, 
    202,  49,  40,  14,  97,  66, 
    198, 198,  50,  18, 228,  36, 
    212,  12, 225,  16, 185,   5, 
     90,  14,  97,  77, 188,  18, 
     66, 142, 140, 251, 202,  54, 
    180,   6, 106, 133, 214,  66, 
    235, 160,  54, 168,  29, 234, 
    240, 238, 174, 114,  51, 146, 
     59,  39, 112, 200,  93,  41, 
     27, 146,  33, 220, 244, 119, 
    226, 255,  68, 246,  64, 238, 
    173, 143, 187,  27, 238, 249, 
    251,  87, 100,  84, 138, 128, 
    128, 128, 128, 128, 128, 128, 
    128, 128, 128, 128, 128, 128, 
    128, 128, 128, 191, 132, 209, 
     89, 155, 155,  78, 206, 206, 
    155,   9, 170, 214, 137, 248, 
    237, 226,  98,  63, 153,  15, 
     22,  40,  73, 213,  26,  81, 
    223,  61,  82, 195, 119, 105, 
    118, 158, 214, 127, 253,  66, 
    150,  49,  35, 110, 180,  24, 
     51,  53, 178, 135, 229,  91, 
    175,  50, 102, 238,  83, 235, 
    112, 141, 169, 175, 198, 170, 
    207, 164,  71, 239, 223,  80, 
    204,  48,  18, 170, 106,  38, 
    184,  90,  87, 202,  29, 179, 
     81, 207,  70, 157, 237,  70, 
    108,  36,  85, 181, 206, 140, 
    239, 217, 195, 132, 185, 117, 
    210, 150, 190, 195,  23, 145, 
    147, 153, 196, 127,  94,  46, 
    117, 219, 110, 212, 161, 111, 
    195,  37,  47, 180, 185, 223, 
    146,  75, 187, 155,  19, 109, 
    115,  61, 209, 234, 186, 222, 
    224, 186, 185, 217, 152, 185, 
    137, 245, 197,  55, 146, 117, 
     67, 124, 187, 178,  98, 157, 
    164,  99,  91, 149, 190,  46, 
    113,  47,  91,  69, 241,  67, 
    182,  21, 237,  32,  29, 237, 
     82,  58, 214, 195,  58, 118, 
    192, 214, 163,  68,  47, 234, 
    230, 247,  57, 121, 189, 139, 
    180, 145, 142, 108,  82,  58, 
    186, 139, 117, 116, 159, 173, 
     67, 244, 241, 189,  60, 117, 
     69, 118, 178, 142, 236, 177, 
    117, 243, 178, 253, 159,  66, 
    100,  80, 203, 114, 184, 169, 
    241,  11,  92,  53, 145,  97, 
    194,  57,  76, 215, 100, 142, 
     19, 100, 201,  94, 199, 199, 
    148, 165, 154,  80, 223, 222, 
     65, 177, 227, 200, 229, 148, 
    210,  28,  70, 188, 190, 147, 
    162,  67, 200,  97,  68, 233, 
     72,  20, 241, 182, 237,  20, 
     57, 134, 121,  79,  34, 167, 
     56, 226,  29,  59,  73,  39, 
    224, 141, 215, 191, 123, 243, 
     43,  81,  10,  18, 137, 214, 
     64, 242, 250, 230, 199, 205, 
    144, 224, 199,  34,  31, 133, 
    174, 143, 188, 183, 200,   7, 
    158,  75, 127, 121, 191, 178, 
     26, 163, 252, 226, 165, 215, 
    254, 220, 115, 121, 239, 138, 
     67,  67, 183, 158,  36, 190, 
    229,  71, 230, 222, 121, 245, 
    139, 158, 203,  24,  49,  40, 
    121, 186, 248, 250, 188, 247, 
    238, 253, 217, 107,  43,  65, 
    242, 255, 248,  65, 231,  82, 
     58, 151, 190,  93,  74, 149, 
     11, 197, 194, 213,  84, 169, 
     92, 204, 166, 167, 118,  59, 
    153, 236,  13,  39,  91,  41, 
    103, 139, 249, 116, 206, 185, 
     50,  94, 233, 115, 198, 138, 
    151, 157, 211, 217, 124,  38, 
     91, 116,   6, 123,   7, 123, 
     42, 206, 216,  68,  26,  65, 
    201,  57, 123,  60,  95,  42, 
    167, 243, 151, 179, 153, 209, 
     66, 105, 178,  60,  89, 200, 
    247, 102, 206, 100,  43, 103, 
    134,   6,  42, 227, 133, 226, 
    212, 177, 163, 185, 233, 137, 
    116, 106,  60, 215, 211, 147, 
    154, 200, 149, 114, 152, 212, 
    165, 228, 165,  36,  79, 119, 
     97, 104,  42,  61, 153, 167, 
     31, 201,  99, 184, 156,   0, 
     83,  84,  65,  84, 148,   0, 
      0,   0,  22,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   8,   0,   0,   0, 
      9,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   6,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0
};
