#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler_tex[0]                    sampler      NA          NA    0        1
// sampler_tex[1]                    sampler      NA          NA    1        1
// tex[0]                            texture  float4          2d    0        1
// tex[1]                            texture  float4          2d    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   x  w
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xy          3     NONE   float   xy  
// TEXCOORD                 3     zw        3     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[127]
// Embedded Data:
//  0x0000007f - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000007a - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v0.xw
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xy
dcl_input_ps linear v3.zw
dcl_output o0.xyzw
dcl_temps 2
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.zwzz, t1.xyzw, s1
add r0.xyzw, r0.xyzw, -r1.xyzw
mad r0.xyzw, v0.xxxx, r0.xyzw, r1.xyzw
mov r1.xyz, v2.xyzx
mov r1.w, l(1.000000)
mul r0.xyzw, r0.xyzw, r1.xyzw
mul r0.xyzw, r0.xyzw, v2.wwww
mad r0.xyzw, v1.xyzw, r0.wwww, r0.xyzw
mul o0.w, r0.w, v0.w
mov o0.xyz, r0.xyzx
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[127], bundle is:[188] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\FTexTGTexTGCxformAcEAlpha.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask  9, param0, paramSlot 0, DefaultVal={0,0,0,0};   [1] generic, usageIdx  1, channelMask 15, param1, paramSlot 1, DefaultVal={0,0,0,0};   [2] generic, usageIdx  2, channelMask 15, param2, paramSlot 2, DefaultVal={0,0,0,0};   [3] generic, usageIdx  3, channelMask 15, param3, paramSlot 3, DefaultVal={0,0,0,0}

codeLenInByte        = 272;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0:1]
extUserElementCount  = 4;
;  extUserElements 1[0] = IMM_RESOURCE, 0, offset 0:7 dwords
;  extUserElements 1[1] = IMM_RESOURCE, 1, offset 8:15 dwords
;  extUserElements 1[2] = IMM_SAMPLER, 0, offset 16:19 dwords
;  extUserElements 1[3] = IMM_SAMPLER, 1, offset 20:23 dwords
NumVgprs             = 15;
NumSgprs             = 30;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000003
; constBufUsage           = 0x00000000

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000004
SPIC:NUM_INTERP             = 4
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[28:29], exec                          // 000000000000: BE9C047E
  s_wqm_b64     exec, exec                              // 000000000004: BEFE0A7E
  s_mov_b32     m0, s2                                  // 000000000008: BEFC0302
  s_load_dwordx8  s[4:11], s[0:1], 0x00                 // 00000000000C: C0C20100
  s_load_dwordx8  s[20:27], s[0:1], 0x10                // 000000000010: C0CA0110
  v_interp_p1_f32  v2, v0, attr3.x                      // 000000000014: C8080C00
  v_interp_p1_f32  v3, v0, attr3.y                      // 000000000018: C80C0D00
  v_interp_p2_f32  v2, v1, attr3.x                      // 00000000001C: C8090C01
  v_interp_p2_f32  v3, v1, attr3.y                      // 000000000020: C80D0D01
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[6:9], v[2:3], s[4:11], s[20:23] dmask:0xf // 000000000028: F0800F00 00A10602
  s_load_dwordx8  s[12:19], s[0:1], 0x08                // 000000000030: C0C60108
  v_interp_p1_f32  v4, v0, attr3.z                      // 000000000034: C8100E00
  v_interp_p1_f32  v5, v0, attr3.w                      // 000000000038: C8140F00
  v_interp_p2_f32  v4, v1, attr3.z                      // 00000000003C: C8110E01
  v_interp_p2_f32  v5, v1, attr3.w                      // 000000000040: C8150F01
  s_waitcnt     lgkmcnt(0)                              // 000000000044: BF8C007F
  image_sample  v[2:5], v[4:5], s[12:19], s[24:27] dmask:0xf // 000000000048: F0800F00 00C30204
  v_interp_p1_f32  v10, v0, attr0.x                     // 000000000050: C8280000
  v_interp_p2_f32  v10, v1, attr0.x                     // 000000000054: C8290001
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000058: BF8C0F70
  v_sub_f32     v6, v6, v2                              // 00000000005C: 080C0506
  v_sub_f32     v7, v7, v3                              // 000000000060: 080E0707
  v_sub_f32     v8, v8, v4                              // 000000000064: 08100908
  v_sub_f32     v9, v9, v5                              // 000000000068: 08120B09
  v_interp_p1_f32  v11, v0, attr2.x                     // 00000000006C: C82C0800
  v_interp_p1_f32  v12, v0, attr2.y                     // 000000000070: C8300900
  v_interp_p1_f32  v13, v0, attr2.z                     // 000000000074: C8340A00
  v_interp_p1_f32  v14, v0, attr2.w                     // 000000000078: C8380B00
  v_mac_legacy_f32  v2, v10, v6                         // 00000000007C: 0C040D0A
  v_mac_legacy_f32  v3, v10, v7                         // 000000000080: 0C060F0A
  v_mac_legacy_f32  v4, v10, v8                         // 000000000084: 0C08110A
  v_mac_legacy_f32  v5, v10, v9                         // 000000000088: 0C0A130A
  v_interp_p1_f32  v6, v0, attr1.w                      // 00000000008C: C8180700
  v_interp_p1_f32  v7, v0, attr1.x                      // 000000000090: C81C0400
  v_interp_p1_f32  v8, v0, attr1.y                      // 000000000094: C8200500
  v_interp_p1_f32  v9, v0, attr1.z                      // 000000000098: C8240600
  v_interp_p2_f32  v11, v1, attr2.x                     // 00000000009C: C82D0801
  v_interp_p2_f32  v12, v1, attr2.y                     // 0000000000A0: C8310901
  v_interp_p2_f32  v13, v1, attr2.z                     // 0000000000A4: C8350A01
  v_interp_p2_f32  v14, v1, attr2.w                     // 0000000000A8: C8390B01
  v_interp_p1_f32  v0, v0, attr0.w                      // 0000000000AC: C8000300
  v_interp_p2_f32  v6, v1, attr1.w                      // 0000000000B0: C8190701
  v_mul_legacy_f32  v2, v2, v11                         // 0000000000B4: 0E041702
  v_mul_legacy_f32  v3, v3, v12                         // 0000000000B8: 0E061903
  v_mul_legacy_f32  v4, v4, v13                         // 0000000000BC: 0E081B04
  v_mul_legacy_f32  v5, v5, v14                         // 0000000000C0: 0E0A1D05
  v_interp_p2_f32  v7, v1, attr1.x                      // 0000000000C4: C81D0401
  v_interp_p2_f32  v8, v1, attr1.y                      // 0000000000C8: C8210501
  v_interp_p2_f32  v9, v1, attr1.z                      // 0000000000CC: C8250601
  v_interp_p2_f32  v0, v1, attr0.w                      // 0000000000D0: C8010301
  v_mul_legacy_f32  v2, v2, v14                         // 0000000000D4: 0E041D02
  v_mul_legacy_f32  v3, v3, v14                         // 0000000000D8: 0E061D03
  v_mul_legacy_f32  v4, v4, v14                         // 0000000000DC: 0E081D04
  v_mad_legacy_f32  v6, v6, v5, v5                      // 0000000000E0: D2800006 04160B06
  v_mac_legacy_f32  v2, v7, v5                          // 0000000000E8: 0C040B07
  v_mac_legacy_f32  v3, v8, v5                          // 0000000000EC: 0C060B08
  v_mac_legacy_f32  v4, v9, v5                          // 0000000000F0: 0C080B09
  v_mul_legacy_f32  v0, v6, v0                          // 0000000000F4: 0E000106
  s_mov_b64     exec, s[28:29]                          // 0000000000F8: BEFE041C
  v_cvt_pkrtz_f16_f32  v1, v2, v3                       // 0000000000FC: 5E020702
  v_cvt_pkrtz_f16_f32  v0, v4, v0                       // 000000000100: 5E000104
  exp           mrt0, v1, v1, v0, v0 compr vm           // 000000000104: F800140F 00000001
  s_endpgm                                              // 00000000010C: BF810000
end


// Approximately 12 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_FTexTGTexTGCxformAcEAlpha[] =
{
     68,  88,  66,  67, 245, 114, 
    148,  22,  11,  47, 251,  27, 
     89, 150, 183, 207,  96, 238, 
    209, 237,   1,   0,   0,   0, 
    196,   7,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     96,   1,   0,   0, 248,   1, 
      0,   0,  44,   2,   0,   0, 
     40,   7,   0,   0,  82,  68, 
     69,  70,  36,   1,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    255, 255,   0, 129,   0,   0, 
    232,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
    188,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0, 203,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   1,   0,   0,   0, 
      1,   0,   0,   0, 218,   0, 
      0,   0,   2,   0,   0,   0, 
      5,   0,   0,   0,   4,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0,   1,   0, 
      0,   0,  13,   0,   0,   0, 
    225,   0,   0,   0,   2,   0, 
      0,   0,   5,   0,   0,   0, 
      4,   0,   0,   0, 255, 255, 
    255, 255,   1,   0,   0,   0, 
      1,   0,   0,   0,  13,   0, 
      0,   0, 115,  97, 109, 112, 
    108, 101, 114,  95, 116, 101, 
    120,  91,  48,  93,   0, 115, 
     97, 109, 112, 108, 101, 114, 
     95, 116, 101, 120,  91,  49, 
     93,   0, 116, 101, 120,  91, 
     48,  93,   0, 116, 101, 120, 
     91,  49,  93,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  70, 111, 114, 
     32,  68, 117, 114,  97, 110, 
    103, 111,  32,  57,  46,  51, 
     48,  46,  49,  50,  48,  57, 
     56,  46,  48,   0,  73,  83, 
     71,  78, 144,   0,   0,   0, 
      5,   0,   0,   0,   8,   0, 
      0,   0, 128,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   9, 
      0,   0, 134,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,  15, 
      0,   0, 134,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,  15,  15, 
      0,   0, 134,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,   3,   3, 
      0,   0, 134,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  12,  12, 
      0,   0,  67,  79,  76,  79, 
     82,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88, 244,   4,   0,   0, 
     80,   0,   0,   0,  61,   1, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 127,   0, 
      0,   0,  80,   0,   0,   0, 
    122,   0,   0,   0, 106,   8, 
      0,   1,  90,   0,   0,   3, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  90,   0,   0,   3, 
      0,  96,  16,   0,   1,   0, 
      0,   0,  88,  24,   0,   4, 
      0, 112,  16,   0,   0,   0, 
      0,   0,  85,  85,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   1,   0,   0,   0, 
     85,  85,   0,   0,  98,  16, 
      0,   3, 146,  16,  16,   0, 
      0,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      1,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      2,   0,   0,   0,  98,  16, 
      0,   3,  50,  16,  16,   0, 
      3,   0,   0,   0,  98,  16, 
      0,   3, 194,  16,  16,   0, 
      3,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 104,   0, 
      0,   2,   2,   0,   0,   0, 
     69,   0,   0, 139, 194,   0, 
      0, 128,  67,  85,  21,   0, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  16,  16,   0, 
      3,   0,   0,   0,  70, 126, 
     16,   0,   0,   0,   0,   0, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 242,   0,  16,   0, 
      1,   0,   0,   0, 230,  26, 
     16,   0,   3,   0,   0,   0, 
     70, 126,  16,   0,   1,   0, 
      0,   0,   0,  96,  16,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   8, 242,   0,  16,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   0,   0,   0,   0, 
     70,  14,  16, 128,  65,   0, 
      0,   0,   1,   0,   0,   0, 
     50,   0,   0,   9, 242,   0, 
     16,   0,   0,   0,   0,   0, 
      6,  16,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   1,   0,   0,   0, 
     54,   0,   0,   5, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70,  18,  16,   0,   2,   0, 
      0,   0,  54,   0,   0,   5, 
    130,   0,  16,   0,   1,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  56,   0, 
      0,   7, 242,   0,  16,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   0,   0,   0,   0, 
     70,  14,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   7, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0, 246,  31, 
     16,   0,   2,   0,   0,   0, 
     50,   0,   0,   9, 242,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 130,  32, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  58,  16,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   5, 114,  32,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 190,   0,   0,   0, 
     21,   0,   1,   0,  41,   0, 
     11,   0, 120,   1, 237,  86, 
    205,  79,  19,  65,  20, 127, 
    179, 221, 238, 206, 126, 116, 
    183,  40, 104, 209,  22, 107, 
      2,  17,  19,  41,  22,  49, 
     65,  67,   2,  68, 212,  59, 
    112,  34,  27, 194,   2,  45, 
     24, 203,  71,  90,  98,  26, 
     19,  17, 111,  30,  56, 120, 
     49, 122,  80,  19, 111, 158, 
    252,   3,  52, 161, 141,  38, 
    102, 226,  81,  18, 245, 234, 
    205,  35,  23,  34,   7, 163, 
    190, 183, 187, 131, 123, 144, 
     27, 137, 198, 240,  75, 126, 
    239, 205, 111, 222, 236, 155, 
    207, 236,  12,  88,  16,  96, 
    235, 203,  78,  39, 249, 135, 
     79, 123,  78, 124, 101,   0, 
     73,  44, 163,  11,  60, 161, 
    206, 201,   2, 124,  54, 200, 
      2, 116, 147, 161,   6,  10, 
    128, 139, 174,   3, 153,  70, 
     61, 140, 158,  98, 146,  33, 
    134, 155, 175, 208, 182,  34, 
    169, 237,  71, 252, 102,  12, 
    253,  32,  82,  69, 246,  33, 
    105,  24, 148, 142, 128, 225, 
     61,  80, 156,  32, 125,  28, 
    109,  72, 249,  77,  22, 153, 
     64,  18, 200, 199, 115,  64, 
     23, 153,  63, 131, 198,  75, 
     99, 218,  15,  52,  54, 153, 
    139, 250, 138, 150,  43, 152, 
    239, 223,  70,  56, 247, 208, 
    202, 185, 203, 125,  34, 208, 
    126, 196, 225,  32, 101, 213, 
    253, 104,  31, 229, 186,  62, 
    142,  52, 173,   5, 205, 173, 
    137, 220,  15,  63,  17,  25, 
     42, 196,  32,  53, 229, 211, 
     32,  76, 166, 177,  83, 144, 
     39, 175, 244,   6, 235, 172, 
     37, 134,  96,  26, 253, 255, 
     14, 185, 166, 228, 233, 236, 
    164, 145, 241,  51,  70, 245, 
     67,  72, 128, 245,   6, 241, 
     65,   6, 118,  73,  73, 205, 
     80, 135, 103,  46, 212,   9, 
    210, 193,   6, 199,  52,  42, 
     69,  87, 166,  84,   6,  83, 
    110,  22, 118, 105,  95,  81, 
    123, 168, 189, 152, 158,  68, 
     61,  25, 211, 211, 168, 167, 
     99, 122,   6, 245, 140, 212, 
     50, 191,  27, 244, 167,   6, 
    251, 140, 149, 107, 255,  50, 
     15, 199, 120,  48,  60,  28, 
    227, 193, 240, 112, 140,   7, 
    198,   0, 107, 234, 147, 205, 
     53, 243, 199, 166, 146, 248, 
    190,   9, 236,  77,  51, 205, 
    222,  55, 193, 230,   2,  82, 
    182,  96, 182,  33,  88,  42, 
     37, 238, 194,  70,   3, 220, 
    245, 109,  69, 123,  14, 156, 
    189, 107, 130, 147,  22, 224, 
    182,  10, 230, 180,   8, 230, 
    182, 237, 197,  85, 229,  45, 
    102, 236,  22,  12, 206, 138, 
     21, 119, 163, 161,  37, 109, 
    174, 235,  14, 231,  70, 154, 
     27, 214,  17,  14, 252, 156, 
      0, 227, 188,   0, 179,  95, 
    128,  53,  32, 204, 148, 106, 
    155, 174, 102, 155,  45, 220, 
     54, 143, 154,  54, 232,  25, 
      1, 106,  86,  64,  50,  47, 
     64, 235,  20, 140, 247,   8, 
    102,  20,   5,  51,  47,  10, 
    102,  93,  18, 120,   9,  11, 
    166, 183,  11, 229, 184, 234, 
     36, 218,  53,  71,  61, 201, 
    157, 100, 206, 116, 152, 154, 
     19,  44, 121,  90,  48, 173, 
     75, 176,   4,  19,  74,  14, 
    227,  57, 140, 231, 184, 163, 
    193, 250,   7, 205,  58, 166, 
    234, 150, 106, 115,  75, 179, 
     13, 139, 219,  26,   3,  39, 
    171, 226, 156, 229, 255, 189, 
     85, 254, 159, 239,  53, 218, 
    209, 134, 101, 252, 127, 147, 
    137,   1, 175, 254,  32,  68, 
    134, 158,   1, 164, 131,  10, 
      4, 221,  65, 120, 239,   4, 
    154,  72, 111,  49, 210,  96, 
     98,   1, 177,  29, 221, 255, 
     81,  59, 124,  43,  80, 171, 
    223, 200,  71, 237,  50, 145, 
    167, 252, 244,  22, 186, 147, 
    254, 244, 237, 204, 179,  23, 
     29, 131,  81, 253,  64, 228, 
     41,   7,  21,  95,  62, 218, 
    233, 125,  29, 213,  77,  68, 
    126,  30,  73, 223, 151,  47, 
    123,  51, 126, 197, 191,  93, 
     43, 172,  46,  87, 151, 111, 
     22, 106, 171, 213, 146, 191, 
    216, 231, 205, 149, 110, 121, 
    165, 250, 106, 169, 186, 228, 
     87, 188, 249, 114, 189, 223, 
     27, 175, 206, 122,  99, 165, 
    165, 185,  82, 213,  27, 189, 
     48,  90, 172, 123, 227,  11, 
     62, 138, 154, 119, 109, 162, 
     84, 159, 184,  30, 152,  43, 
    245, 242, 114, 117, 113, 100, 
    246, 234,  72, 101, 101, 193, 
     47, 148,  43, 197,  98,  97, 
    161,  82, 171,  96,  71,  33, 
    182, 162, 238, 233,  73, 171, 
     35,  23, 253,  27,  75, 240, 
     11,  63, 106,  66,  47,   0, 
      0,   0,  83,  84,  65,  84, 
    148,   0,   0,   0,  12,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   6,   0, 
      0,   0,   6,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0
};
