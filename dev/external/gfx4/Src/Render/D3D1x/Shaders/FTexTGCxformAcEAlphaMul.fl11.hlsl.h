#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler_tex                       sampler      NA          NA    0        1
// tex                               texture  float4          2d    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float      w
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[96]
// Embedded Data:
//  0x00000060 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000005b - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v0.w
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 2
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0
mov r1.xyz, v2.xyzx
mov r1.w, l(1.000000)
mul r0.xyzw, r0.xyzw, r1.xyzw
mul r0.xyzw, r0.xyzw, v2.wwww
mad r0.xyzw, v1.xyzw, r0.wwww, r0.xyzw
mul r0.w, r0.w, v0.w
mul o0.xyz, r0.wwww, r0.xyzx
mov o0.w, r0.w
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[96], bundle is:[172] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\FTexTGCxformAcEAlphaMul.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask  8, param0, paramSlot 0, DefaultVal={0,0,0,0};   [1] generic, usageIdx  1, channelMask 15, param1, paramSlot 1, DefaultVal={0,0,0,0};   [2] generic, usageIdx  2, channelMask 15, param2, paramSlot 2, DefaultVal={0,0,0,0};   [3] generic, usageIdx  3, channelMask  3, param3, paramSlot 3, DefaultVal={0,0,0,0}

codeLenInByte        = 212;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0:1]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_RESOURCE, 0, offset 0:7 dwords
;  extUserElements 1[1] = IMM_SAMPLER, 0, offset 8:11 dwords
NumVgprs             = 11;
NumSgprs             = 14;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000000

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000004
SPIC:NUM_INTERP             = 4
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[12:13], exec                          // 000000000000: BE8C047E
  s_wqm_b64     exec, exec                              // 000000000004: BEFE0A7E
  s_mov_b32     m0, s2                                  // 000000000008: BEFC0302
  s_load_dwordx8  s[4:11], s[0:1], 0x00                 // 00000000000C: C0C20100
  s_load_dwordx4  s[0:3], s[0:1], 0x08                  // 000000000010: C0800108
  v_interp_p1_f32  v2, v0, attr3.x                      // 000000000014: C8080C00
  v_interp_p1_f32  v3, v0, attr3.y                      // 000000000018: C80C0D00
  v_interp_p2_f32  v2, v1, attr3.x                      // 00000000001C: C8090C01
  v_interp_p2_f32  v3, v1, attr3.y                      // 000000000020: C80D0D01
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[2:5], v[2:3], s[4:11], s[0:3] dmask:0xf // 000000000028: F0800F00 00010202
  v_interp_p1_f32  v6, v0, attr2.x                      // 000000000030: C8180800
  v_interp_p1_f32  v7, v0, attr2.y                      // 000000000034: C81C0900
  v_interp_p1_f32  v8, v0, attr2.z                      // 000000000038: C8200A00
  v_interp_p2_f32  v6, v1, attr2.x                      // 00000000003C: C8190801
  v_interp_p2_f32  v7, v1, attr2.y                      // 000000000040: C81D0901
  v_interp_p2_f32  v8, v1, attr2.z                      // 000000000044: C8210A01
  v_interp_p1_f32  v9, v0, attr2.w                      // 000000000048: C8240B00
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 00000000004C: BF8C0F70
  v_mul_legacy_f32  v2, v2, v6                          // 000000000050: 0E040D02
  v_mul_legacy_f32  v3, v3, v7                          // 000000000054: 0E060F03
  v_mul_legacy_f32  v4, v4, v8                          // 000000000058: 0E081104
  v_interp_p1_f32  v10, v0, attr1.w                     // 00000000005C: C8280700
  v_interp_p1_f32  v6, v0, attr1.x                      // 000000000060: C8180400
  v_interp_p1_f32  v7, v0, attr1.y                      // 000000000064: C81C0500
  v_interp_p1_f32  v8, v0, attr1.z                      // 000000000068: C8200600
  v_interp_p2_f32  v9, v1, attr2.w                      // 00000000006C: C8250B01
  v_interp_p1_f32  v0, v0, attr0.w                      // 000000000070: C8000300
  v_interp_p2_f32  v10, v1, attr1.w                     // 000000000074: C8290701
  v_mul_legacy_f32  v5, v5, v9                          // 000000000078: 0E0A1305
  v_mul_legacy_f32  v2, v2, v9                          // 00000000007C: 0E041302
  v_mul_legacy_f32  v3, v3, v9                          // 000000000080: 0E061303
  v_mul_legacy_f32  v4, v4, v9                          // 000000000084: 0E081304
  v_interp_p2_f32  v6, v1, attr1.x                      // 000000000088: C8190401
  v_interp_p2_f32  v0, v1, attr0.w                      // 00000000008C: C8010301
  v_interp_p2_f32  v7, v1, attr1.y                      // 000000000090: C81D0501
  v_mad_legacy_f32  v9, v10, v5, v5                     // 000000000094: D2800009 04160B0A
  v_interp_p2_f32  v8, v1, attr1.z                      // 00000000009C: C8210601
  v_mac_legacy_f32  v2, v6, v5                          // 0000000000A0: 0C040B06
  v_mul_legacy_f32  v0, v9, v0                          // 0000000000A4: 0E000109
  v_mac_legacy_f32  v3, v7, v5                          // 0000000000A8: 0C060B07
  v_mul_legacy_f32  v1, v2, v0                          // 0000000000AC: 0E020102
  v_mac_legacy_f32  v4, v8, v5                          // 0000000000B0: 0C080B08
  v_mul_legacy_f32  v2, v3, v0                          // 0000000000B4: 0E040103
  v_mul_legacy_f32  v3, v4, v0                          // 0000000000B8: 0E060104
  s_mov_b64     exec, s[12:13]                          // 0000000000BC: BEFE040C
  v_cvt_pkrtz_f16_f32  v1, v1, v2                       // 0000000000C0: 5E020501
  v_cvt_pkrtz_f16_f32  v0, v3, v0                       // 0000000000C4: 5E000103
  exp           mrt0, v1, v1, v0, v0 compr vm           // 0000000000C8: F800140F 00000001
  s_endpgm                                              // 0000000000D0: BF810000
end


// Approximately 10 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_FTexTGCxformAcEAlphaMul[] =
{
     68,  88,  66,  67,  39, 182, 
    145,   2,  11, 166, 220,  93, 
    200,  11, 251,  93,  28, 109, 
    184,  93,   1,   0,   0,   0, 
    148,   6,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
      4,   1,   0,   0, 132,   1, 
      0,   0, 184,   1,   0,   0, 
    248,   5,   0,   0,  82,  68, 
     69,  70, 200,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    255, 255,   0, 129,   0,   0, 
    140,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
    124,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   0,   0,   5,   0, 
      0,   0,   4,   0,   0,   0, 
    255, 255, 255, 255,   0,   0, 
      0,   0,   1,   0,   0,   0, 
     13,   0,   0,   0, 115,  97, 
    109, 112, 108, 101, 114,  95, 
    116, 101, 120,   0, 116, 101, 
    120,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
    120,   0,   0,   0,   4,   0, 
      0,   0,   8,   0,   0,   0, 
    104,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   8,   0,   0, 
    110,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,  15,   0,   0, 
    110,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  15,  15,   0,   0, 
    110,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,   3,   3,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0, 171,  79,  83, 
     71,  78,  44,   0,   0,   0, 
      1,   0,   0,   0,   8,   0, 
      0,   0,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,  83,  86,  95,  84, 
     97, 114, 103, 101, 116,   0, 
    171, 171,  83,  72,  69,  88, 
     56,   4,   0,   0,  80,   0, 
      0,   0,  14,   1,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0,  96,   0,   0,   0, 
     80,   0,   0,   0,  91,   0, 
      0,   0, 106,   8,   0,   1, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  98,  16, 
      0,   3, 130,  16,  16,   0, 
      0,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      1,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      2,   0,   0,   0,  98,  16, 
      0,   3,  50,  16,  16,   0, 
      3,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 104,   0, 
      0,   2,   2,   0,   0,   0, 
     69,   0,   0, 139, 194,   0, 
      0, 128,  67,  85,  21,   0, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  16,  16,   0, 
      3,   0,   0,   0,  70, 126, 
     16,   0,   0,   0,   0,   0, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,  18,  16,   0, 
      2,   0,   0,   0,  54,   0, 
      0,   5, 130,   0,  16,   0, 
      1,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     56,   0,   0,   7, 242,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  14,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   7, 242,   0,  16,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   0,   0,   0,   0, 
    246,  31,  16,   0,   2,   0, 
      0,   0,  50,   0,   0,   9, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,  14,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  58,  16, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,  32, 
     16,   0,   0,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   5, 130,  32,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 174,   0,   0,   0, 
     21,   0,   1,   0,  41, 162, 
     10,   0, 120,   1, 237,  86, 
     49, 111, 211,  80,  16, 190, 
    103,  59, 142,  19,  59,  14, 
     85,  80, 213,  74, 173, 104, 
     37,  42,  10,  67,  74,  90, 
     38,  36, 164,  86,  20,  88, 
     90, 134, 180,  83, 101, 170, 
    184, 173, 211,  32, 156, 164, 
    114,  82,  20,  33,  20, 194, 
    136, 148, 129, 129,   1,  86, 
    196, 200,  31,  64, 160,  36, 
      2, 134,  55,  32,   6, 196, 
    200, 192, 204, 148, 177,   3, 
     42, 220, 217, 126, 173,  85, 
    209,  45,  18,   8, 229, 147, 
    190,  59, 127, 126, 231, 243, 
    217, 239, 233, 221, 123, 153, 
      4,  31, 111, 158, 191, 237, 
    147, 191,  84, 201, 255, 112, 
     25,  64,  12, 175, 209, 249, 
    158, 208, 208, 200,   2,  60, 
     76, 144,   5, 152,  37,  67, 
      1,  18, 128, 142, 206,  68, 
    126,  69,  46,  34, 105,  76, 
     48, 192,  98, 239,   5, 218, 
     51, 200,  52, 242,  54,  62, 
    179, 130, 126,  14,  41,  35, 
     47,  32,  41,  45, 165,  35, 
      8,  79, 160, 113, 130,  66, 
    230,   4,  40, 159, 136,  29, 
     69,  98,  90,  31, 228, 163, 
     57,  96, 134, 204, 159,  49, 
    143, 164, 250,  79,   3, 213, 
     38, 114, 145,  15,  63, 223, 
    255, 222, 191, 141, 160, 174, 
    168,  61, 158,  39,   2, 205, 
     71,  20,  84, 179, 136,  91, 
      9,  63,  68, 252,  51,  43, 
    212,  98,  46, 123, 200, 211, 
    240,  11,  97, 208,  69,   4, 
     66, 211,  60, 169,  16,  20, 
    161, 178, 115,  48,  69,  94, 
    154, 243, 215, 133,  42,  47, 
     64,   1, 253, 255,  14, 177, 
     86, 201, 211, 255,  21, 235, 
     94, 128, 238,  95,  70,   2, 
    180, 186, 196, 167,  99, 112, 
     64,  74, 104, 134,  58, 152, 
    167,  64, 203, 164, 253, 137, 
    138, 104,  84,  44,  38, 109, 
    202,  12,  54, 211,  19,  71, 
    218,  66, 109,  69, 244,   6, 
    234, 141, 136,  46, 160,  46, 
     68, 244,  22, 234,  45, 161, 
     69, 254, 180, 255,  62, 217, 
    159, 103, 188, 217, 252, 151, 
     57, 172, 113,  48,  28, 214, 
     56,  24,  14, 107,  28,  24, 
    125,  52, 149, 118, 167, 153, 
     60, 236,  72, 242, 207,  14, 
    176, 247,  61, 141, 181, 122, 
     96, 104,  28,  82,   6, 103, 
     70, 130, 179,  84, 138,  63, 
    130, 118,  23, 210, 173, 190, 
     36, 225,  46, 166, 141, 113, 
     72,  76, 112,  72,  78, 113, 
    166, 141, 115, 150, 152, 228, 
     44,  57, 205,  65,  63, 207, 
    247, 210, 237, 174, 148,  82, 
     76,  57, 173, 154, 202, 136, 
    102,  66, 124, 150, 131, 130, 
    241,  49, 140,  87,  49,  94, 
    159, 225, 120, 224, 224,  44, 
    126, 145, 199,  50,  73,  83, 
    202,  96, 108,   6,  99,  51, 
    154, 201,  20, 204,  37,  51, 
    206,  98, 147,  60,   1, 173, 
     47,  73, 125,  84,  97, 234, 
     52,  87, 117, 197,  72,  48, 
     48, 227, 186, 106,  72,  76, 
     50,  53,  93,  51, 100, 166, 
    152,  56, 104,  26, 202,  97, 
      7, 247, 216,  96, 143,  62, 
     43, 246, 216, 199, 221, 113, 
    180, 193, 245, 113, 255,  21, 
    192, 206, 201, 196,  24, 117, 
     81, 236,  21, 236,  85, 216, 
    155, 159, 133, 158, 250,   9, 
    245,  16, 243,  40,  75, 128, 
    143, 225, 248, 187, 208, 211, 
    243, 212, 207,  63, 172, 126, 
    206, 247, 175, 105, 159, 190, 
    135, 247, 191, 133, 158, 114, 
    208, 241, 239, 201, 235, 221, 
    145,  59, 225,  57, 240,  32, 
     28, 115, 144, 244, 124, 241, 
    170, 181, 101, 187, 246, 131, 
     90, 182,  94, 245, 170, 247, 
    178, 181, 186, 231, 216, 229, 
    121, 107, 199, 185, 111,  57, 
    141, 186, 227,  85, 108, 215, 
    218,  45,  54, 174,  88, 107, 
    222, 182, 149, 119,  42,  59, 
    142, 103,  45,  47,  44, 231, 
     26, 214,  90, 201,  70,  81, 
    179, 110, 174,  59, 141, 245, 
     91, 215,  27, 197, 170,  87, 
     94, 218, 190, 177, 228, 238, 
    149, 236, 213, 125,  55,  91, 
    116, 115, 185, 108, 201, 173, 
    185, 248, 154,   0, 251,  97, 
     17, 116, 232, 140,  35, 203, 
    246, 221,  10, 252,   6, 105, 
     12,  53,  85,   0,  83,  84, 
     65,  84, 148,   0,   0,   0, 
     10,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      5,   0,   0,   0,   5,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0
};
