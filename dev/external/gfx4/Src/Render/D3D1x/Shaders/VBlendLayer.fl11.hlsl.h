#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4 vfuniforms[192];            // Offset:    0 Size:  3072
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// COLOR                    1   x           1     NONE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xy          2     NONE   float   xy  
// TEXCOORD                 3     zw        2     NONE   float     zw
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[192]
// Embedded Data:
//  0x000000c0 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000bb - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[192], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.x
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.zw
dcl_output_siv o3.xyzw, position
dcl_temps 2
ishl r0.x, v1.x, l(3)
utof r0.x, r0.x
add r0.x, r0.x, l(0.100000)
ftou r0.x, r0.x
mov o0.xyzw, cb0[r0.x + 0].xyzw
bfi r0.xyz, l(29, 29, 29, 0), l(3, 3, 3, 0), v1.xxxx, l(2, 4, 1, 0)
utof r0.xyz, r0.xyzx
add r1.xyz, r0.yyzy, l(2.100000, 3.100000, 0.100000, 0.000000)
add r0.xyzw, r0.xxyy, l(0.100000, 1.100000, 0.100000, 1.100000)
ftou r0.xyzw, r0.xyzw
ftou r1.xyz, r1.xyzx
mov o1.xyzw, cb0[r1.z + 0].xyzw
dp4 o2.x, v0.xyzw, cb0[r0.z + 0].xyzw
dp4 o2.y, v0.xyzw, cb0[r0.w + 0].xyzw
dp4 o2.z, v0.xyzw, cb0[r1.x + 0].xyzw
dp4 o2.w, v0.xyzw, cb0[r1.y + 0].xyzw
dp4 o3.x, v0.xyzw, cb0[r0.x + 0].xyzw
dp4 o3.y, v0.xyzw, cb0[r0.y + 0].xyzw
mov o3.zw, l(0,0,0,1.000000)
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[192], bundle is:[200] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBlendLayer.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  1, v8
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [2] generic, usageIdx  2, paramIdx 2, paramSlot 0

codeLenInByte        = 380;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 36;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000004
SVOC:VS_EXPORT_COUNT        = 2
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_lshlrev_b32  v0, 3, v8                              // 000000000008: 34001083
  v_bfi_b32     v1, -8, v0, 2                           // 00000000000C: D2940001 020A00C8
  v_cvt_f32_u32  v1, v1                                 // 000000000014: 7E020D01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v3, 0x3dcccccd, v1                      // 00000000001C: 060602FF 3DCCCCCD
  v_add_f32     v1, 0x3f8ccccd, v1                      // 000000000024: 060202FF 3F8CCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000002C: 7E020F01
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  tbuffer_load_format_xyzw  v[16:19], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000034: EBF32000 80021001
  v_bfi_b32     v2, -8, v0, 4                           // 00000000003C: D2940002 021200C8
  v_cvt_f32_u32  v2, v2                                 // 000000000044: 7E040D02
  v_add_f32     v9, 0x40066666, v2                      // 000000000048: 061204FF 40066666
  v_add_f32     v11, 0x3dcccccd, v2                     // 000000000050: 061604FF 3DCCCCCD
  v_cvt_u32_f32  v11, v11                               // 000000000058: 7E160F0B
  v_cvt_u32_f32  v9, v9                                 // 00000000005C: 7E120F09
  v_lshlrev_b32  v8, 3, v8                              // 000000000060: 34101083
  v_add_f32     v10, 0x40466666, v2                     // 000000000064: 061404FF 40466666
  v_cvt_f32_u32  v1, v8                                 // 00000000006C: 7E020D08
  tbuffer_load_format_xyzw  v[20:23], v11, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000070: EBF32000 8002140B
  tbuffer_load_format_xyzw  v[28:31], v9, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000078: EBF32000 80021C09
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000080: 060404FF 3F8CCCCD
  v_add_f32     v1, 0x3dcccccd, v1                      // 000000000088: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v3, v3                                 // 000000000090: 7E060F03
  v_cvt_u32_f32  v2, v2                                 // 000000000094: 7E040F02
  v_cvt_u32_f32  v1, v1                                 // 000000000098: 7E020F01
  tbuffer_load_format_xyzw  v[12:15], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000009C: EBF32000 80020C03
  tbuffer_load_format_xyzw  v[24:27], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A4: EBF32000 80021802
  tbuffer_load_format_xyzw  v[32:35], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80022001
  v_cvt_u32_f32  v10, v10                               // 0000000000B4: 7E140F0A
  v_bfi_b32     v0, -8, v0, 1                           // 0000000000B8: D2940000 020600C8
  v_cvt_f32_u32  v0, v0                                 // 0000000000C0: 7E000D00
  tbuffer_load_format_xyzw  v[8:11], v10, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C4: EBF32000 8002080A
  v_add_f32     v0, 0x3dcccccd, v0                      // 0000000000CC: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v0, v0                                 // 0000000000D4: 7E000F00
  tbuffer_load_format_xyzw  v[0:3], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D8: EBF32000 80020000
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000E0: BF8C0F74
  v_mul_legacy_f32  v15, v7, v15                        // 0000000000E4: 0E1E1F07
  v_mul_legacy_f32  v19, v7, v19                        // 0000000000E8: 0E262707
  v_mac_legacy_f32  v15, v6, v14                        // 0000000000EC: 0C1E1D06
  v_mac_legacy_f32  v19, v6, v18                        // 0000000000F0: 0C262506
  v_mul_legacy_f32  v14, v7, v23                        // 0000000000F4: 0E1C2F07
  s_waitcnt     vmcnt(3) & lgkmcnt(15)                  // 0000000000F8: BF8C0F73
  v_mul_legacy_f32  v18, v7, v27                        // 0000000000FC: 0E243707
  v_mul_legacy_f32  v23, v7, v31                        // 000000000100: 0E2E3F07
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000104: BF8C0F71
  v_mul_legacy_f32  v7, v7, v11                         // 000000000108: 0E0E1707
  v_mac_legacy_f32  v14, v6, v22                        // 00000000010C: 0C1C2D06
  v_mac_legacy_f32  v18, v6, v26                        // 000000000110: 0C243506
  v_mac_legacy_f32  v23, v6, v30                        // 000000000114: 0C2E3D06
  v_mac_legacy_f32  v7, v6, v10                         // 000000000118: 0C0E1506
  v_mac_legacy_f32  v15, v5, v13                        // 00000000011C: 0C1E1B05
  v_mac_legacy_f32  v19, v5, v17                        // 000000000120: 0C262305
  v_mac_legacy_f32  v14, v5, v21                        // 000000000124: 0C1C2B05
  v_mac_legacy_f32  v18, v5, v25                        // 000000000128: 0C243305
  v_mac_legacy_f32  v23, v5, v29                        // 00000000012C: 0C2E3B05
  v_mac_legacy_f32  v7, v5, v9                          // 000000000130: 0C0E1305
  v_mac_legacy_f32  v15, v4, v12                        // 000000000134: 0C1E1904
  v_mac_legacy_f32  v19, v4, v16                        // 000000000138: 0C262104
  v_mov_b32     v6, 0                                   // 00000000013C: 7E0C0280
  v_mov_b32     v10, 1.0                                // 000000000140: 7E1402F2
  v_mac_legacy_f32  v14, v4, v20                        // 000000000144: 0C1C2904
  v_mac_legacy_f32  v18, v4, v24                        // 000000000148: 0C243104
  v_mac_legacy_f32  v23, v4, v28                        // 00000000014C: 0C2E3904
  v_mac_legacy_f32  v7, v4, v8                          // 000000000150: 0C0E1104
  exp           pos0, v15, v19, v6, v10 done            // 000000000154: F80008CF 0A06130F
  exp           param0, v32, v33, v34, v35              // 00000000015C: F800020F 23222120
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000164: BF8C0F70
  exp           param1, v0, v1, v2, v3                  // 000000000168: F800021F 03020100
  exp           param2, v14, v18, v23, v7               // 000000000170: F800022F 0717120E
  s_endpgm                                              // 000000000178: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[394], bundle is:[213] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBlendLayer.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  1, v8
; Output Semantic Mappings
;   [0] position, usageIdx  3, paramIdx 3, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0

codeLenInByte        = 488;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 37;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 16
; esGsRingItemSize          = 16

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_lshlrev_b32  v0, 3, v8                              // 000000000008: 34001083
  v_bfi_b32     v1, -8, v0, 2                           // 00000000000C: D2940001 020A00C8
  v_cvt_f32_u32  v1, v1                                 // 000000000014: 7E020D01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v2, 0x3dcccccd, v1                      // 00000000001C: 060402FF 3DCCCCCD
  v_add_f32     v1, 0x3f8ccccd, v1                      // 000000000024: 060202FF 3F8CCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000002C: 7E020F01
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  tbuffer_load_format_xyzw  v[13:16], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000034: EBF32000 80020D01
  v_cvt_u32_f32  v2, v2                                 // 00000000003C: 7E040F02
  v_lshlrev_b32  v1, 3, v8                              // 000000000040: 34021083
  v_cvt_f32_u32  v1, v1                                 // 000000000044: 7E020D01
  v_add_f32     v1, 0x3dcccccd, v1                      // 000000000048: 060202FF 3DCCCCCD
  tbuffer_load_format_xyzw  v[9:12], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000050: EBF32000 80020902
  v_cvt_u32_f32  v1, v1                                 // 000000000058: 7E020F01
  tbuffer_load_format_xyzw  v[17:20], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000005C: EBF32000 80021101
  v_bfi_b32     v2, -8, v0, 4                           // 000000000064: D2940002 021200C8
  v_bfi_b32     v0, -8, v0, 1                           // 00000000006C: D2940000 020600C8
  v_cvt_f32_u32  v2, v2                                 // 000000000074: 7E040D02
  v_cvt_f32_u32  v0, v0                                 // 000000000078: 7E000D00
  v_add_f32     v3, 0x3dcccccd, v2                      // 00000000007C: 060604FF 3DCCCCCD
  v_add_f32     v1, 0x40066666, v2                      // 000000000084: 060204FF 40066666
  v_add_f32     v0, 0x3dcccccd, v0                      // 00000000008C: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v3, v3                                 // 000000000094: 7E060F03
  v_cvt_u32_f32  v1, v1                                 // 000000000098: 7E020F01
  v_cvt_u32_f32  v0, v0                                 // 00000000009C: 7E000F00
  tbuffer_load_format_xyzw  v[21:24], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A0: EBF32000 80021503
  tbuffer_load_format_xyzw  v[29:32], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A8: EBF32000 80021D00
  tbuffer_load_format_xyzw  v[33:36], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B0: EBF32000 80022101
  v_add_f32     v8, 0x3f8ccccd, v2                      // 0000000000B8: 061004FF 3F8CCCCD
  v_cvt_u32_f32  v8, v8                                 // 0000000000C0: 7E100F08
  v_add_f32     v2, 0x40466666, v2                      // 0000000000C4: 060404FF 40466666
  v_cvt_u32_f32  v2, v2                                 // 0000000000CC: 7E040F02
  tbuffer_load_format_xyzw  v[25:28], v8, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D0: EBF32000 80021908
  tbuffer_load_format_xyzw  v[0:3], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D8: EBF32000 80020002
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 0000000000E0: BF8C0F76
  v_mul_legacy_f32  v8, v7, v12                         // 0000000000E4: 0E101907
  s_load_dwordx4  s[8:11], s[2:3], 0x0c                 // 0000000000E8: C084030C
  v_mac_legacy_f32  v8, v6, v11                         // 0000000000EC: 0C101706
  v_mul_legacy_f32  v11, v7, v16                        // 0000000000F0: 0E162107
  v_mac_legacy_f32  v8, v5, v10                         // 0000000000F4: 0C101505
  v_mac_legacy_f32  v11, v6, v15                        // 0000000000F8: 0C161F06
  v_mac_legacy_f32  v8, v4, v9                          // 0000000000FC: 0C101304
  v_mac_legacy_f32  v11, v5, v14                        // 000000000100: 0C161D05
  v_mac_legacy_f32  v11, v4, v13                        // 000000000104: 0C161B04
  v_mov_b32     v9, 0                                   // 000000000108: 7E120280
  s_waitcnt     lgkmcnt(0)                              // 00000000010C: BF8C007F
  buffer_store_dword  v8, v0, s[8:11], s4 offset:48 glc slc // 000000000110: E0704030 04420800
  v_mov_b32     v8, 1.0                                 // 000000000118: 7E1002F2
  buffer_store_dword  v11, v0, s[8:11], s4 offset:52 glc slc // 00000000011C: E0704034 04420B00
  buffer_store_dword  v9, v0, s[8:11], s4 offset:56 glc slc // 000000000124: E0704038 04420900
  buffer_store_dword  v8, v0, s[8:11], s4 offset:60 glc slc // 00000000012C: E070403C 04420800
  s_waitcnt     vmcnt(9) & lgkmcnt(15)                  // 000000000134: BF8C0F79
  buffer_store_dword  v17, v0, s[8:11], s4 glc slc      // 000000000138: E0704000 04421100
  buffer_store_dword  v18, v0, s[8:11], s4 offset:4 glc slc // 000000000140: E0704004 04421200
  s_waitcnt     vmcnt(10) & lgkmcnt(15)                 // 000000000148: BF8C0F7A
  v_mul_legacy_f32  v8, v7, v24                         // 00000000014C: 0E103107
  buffer_store_dword  v19, v0, s[8:11], s4 offset:8 glc slc // 000000000150: E0704008 04421300
  v_mac_legacy_f32  v8, v6, v23                         // 000000000158: 0C102F06
  s_waitcnt     vmcnt(8) & lgkmcnt(15)                  // 00000000015C: BF8C0F78
  v_mul_legacy_f32  v9, v7, v28                         // 000000000160: 0E123907
  buffer_store_dword  v20, v0, s[8:11], s4 offset:12 glc slc // 000000000164: E070400C 04421400
  v_mac_legacy_f32  v8, v5, v22                         // 00000000016C: 0C102D05
  v_mac_legacy_f32  v9, v6, v27                         // 000000000170: 0C123706
  v_mul_legacy_f32  v10, v7, v36                        // 000000000174: 0E144907
  buffer_store_dword  v29, v0, s[8:11], s4 offset:16 glc slc // 000000000178: E0704010 04421D00
  v_mac_legacy_f32  v8, v4, v21                         // 000000000180: 0C102B04
  v_mac_legacy_f32  v9, v5, v26                         // 000000000184: 0C123505
  v_mac_legacy_f32  v10, v6, v35                        // 000000000188: 0C144706
  s_waitcnt     vmcnt(9) & lgkmcnt(15)                  // 00000000018C: BF8C0F79
  v_mul_legacy_f32  v3, v7, v3                          // 000000000190: 0E060707
  buffer_store_dword  v30, v0, s[8:11], s4 offset:20 glc slc // 000000000194: E0704014 04421E00
  v_mac_legacy_f32  v9, v4, v25                         // 00000000019C: 0C123304
  v_mac_legacy_f32  v10, v5, v34                        // 0000000001A0: 0C144505
  v_mac_legacy_f32  v3, v6, v2                          // 0000000001A4: 0C060506
  buffer_store_dword  v31, v0, s[8:11], s4 offset:24 glc slc // 0000000001A8: E0704018 04421F00
  v_mac_legacy_f32  v10, v4, v33                        // 0000000001B0: 0C144304
  v_mac_legacy_f32  v3, v5, v1                          // 0000000001B4: 0C060305
  buffer_store_dword  v32, v0, s[8:11], s4 offset:28 glc slc // 0000000001B8: E070401C 04422000
  v_mac_legacy_f32  v3, v4, v0                          // 0000000001C0: 0C060104
  buffer_store_dword  v8, v0, s[8:11], s4 offset:32 glc slc // 0000000001C4: E0704020 04420800
  buffer_store_dword  v9, v0, s[8:11], s4 offset:36 glc slc // 0000000001CC: E0704024 04420900
  buffer_store_dword  v10, v0, s[8:11], s4 offset:40 glc slc // 0000000001D4: E0704028 04420A00
  buffer_store_dword  v3, v0, s[8:11], s4 offset:44 glc slc // 0000000001DC: E070402C 04420300
  s_endpgm                                              // 0000000001E4: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[609], bundle is:[205] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBlendLayer.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  1, v8
; Output Semantic Mappings
;   [0] position, usageIdx  3, paramIdx 3, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0

codeLenInByte        = 432;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 43;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 16
; lsStride                  = 64

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_lshlrev_b32  v0, 3, v8                              // 000000000008: 34001083
  v_bfi_b32     v2, -8, v0, 2                           // 00000000000C: D2940002 020A00C8
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000014: C0840300
  v_cvt_f32_u32  v2, v2                                 // 000000000018: 7E040D02
  v_add_f32     v3, 0x3dcccccd, v2                      // 00000000001C: 060604FF 3DCCCCCD
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000024: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v3, v3                                 // 00000000002C: 7E060F03
  v_cvt_u32_f32  v2, v2                                 // 000000000030: 7E040F02
  s_waitcnt     lgkmcnt(0)                              // 000000000034: BF8C007F
  tbuffer_load_format_xyzw  v[9:12], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000038: EBF32000 80020903
  tbuffer_load_format_xyzw  v[13:16], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 80020D02
  v_bfi_b32     v3, -8, v0, 4                           // 000000000048: D2940003 021200C8
  v_lshlrev_b32  v2, 3, v8                              // 000000000050: 34041083
  v_bfi_b32     v0, -8, v0, 1                           // 000000000054: D2940000 020600C8
  v_cvt_f32_u32  v2, v2                                 // 00000000005C: 7E040D02
  v_cvt_f32_u32  v0, v0                                 // 000000000060: 7E000D00
  v_add_f32     v2, 0x3dcccccd, v2                      // 000000000064: 060404FF 3DCCCCCD
  v_add_f32     v0, 0x3dcccccd, v0                      // 00000000006C: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v2, v2                                 // 000000000074: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 000000000078: 7E000F00
  tbuffer_load_format_xyzw  v[19:22], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000007C: EBF32000 80021302
  tbuffer_load_format_xyzw  v[39:42], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000084: EBF32000 80022700
  v_cvt_f32_u32  v3, v3                                 // 00000000008C: 7E060D03
  v_add_f32     v8, 0x3dcccccd, v3                      // 000000000090: 061006FF 3DCCCCCD
  v_add_f32     v17, 0x3f8ccccd, v3                     // 000000000098: 062206FF 3F8CCCCD
  v_add_f32     v18, 0x40066666, v3                     // 0000000000A0: 062406FF 40066666
  v_add_f32     v3, 0x40466666, v3                      // 0000000000A8: 060606FF 40466666
  v_cvt_u32_f32  v8, v8                                 // 0000000000B0: 7E100F08
  v_cvt_u32_f32  v17, v17                               // 0000000000B4: 7E220F11
  v_cvt_u32_f32  v18, v18                               // 0000000000B8: 7E240F12
  v_cvt_u32_f32  v3, v3                                 // 0000000000BC: 7E060F03
  tbuffer_load_format_xyzw  v[23:26], v8, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C0: EBF32000 80021708
  tbuffer_load_format_xyzw  v[27:30], v17, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C8: EBF32000 80021B11
  tbuffer_load_format_xyzw  v[31:34], v18, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D0: EBF32000 80021F12
  tbuffer_load_format_xyzw  v[35:38], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D8: EBF32000 80022303
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 0000000000E0: BF8C0F77
  v_mul_legacy_f32  v0, v7, v12                         // 0000000000E4: 0E001907
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 0000000000E8: BF8C0F76
  v_mul_legacy_f32  v2, v7, v16                         // 0000000000EC: 0E042107
  v_mac_legacy_f32  v0, v6, v11                         // 0000000000F0: 0C001706
  v_mac_legacy_f32  v2, v6, v15                         // 0000000000F4: 0C041F06
  v_mac_legacy_f32  v0, v5, v10                         // 0000000000F8: 0C001505
  v_mac_legacy_f32  v2, v5, v14                         // 0000000000FC: 0C041D05
  s_mov_b32     m0, 0x00010000                          // 000000000100: BEFC03FF 00010000
  v_mac_legacy_f32  v0, v4, v9                          // 000000000108: 0C001304
  v_mac_legacy_f32  v2, v4, v13                         // 00000000010C: 0C041B04
  v_lshlrev_b32  v1, 6, v1                              // 000000000110: 34020286
  ds_write2_b32  v1, v0, v2 offset0:12 offset1:13       // 000000000114: D8380D0C 00020001
  v_mov_b32     v0, 0                                   // 00000000011C: 7E000280
  v_mov_b32     v2, 1.0                                 // 000000000120: 7E0402F2
  ds_write2_b32  v1, v0, v2 offset0:14 offset1:15       // 000000000124: D8380F0E 00020001
  s_waitcnt     vmcnt(3) & lgkmcnt(15)                  // 00000000012C: BF8C0F73
  v_mul_legacy_f32  v0, v7, v26                         // 000000000130: 0E003507
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 000000000134: BF8C0F72
  v_mul_legacy_f32  v2, v7, v30                         // 000000000138: 0E043D07
  ds_write2_b32  v1, v19, v20 offset1:1                 // 00000000013C: D8380100 00141301
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000144: BF8C0F71
  v_mul_legacy_f32  v3, v7, v34                         // 000000000148: 0E064507
  v_mac_legacy_f32  v0, v6, v25                         // 00000000014C: 0C003306
  v_mac_legacy_f32  v2, v6, v29                         // 000000000150: 0C043B06
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000154: BF8C0F70
  v_mul_legacy_f32  v7, v7, v38                         // 000000000158: 0E0E4D07
  ds_write2_b32  v1, v21, v22 offset0:2 offset1:3       // 00000000015C: D8380302 00161501
  v_mac_legacy_f32  v0, v5, v24                         // 000000000164: 0C003105
  v_mac_legacy_f32  v2, v5, v28                         // 000000000168: 0C043905
  v_mac_legacy_f32  v3, v6, v33                         // 00000000016C: 0C064306
  v_mac_legacy_f32  v7, v6, v37                         // 000000000170: 0C0E4B06
  ds_write2_b32  v1, v39, v40 offset0:4 offset1:5       // 000000000174: D8380504 00282701
  v_mac_legacy_f32  v0, v4, v23                         // 00000000017C: 0C002F04
  v_mac_legacy_f32  v2, v4, v27                         // 000000000180: 0C043704
  v_mac_legacy_f32  v3, v5, v32                         // 000000000184: 0C064105
  v_mac_legacy_f32  v7, v5, v36                         // 000000000188: 0C0E4905
  ds_write2_b32  v1, v41, v42 offset0:6 offset1:7       // 00000000018C: D8380706 002A2901
  v_mac_legacy_f32  v3, v4, v31                         // 000000000194: 0C063F04
  v_mac_legacy_f32  v7, v4, v35                         // 000000000198: 0C0E4704
  ds_write2_b32  v1, v0, v2 offset0:8 offset1:9         // 00000000019C: D8380908 00020001
  ds_write2_b32  v1, v3, v7 offset0:10 offset1:11       // 0000000001A4: D8380B0A 00070301
  s_endpgm                                              // 0000000001AC: BF810000
end


// Approximately 20 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VBlendLayer[] =
{
     68,  88,  66,  67, 120, 178, 
    110, 168, 114, 169, 247,  82, 
     33, 106,  91, 126, 165, 160, 
    209, 255,   1,   0,   0,   0, 
    176,  15,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     88,   1,   0,   0, 172,   1, 
      0,   0,  76,   2,   0,   0, 
     20,  15,   0,   0,  82,  68, 
     69,  70,  28,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
    224,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      1,   0,   0,   0, 128,   0, 
      0,   0,   0,  12,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 168,   0,   0,   0, 
      0,   0,   0,   0,   0,  12, 
      0,   0,   2,   0,   0,   0, 
    188,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 102, 
    108, 111,  97, 116,  52,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0, 192,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 179,   0, 
      0,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
     76,   0,   0,   0,   2,   0, 
      0,   0,   8,   0,   0,   0, 
     56,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,  15,   0,   0, 
     68,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0,   1,   1,   0,   0, 
     83,  86,  95,  80, 111, 115, 
    105, 116, 105, 111, 110,   0, 
     67,  79,  76,  79,  82,   0, 
    171, 171,  79,  83,  71,  78, 
    152,   0,   0,   0,   5,   0, 
      0,   0,   8,   0,   0,   0, 
    128,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
    128,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    128,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   3,  12,   0,   0, 
    128,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  12,   3,   0,   0, 
    137,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,  15,   0,   0,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171, 171, 171, 
     83,  72,  69,  88, 192,  12, 
      0,   0,  80,   0,   1,   0, 
     48,   3,   0,   0,  53,  16, 
      0,   0,   5,   0,   0,   0, 
    192,   0,   0,   0,  80,   0, 
      1,   0, 187,   0,   0,   0, 
    106,   8,   0,   1,  89,   8, 
      0,   4,  70, 142,  32,   0, 
      0,   0,   0,   0, 192,   0, 
      0,   0,  95,   0,   0,   3, 
    242,  16,  16,   0,   0,   0, 
      0,   0,  95,   0,   0,   3, 
     18,  16,  16,   0,   1,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   1,   0, 
      0,   0, 101,   0,   0,   3, 
     50,  32,  16,   0,   2,   0, 
      0,   0, 101,   0,   0,   3, 
    194,  32,  16,   0,   2,   0, 
      0,   0, 103,   0,   0,   4, 
    242,  32,  16,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
    104,   0,   0,   2,   2,   0, 
      0,   0,  41,   0,   0,   7, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,  16,  16,   0, 
      1,   0,   0,   0,   1,  64, 
      0,   0,   3,   0,   0,   0, 
     86,   0,   0,   5,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,   0,   0,   0,   7, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,   1,  64, 
      0,   0, 205, 204, 204,  61, 
     28,   0,   0,   5,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   7, 
    242,  32,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
    140,   0,   0,  20, 114,   0, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0,  29,   0, 
      0,   0,  29,   0,   0,   0, 
     29,   0,   0,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   6,  16, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   2,   0, 
      0,   0,   4,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  86,   0,   0,   5, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,  10, 114,   0,  16,   0, 
      1,   0,   0,   0,  86,   6, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0, 102, 102, 
      6,  64, 102, 102,  70,  64, 
    205, 204, 204,  61,   0,   0, 
      0,   0,   0,   0,   0,  10, 
    242,   0,  16,   0,   0,   0, 
      0,   0,   6,   5,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0, 205, 204, 204,  61, 
    205, 204, 140,  63, 205, 204, 
    204,  61, 205, 204, 140,  63, 
     28,   0,   0,   5, 242,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  14,  16,   0,   0,   0, 
      0,   0,  28,   0,   0,   5, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  54,   0, 
      0,   7, 242,  32,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     42,   0,  16,   0,   1,   0, 
      0,   0,  17,   0,   0,   9, 
     18,  32,  16,   0,   2,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     42,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,   9, 
     34,  32,  16,   0,   2,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,   9, 
     66,  32,  16,   0,   2,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     10,   0,  16,   0,   1,   0, 
      0,   0,  17,   0,   0,   9, 
    130,  32,  16,   0,   2,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     26,   0,  16,   0,   1,   0, 
      0,   0,  17,   0,   0,   9, 
     18,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,   9, 
     34,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     26,   0,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   8, 
    194,  32,  16,   0,   3,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    202,   0,   0,   0,  21,   0, 
      1,   0,  32,  70,  23,   0, 
    120,   1, 237, 152,  75, 107, 
     19,  81,  20, 199, 239, 220, 
     76,  78, 218, 244, 118,  38, 
     77, 211, 151,  77, 211, 180, 
    198, 168, 168, 105, 107,  43, 
     82, 165,  52,  72,  41,  34, 
     66, 193, 170,  32, 204,  38, 
    218, 196, 138, 233, 195,  36, 
     72,  21,  25,  83, 235, 178, 
     11,   5, 241,  27,   8, 110, 
     68,  55, 110, 109, 151,  46, 
     42, 130,  11,  63, 132, 118, 
     33, 186, 233,  46, 254, 207, 
     60,  52,  11, 187,  86, 112, 
    126, 240, 191, 103, 238, 220, 
    199,  57, 247, 158, 187,  58, 
    179,  61, 194,  97,  46, 253, 
    124, 153, 237, 171, 111, 159, 
    231, 119, 165,  16,  97, 238, 
      0, 157,  27, 176, 154, 224, 
     86, 136, 227, 221, 220,  10, 
    145, 228,  70, 131,  48,  55, 
      3, 163, 160,   7, 232, 231, 
     97, 121, 236, 136,  39, 151, 
    252, 246,  83, 180,   4, 141, 
     64,  54, 214,  92, 128, 157, 
    132,  76, 104,  28, 106, 133, 
    124,  95,  76,  11,  55,  32, 
    194,  13,  96,  87, 205,  24, 
    208,  48,  20, 130, 124, 252, 
     57,  28, 139,  31, 191, 195, 
     16,  55, 127, 230,  60, 196, 
    241, 239,   7, 199, 230, 199, 
    194, 241, 113, 156,  12, 251, 
    248, 215, 224, 243, 251, 121, 
     98,  56,  31, 205, 240, 157, 
    249, 247, 181, 219, 197, 237, 
    239,  59,  75, 122, 121, 245, 
    115, 185,  13, 237,  71,   3, 
     52, 231, 138, 241, 251,  72, 
     45, 242,  60,  55,  74, 218, 
    186,  32, 116,   8,  14,   9, 
    131, 132, 132,  16,  30,   0, 
     33, 161, 132,  11,  37,  92, 
     36,  69, 161,  54,   8,  14, 
    169,  29,  66, 128, 132,   7, 
     65,  49, 168,   3, 138,  67, 
    157,  16, 206,  68, 136, 151, 
     16,  35, 225, 189,  82,  47, 
    212,   7,  29, 128, 250,  33, 
     60,  56,  26, 128,  82, 208, 
    160, 123,  70, 126, 107,  12, 
    105, 238,   9,  73, 114, 100, 
    255,  15, 124,   7, 205, 239, 
    150, 229, 211, 252,  29,  16, 
     16,  16,  16,  16,  16,  16, 
     16,  16,  16,  16,  16,  16, 
     16,  16, 240, 183, 144,  67, 
    143, 222, 173, 154, 155,  91, 
     27,  49,  49, 161, 137, 103, 
    159, 222, 139, 168, 212, 218, 
    165,  45,  66, 143, 183,  27, 
    146, 232, 195, 206, 206,  84, 
     67,  74, 216, 205, 105, 205, 
    148, 246,  67, 177, 185,  37, 
    210,  63, 190, 106,  49,  89, 
    151, 206, 252, 184, 148, 237, 
    186, 221, 208, 227,  84,  42, 
     81, 190, 161, 119,  59, 107, 
    218, 204, 110, 187, 213, 140, 
    219,  27, 177, 216,  68,  67, 
     79,  96, 108,  54, 223, 194, 
    251,  98, 109,  91,  66, 214, 
    217, 182,  38, 101, 189, 161, 
    235, 206, 222, 174, 143, 157, 
    169, 144,  73, 182,  52, 117, 
    155, 125, 241, 156, 144, 114, 
    231, 202,  94, 215, 106, 105, 
     89, 143, 154,   9,  91,  56, 
    190,  73, 138, 118, 225, 204, 
    139, 182,  96,  47,  33, 156, 
     61, 132, 233, 254, 195, 233, 
    234,  53, 156,  45,  50, 152, 
     50,  34, 135, 179,   6,  13, 
    164,  20,  29, 202, 170, 200, 
     72, 210, 168, 242, 255, 211, 
     25,  35,  50, 157,  51, 238, 
    240, 119, 143,  97, 208, 137, 
    164, 162,  83,  25,  69,  83, 
     57,  69,  93, 134,  10, 247, 
    167,  84, 248,  96,  86, 133, 
    143,  37,  85, 120,  60, 163, 
    194, 103, 115,  42, 220, 105, 
     40, 189,  47, 165, 244, 161, 
    172, 170,  75, 101, 127, 151, 
      9,  91,  63, 154,  84, 250, 
     88,  70, 233, 147,  57, 165, 
    119,  24, 234,  99, 139, 216, 
     51,  59,  41, 106,  74, 177, 
    151,  30,  26,  62, 200, 247, 
     59, 136, 111, 161, 201, 208, 
      8, 172,  17, 239, 137,   8, 
    177, 190, 229, 149,   6, 157, 
     90,  30, 171,  15, 226,  42, 
    154, 223, 143,  65, 140, 223, 
    103, 249, 232, 152, 122, 217, 
    171,  37, 206, 120, 150, 231, 
    115, 205, 201, 248,  85, 109, 
    116, 169, 121, 227, 101, 207, 
    114, 189, 170,  13, 202, 190, 
    126, 241, 133, 174, 236, 188, 
    125, 226, 253, 223, 244,  44, 
    239,  17, 133,  70, 211, 111, 
    150,  52, 175, 110, 253, 210, 
     27, 187,   6, 241, 250, 210, 
     25, 235, 122, 161,  92, 184, 
     95, 205, 213,  86,  42,  43, 
    183, 115, 213,  90, 165,  88, 
     88,  58, 105,  45,  20, 239, 
     90, 197, 181,  90, 177, 178, 
     92,  40,  91,  55,  75, 107, 
     19, 214, 124, 229, 134, 117, 
    169, 184, 188,  80, 172,  88, 
     51, 227,  51,  99, 107, 214, 
    252,  98,   1, 157, 170, 117, 
    245,  92,  25, 191,  47,  22, 
    238,  21,  43, 185,  82, 121, 
    108,  44, 183,  88, 174, 150, 
    177, 181,  75, 159, 231, 152, 
     11, 204, 184,  45, 177,  84, 
    184, 181,  44, 126,   2,  53, 
    104, 162, 182,   0,   0,   0, 
     53,  16,   0,   0, 215,   0, 
      0,   0,  21,   0,   1,   0, 
     16, 194,  23,   0, 120,   1, 
    237, 152, 207, 107,  19,  65, 
     20, 199, 103,  39, 147, 151, 
    180, 157,  38, 219,  52, 233, 
     15, 251,  91, 170,  20, 170, 
    181, 177, 241,  39,  45,  13, 
    107,  85,  68,  65, 176, 248, 
     11, 246,  18, 219, 196, 138, 
    233,  15, 210,  82, 218, 130, 
     49, 181,  30, 123, 172, 224, 
     63,  32, 120,  17, 189, 120, 
    181, 197, 131, 120, 136,  32, 
     30,  60, 123,  44, 234, 161, 
    232,  31,  16, 191, 111, 179, 
     91, 138, 216, 179,  34, 251, 
    129, 239, 190, 121,  51, 111, 
    102, 222, 236, 219, 189, 204, 
    219, 102, 225, 112, 121,  45, 
    248, 142, 237, 139, 157, 207, 
    227, 223, 165,  16,  65, 118, 
      0, 154,  14, 115, 113, 126, 
     10, 241, 188, 137, 159,  66, 
    180, 240, 195, 128,  16, 112, 
      8,  70,  67, 219, 240, 211, 
    176,  60, 214, 231, 170,  74, 
    122, 107,   3, 207,  26, 168, 
     31,  58, 169, 132, 152, 128, 
     29, 134, 218, 160,  33, 136, 
    231, 239,  37,  12, 153,  16, 
    207,  97, 120, 171, 189,  68, 
    160, 131,  80,   0, 242, 240, 
    114, 229, 253, 163, 208,  46, 
     61, 252, 248,  51,  55,  33, 
    206, 127,  63,  56,  55,  94, 
    207, 195, 203, 243, 247, 124, 
    255,   5, 248,  29, 121, 117, 
     98, 184,  30, 123, 225, 119, 
    134,  87, 239, 112, 203, 173, 
    163,  23, 242, 212, 245, 189, 
     90, 110,  65, 251,  81,   1, 
    222,  58,  12, 183,  83,  16, 
    195,  53,  32, 113, 117, 144, 
    140,  85,  65, 112,   8,   5, 
     34,   4,  16,  62,  40,  34, 
     40,   4, 161, 184, 132, 194, 
     82,  45,  84,   7,  97,  67, 
    170, 135, 144,  32, 161, 112, 
    132, 194,  83,   3,  20, 131, 
     26,  33, 156, 137,  18,  16, 
    114,  36, 124, 175, 132, 130, 
     80,  43, 116,   0, 194,   7, 
     68, 237,  80,   7, 212,   9, 
    117, 185, 103,  12,  84, 191, 
     12, 108, 233,  64,  70, 245, 
    164,  36,  57, 195, 255,  31, 
    126,   7, 252,  15, 121,  56, 
    239, 196, 133, 255,  43, 150, 
    143, 143, 143, 143, 143, 143, 
    143, 143, 143, 143, 143, 143, 
    143, 143, 143, 207, 223,  68, 
    246,  60, 122,  51,  23,  93, 
    223,  92,  51,  69, 202,  16, 
     27, 159, 222, 139,  90, 105, 
    212, 203, 162,   8,  60, 222, 
    170,  72,  69,  31, 202, 229, 
    145, 138, 148, 176, 235, 163, 
     70,  84,  22,  31, 138, 245, 
     77, 209, 253, 243,  27,  98, 
     74,  50, 170, 138, 107, 166, 
     76, 113, 124,  53, 166,  60, 
    194,  99, 178,  70, 150,  56, 
    214, 137, 107,  64, 156, 179, 
    110,  76,  10, 199, 146, 148, 
    245, 170,  40, 234,  69, 177, 
    162, 200, 153,  83,  81, 146, 
    114,  57,  74,  87, 132, 112, 
    252,  64, 148, 138, 206, 252, 
    168, 112, 214,   8,  36, 100, 
    137, 173, 232, 168,  90, 163, 
     71, 150,  42, 202,  68, 236, 
    250, 104,  56, 106,  98,  29, 
    133, 249,  23, 210, 156,  15, 
    143, 135,  91, 171, 113,  82, 
    200, 210,  34, 206,  22, 106, 
     53,  35,  26, 231, 161, 102, 
     83, 135, 122, 154,  34, 193, 
    132, 169, 169, 171,  73, 171, 
     70,  83,   7,  59,  96, 219, 
    154, 116,  73, 198, 156, 179, 
     13, 166, 231, 190, 136, 176, 
    165, 126,  72, 179, 152, 226, 
    118, 157, 165,  78, 179, 173, 
    177, 212,  48,  91, 140,  45, 
     99,  77, 193, 237,   6,  75, 
     41, 182,  49,  75, 173, 240, 
     62,  73,  51,  18, 102, 191, 
    209,  82, 116, 204, 212,  75, 
    220, 119,  38,  22, 209, 220, 
     23, 183,  84, 240,  40, 246, 
     61,  21, 211, 161,  75, 241, 
    136, 201, 125,  29, 152, 223, 
    143,  28,  78, 196,  52,  93, 
    140, 107,  94,  55,  20, 162, 
     72, 156, 199,  58,  49,  54, 
     20, 211, 193, 243, 113,  77, 
     65, 210,  45, 220, 215, 133, 
    190, 115, 113,  29,  12, 144, 
    110, 103, 191,  27, 190,  65, 
    186, 155, 219, 200, 171, 151, 
     45, 242, 236,  99,  91, 107, 
    169,  35, 108,   3, 150,  18, 
     98, 117,  51, 193, 197,   6, 
    124,  43, 199, 106, 133, 248, 
    166, 206, 243, 189, 187,  87, 
    207, 247, 238, 173,  60, 159, 
    229, 129,   5, 141, 143, 238, 
     61, 230, 150, 107,  57,  30, 
    253,  34, 178, 123, 211,  89, 
    101, 199,  29, 223, 118,  45, 
    223, 149, 213,  65, 135,  95, 
     62, 251,  74, 215, 203, 175, 
    181, 123,  47,  30, 118,  45, 
    175,  81,  11,  13, 118, 191, 
    154, 126, 224, 246, 245, 186, 
    246,  54, 196, 243, 115, 103, 
    237,  59, 153, 124, 102, 101, 
    126,  96,  97, 182,  48, 123, 
    127,  96, 126, 161, 144, 205, 
     76,  31, 183,  39, 179, 139, 
    118, 118, 105,  33,  91, 152, 
    201, 228, 237, 187, 185, 165, 
    148,  61,  94, 152, 176, 175, 
    101, 103,  38, 179,   5, 123, 
    108, 104,  44, 185, 100, 143, 
     79, 101, 224, 204, 219,  55, 
    172,  60, 186, 175, 100, 150, 
    179, 133, 129,  92,  62, 153, 
     28, 152, 202, 207, 231, 177, 
    116, 149,  39, 238, 134, 124, 
     57,  31, 130, 166,  51, 247, 
    102, 196,  47,  13, 219, 195, 
    147,   0,  53,  16,   0,   0, 
    207,   0,   0,   0,  21,   0, 
      1,   0,   0, 122,  23,   0, 
    120,   1, 237, 152,  59,  79, 
     20,  81,  20, 199, 207, 222, 
    185, 123, 150, 199, 236, 204, 
    242,  22,  17, 121,  70,  80, 
      3, 130,  44, 241,  21,   2, 
     42, 106, 140,  26, 137, 168, 
    137, 201,  20, 174, 178,  43, 
    198, 229, 225,  46,  65, 180, 
     24,  81, 140, 177, 160,  50, 
    126,   0,  27,  19,  27,  35, 
    141, 173,  80,  88,  88,  96, 
     67,  97,  44, 252,   4, 104, 
     97, 180,  37,  89, 255, 103, 
    103,  38,  98,  34, 181, 198, 
    204,  47, 249, 223,  51, 231, 
     62, 206,  61, 247,  49, 205, 
    189,  87,  71,  69, 214,  62, 
    118, 109, 136, 125, 245, 237, 
    227, 232,  87,  69,  20,  21, 
    103,  19, 211, 213,  82,  18, 
     93, 173, 149, 146, 168, 232, 
     70,  32, 244, 221,  11,  99, 
     66,  75, 240, 135,  96, 165, 
    173, 211, 151, 199, 208, 202, 
     83, 148,  12, 117,  65, 235, 
     24, 115,  17, 118,   0, 170, 
    130, 146, 144, 140,  23,  74, 
    164,   0, 129,  45, 149,   2, 
     96, 200, 111,  88,  80,  27, 
    100,  64,   1, 146, 142, 144, 
    128,  54, 215,  83, 139,  20, 
    127, 102,   4, 146, 252, 183, 
     66, 114, 147,  92, 130, 124, 
    130,  60,   3, 251,  47,  33, 
    235,  15, 206,  73, 144, 243, 
    216, 140, 236,  89, 176,  47, 
    205, 254,  57,   6,  93,  70, 
    124,  63,  56, 203,  21, 104, 
     43,  10,  64, 203, 199,  38, 
      2,  95, 206, 137, 233, 124, 
     15,  71,  30,  16, 195,  97, 
     76, 200, 104, 100,  92,  40, 
    198,   5, 224,  24, 132, 205, 
    100,  28,  44, 151,  65, 229, 
     16,  38, 228,  56, 132,   4, 
    217, 134, 112, 128,  92,   1, 
     85,  66, 184,  32, 140,  53, 
    113,  13, 132,  28,  25, 247, 
    149, 183,  65, 245, 208, 118, 
    168,   1, 218,   1,  53,  66, 
     59, 161,  38,  63,  23, 195, 
     91, 169, 220,  57, 129,  35, 
    222,  74,  89,  73, 134, 255, 
     63, 178,   7, 193, 157,  21, 
    138, 123,   2, 100,  23, 228, 
    255,  16, 228,  95,  13,   9, 
      9,   9,   9,   9,   9,   9, 
      9,   9,   9,   9,   9,   9, 
      9,   9, 249,  91, 168, 150, 
    135, 111, 167, 237, 197, 229, 
    133,   4,  37,  21,  61,  91, 
    123,  79, 101, 138, 140,  71, 
     43,  42, 174, 221, 130, 102, 
    254, 176, 186,  58,  80, 208, 
     26, 118, 113, 208, 176, 217, 
     85, 182, 118, 239, 211, 226, 
     50,  53, 255, 248,  98, 148, 
    170, 121, 177,  42, 174, 230, 
    141, 226, 216,  74, 181, 144, 
    208,  73,  42, 126, 179, 146, 
     24,  20,  39, 196, 145, 241, 
    136,  67,  84, 180,  18, 131, 
    108, 114, 139,  99, 171, 188, 
     24, 212, 129,  24, 113, 118, 
     11, 156, 240, 250, 114,  43, 
    236, 226,  96, 129, 219,  57, 
    147, 225, 161,   2,  51, 236, 
    201, 161,  18,  59, 225,  86, 
    216, 173, 110, 165, 221, 238, 
     74,  62,  50, 182, 164, 206, 
    139,  81, 209, 224, 217, 202, 
     38, 207,  26, 109, 106, 254, 
     14, 214,  22, 171,  39, 107, 
     86, 108, 139, 182, 184, 142, 
     76, 110, 210, 102, 180, 134, 
    204, 104, 163,  54,  11, 198, 
    198,  91, 121, 173, 209,  85, 
    100, 234,   6, 109,  62,  86, 
     42, 105, 198,  15, 126, 138, 
    144, 162, 121,  69, 238, 119, 
    165,  93, 203, 246, 252, 188, 
    196, 232,  39,  43,  39, 118, 
     64,  91,  20,  65, 125,  85, 
     53, 221,  22, 255,   4,  91, 
    220, 135, 216,  71, 180,  41, 
    251,  25,  59, 103,  89, 202, 
     64, 123,  77,  45,  69, 123, 
     49, 215,  33, 109, 242, 113, 
     54, 249, 140, 101, 234,  40, 
    234,  59,  58,  73, 239, 195, 
    156,   7, 144, 203,  81,  54, 
    163, 167,  45, 147,  99, 168, 
    223, 189, 135, 244,  32, 155, 
    250, 148, 101, 150, 148, 194, 
    199, 188, 101, 229, 176,  70, 
     12, 167, 245,  96, 185,   6, 
    165,  32, 175, 107, 162, 122, 
     72, 222, 154,   2,  63, 120, 
    115,  10, 124,  81, 128,  70, 
    215,  39, 254, 251, 227, 156, 
    111, 165, 191, 188,  89,  97, 
     49,  40, 127, 241, 210, 111, 
    127, 238,  91, 121, 227,  42, 
    135, 118, 189, 126, 177, 206, 
    151,  86, 223, 188, 243, 235, 
     87, 124,  43,  49, 202, 160, 
    158, 230, 165, 137, 126, 255, 
    173, 251, 179, 223, 118,   5, 
    146, 241, 153, 195, 206, 181, 
     84,  54, 117,  47, 223,  61, 
     51, 149, 155, 186, 213, 157, 
    159, 201, 165,  83,  19, 251, 
    157, 177, 244, 172, 147, 158, 
    155,  73, 231,  38,  83,  89, 
    231,  70, 102,  46, 233, 140, 
    230, 174,  59,  23, 210, 147, 
     99, 233, 156,  51, 220,  55, 
    220,  59, 231, 140, 142, 167, 
    224, 228, 157, 203, 199, 178, 
    168,  62, 155, 186, 155, 206, 
    117, 103, 178, 189, 189, 221, 
    227, 217, 124,  22, 161,  61, 
    206, 249,  19, 203, 163, 186, 
    108, 215,  68, 234, 230,  36, 
    253,   4,  56,  58, 176, 248, 
      0,   0,  83,  84,  65,  84, 
    148,   0,   0,   0,  20,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   7,   0, 
      0,   0,   9,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   5,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0
};
