#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4 vfuniforms[96];             // Offset:    0 Size:  1536
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// SV_Position              0   xyzw        1     NONE   float   xyzw
// SV_InstanceID            0   x           2   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// SV_Position              0   xyzw        2      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[142]
// Embedded Data:
//  0x0000008e - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x00000089 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[96], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input_sgv v2.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xy
dcl_output_siv o2.xyzw, position
dcl_temps 1
mov o0.xyzw, v0.xyzw
bfi r0.x, l(30), l(2), v2.x, l(2)
utof r0.x, r0.x
add r0.xy, r0.xxxx, l(0.100000, 1.100000, 0.000000, 0.000000)
ftou r0.xy, r0.xyxx
dp4 o1.x, v1.xyzw, cb0[r0.x + 0].xyzw
dp4 o1.y, v1.xyzw, cb0[r0.y + 0].xyzw
ishl r0.x, v2.x, l(2)
utof r0.x, r0.x
add r0.xy, r0.xxxx, l(0.100000, 1.100000, 0.000000, 0.000000)
ftou r0.xy, r0.xyxx
dp4 o2.x, v1.xyzw, cb0[r0.x + 0].xyzw
dp4 o2.y, v1.xyzw, cb0[r0.y + 0].xyzw
mov o2.zw, l(0,0,0,1.000000)
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[142], bundle is:[172] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedTexTGEAlpha.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0

codeLenInByte        = 228;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 20;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000002
SVOC:VS_EXPORT_COUNT        = 1
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_lshlrev_b32  v0, 2, v3                              // 000000000008: 34000682
  v_bfi_b32     v0, -4, v0, 2                           // 00000000000C: D2940000 020A00C4
  v_cvt_f32_u32  v0, v0                                 // 000000000014: 7E000D00
  v_lshlrev_b32  v2, 2, v3                              // 000000000018: 34040682
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 00000000001C: C0840300
  v_add_f32     v1, 0x3dcccccd, v0                      // 000000000020: 060200FF 3DCCCCCD
  v_cvt_f32_u32  v2, v2                                 // 000000000028: 7E040D02
  v_add_f32     v0, 0x3f8ccccd, v0                      // 00000000002C: 060000FF 3F8CCCCD
  v_add_f32     v3, 0x3dcccccd, v2                      // 000000000034: 060604FF 3DCCCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000003C: 7E020F01
  v_cvt_u32_f32  v0, v0                                 // 000000000040: 7E000F00
  v_cvt_u32_f32  v3, v3                                 // 000000000044: 7E060F03
  exp           param0, v4, v5, v6, v7                  // 000000000048: F800020F 07060504
  s_waitcnt     expcnt(0) & lgkmcnt(0)                  // 000000000050: BF8C000F
  tbuffer_load_format_xyzw  v[4:7], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000054: EBF32000 80020401
  tbuffer_load_format_xyzw  v[12:15], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000005C: EBF32000 80020C00
  tbuffer_load_format_xyzw  v[16:19], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000064: EBF32000 80021003
  v_add_f32     v2, 0x3f8ccccd, v2                      // 00000000006C: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v2, v2                                 // 000000000074: 7E040F02
  tbuffer_load_format_xyzw  v[0:3], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000078: EBF32000 80020002
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000080: BF8C0F70
  v_mul_legacy_f32  v3, v11, v3                         // 000000000084: 0E06070B
  v_mul_legacy_f32  v19, v11, v19                       // 000000000088: 0E26270B
  v_mac_legacy_f32  v3, v10, v2                         // 00000000008C: 0C06050A
  v_mac_legacy_f32  v19, v10, v18                       // 000000000090: 0C26250A
  v_mac_legacy_f32  v3, v9, v1                          // 000000000094: 0C060309
  v_mac_legacy_f32  v19, v9, v17                        // 000000000098: 0C262309
  v_mac_legacy_f32  v3, v8, v0                          // 00000000009C: 0C060108
  v_mac_legacy_f32  v19, v8, v16                        // 0000000000A0: 0C262108
  v_mov_b32     v0, 0                                   // 0000000000A4: 7E000280
  v_mov_b32     v1, 1.0                                 // 0000000000A8: 7E0202F2
  exp           pos0, v19, v3, v0, v1 done              // 0000000000AC: F80008CF 01000313
  v_mul_legacy_f32  v2, v11, v7                         // 0000000000B4: 0E040F0B
  s_waitcnt     expcnt(0) & lgkmcnt(15)                 // 0000000000B8: BF8C0F0F
  v_mul_legacy_f32  v3, v11, v15                        // 0000000000BC: 0E061F0B
  v_mac_legacy_f32  v2, v10, v6                         // 0000000000C0: 0C040D0A
  v_mac_legacy_f32  v3, v10, v14                        // 0000000000C4: 0C061D0A
  v_mac_legacy_f32  v2, v9, v5                          // 0000000000C8: 0C040B09
  v_mac_legacy_f32  v3, v9, v13                         // 0000000000CC: 0C061B09
  v_mac_legacy_f32  v2, v8, v4                          // 0000000000D0: 0C040908
  v_mac_legacy_f32  v3, v8, v12                         // 0000000000D4: 0C061908
  exp           param1, v2, v3, v0, v1                  // 0000000000D8: F800021F 01000302
  s_endpgm                                              // 0000000000E0: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[316], bundle is:[187] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedTexTGEAlpha.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] position, usageIdx  2, paramIdx 2, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0

codeLenInByte        = 296;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 26;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 12
; esGsRingItemSize          = 12

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_lshlrev_b32  v0, 2, v3                              // 000000000008: 34000682
  v_bfi_b32     v0, -4, v0, 2                           // 00000000000C: D2940000 020A00C4
  v_cvt_f32_u32  v0, v0                                 // 000000000014: 7E000D00
  v_lshlrev_b32  v2, 2, v3                              // 000000000018: 34040682
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 00000000001C: C0840300
  v_add_f32     v1, 0x3dcccccd, v0                      // 000000000020: 060200FF 3DCCCCCD
  v_cvt_f32_u32  v2, v2                                 // 000000000028: 7E040D02
  v_add_f32     v0, 0x3f8ccccd, v0                      // 00000000002C: 060000FF 3F8CCCCD
  v_add_f32     v3, 0x3dcccccd, v2                      // 000000000034: 060604FF 3DCCCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000003C: 7E020F01
  v_cvt_u32_f32  v0, v0                                 // 000000000040: 7E000F00
  v_cvt_u32_f32  v3, v3                                 // 000000000044: 7E060F03
  s_waitcnt     lgkmcnt(0)                              // 000000000048: BF8C007F
  tbuffer_load_format_xyzw  v[14:17], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000004C: EBF32000 80020E01
  tbuffer_load_format_xyzw  v[18:21], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000054: EBF32000 80021200
  tbuffer_load_format_xyzw  v[22:25], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000005C: EBF32000 80021603
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000064: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v2, v2                                 // 00000000006C: 7E040F02
  tbuffer_load_format_xyzw  v[0:3], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000070: EBF32000 80020002
  s_waitcnt     vmcnt(3) & lgkmcnt(15)                  // 000000000078: BF8C0F73
  v_mul_legacy_f32  v17, v11, v17                       // 00000000007C: 0E22230B
  v_mac_legacy_f32  v17, v10, v16                       // 000000000080: 0C22210A
  v_mac_legacy_f32  v17, v9, v15                        // 000000000084: 0C221F09
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000088: BF8C0F71
  v_mul_legacy_f32  v15, v11, v25                       // 00000000008C: 0E1E330B
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000090: C080030C
  v_mac_legacy_f32  v15, v10, v24                       // 000000000094: 0C1E310A
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000098: BF8C0F70
  v_mul_legacy_f32  v3, v11, v3                         // 00000000009C: 0E06070B
  v_mac_legacy_f32  v15, v9, v23                        // 0000000000A0: 0C1E2F09
  v_mac_legacy_f32  v3, v10, v2                         // 0000000000A4: 0C06050A
  v_mac_legacy_f32  v15, v8, v22                        // 0000000000A8: 0C1E2D08
  v_mac_legacy_f32  v3, v9, v1                          // 0000000000AC: 0C060309
  v_mac_legacy_f32  v3, v8, v0                          // 0000000000B0: 0C060108
  v_mov_b32     v12, 0                                  // 0000000000B4: 7E180280
  v_mov_b32     v13, 1.0                                // 0000000000B8: 7E1A02F2
  s_waitcnt     lgkmcnt(0)                              // 0000000000BC: BF8C007F
  buffer_store_dword  v15, v0, s[0:3], s4 offset:32 glc slc // 0000000000C0: E0704020 04400F00
  buffer_store_dword  v3, v0, s[0:3], s4 offset:36 glc slc // 0000000000C8: E0704024 04400300
  v_mac_legacy_f32  v17, v8, v14                        // 0000000000D0: 0C221D08
  buffer_store_dword  v12, v0, s[0:3], s4 offset:40 glc slc // 0000000000D4: E0704028 04400C00
  v_mul_legacy_f32  v14, v11, v21                       // 0000000000DC: 0E1C2B0B
  buffer_store_dword  v13, v0, s[0:3], s4 offset:44 glc slc // 0000000000E0: E070402C 04400D00
  v_mac_legacy_f32  v14, v10, v20                       // 0000000000E8: 0C1C290A
  buffer_store_dword  v4, v0, s[0:3], s4 glc slc        // 0000000000EC: E0704000 04400400
  v_mac_legacy_f32  v14, v9, v19                        // 0000000000F4: 0C1C2709
  buffer_store_dword  v5, v0, s[0:3], s4 offset:4 glc slc // 0000000000F8: E0704004 04400500
  v_mac_legacy_f32  v14, v8, v18                        // 000000000100: 0C1C2508
  buffer_store_dword  v6, v0, s[0:3], s4 offset:8 glc slc // 000000000104: E0704008 04400600
  buffer_store_dword  v7, v0, s[0:3], s4 offset:12 glc slc // 00000000010C: E070400C 04400700
  buffer_store_dword  v17, v0, s[0:3], s4 offset:16 glc slc // 000000000114: E0704010 04401100
  buffer_store_dword  v14, v0, s[0:3], s4 offset:20 glc slc // 00000000011C: E0704014 04400E00
  s_endpgm                                              // 000000000124: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[505], bundle is:[181] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedTexTGEAlpha.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] position, usageIdx  2, paramIdx 2, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0

codeLenInByte        = 268;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 29;
NumSgprs             = 5;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 12
; lsStride                  = 48

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_lshlrev_b32  v0, 2, v3                              // 000000000008: 34000682
  v_bfi_b32     v0, -4, v0, 2                           // 00000000000C: D2940000 020A00C4
  v_lshlrev_b32  v3, 2, v3                              // 000000000014: 34060682
  v_cvt_f32_u32  v0, v0                                 // 000000000018: 7E000D00
  v_cvt_f32_u32  v3, v3                                 // 00000000001C: 7E060D03
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000020: C0800300
  v_add_f32     v2, 0x3dcccccd, v0                      // 000000000024: 060400FF 3DCCCCCD
  v_add_f32     v12, 0x3dcccccd, v3                     // 00000000002C: 061806FF 3DCCCCCD
  v_add_f32     v0, 0x3f8ccccd, v0                      // 000000000034: 060000FF 3F8CCCCD
  v_add_f32     v3, 0x3f8ccccd, v3                      // 00000000003C: 060606FF 3F8CCCCD
  v_cvt_u32_f32  v2, v2                                 // 000000000044: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 000000000048: 7E000F00
  v_cvt_u32_f32  v12, v12                               // 00000000004C: 7E180F0C
  v_cvt_u32_f32  v3, v3                                 // 000000000050: 7E060F03
  s_waitcnt     lgkmcnt(0)                              // 000000000054: BF8C007F
  tbuffer_load_format_xyzw  v[13:16], v2, s[0:3], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000058: EBF32000 80000D02
  tbuffer_load_format_xyzw  v[17:20], v0, s[0:3], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000060: EBF32000 80001100
  tbuffer_load_format_xyzw  v[21:24], v12, s[0:3], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000068: EBF32000 8000150C
  tbuffer_load_format_xyzw  v[25:28], v3, s[0:3], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000070: EBF32000 80001903
  s_waitcnt     vmcnt(3) & lgkmcnt(15)                  // 000000000078: BF8C0F73
  v_mul_legacy_f32  v0, v11, v16                        // 00000000007C: 0E00210B
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 000000000080: BF8C0F72
  v_mul_legacy_f32  v2, v11, v20                        // 000000000084: 0E04290B
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000088: BF8C0F71
  v_mul_legacy_f32  v3, v11, v24                        // 00000000008C: 0E06310B
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000090: BF8C0F70
  v_mul_legacy_f32  v11, v11, v28                       // 000000000094: 0E16390B
  v_mac_legacy_f32  v3, v10, v23                        // 000000000098: 0C062F0A
  v_mac_legacy_f32  v11, v10, v27                       // 00000000009C: 0C16370A
  v_mac_legacy_f32  v0, v10, v15                        // 0000000000A0: 0C001F0A
  v_mac_legacy_f32  v2, v10, v19                        // 0000000000A4: 0C04270A
  v_mac_legacy_f32  v3, v9, v22                         // 0000000000A8: 0C062D09
  v_mac_legacy_f32  v11, v9, v26                        // 0000000000AC: 0C163509
  s_mov_b32     m0, 0x00010000                          // 0000000000B0: BEFC03FF 00010000
  v_mac_legacy_f32  v0, v9, v14                         // 0000000000B8: 0C001D09
  v_mac_legacy_f32  v2, v9, v18                         // 0000000000BC: 0C042509
  v_mac_legacy_f32  v3, v8, v21                         // 0000000000C0: 0C062B08
  v_mac_legacy_f32  v11, v8, v25                        // 0000000000C4: 0C163308
  v_mul_lo_i32  v1, v1, 48                              // 0000000000C8: D2D60001 00016101
  v_mac_legacy_f32  v0, v8, v13                         // 0000000000D0: 0C001B08
  v_mac_legacy_f32  v2, v8, v17                         // 0000000000D4: 0C042308
  ds_write2_b32  v1, v3, v11 offset0:8 offset1:9        // 0000000000D8: D8380908 000B0301
  v_mov_b32     v3, 0                                   // 0000000000E0: 7E060280
  v_mov_b32     v8, 1.0                                 // 0000000000E4: 7E1002F2
  ds_write2_b32  v1, v3, v8 offset0:10 offset1:11       // 0000000000E8: D8380B0A 00080301
  ds_write2_b32  v1, v4, v5 offset1:1                   // 0000000000F0: D8380100 00050401
  ds_write2_b32  v1, v6, v7 offset0:2 offset1:3         // 0000000000F8: D8380302 00070601
  ds_write2_b32  v1, v0, v2 offset0:4 offset1:5         // 000000000100: D8380504 00020001
  s_endpgm                                              // 000000000108: BF810000
end


// Approximately 15 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VInstancedTexTGEAlpha[] =
{
     68,  88,  66,  67, 176,  26, 
    202,   3, 203,  45, 236,  82, 
    140, 187,  90,  85,  18,   8, 
    134, 109,   1,   0,   0,   0, 
    168,  13,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     88,   1,   0,   0, 208,   1, 
      0,   0,  68,   2,   0,   0, 
     12,  13,   0,   0,  82,  68, 
     69,  70,  28,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
    224,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      1,   0,   0,   0, 128,   0, 
      0,   0,   0,   6,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 168,   0,   0,   0, 
      0,   0,   0,   0,   0,   6, 
      0,   0,   2,   0,   0,   0, 
    188,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 102, 
    108, 111,  97, 116,  52,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0,  96,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 179,   0, 
      0,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
    112,   0,   0,   0,   3,   0, 
      0,   0,   8,   0,   0,   0, 
     80,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,  15,   0,   0, 
     86,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,  15,   0,   0, 
     98,   0,   0,   0,   0,   0, 
      0,   0,   8,   0,   0,   0, 
      1,   0,   0,   0,   2,   0, 
      0,   0,   1,   1,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     83,  86,  95,  80, 111, 115, 
    105, 116, 105, 111, 110,   0, 
     83,  86,  95,  73, 110, 115, 
    116,  97, 110,  99, 101,  73, 
     68,   0,  79,  83,  71,  78, 
    108,   0,   0,   0,   3,   0, 
      0,   0,   8,   0,   0,   0, 
     80,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
     86,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,   3,  12,   0,   0, 
     95,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  15,   0,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88, 192,  10,   0,   0, 
     80,   0,   1,   0, 176,   2, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 142,   0, 
      0,   0,  80,   0,   1,   0, 
    137,   0,   0,   0, 106,   8, 
      0,   1,  89,   8,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  96,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   1,   0,   0,   0, 
     96,   0,   0,   4,  18,  16, 
     16,   0,   2,   0,   0,   0, 
      8,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      1,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      2,   0,   0,   0,   1,   0, 
      0,   0, 104,   0,   0,   2, 
      1,   0,   0,   0,  54,   0, 
      0,   5, 242,  32,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
    140,   0,   0,  11,  18,   0, 
     16,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,  30,   0, 
      0,   0,   1,  64,   0,   0, 
      2,   0,   0,   0,  10,  16, 
     16,   0,   2,   0,   0,   0, 
      1,  64,   0,   0,   2,   0, 
      0,   0,  86,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,  10,  50,   0,  16,   0, 
      0,   0,   0,   0,   6,   0, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0, 205, 204, 
    204,  61, 205, 204, 140,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  28,   0,   0,   5, 
     50,   0,  16,   0,   0,   0, 
      0,   0,  70,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  18,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  34,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  26,   0,  16,   0, 
      0,   0,   0,   0,  41,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,  16, 
     16,   0,   2,   0,   0,   0, 
      1,  64,   0,   0,   2,   0, 
      0,   0,  86,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,  10,  50,   0,  16,   0, 
      0,   0,   0,   0,   6,   0, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0, 205, 204, 
    204,  61, 205, 204, 140,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  28,   0,   0,   5, 
     50,   0,  16,   0,   0,   0, 
      0,   0,  70,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  18,  32,  16,   0, 
      2,   0,   0,   0,  70,  30, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  34,  32,  16,   0, 
      2,   0,   0,   0,  70,  30, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  26,   0,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   8, 194,  32,  16,   0, 
      2,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 128,  63, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 174,   0,   0,   0, 
     21,   0,   1,   0,  32, 184, 
     22,   0, 120,   1, 237, 152, 
    205, 107,  19,  65,  24, 135, 
    223, 157,  76, 223, 230,  99, 
    147, 141, 214, 175,  90, 107, 
     45, 218, 232, 197, 208, 106, 
     78,  66, 177, 149, 138, 244, 
     32, 130,  22,  79, 123,  89, 
    219, 173, 149, 166, 105,  73, 
    130,   6,  15,  75,  12,   5, 
     65,  11,  94, 250,  15, 120, 
    241, 228,  31, 224,  65, 108, 
     15, 122, 171,   8, 226, 209, 
    139, 224, 205, 155,  10, 246, 
     32, 198, 223, 155, 236, 208, 
     30, 234,  89, 193, 121, 224, 
    153, 217, 249, 126, 103,  38, 
    185, 204, 139,  67, 212,  97, 
    112, 252, 217,  61, 201,  23, 
     75,  75,  79,  79,  41, 162, 
     30,  41,   0,  45,   9,  88, 
     57,  32,  41, 209, 250,  65, 
     73, 137, 206,  72, 226,  64, 
    244, 149,  38,  23, 126, 134, 
     19,  80, 218, 140,  93,  38, 
     54,  91,  72,  25,  14, 193, 
     10, 198,  76,  35,  31, 129, 
     73,  40, 117, 189,  48,   1, 
     13, 102,  93,  19, 135,  44, 
    181,  27,  25,  39, 161, 239, 
    174,  55, 223,  50,  23, 150, 
    216,  97,  88, 146, 189,  57, 
     11, 227, 173, 237, 137, 196, 
    102,  98, 145, 248, 100, 110, 
     65, 246, 251, 175,  33, 251, 
     55, 247,  36, 200, 125, 236, 
     38,   7, 205,  25, 207, 196, 
    247, 104, 206, 108,  53,  46, 
    203, 112, 217, 219,  38, 252, 
     19, 109,  96, 206, 196,  96, 
    202, 114, 238,  76, 215,  70, 
    217, 121,  50, 202,  40,  48, 
     22, 100,  52,  50,  46, 146, 
    241,   3,  96,  28,  32, 227, 
    242,  56,   5, 211,  48,   3, 
    177,  32, 103,  33,   2, 100, 
     15, 230, 225,  62, 184,  31, 
    246,  65,   4, 197, 136, 143, 
    113, 225, 124,  24,  30, 129, 
    253, 240,  40,  28, 128, 199, 
    224,  32,  60,  14, 113,  97, 
    221,  24, 186, 176,  99, 118, 
    248, 127,  33, 103,  32, 255, 
     17,  65, 190, 205, 253, 200, 
    253, 155, 111, 139, 197,  98, 
    177,  88,  44,  22, 139, 197, 
     98, 177,  88,  44, 150, 191, 
    137,  26, 110, 189,  90, 241, 
    214,  54,  90,  76,  37, 162, 
    245, 247, 175,  41, 173,  40, 
     75,  81, 139, 117, 137,  18, 
    171, 155, 109,  82, 252, 118, 
    107, 107,  92, 101, 117, 212, 
     38, 194, 247, 218, 197, 182, 
    230,  78, 157, 227, 169, 136, 
     60, 138,  18,  30,  71, 158, 
    162, 109, 221, 195, 189,  30, 
    173, 109, 208, 137, 111,  95, 
     28, 173, 154, 146, 147, 219, 
    205,  19, 121, 213, 108, 107, 
    221,  25, 175,  60,  29,  73, 
    157,  34, 213, 148, 181,  51, 
    189, 156, 203, 156,  46, 228, 
    210,  61, 236, 166,  71,  10, 
    110,  42, 193, 110, 234, 100, 
    193,  77,  58, 236,  38, 135, 
     11, 110,  83,  81, 244,  85, 
    169, 232,  93, 146, 182, 251, 
     18, 228, 100,  60, 157, 243, 
    100, 220,  16, 231, 210,  89, 
    237, 166,   7, 209,  63, 163, 
    221, 212,   0, 250, 167, 180, 
    155, 236, 103, 119,   8, 241, 
     40, 244,  37, 122, 176,  17, 
     63, 185, 117, 222, 103, 196, 
    126,  40, 175,  85, 166, 156, 
    135, 130,  41, 139,   6, 141, 
    174,  47, 227,   9, 158, 199, 
    185, 244, 151, 183, 157,  92, 
    103, 150,  29,  62, 198, 237, 
     31, 226,  92, 222, 133,  50, 
    176, 241, 235, 231, 228, 163, 
    171, 111, 126, 108, 199, 245, 
    223, 227,  92, 230,  72, 195, 
     79, 250, 225, 165, 154,  60, 
    178, 130, 124, 156, 207,  66, 
     25,  63, 127, 193, 191,  21, 
    148, 131, 251, 181,  98, 125, 
    185, 186, 188,  88, 172, 213, 
    171,  97, 176, 116, 206, 159, 
     11, 239, 250,  97, 163,  30, 
     86,  43,  65, 217, 191,  61, 
    223,  40, 249,  55, 170, 179, 
    254, 245, 176,  50,  23,  86, 
    253, 169, 243,  83,  99,  13, 
    255, 198,  66, 128,  66, 205, 
    191,  57,  93, 169, 213, 131, 
    202, 108,  56,  55,  19,  54, 
    102, 174,  92, 158,  44, 175, 
     44,   4, 197, 249, 242, 216, 
     88, 113, 161,  92,  43,  99, 
    145,  46, 143, 227, 165, 229, 
     41,  88, 158,  95, 151, 130, 
     59,  21, 250,  13, 190, 133, 
    127,   5,   0,   0,  53,  16, 
      0,   0, 189,   0,   0,   0, 
     21,   0,   1,   0,  16,  12, 
     23,   0, 120,   1, 237, 152, 
    207, 107,  19,  65,  20, 199, 
     39, 155, 233, 107, 126,  76, 
     54, 105, 173, 181, 173, 105, 
    218, 198, 138,  41, 106, 108, 
    108,  64,  16, 196, 109, 169, 
    248,   3,  69, 176, 197, 211, 
    122, 136, 205, 214,  74, 211, 
     52,  38,  65, 130,  72, 140, 
     69,  40,  72, 193, 139,   7, 
    175, 254,  35,  54,   7, 197, 
     75, 189, 120, 242, 166, 222, 
      4,  15, 130,  30, 188, 136, 
    241, 251, 146, 221,  18, 196, 
    158,  21, 153,  15, 124, 231, 
    205, 155, 153, 204, 188, 157, 
     55, 185,  60, 117,  64, 180, 
    249, 114, 255, 198,  20, 219, 
    213, 236, 218, 243,  73,  67, 
    136,  30, 118,   0, 186, 109, 
     74,   3, 220,  10, 241, 105, 
     63, 183,  66,  76, 114, 227, 
    131, 176,  96,   4,  70,  65, 
     41, 248,  22,  44, 207, 165, 
     92, 117, 176, 154, 155, 104, 
    131, 208,  56,  52, 231,  23, 
    226,  18,  44, 207,  71, 161, 
     49,  40,   4, 117,  35,  33, 
     30, 235, 133,  24,  62, 170, 
    155,   0,  52,   8, 117, 143, 
    123, 177, 154,  16, 207, 239, 
     50, 193, 205, 159,  57,   5, 
    113, 252, 123, 193, 177, 241, 
    126,  30,  94, 156, 252, 189, 
    255,  26, 124,  23,  94, 158, 
     24, 206,  71,  55, 252,  29, 
    124, 175, 204,  51,  55, 143, 
    222, 146, 119, 174, 239, 229, 
    178,   9, 237,  69,  11, 120, 
    251,  48, 220, 207,  66,  12, 
    231, 128, 196, 213, 105, 242, 
     61, 153,  38,  56, 132,  92, 
     19,  22,  16,  30,  20,  17, 
    132, 132,  18, 146,  67, 120, 
     12, 132, 203, 164,  48, 132, 
      3,  41,   2,  33,  64, 194, 
    131, 160,  24, 212,   7, 245, 
     67, 251,  32, 124,  19,  33, 
     62,  66, 194,   9, 239, 149, 
    134, 160,  97,   8, 193, 210, 
     65,  40,  14, 141,  66,   9, 
      8,   9, 195, 145,   8, 132, 
     35, 129, 207,  13,  32, 223, 
    111, 151, 241, 159, 195, 119, 
    208, 253,  31, 224,  28,  49, 
     60, 206, 249, 101, 105,  52, 
     26, 141,  70, 163, 209, 104, 
     52,  26, 141,  70, 163, 209, 
    252,  77, 140, 137, 141,  23, 
    165, 232, 214, 246,   6, 113, 
    105, 233, 233, 219, 151,  34, 
    100, 136, 136, 168, 111, 144, 
    204,  10, 255, 163, 102,  75, 
     24, 244, 102, 103, 231, 140, 
     17, 145, 245, 150,  16, 232, 
    111, 157, 109,  73, 106, 143, 
    249, 162,  70,  93,  68,  69, 
    221,  31, 165, 250,   3, 177, 
    181,  45, 198, 191, 125, 246, 
    153,  70, 131, 173, 232, 239, 
     88, 255, 160, 209, 104,  73, 
    217, 254, 157,  17, 149, 117, 
     30,  51, 132, 209, 168, 224, 
    204, 240, 161, 164,  25, 154, 
     72, 170, 224,  88,  82, 221, 
     97, 127,  38,  97,  42, 127, 
    163,  25, 202,  36,  20, 199, 
     20, 238,  37,  51, 120,  34, 
    161,  66,  61, 164,   2, 199, 
     19,  42, 232, 135, 245, 145, 
    106,  24,  67, 245, 175, 198, 
     72, 251, 204, 113, 171, 244, 
     65,  68,  45,  57, 201, 214, 
    111, 201, 192, 104,  82, 165, 
    184, 175,  44,  25,  62,  26, 
     55, 143, 113,  63,  98, 201, 
    208,  84,  92,   9, 238,  75, 
     75,   6, 143, 196, 149, 228, 
    126,  15, 214,  31, 142, 171, 
      0, 247, 201, 146, 138, 109, 
    175,  37,  99, 108, 251,  44, 
     57, 192, 214, 180, 164,  16, 
     15, 183, 221, 178,  93, 187, 
    238, 198,  26, 134, 184, 210, 
    229, 249,  67,  16, 227, 249, 
     49, 136, 241, 124, 150,   7, 
     54, 244, 197, 184, 168, 202, 
    184, 150, 215,  99,  92, 152, 
    187, 149, 194,  14, 211, 238, 
    124, 202, 181,  92, 107,  10, 
     67, 181, 159,  63, 102,  31, 
     95, 121, 245, 253, 178,  59, 
    126, 193, 181, 188,   7, 215, 
     78,  63, 202, 205, 185, 215, 
    238,  88, 222, 181,  75,  16, 
    255, 126, 249, 180, 125,  51, 
     87, 200, 221, 171, 164, 171, 
    235, 229, 245, 213, 116, 165, 
     90, 118, 114, 107,  39, 237, 
    188, 115, 215, 118, 106,  85, 
    167,  92, 204,  21, 236,  91, 
    203, 181, 172, 189,  80,  94, 
    178, 175,  57, 197, 188,  83, 
    182, 231, 103, 230,  51,  53, 
    123,  97,  37,   7, 167,  98, 
     95, 191,  88, 172,  84, 115, 
    197,  37,  39, 191, 232, 212, 
     22, 207, 159, 155,  45, 148, 
     86, 114, 233, 229,  66,  38, 
    147,  94,  41,  84,  10,  56, 
    164, 195, 123, 247, 104,  46, 
    115, 115, 137, 121,  45, 119, 
    187,  40, 126,   1, 227, 221, 
    146, 130,   0,   0,  53,  16, 
      0,   0, 183,   0,   0,   0, 
     21,   0,   1,   0,   0, 224, 
     22,   0, 120,   1, 237, 152, 
     79, 104,  19,  81,  16, 198, 
     39, 187, 219, 105, 254, 188, 
     36, 173, 218, 216, 218, 214, 
    182, 248,  31,  49,  54,  54, 
     98,  21, 196,  86,  42, 210, 
    131,   8, 182, 120, 218, 203, 
    218, 110, 173,  52,  77, 107, 
     18,  36, 136, 172,  49, 138, 
    130,  20,  68, 240, 230, 201, 
    187,  55, 175, 210, 246, 160, 
    183, 122,  41,  34,  30,  21, 
    188, 121, 171,   7,  47, 193, 
    248,  77, 178, 139, 181, 216, 
    179,  34, 239,   7, 223, 251, 
     50, 187, 111, 223, 155, 125, 
    179, 185, 204, 167,  20,  53, 
    120,  90, 187, 255,  64, 124, 
     46,  59, 255,  98, 191,  65, 
    212,  34, 193,  38,  22, 119, 
    201,  72, 244, 186,  67,  70, 
    162, 126,  25,  66,  16, 230, 
    246, 194,  44,  72,  33,  30, 
    129, 203, 189, 195, 190, 154, 
    140, 172,  62, 196, 200, 208, 
     65, 168, 138, 103, 198, 225, 
    114,  63,   6, 201, 252,  40, 
     36,   4, 251, 202, 122,  66, 
    171,  12,   0, 143, 252,  70, 
     24, 146, 212,  55,  95, 151, 
    116, 132,   8,  20, 252, 110, 
     48,  32, 195, 159,  25, 130, 
     36, 255, 237, 144, 220,  36, 
    151,  32, 175, 173, 121, 254, 
     75, 200,  59,   7, 117,  18, 
    164,  30, 155,  73,  64,  38, 
     36, 220, 241, 235,  24,  76, 
    121, 233, 199, 114,  22, 242, 
    110, 171, 208, 118, 212,  65, 
     80, 159, 128,  32, 150, 122, 
     48,  93,  30, 228, 208, 147, 
     65,  70, 192, 216, 144, 113, 
    147, 177,  40, 227,   3,  96, 
     20, 148,  81,  60,  70, 145, 
     24, 135, 201, 248,   0,  88, 
     65, 113,   8,   9, 114,  18, 
    106, 131, 218, 161,  29, 208, 
     78,   8, 239, 196, 200, 143, 
     81, 112, 222,  13, 117,  66, 
     93, 208,  30, 168,  27, 234, 
    129, 144,  56, 239, 133, 250, 
    252, 119,  52,  36,  19, 196, 
     50,   0,  14, 109,  57, 140, 
    255,  28,  57,   3, 249, 143, 
      4,   4, 245, 145, 235,  56, 
    238,   6, 131,  50, 104,  52, 
     26, 141,  70, 163, 209, 104, 
     52,  26, 141,  70, 163, 209, 
    252,  37, 140, 129, 234, 242, 
     98, 114, 105, 165, 202, 148, 
     37, 122, 182, 254, 134, 162, 
     70, 149,  57,  75, 113, 242, 
    204,  56, 123, 100,  86,  86, 
    235, 100, 241, 187, 181, 181, 
    179, 117, 238, 108,  58,  17, 
    124, 233,  92, 157, 185, 225, 
     70, 210, 242,  40,  73, 158, 
     74, 118, 122, 102, 146, 189, 
    187, 180, 180,  66, 253, 223, 
    190,  26, 113, 170, 136,  83, 
    123, 211,  85,  71, 211, 205, 
     46, 170,  20, 177, 103, 108, 
    128,  18,   5, 241,  35,  86, 
    226, 166, 120, 134,  19, 146, 
     75, 236, 116,  42,  17,  61, 
    206,  42, 122,  42, 165, 162, 
    125, 164, 162, 135,  44,  21, 
     57, 198,  42, 114,  50, 165, 
    234, 102, 109,  89, 186, 105, 
    145,  94,  82, 145,   3, 150, 
     10,  31, 101,  21,  30,  74, 
    169,  16, 125,  88,  15,  57, 
     33,  10, 119, 147,  10, 239, 
    195, 245, 200, 240, 199, 144, 
     25, 163, 138, 193, 222, 134, 
    209, 230,  69,  99,  18, 135, 
    241,  40, 220, 106,  33, 195, 
    132, 115,  43,  89,  45, 240, 
     70,  55, 237, 222, 138, 223, 
    154, 107,  68, 162,  46,  72, 
    186,  89,  65, 220,   6,   9, 
     65,  44,  10, 176,  48, 245, 
    139, 191, 192, 123, 223, 101, 
    190, 244, 131,  18, 141,  85, 
    126,  97,  73,  67,  21, 212, 
    252, 121, 210,  63, 146, 254, 
    108, 249,  71, 109, 244, 241, 
    165, 183, 223, 251, 253, 251, 
     61, 190, 203,  26, 210,  15, 
    253, 108,  61,  58, 255, 220, 
    191,  54, 236, 251,  20,  36, 
    207, 207, 156, 177, 175,  57, 
     57, 231, 118,  49,  93,  90, 
     40,  44, 204, 165, 139, 165, 
    130, 235, 204, 159, 176, 167, 
    221,  91, 182,  91,  46, 185, 
    133, 188, 147, 179, 175, 207, 
    148, 179, 246,  68,  97, 202, 
    190, 226, 230, 167, 221, 130, 
     61,  54,  52, 150,  41, 219, 
     19, 179,  14, 130, 162, 125, 
    117,  60,  95,  44,  57, 249, 
     41, 119, 122, 210,  45,  79, 
     94, 188,  48, 154,  91, 156, 
    117, 210,  51, 185,  76,  38, 
     61, 155,  43, 230, 176,  73, 
    147,  87, 254, 214, 210, 190, 
    148, 182, 241, 188, 115,  35, 
     79,  63,   1, 154, 145, 138, 
     58,   0,   0,   0,  83,  84, 
     65,  84, 148,   0,   0,   0, 
     15,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      6,   0,   0,   0,   6,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0
};
