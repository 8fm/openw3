#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4 vfuniforms[192];            // Offset:    0 Size:  3072
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// SV_Position              0   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xy          3     NONE   float   xy  
// TEXCOORD                 3     zw        3     NONE   float     zw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[161]
// Embedded Data:
//  0x000000a1 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x0000009c - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[192], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output o3.zw
dcl_output_siv o4.xyzw, position
dcl_temps 2
mov o0.xyzw, v0.xyzw
mad r0.xyzw, v0.zzzz, l(2040.079956, 2040.079956, 2040.079956, 2040.079956), l(6.100000, 7.100000, 0.100000, 1.100000)
ftou r0.xyzw, r0.xyzw
mov o1.xyzw, cb0[r0.z + 0].xyzw
mov o2.xyzw, cb0[r0.w + 0].xyzw
mad r1.xyzw, v0.zzzz, l(2040.079956, 2040.079956, 2040.079956, 2040.079956), l(2.100000, 3.100000, 4.100000, 5.100000)
ftou r1.xyzw, r1.xyzw
dp4 o3.x, v1.xyzw, cb0[r1.z + 0].xyzw
dp4 o3.y, v1.xyzw, cb0[r1.w + 0].xyzw
dp4 o3.z, v1.xyzw, cb0[r0.x + 0].xyzw
dp4 o3.w, v1.xyzw, cb0[r0.y + 0].xyzw
dp4 o4.x, v1.xyzw, cb0[r1.x + 0].xyzw
dp4 o4.y, v1.xyzw, cb0[r1.y + 0].xyzw
mov o4.zw, l(0,0,0,1.000000)
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[161], bundle is:[207] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBatchTexTGTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [2] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [3] generic, usageIdx  3, paramIdx 3, paramSlot 0

codeLenInByte        = 416;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 43;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  v_mov_b32     v0, 0x44ff028f                          // 000000000008: 7E0002FF 44FF028F
  s_mov_b32     s0, 0x40066666                          // 000000000010: BE8003FF 40066666
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000018: BF8C0F70
  v_mad_legacy_f32  v1, v6, v0, s0                      // 00000000001C: D2800001 00020106
  v_cvt_u32_f32  v1, v1                                 // 000000000024: 7E020F01
  s_waitcnt     lgkmcnt(0)                              // 000000000028: BF8C007F
  tbuffer_load_format_xyzw  v[15:18], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000002C: EBF32000 80020F01
  s_mov_b32     s0, 0x40833333                          // 000000000034: BE8003FF 40833333
  v_mad_legacy_f32  v13, v6, v0, s0                     // 00000000003C: D280000D 00020106
  s_mov_b32     s1, 0x40466666                          // 000000000044: BE8103FF 40466666
  s_mov_b32     s5, 0x40c33333                          // 00000000004C: BE8503FF 40C33333
  s_mov_b32     s0, 0x3dcccccd                          // 000000000054: BE8003FF 3DCCCCCD
  v_mad_legacy_f32  v2, v6, v0, s1                      // 00000000005C: D2800002 00060106
  v_mad_legacy_f32  v3, v6, v0, s5                      // 000000000064: D2800003 00160106
  v_mad_legacy_f32  v1, v6, v0, s0                      // 00000000006C: D2800001 00020106
  v_cvt_u32_f32  v2, v2                                 // 000000000074: 7E040F02
  v_cvt_u32_f32  v3, v3                                 // 000000000078: 7E060F03
  v_cvt_u32_f32  v1, v1                                 // 00000000007C: 7E020F01
  tbuffer_load_format_xyzw  v[19:22], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000080: EBF32000 80021302
  tbuffer_load_format_xyzw  v[31:34], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000088: EBF32000 80021F03
  tbuffer_load_format_xyzw  v[39:42], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000090: EBF32000 80022701
  s_mov_b32     s6, 0x40e33333                          // 000000000098: BE8603FF 40E33333
  v_mad_legacy_f32  v12, v6, v0, s6                     // 0000000000A0: D280000C 001A0106
  s_mov_b32     s1, 0x40a33333                          // 0000000000A8: BE8103FF 40A33333
  v_cvt_u32_f32  v12, v12                               // 0000000000B0: 7E180F0C
  v_mad_legacy_f32  v14, v6, v0, s1                     // 0000000000B4: D280000E 00060106
  v_cvt_u32_f32  v13, v13                               // 0000000000BC: 7E1A0F0D
  v_cvt_u32_f32  v14, v14                               // 0000000000C0: 7E1C0F0E
  tbuffer_load_format_xyzw  v[35:38], v12, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C4: EBF32000 8002230C
  tbuffer_load_format_xyzw  v[23:26], v13, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000CC: EBF32000 8002170D
  tbuffer_load_format_xyzw  v[27:30], v14, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D4: EBF32000 80021B0E
  s_mov_b32     s1, 0x3f8ccccd                          // 0000000000DC: BE8103FF 3F8CCCCD
  v_mad_legacy_f32  v0, v6, v0, s1                      // 0000000000E4: D2800000 00060106
  v_cvt_u32_f32  v0, v0                                 // 0000000000EC: 7E000F00
  tbuffer_load_format_xyzw  v[0:3], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000F0: EBF32000 80020000
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 0000000000F8: BF8C0F77
  v_mul_legacy_f32  v12, v11, v18                       // 0000000000FC: 0E18250B
  v_mac_legacy_f32  v12, v10, v17                       // 000000000100: 0C18230A
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 000000000104: BF8C0F76
  v_mul_legacy_f32  v13, v11, v22                       // 000000000108: 0E1A2D0B
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 00000000010C: BF8C0F72
  v_mul_legacy_f32  v14, v11, v26                       // 000000000110: 0E1C350B
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000114: BF8C0F71
  v_mul_legacy_f32  v17, v11, v30                       // 000000000118: 0E223D0B
  v_mul_legacy_f32  v18, v11, v34                       // 00000000011C: 0E24450B
  v_mul_legacy_f32  v11, v11, v38                       // 000000000120: 0E164D0B
  v_mac_legacy_f32  v13, v10, v21                       // 000000000124: 0C1A2B0A
  v_mac_legacy_f32  v12, v9, v16                        // 000000000128: 0C182109
  v_mac_legacy_f32  v14, v10, v25                       // 00000000012C: 0C1C330A
  v_mac_legacy_f32  v17, v10, v29                       // 000000000130: 0C223B0A
  v_mac_legacy_f32  v18, v10, v33                       // 000000000134: 0C24430A
  v_mac_legacy_f32  v11, v10, v37                       // 000000000138: 0C164B0A
  v_mac_legacy_f32  v13, v9, v20                        // 00000000013C: 0C1A2909
  v_mac_legacy_f32  v12, v8, v15                        // 000000000140: 0C181F08
  v_mac_legacy_f32  v14, v9, v24                        // 000000000144: 0C1C3109
  v_mac_legacy_f32  v17, v9, v28                        // 000000000148: 0C223909
  v_mac_legacy_f32  v18, v9, v32                        // 00000000014C: 0C244109
  v_mac_legacy_f32  v11, v9, v36                        // 000000000150: 0C164909
  v_mac_legacy_f32  v13, v8, v19                        // 000000000154: 0C1A2708
  v_mov_b32     v10, 0                                  // 000000000158: 7E140280
  v_mov_b32     v15, 1.0                                // 00000000015C: 7E1E02F2
  v_mac_legacy_f32  v14, v8, v23                        // 000000000160: 0C1C2F08
  v_mac_legacy_f32  v17, v8, v27                        // 000000000164: 0C223708
  v_mac_legacy_f32  v18, v8, v31                        // 000000000168: 0C243F08
  v_mac_legacy_f32  v11, v8, v35                        // 00000000016C: 0C164708
  exp           pos0, v12, v13, v10, v15 done           // 000000000170: F80008CF 0F0A0D0C
  exp           param0, v4, v5, v6, v7                  // 000000000178: F800020F 07060504
  exp           param1, v39, v40, v41, v42              // 000000000180: F800021F 2A292827
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000188: BF8C0F70
  exp           param2, v0, v1, v2, v3                  // 00000000018C: F800022F 03020100
  exp           param3, v14, v17, v18, v11              // 000000000194: F800023F 0B12110E
  s_endpgm                                              // 00000000019C: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[370], bundle is:[221] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBatchTexTGTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] position, usageIdx  4, paramIdx 4, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [4] generic, usageIdx  3, paramIdx 3, paramSlot 0

codeLenInByte        = 556;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 41;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  v_mov_b32     v0, 0x44ff028f                          // 000000000008: 7E0002FF 44FF028F
  s_mov_b32     s0, 0x40066666                          // 000000000010: BE8003FF 40066666
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000018: BF8C0F70
  v_mad_legacy_f32  v1, v6, v0, s0                      // 00000000001C: D2800001 00020106
  v_cvt_u32_f32  v1, v1                                 // 000000000024: 7E020F01
  s_waitcnt     lgkmcnt(0)                              // 000000000028: BF8C007F
  tbuffer_load_format_xyzw  v[12:15], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000002C: EBF32000 80020C01
  s_mov_b32     s0, 0x40466666                          // 000000000034: BE8003FF 40466666
  v_mad_legacy_f32  v2, v6, v0, s0                      // 00000000003C: D2800002 00020106
  v_cvt_u32_f32  v2, v2                                 // 000000000044: 7E040F02
  s_mov_b32     s0, 0x3dcccccd                          // 000000000048: BE8003FF 3DCCCCCD
  v_mad_legacy_f32  v1, v6, v0, s0                      // 000000000050: D2800001 00020106
  v_cvt_u32_f32  v1, v1                                 // 000000000058: 7E020F01
  tbuffer_load_format_xyzw  v[16:19], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000005C: EBF32000 80021002
  tbuffer_load_format_xyzw  v[20:23], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000064: EBF32000 80021401
  s_mov_b32     s0, 0x40833333                          // 00000000006C: BE8003FF 40833333
  v_mad_legacy_f32  v2, v6, v0, s0                      // 000000000074: D2800002 00020106
  s_mov_b32     s0, 0x40a33333                          // 00000000007C: BE8003FF 40A33333
  s_mov_b32     s1, 0x40c33333                          // 000000000084: BE8103FF 40C33333
  v_mad_legacy_f32  v3, v6, v0, s0                      // 00000000008C: D2800003 00020106
  v_mad_legacy_f32  v1, v6, v0, s1                      // 000000000094: D2800001 00060106
  v_cvt_u32_f32  v2, v2                                 // 00000000009C: 7E040F02
  v_cvt_u32_f32  v3, v3                                 // 0000000000A0: 7E060F03
  v_cvt_u32_f32  v1, v1                                 // 0000000000A4: 7E020F01
  tbuffer_load_format_xyzw  v[25:28], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A8: EBF32000 80021902
  tbuffer_load_format_xyzw  v[29:32], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B0: EBF32000 80021D03
  tbuffer_load_format_xyzw  v[37:40], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B8: EBF32000 80022501
  s_mov_b32     s6, 0x3f8ccccd                          // 0000000000C0: BE8603FF 3F8CCCCD
  s_mov_b32     s0, 0x40e33333                          // 0000000000C8: BE8003FF 40E33333
  v_mad_legacy_f32  v24, v6, v0, s6                     // 0000000000D0: D2800018 001A0106
  v_mad_legacy_f32  v0, v6, v0, s0                      // 0000000000D8: D2800000 00020106
  v_cvt_u32_f32  v24, v24                               // 0000000000E0: 7E300F18
  v_cvt_u32_f32  v0, v0                                 // 0000000000E4: 7E000F00
  tbuffer_load_format_xyzw  v[33:36], v24, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000E8: EBF32000 80022118
  tbuffer_load_format_xyzw  v[0:3], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000F0: EBF32000 80020000
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 0000000000F8: BF8C0F77
  v_mul_legacy_f32  v15, v11, v15                       // 0000000000FC: 0E1E1F0B
  v_mac_legacy_f32  v15, v10, v14                       // 000000000100: 0C1E1D0A
  s_load_dwordx4  s[8:11], s[2:3], 0x0c                 // 000000000104: C084030C
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 000000000108: BF8C0F76
  v_mul_legacy_f32  v14, v11, v19                       // 00000000010C: 0E1C270B
  v_mac_legacy_f32  v15, v9, v13                        // 000000000110: 0C1E1B09
  v_mac_legacy_f32  v14, v10, v18                       // 000000000114: 0C1C250A
  v_mac_legacy_f32  v15, v8, v12                        // 000000000118: 0C1E1908
  v_mac_legacy_f32  v14, v9, v17                        // 00000000011C: 0C1C2309
  v_mac_legacy_f32  v14, v8, v16                        // 000000000120: 0C1C2108
  v_mov_b32     v12, 0                                  // 000000000124: 7E180280
  s_waitcnt     lgkmcnt(0)                              // 000000000128: BF8C007F
  buffer_store_dword  v15, v0, s[8:11], s4 offset:64 glc slc // 00000000012C: E0704040 04420F00
  v_mov_b32     v13, 1.0                                // 000000000134: 7E1A02F2
  buffer_store_dword  v14, v0, s[8:11], s4 offset:68 glc slc // 000000000138: E0704044 04420E00
  buffer_store_dword  v12, v0, s[8:11], s4 offset:72 glc slc // 000000000140: E0704048 04420C00
  buffer_store_dword  v13, v0, s[8:11], s4 offset:76 glc slc // 000000000148: E070404C 04420D00
  buffer_store_dword  v4, v0, s[8:11], s4 glc slc       // 000000000150: E0704000 04420400
  buffer_store_dword  v5, v0, s[8:11], s4 offset:4 glc slc // 000000000158: E0704004 04420500
  buffer_store_dword  v6, v0, s[8:11], s4 offset:8 glc slc // 000000000160: E0704008 04420600
  buffer_store_dword  v7, v0, s[8:11], s4 offset:12 glc slc // 000000000168: E070400C 04420700
  s_waitcnt     vmcnt(13) & lgkmcnt(15)                 // 000000000170: BF8C0F7D
  buffer_store_dword  v20, v0, s[8:11], s4 offset:16 glc slc // 000000000174: E0704010 04421400
  buffer_store_dword  v21, v0, s[8:11], s4 offset:20 glc slc // 00000000017C: E0704014 04421500
  s_waitcnt     vmcnt(14) & lgkmcnt(15)                 // 000000000184: BF8C0F7E
  v_mul_legacy_f32  v4, v11, v28                        // 000000000188: 0E08390B
  buffer_store_dword  v22, v0, s[8:11], s4 offset:24 glc slc // 00000000018C: E0704018 04421600
  v_mac_legacy_f32  v4, v10, v27                        // 000000000194: 0C08370A
  s_waitcnt     vmcnt(14) & lgkmcnt(15)                 // 000000000198: BF8C0F7E
  v_mul_legacy_f32  v5, v11, v32                        // 00000000019C: 0E0A410B
  buffer_store_dword  v23, v0, s[8:11], s4 offset:28 glc slc // 0000000001A0: E070401C 04421700
  v_mac_legacy_f32  v4, v9, v26                         // 0000000001A8: 0C083509
  v_mac_legacy_f32  v5, v10, v31                        // 0000000001AC: 0C0A3F0A
  s_waitcnt     vmcnt(14) & lgkmcnt(15)                 // 0000000001B0: BF8C0F7E
  v_mul_legacy_f32  v6, v11, v40                        // 0000000001B4: 0E0C510B
  s_waitcnt     vmcnt(13) & lgkmcnt(15)                 // 0000000001B8: BF8C0F7D
  buffer_store_dword  v33, v0, s[8:11], s4 offset:32 glc slc // 0000000001BC: E0704020 04422100
  v_mac_legacy_f32  v4, v8, v25                         // 0000000001C4: 0C083308
  v_mac_legacy_f32  v5, v9, v30                         // 0000000001C8: 0C0A3D09
  v_mac_legacy_f32  v6, v10, v39                        // 0000000001CC: 0C0C4F0A
  s_waitcnt     vmcnt(13) & lgkmcnt(15)                 // 0000000001D0: BF8C0F7D
  v_mul_legacy_f32  v3, v11, v3                         // 0000000001D4: 0E06070B
  buffer_store_dword  v34, v0, s[8:11], s4 offset:36 glc slc // 0000000001D8: E0704024 04422200
  v_mac_legacy_f32  v5, v8, v29                         // 0000000001E0: 0C0A3B08
  v_mac_legacy_f32  v6, v9, v38                         // 0000000001E4: 0C0C4D09
  v_mac_legacy_f32  v3, v10, v2                         // 0000000001E8: 0C06050A
  buffer_store_dword  v35, v0, s[8:11], s4 offset:40 glc slc // 0000000001EC: E0704028 04422300
  v_mac_legacy_f32  v6, v8, v37                         // 0000000001F4: 0C0C4B08
  v_mac_legacy_f32  v3, v9, v1                          // 0000000001F8: 0C060309
  buffer_store_dword  v36, v0, s[8:11], s4 offset:44 glc slc // 0000000001FC: E070402C 04422400
  v_mac_legacy_f32  v3, v8, v0                          // 000000000204: 0C060108
  buffer_store_dword  v4, v0, s[8:11], s4 offset:48 glc slc // 000000000208: E0704030 04420400
  buffer_store_dword  v5, v0, s[8:11], s4 offset:52 glc slc // 000000000210: E0704034 04420500
  buffer_store_dword  v6, v0, s[8:11], s4 offset:56 glc slc // 000000000218: E0704038 04420600
  buffer_store_dword  v3, v0, s[8:11], s4 offset:60 glc slc // 000000000220: E070403C 04420300
  s_endpgm                                              // 000000000228: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[593], bundle is:[214] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBatchTexTGTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] position, usageIdx  4, paramIdx 4, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [4] generic, usageIdx  3, paramIdx 3, paramSlot 0

codeLenInByte        = 480;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 47;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  v_mov_b32     v0, 0x44ff028f                          // 000000000008: 7E0002FF 44FF028F
  s_mov_b32     s0, 0x40066666                          // 000000000010: BE8003FF 40066666
  s_mov_b32     s1, 0x40466666                          // 000000000018: BE8103FF 40466666
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000020: BF8C0F70
  v_mad_legacy_f32  v2, v6, v0, s0                      // 000000000024: D2800002 00020106
  v_mad_legacy_f32  v3, v6, v0, s1                      // 00000000002C: D2800003 00060106
  v_cvt_u32_f32  v2, v2                                 // 000000000034: 7E040F02
  v_cvt_u32_f32  v3, v3                                 // 000000000038: 7E060F03
  s_waitcnt     lgkmcnt(0)                              // 00000000003C: BF8C007F
  tbuffer_load_format_xyzw  v[12:15], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 80020C02
  tbuffer_load_format_xyzw  v[16:19], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000048: EBF32000 80021003
  s_mov_b32     s0, 0x3dcccccd                          // 000000000050: BE8003FF 3DCCCCCD
  s_mov_b32     s1, 0x40833333                          // 000000000058: BE8103FF 40833333
  s_mov_b32     s5, 0x40a33333                          // 000000000060: BE8503FF 40A33333
  s_mov_b32     s6, 0x40c33333                          // 000000000068: BE8603FF 40C33333
  s_mov_b32     s7, 0x40e33333                          // 000000000070: BE8703FF 40E33333
  v_mad_legacy_f32  v2, v6, v0, s0                      // 000000000078: D2800002 00020106
  v_mad_legacy_f32  v3, v6, v0, s1                      // 000000000080: D2800003 00060106
  v_mad_legacy_f32  v20, v6, v0, s5                     // 000000000088: D2800014 00160106
  v_mad_legacy_f32  v21, v6, v0, s6                     // 000000000090: D2800015 001A0106
  v_mad_legacy_f32  v22, v6, v0, s7                     // 000000000098: D2800016 001E0106
  s_mov_b32     s0, 0x3f8ccccd                          // 0000000000A0: BE8003FF 3F8CCCCD
  v_mad_legacy_f32  v0, v6, v0, s0                      // 0000000000A8: D2800000 00020106
  v_cvt_u32_f32  v2, v2                                 // 0000000000B0: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 0000000000B4: 7E000F00
  tbuffer_load_format_xyzw  v[23:26], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B8: EBF32000 80021702
  tbuffer_load_format_xyzw  v[43:46], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C0: EBF32000 80022B00
  v_cvt_u32_f32  v3, v3                                 // 0000000000C8: 7E060F03
  v_cvt_u32_f32  v20, v20                               // 0000000000CC: 7E280F14
  v_cvt_u32_f32  v21, v21                               // 0000000000D0: 7E2A0F15
  v_cvt_u32_f32  v22, v22                               // 0000000000D4: 7E2C0F16
  tbuffer_load_format_xyzw  v[27:30], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D8: EBF32000 80021B03
  tbuffer_load_format_xyzw  v[31:34], v20, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000E0: EBF32000 80021F14
  tbuffer_load_format_xyzw  v[35:38], v21, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000E8: EBF32000 80022315
  tbuffer_load_format_xyzw  v[39:42], v22, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000F0: EBF32000 80022716
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 0000000000F8: BF8C0F77
  v_mul_legacy_f32  v0, v11, v15                        // 0000000000FC: 0E001F0B
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 000000000100: BF8C0F76
  v_mul_legacy_f32  v2, v11, v19                        // 000000000104: 0E04270B
  v_mac_legacy_f32  v0, v10, v14                        // 000000000108: 0C001D0A
  v_mac_legacy_f32  v2, v10, v18                        // 00000000010C: 0C04250A
  v_mac_legacy_f32  v0, v9, v13                         // 000000000110: 0C001B09
  v_mac_legacy_f32  v2, v9, v17                         // 000000000114: 0C042309
  s_movk_i32    s0, 0x0050                              // 000000000118: B0000050
  s_mov_b32     m0, 0x00010000                          // 00000000011C: BEFC03FF 00010000
  v_mac_legacy_f32  v0, v8, v12                         // 000000000124: 0C001908
  v_mac_legacy_f32  v2, v8, v16                         // 000000000128: 0C042108
  v_mul_lo_i32  v1, v1, s0                              // 00000000012C: D2D60001 00000101
  ds_write2_b32  v1, v0, v2 offset0:16 offset1:17       // 000000000134: D8381110 00020001
  v_mov_b32     v0, 0                                   // 00000000013C: 7E000280
  v_mov_b32     v2, 1.0                                 // 000000000140: 7E0402F2
  ds_write2_b32  v1, v0, v2 offset0:18 offset1:19       // 000000000144: D8381312 00020001
  ds_write2_b32  v1, v4, v5 offset1:1                   // 00000000014C: D8380100 00050401
  ds_write2_b32  v1, v6, v7 offset0:2 offset1:3         // 000000000154: D8380302 00070601
  s_waitcnt     vmcnt(3) & lgkmcnt(15)                  // 00000000015C: BF8C0F73
  v_mul_legacy_f32  v0, v11, v30                        // 000000000160: 0E003D0B
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 000000000164: BF8C0F72
  v_mul_legacy_f32  v2, v11, v34                        // 000000000168: 0E04450B
  ds_write2_b32  v1, v23, v24 offset0:4 offset1:5       // 00000000016C: D8380504 00181701
  v_mac_legacy_f32  v0, v10, v29                        // 000000000174: 0C003B0A
  v_mac_legacy_f32  v2, v10, v33                        // 000000000178: 0C04430A
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 00000000017C: BF8C0F71
  v_mul_legacy_f32  v3, v11, v38                        // 000000000180: 0E064D0B
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000184: BF8C0F70
  v_mul_legacy_f32  v4, v11, v42                        // 000000000188: 0E08550B
  ds_write2_b32  v1, v25, v26 offset0:6 offset1:7       // 00000000018C: D8380706 001A1901
  v_mac_legacy_f32  v0, v9, v28                         // 000000000194: 0C003909
  v_mac_legacy_f32  v2, v9, v32                         // 000000000198: 0C044109
  v_mac_legacy_f32  v3, v10, v37                        // 00000000019C: 0C064B0A
  v_mac_legacy_f32  v4, v10, v41                        // 0000000001A0: 0C08530A
  ds_write2_b32  v1, v43, v44 offset0:8 offset1:9       // 0000000001A4: D8380908 002C2B01
  v_mac_legacy_f32  v0, v8, v27                         // 0000000001AC: 0C003708
  v_mac_legacy_f32  v2, v8, v31                         // 0000000001B0: 0C043F08
  v_mac_legacy_f32  v3, v9, v36                         // 0000000001B4: 0C064909
  v_mac_legacy_f32  v4, v9, v40                         // 0000000001B8: 0C085109
  ds_write2_b32  v1, v45, v46 offset0:10 offset1:11     // 0000000001BC: D8380B0A 002E2D01
  v_mac_legacy_f32  v3, v8, v35                         // 0000000001C4: 0C064708
  v_mac_legacy_f32  v4, v8, v39                         // 0000000001C8: 0C084F08
  ds_write2_b32  v1, v0, v2 offset0:12 offset1:13       // 0000000001CC: D8380D0C 00020001
  ds_write2_b32  v1, v3, v4 offset0:14 offset1:15       // 0000000001D4: D8380F0E 00040301
  s_endpgm                                              // 0000000001DC: BF810000
end


// Approximately 15 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VBatchTexTGTexTGCxform[] =
{
     68,  88,  66,  67,  90,  47, 
    237,  29, 204,  43, 213, 240, 
     35, 230, 107, 175,  87, 134, 
    152, 219,   1,   0,   0,   0, 
    176,  15,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     88,   1,   0,   0, 172,   1, 
      0,   0, 104,   2,   0,   0, 
     20,  15,   0,   0,  82,  68, 
     69,  70,  28,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
    224,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      1,   0,   0,   0, 128,   0, 
      0,   0,   0,  12,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 168,   0,   0,   0, 
      0,   0,   0,   0,   0,  12, 
      0,   0,   2,   0,   0,   0, 
    188,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 102, 
    108, 111,  97, 116,  52,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0, 192,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 179,   0, 
      0,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
     76,   0,   0,   0,   2,   0, 
      0,   0,   8,   0,   0,   0, 
     56,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,  15,   0,   0, 
     62,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,  15,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     83,  86,  95,  80, 111, 115, 
    105, 116, 105, 111, 110,   0, 
    171, 171,  79,  83,  71,  78, 
    180,   0,   0,   0,   6,   0, 
      0,   0,   8,   0,   0,   0, 
    152,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
    158,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    158,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  15,   0,   0,   0, 
    158,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,   3,  12,   0,   0, 
    158,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,  12,   3,   0,   0, 
    167,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   4,   0, 
      0,   0,  15,   0,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88, 164,  12,   0,   0, 
     80,   0,   1,   0,  41,   3, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 161,   0, 
      0,   0,  80,   0,   1,   0, 
    156,   0,   0,   0, 106,   8, 
      0,   1,  89,   8,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0, 192,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3,  50,  32, 
     16,   0,   3,   0,   0,   0, 
    101,   0,   0,   3, 194,  32, 
     16,   0,   3,   0,   0,   0, 
    103,   0,   0,   4, 242,  32, 
     16,   0,   4,   0,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   2,   2,   0,   0,   0, 
     54,   0,   0,   5, 242,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  50,   0,   0,  15, 
    242,   0,  16,   0,   0,   0, 
      0,   0, 166,  26,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0, 143,   2, 255,  68, 
    143,   2, 255,  68, 143,   2, 
    255,  68, 143,   2, 255,  68, 
      2,  64,   0,   0,  51,  51, 
    195,  64,  51,  51, 227,  64, 
    205, 204, 204,  61, 205, 204, 
    140,  63,  28,   0,   0,   5, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   7, 242,  32,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     42,   0,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   7, 
    242,  32,  16,   0,   2,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,  15, 242,   0, 
     16,   0,   1,   0,   0,   0, 
    166,  26,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
    143,   2, 255,  68, 143,   2, 
    255,  68, 143,   2, 255,  68, 
    143,   2, 255,  68,   2,  64, 
      0,   0, 102, 102,   6,  64, 
    102, 102,  70,  64,  51,  51, 
    131,  64,  51,  51, 163,  64, 
     28,   0,   0,   5, 242,   0, 
     16,   0,   1,   0,   0,   0, 
     70,  14,  16,   0,   1,   0, 
      0,   0,  17,   0,   0,   9, 
     18,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     42,   0,  16,   0,   1,   0, 
      0,   0,  17,   0,   0,   9, 
     34,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  17,   0,   0,   9, 
     66,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,   9, 
    130,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     26,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,   9, 
     18,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     10,   0,  16,   0,   1,   0, 
      0,   0,  17,   0,   0,   9, 
     34,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     26,   0,  16,   0,   1,   0, 
      0,   0,  54,   0,   0,   8, 
    194,  32,  16,   0,   4,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 128,  63,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    209,   0,   0,   0,  21,   0, 
      1,   0,  32, 117,  23,   0, 
    120,   1, 237, 152,  75,  76, 
     19,  65,  24, 199, 103, 119, 
    203, 208, 110, 167, 187, 188, 
     44, 165,  84,  43, 165,   6, 
    144,  88, 168,  21, 159,  33, 
     20,  41, 130,  26, 163,  17, 
    226, 105,  15,  86, 104, 173, 
    177,  60, 108,  17,  27,  15, 
    181, 248, 138,   7,  18, 140, 
     39, 142,  36, 222,  60, 121, 
    240, 166,   1,  18, 175,  24, 
     19,  18, 143, 158, 188, 233, 
     77,  47, 220, 234, 255, 219, 
    238,  70,  76, 228, 172,  49, 
    251,  75, 254, 243, 159, 111, 
    231, 245, 205, 204, 158, 230, 
    110,  43,  51,  25,  77,  61, 
    123,  69,  30,  91,  59, 233, 
    157, 151,  25, 171, 163,   0, 
    184, 168,   0, 243,  45,  84, 
     50, 118, 197,  79,  37,  99, 
    102,  40,  65, 232, 219,  11, 
     19, 208,  26, 226,  36, 156, 
    218, 186,  45, 213,  72, 110, 
    190,  64, 233, 129, 142,  67, 
    139,  24,  51,  14,  31, 128, 
    246,  65,  52, 190,   9, 178, 
    215,  36, 220,  84,   0, 219, 
    105, 236, 110, 188,  80,   0, 
    178, 219,   9,  74, 135, 240, 
     65, 118, 222,  38,  29,  84, 
    252, 153,  11,  16, 173, 191, 
     23, 212, 102, 175,  65, 249, 
     81, 158,   4, 237, 247,  95, 
    131, 246, 111, 223,  19,  65, 
    247, 177,  27,  13,  82,  32, 
    162, 193, 186,  71, 187,  75, 
    210, 138, 105, 191, 180, 183, 
     77, 104,  47, 170, 224, 183, 
    243,   5, 118, 140, 171, 101, 
    156,  93, 238, 231, 210,  74, 
     63,  71, 192, 177,  32,  71, 
     35, 199, 225, 113,  14, 213, 
     67,  56,  80, 142,  11, 229, 
     42, 132, 139, 228,  88, 144, 
    227, 210,  56,  18, 228,  58, 
    212,   0,  53,  66,  56, 108, 
    222,  12,  97,  79,  28,  63, 
     10,  71, 142,  28, 255,  43, 
    199, 197, 243,  54,  40,   8, 
    181,  67,  33, 104,  63, 116, 
      0,  10, 215, 114, 193,  82, 
     38,  92, 170, 237, 144, 203, 
    148,  25,  92, 177,  79, 224, 
    255, 134, 206, 192, 254, 111, 
    233,  44,  40, 182, 217,  93, 
    119, 112, 112, 112, 112, 112, 
    112, 112, 112, 112, 112, 112, 
    112, 112, 112, 112, 248,  91, 
    200,  29,  15, 215, 153, 242, 
    120, 179,  42, 179, 242, 138, 
     92,  77,  85, 149, 202, 122, 
     54, 203, 147, 243, 250, 242, 
    134, 196,  42, 219,  92, 146, 
    153, 164, 203, 229,   7, 108, 
    121, 131,  29, 252, 241,  13, 
    245,  10, 245,  73,  36,  30, 
     37, 125,  86, 123,  85,  89, 
    194, 152, 115, 201, 170, 242, 
      4, 223, 223, 195,  43, 235, 
     31, 182, 182,   6, 101, 179, 
    157,  51, 197, 116,  63, 179, 
    231, 147, 117,  87,  89, 209, 
    121, 153, 230, 165,  57, 229, 
    102, 185,  66, 174, 132, 107, 
     46, 117, 209,  26,  79,  49, 
    215, 151, 164,  48, 199,   4, 
    205,  53,  18, 137, 151,  73, 
    161,   7, 202, 154, 249, 141, 
     51, 159,  30,  44, 107, 122, 
    200, 156,  67, 116, 214, 198, 
    250,  90, 107, 174, 181, 211, 
     28,  75, 200,  99, 121, 136, 
     89, 253, 153, 206, 204, 190, 
    216, 117, 229,  30, 246, 231, 
     61,  20, 208, 212, 206, 128, 
     88, 164, 250, 145, 160,  86, 
     32,  31,   8, 105, 119, 200, 
      7,  35, 154, 119,  52, 170, 
    121,  47, 249,  53, 181,  55, 
     40,  60,  29,   1, 161,  38, 
     66,  66,  61,  19,  17, 234, 
     72,  84, 168,  23, 253, 194, 
    211,  19,  20, 238, 112,  64, 
    120, 226,  33, 225,  57,  21, 
     17, 158, 225, 168, 240, 156, 
    247,  11, 119,  87,  80,  84, 
    228, 150, 242, 119, 249,  64, 
    217, 221,  23,  18, 238,  19, 
     17, 225,  30, 138,  10, 247, 
    152,  95, 124, 116, 179,  29, 
    225,  83, 117,  93, 102,  59, 
    174,  58,  94,  31, 134, 119, 
    117, 247,  28, 166, 243, 238, 
     67, 157,  73, 178,  50,   4, 
    215,  26, 155, 188, 140,  45, 
    109, 208, 187,  45,  65, 175, 
    106, 164,  54, 136,  94, 218, 
    236, 184,   1,  34, 236, 152, 
    100, 227,  66, 215, 146, 245, 
    222, 152, 179, 156, 250, 211, 
    187, 148, 102, 206, 242, 139, 
     85, 171, 253, 185, 229, 244, 
    166, 133,   4, 152, 241, 238, 
     45, 251, 186,  45, 173, 190, 
    177, 190, 191, 182, 156, 230, 
     80, 161, 225, 207, 159, 174, 
    247,  91, 111, 219,  91,  86, 
    219,  52,  68, 227, 179, 167, 
    141,  27, 233, 124, 250, 126, 
     49, 182,  48,  87, 152, 187, 
     29,  43,  46,  20,  50, 233, 
    153, 163, 198, 116, 102, 209, 
    200, 148,  22,  50, 133, 217, 
    116, 222, 184, 153,  45,  29, 
     51,  38,  10,  83, 198, 213, 
    204, 236, 116, 166,  96, 164, 
     18, 169, 120, 201, 152, 200, 
    165,  17,  20, 141, 107, 103, 
    211,  11,  83, 185, 201,  76, 
    105, 114, 204,  44,  70,  74, 
    217, 185, 194,  76,  44, 155, 
    143, 199,  99, 185, 124,  49, 
    143,  85, 106, 140,  91,  57, 
    208, 219, 113,  61,  52, 147, 
    190,  53, 203, 126,   2, 175, 
    205, 180, 225,   0,  53,  16, 
      0,   0, 223,   0,   0,   0, 
     21,   0,   1,   0,  16,  17, 
     24,   0, 120,   1, 237, 152, 
    205, 111,  19,  71,  24, 198, 
    103, 119,  39,  19, 123,  51, 
    172,   3, 117, 192,   9, 142, 
    131,  75,  34,  82,  17,  89, 
      9,   9, 226,  91,  89, 182, 
     81,  91,  21,  42,  90, 130, 
     56, 173,  16, 134, 216,   4, 
    225, 124, 200, 142, 192, 170, 
     84,  99, 104, 197,  41,  18, 
     23,  14,  28,  56,  84, 234, 
    159, 209, 138,  68, 234,  53, 
    189,  32, 113,  43,  18,  82, 
     81,  15,  45,  39,  56,  35, 
    247, 121, 246,  35, 248,   0, 
    231,  34, 180,  63, 233, 153, 
    119, 222, 249, 120, 231, 157, 
    125, 237, 203, 236, 204, 137, 
    128,  23,  95, 255, 253, 134, 
    182, 244, 243, 209, 190,  85, 
     83, 136,  30,  58,   0, 221, 
    128, 213,  44,  91,  33,  94, 
    238, 102,  43,  68, 224,  26, 
     16,  22, 124,   6, 163, 161, 
      9, 244,  93,  88, 206, 141, 
     71,  10, 113,  55,  31, 160, 
    237, 131,  14,  65,  37,  41, 
     68,   3, 246,  56,  52,  10, 
     29, 132, 246,  64, 221, 164, 
     32, 198,  97,  92, 146, 102, 
    211,   5,  99,  49, 117, 174, 
    139, 193, 241,   1, 121, 200, 
    129, 182,  41, 178, 121,  55, 
    151,  32, 230, 255,  62, 152, 
     27, 227, 197, 196, 121, 198, 
    121, 125,  72, 176,  28, 113, 
    157,   8, 235, 209,  13, 191, 
      9,  62, 125, 192, 163, 168, 
    142, 220,  67, 254, 140, 252, 
    184, 150, 155, 208, 251, 232, 
    128,  56,  14,  97, 127,   6, 
     34,  60,  82, 137, 115, 147, 
    202, 184,  63, 169, 224,  40, 
     11, 194,   2, 133,  31, 148, 
     82,  80,  47, 132, 162,  41, 
     20,  84, 217,  16,  10, 169, 
    112, 160, 218,   1,  33,  65, 
    149, 129, 250, 161, 157, 208, 
     46, 232,  19,   8, 119,  82, 
      3,  16, 114,  84,  40, 128, 
     66, 225, 213,  32,  52,   4, 
    237, 133,  80,  32,  53,  12, 
     21, 160, 145, 232, 183,  43, 
    153,  21, 124,  54,  64,  25, 
    225,  77, 149, 201,  12,  97, 
     45,  36, 246,  17, 195, 111, 
    208, 253, 223,   8, 191,  70, 
      8, 127,  34,  84,  66,  66, 
     66,  66,  66,  66,  66,  66, 
     66,  66,  66,  66,  66,  66, 
     66, 194, 255, 137,  89, 188, 
    251,  88,  88,  63, 109, 118, 
     76, 209, 186, 111, 118, 230, 
     58,  86, 251, 113, 181, 170, 
    220, 213, 204, 250, 134,  33, 
    218,  79, 148,  97,  10,  35, 
     99, 182, 110, 139, 245,  13, 
    177, 239, 245, 191, 134,  54, 
    219, 225, 154,  47,  92,  51, 
    154,  55,  51, 178, 197, 177, 
     63, 182, 182,  78, 117, 239, 
    225, 122, 179, 223, 108,   7, 
    251, 178, 225, 190, 233, 233, 
     31, 183, 247, 133, 254,  47, 
    110, 199, 186,   3, 251, 187, 
    107, 197, 123,   3, 171, 130, 
    184,  86,  70, 181, 182,  99, 
     13, 134, 177, 172, 225,  40, 
    230,  24,  99, 222, 195, 185, 
    235, 179,  97, 172, 191, 220, 
     92, 176, 119,   8,  55, 163, 
     53,  69,  46,  51, 217,  18, 
     25,  17, 236, 207,  21, 195, 
    125, 184, 117, 251,  22, 238, 
    215,  55,  82, 112, 236, 225, 
    130, 214, 184, 255,  77, 250, 
      7, 242,  78, 122, 111,  65, 
    219,  99, 121, 157,  26,  44, 
    232, 244, 126, 216,  98,  94, 
    183, 205,  92, 112, 127, 215, 
     93, 125,  46,  50, 158, 124, 
    101,  14, 181, 230, 216, 119, 
     60, 249,  21, 173, 246, 228, 
     89, 218,  29, 158,  20, 180, 
    210, 147, 146, 182, 199, 147, 
     41,  90, 229,  73,  77, 219, 
    235, 201,  31, 112,  78,  63, 
    251,  89,  79, 102, 105,   7, 
     60, 217, 226, 217, 199,  82, 
     78, 142, 254, 110,  79, 218, 
     71,  82,  58,  24,  59, 109, 
     59, 121, 142, 237, 241, 100, 
    250, 112,  74, 219, 179, 118, 
     56, 254, 157, 118,  24, 103, 
     31, 231, 138,  56,  99,  58, 
    165, 211, 167, 108, 109, 159, 
    211, 154, 227, 125, 189, 202, 
     25, 229, 220, 167, 152,  59, 
     97, 235, 244,  55,  90, 219, 
     61,  74, 143, 115, 108,  63, 
    198, 206, 104, 157, 182, 148, 
    158, 160,  63,  10, 223,  80, 
    122, 146, 125, 228,  61,  67, 
    139, 188, 143, 210,  34, 239, 
    147, 180,  22, 238,  37, 238, 
    108,  12, 224, 171,  18, 190, 
    236,  81, 131,  16,  95, 251, 
     98, 159, 239, 196,  36, 246, 
    251,  33,  18, 251,  84,  12, 
      2,  26, 217, 232, 145,  87, 
     70, 150, 235,  49,  46, 156, 
     32, 234,  91, 102, 162, 249, 
    137, 200, 242, 189, 141, 239, 
    210, 254, 111, 191, 138, 127, 
    158,  24,  15, 191, 141, 198, 
    207,  70, 150,  49, 108, 232, 
    244, 179, 167, 151, 183, 162, 
    177, 197, 200,  46,  64, 220, 
     95,  61, 238,  95,  41, 215, 
    202, 223,  55,  74, 107,  43, 
    245, 149,  27, 165, 198,  90, 
    189,  82,  94,  58, 228,  47, 
     84, 110, 250, 149, 230,  90, 
    165, 190,  92, 174, 249, 215, 
    170, 205,  25, 127, 190, 126, 
    213,  63,  95,  89,  94, 168, 
    212, 253, 185, 233, 185, 169, 
    166,  63, 191,  88, 134, 211, 
    240,  47, 122, 229, 181, 171, 
    139,  23,  42, 205,  11,  95, 
      6, 205, 231, 205, 234,  74, 
    125, 169,  84, 173,  77,  77, 
    149,  22, 107, 141,  26,  78, 
      9, 121,  17, 157, 205, 183, 
    194,  94, 104, 169, 124, 125, 
     89, 252,   7,  32,  73, 221, 
    153,   0,  53,  16,   0,   0, 
    216,   0,   0,   0,  21,   0, 
      1,   0,   0, 181,  23,   0, 
    120,   1, 237, 152,  77, 108, 
     76,  81,  20, 199, 207, 251, 
    232, 233, 155, 153, 235, 189, 
    126,  78, 181,  69,  53, 141, 
     16, 106, 168,  74,  20,  17, 
    131,  34,  34, 162, 180, 216, 
    188, 133, 161,  51, 173, 152, 
    126, 152, 105, 152,  88, 140, 
    241, 109, 209, 132, 136, 133, 
    165, 196, 198, 210,  70,  34, 
     33, 109,  19,  91,  18, 105, 
     66, 108,  36,  18,  11,   9, 
     27, 193,  82,  50, 254, 231, 
    125,  68,  35, 172, 137, 188, 
     95, 242, 191, 255,  57, 247, 
    190, 185, 247, 220, 143, 213, 
    121, 212,  66,  30, 199,  62, 
    156, 186,  35, 158, 186, 215, 
    151, 152, 212, 137, 106,  36, 
     88, 192, 100, 147, 180,  68, 
    183, 146, 210,  18, 121, 161, 
      6, 225, 219, 117,  48,   5, 
    189,  67, 156, 134, 203, 216, 
    170,  64,  62, 233, 185, 219, 
    104,  19, 208,  70, 136,  13, 
    162,  17, 120,  31, 212,  14, 
    117,  67, 205, 144,  16, 151, 
      6,  88, 210, 128, 152,  52, 
     32, 236,  23, 100,  89, 153, 
    107,  49,  20, 142,  11, 210, 
     47,  52,  64,  88, 226,  39, 
    157, 210, 252, 158,  65,  72, 
    242, 255,  19, 146, 155, 228, 
     18, 174,  31, 230,  41, 251, 
    253, 215, 144, 253, 135, 247, 
     36, 200, 125,  44, 196, 134, 
    194, 115,  25,   8, 238,  49, 
    252, 164,  18, 196, 225,  93, 
    206,  65, 127, 162,  10,  76, 
    249, 177, 128,  48, 198, 115, 
     32, 166, 131, 235,  89, 187, 
    185, 158,  17, 200,  93,  51, 
      6,  25,  15, 138,  25, 170, 
    133, 112, 160, 140, 139,  99, 
     28,  42, 227,  34,  25,  11, 
    242,  34,   8,   9, 178,   3, 
    213,  65, 245,  16,  46, 146, 
     27,  33, 236, 137, 113, 240, 
    140,  28,  25, 239, 149, 113, 
    241, 220,  10, 181,  65, 120, 
     64, 188,   4,  90,  10,  45, 
    131,  58, 130, 183, 107, 250, 
     25,  97,  73,  15, 214, 252, 
    157, 178,  46,  25, 194, 141, 
    240,  36, 254,  79, 228,  12, 
    228, 221, 134, 248, 167, 225, 
    223, 119, 248,  68,   6, 164, 
    137, 136, 136, 136, 136, 136, 
    136, 136, 136, 136, 136, 136, 
    136, 136, 136, 136, 248,  75, 
    232, 157, 151, 102, 200, 184, 
     50,  87, 213, 169, 124,  83, 
    175, 246,  87, 141, 202,  76, 
     46, 199, 233, 170, 113,  17, 
    190,  39,  61, 233,  76, 207, 
    234,  84, 153, 103,  77,  39, 
    195, 115,  38, 221,  49, 203, 
    134, 195, 229,  11,  52,  61, 
     75, 203, 191, 126, 210, 149, 
     94,  17,  55, 234, 244, 138, 
    252, 255, 197, 243, 231, 219, 
    228, 255, 189, 189, 151,  49, 
    207,  85, 248, 125, 248,  53, 
    248,  51, 248, 117, 248, 251, 
    244, 175, 115,  54, 121, 158, 
    164, 102, 207, 219,  40, 233, 
    249,  50, 242, 231, 155, 222, 
     78,  94, 172, 123, 107, 147, 
     67, 101, 111, 221,  22, 127, 
     93,  90, 163,  87,  36, 159, 
     38, 103,  85, 185, 217,  89, 
     93,  78,  58, 221, 222, 184, 
    209, 238, 143,  55, 117, 248, 
    222, 220, 229, 123, 114, 165, 
     94,  57, 135, 125,  37,  58, 
    200,  62,  43, 190, 210, 180, 
    227,  75,  73, 197,  87, 152, 
     42, 214,  78,  42, 214, 101, 
    170,   1, 162, 135,  85, 227, 
    251, 140,  84, 114, 172,  86, 
     82,  86, 167, 169,  52, 122, 
     61,  47, 229, 173, 186, 250, 
    190,  55,  26,  97,   7,  56, 
    179,  47, 186,  89, 110, 104, 
    244,  99, 210, 224, 102,  13, 
    233,   6, 156, 107, 169,  40, 
    115, 111,  35, 187,  32, 190, 
    219, 180, 205,  26, 244, 183, 
     44, 166, 248,  86, 172, 181, 
    203,  84, 103, 164, 255,   0, 
    219, 114, 198, 137,  35, 150, 
    205, 181,  24, 111, 109, 163, 
    216, 102, 228, 176, 195,  84, 
    241, 253, 172, 226, 131, 150, 
    178,  98, 232,  95, 211,  77, 
    214,  38, 228, 177,  29,  57, 
    238,  99,  21,  59, 100, 169, 
    120,   2, 253, 107,  83, 100, 
    237, 101, 101,  29, 180, 148, 
     90, 132,  24, 121, 216,  14, 
    220, 144,  74, 212, 197, 217, 
    176, 142,  42, 213,  56,  81, 
     43,  36, 181, 169,  48, 174, 
    131, 132,  48,  22, 133,  96, 
      6, 237, 113,  80, 175, 124, 
     16, 184, 124,  47,  51, 219, 
    222,  44,  63, 121,  19, 140, 
    191,  12,  92, 106,  98,  82, 
     59, 118, 159,  62, 161, 143, 
    243, 218, 221, 111,  65, 255, 
    231, 192, 101,  14, 169, 245, 
    238, 120, 251, 234, 248, 100, 
     80,  27,  87, 129,  15,  67, 
    242, 255, 220,  22, 247,  68, 
     38, 159,  57,  95,  76,  77, 
     77,  20,  38,  78, 167, 138, 
     83, 133, 108, 102, 108, 131, 
     59, 156,  61, 235, 102,  75, 
     83, 217, 194, 120,  38, 239, 
    142, 228,  74,  27, 221, 193, 
    194,  73, 247, 112, 118, 124, 
     56,  91, 112, 251, 123, 251, 
    123,  74, 238, 224, 104,   6, 
     65, 209,  61, 186,  51,  51, 
    117, 114, 116,  40,  91,  26, 
    218, 235,  53, 187,  74, 185, 
    137, 194,  88,  42, 151, 239, 
    233,  73, 141, 230, 139, 121, 
    172, 226, 115,  35,  88,  91, 
    234, 121, 181, 208,  88, 230, 
    212,  56, 253,   0,  43,  81, 
    195,  92,  83,  84,  65,  84, 
    148,   0,   0,   0,  15,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   8,   0, 
      0,   0,   8,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0
};
