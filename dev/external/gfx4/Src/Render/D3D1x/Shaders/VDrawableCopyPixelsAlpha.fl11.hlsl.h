#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4 vfuniforms[192];            // Offset:    0 Size:  3072
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// COLOR                    1   x           1     NONE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1     zw        0     NONE   float     zw
// TEXCOORD                 2   xy          1     NONE   float   xy  
// SV_Position              0   xyzw        2      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[187]
// Embedded Data:
//  0x000000bb - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000b6 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[192], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.x
dcl_output o0.xy
dcl_output o0.zw
dcl_output o1.xy
dcl_output_siv o2.xyzw, position
dcl_temps 2
bfi r0.x, l(29), l(3), v1.x, l(2)
utof r0.x, r0.x
add r1.xyzw, r0.xxxx, l(0.100000, 1.100000, 2.100000, 3.100000)
add r0.xy, r0.xxxx, l(4.100000, 5.100000, 0.000000, 0.000000)
ftou r0.xy, r0.xyxx
ftou r1.xyzw, r1.xyzw
dp4 o0.x, v0.xyzw, cb0[r1.x + 0].xyzw
dp4 o0.y, v0.xyzw, cb0[r1.y + 0].xyzw
dp4 o0.z, v0.xyzw, cb0[r1.z + 0].xyzw
dp4 o0.w, v0.xyzw, cb0[r1.w + 0].xyzw
dp4 o1.x, v0.xyzw, cb0[r0.x + 0].xyzw
dp4 o1.y, v0.xyzw, cb0[r0.y + 0].xyzw
ishl r0.x, v1.x, l(3)
utof r0.x, r0.x
add r0.xy, r0.xxxx, l(0.100000, 1.100000, 0.000000, 0.000000)
ftou r0.xy, r0.xyxx
dp4 o2.x, v0.xyzw, cb0[r0.x + 0].xyzw
dp4 o2.y, v0.xyzw, cb0[r0.y + 0].xyzw
mov o2.zw, l(0,0,0,1.000000)
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[187], bundle is:[204] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VDrawableCopyPixelsAlpha.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  1, v8
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0

codeLenInByte        = 380;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 36;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000002
SVOC:VS_EXPORT_COUNT        = 1
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_lshlrev_b32  v0, 3, v8                              // 000000000008: 34001083
  v_bfi_b32     v0, -8, v0, 2                           // 00000000000C: D2940000 020A00C8
  v_lshlrev_b32  v8, 3, v8                              // 000000000014: 34101083
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_cvt_f32_u32  v0, v0                                 // 00000000001C: 7E000D00
  v_cvt_f32_u32  v8, v8                                 // 000000000020: 7E100D08
  v_add_f32     v9, 0x40466666, v0                      // 000000000024: 061200FF 40466666
  v_add_f32     v10, 0x40833333, v0                     // 00000000002C: 061400FF 40833333
  v_add_f32     v11, 0x3dcccccd, v8                     // 000000000034: 061610FF 3DCCCCCD
  v_cvt_u32_f32  v10, v10                               // 00000000003C: 7E140F0A
  v_cvt_u32_f32  v9, v9                                 // 000000000040: 7E120F09
  v_cvt_u32_f32  v11, v11                               // 000000000044: 7E160F0B
  s_waitcnt     lgkmcnt(0)                              // 000000000048: BF8C007F
  tbuffer_load_format_xyzw  v[24:27], v9, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000004C: EBF32000 80021809
  tbuffer_load_format_xyzw  v[28:31], v10, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000054: EBF32000 80021C0A
  tbuffer_load_format_xyzw  v[32:35], v11, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000005C: EBF32000 8002200B
  v_add_f32     v1, 0x3dcccccd, v0                      // 000000000064: 060200FF 3DCCCCCD
  v_add_f32     v2, 0x3f8ccccd, v0                      // 00000000006C: 060400FF 3F8CCCCD
  v_add_f32     v3, 0x40066666, v0                      // 000000000074: 060600FF 40066666
  v_cvt_u32_f32  v1, v1                                 // 00000000007C: 7E020F01
  v_cvt_u32_f32  v2, v2                                 // 000000000080: 7E040F02
  v_cvt_u32_f32  v3, v3                                 // 000000000084: 7E060F03
  tbuffer_load_format_xyzw  v[12:15], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000088: EBF32000 80020C01
  tbuffer_load_format_xyzw  v[16:19], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000090: EBF32000 80021002
  tbuffer_load_format_xyzw  v[20:23], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000098: EBF32000 80021403
  v_add_f32     v8, 0x3f8ccccd, v8                      // 0000000000A0: 061010FF 3F8CCCCD
  v_cvt_u32_f32  v8, v8                                 // 0000000000A8: 7E100F08
  tbuffer_load_format_xyzw  v[8:11], v8, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80020808
  v_add_f32     v0, 0x40a33333, v0                      // 0000000000B4: 060000FF 40A33333
  v_cvt_u32_f32  v0, v0                                 // 0000000000BC: 7E000F00
  tbuffer_load_format_xyzw  v[0:3], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C0: EBF32000 80020000
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 0000000000C8: BF8C0F71
  v_mul_legacy_f32  v11, v7, v11                        // 0000000000CC: 0E161707
  v_mul_legacy_f32  v35, v7, v35                        // 0000000000D0: 0E464707
  v_mac_legacy_f32  v11, v6, v10                        // 0000000000D4: 0C161506
  v_mac_legacy_f32  v35, v6, v34                        // 0000000000D8: 0C464506
  v_mac_legacy_f32  v11, v5, v9                         // 0000000000DC: 0C161305
  v_mul_legacy_f32  v10, v7, v15                        // 0000000000E0: 0E141F07
  v_mac_legacy_f32  v35, v5, v33                        // 0000000000E4: 0C464305
  v_mac_legacy_f32  v11, v4, v8                         // 0000000000E8: 0C161104
  v_mac_legacy_f32  v10, v6, v14                        // 0000000000EC: 0C141D06
  v_mac_legacy_f32  v35, v4, v32                        // 0000000000F0: 0C464104
  v_mov_b32     v8, 0                                   // 0000000000F4: 7E100280
  v_mov_b32     v9, 1.0                                 // 0000000000F8: 7E1202F2
  v_mac_legacy_f32  v10, v5, v13                        // 0000000000FC: 0C141B05
  exp           pos0, v35, v11, v8, v9 done             // 000000000100: F80008CF 09080B23
  v_mac_legacy_f32  v10, v4, v12                        // 000000000108: 0C141904
  s_waitcnt     expcnt(0) & lgkmcnt(15)                 // 00000000010C: BF8C0F0F
  v_mul_legacy_f32  v11, v7, v19                        // 000000000110: 0E162707
  v_mul_legacy_f32  v12, v7, v23                        // 000000000114: 0E182F07
  v_mul_legacy_f32  v13, v7, v27                        // 000000000118: 0E1A3707
  v_mac_legacy_f32  v11, v6, v18                        // 00000000011C: 0C162506
  v_mac_legacy_f32  v12, v6, v22                        // 000000000120: 0C182D06
  v_mac_legacy_f32  v13, v6, v26                        // 000000000124: 0C1A3506
  v_mac_legacy_f32  v11, v5, v17                        // 000000000128: 0C162305
  v_mac_legacy_f32  v12, v5, v21                        // 00000000012C: 0C182B05
  v_mac_legacy_f32  v13, v5, v25                        // 000000000130: 0C1A3305
  v_mac_legacy_f32  v11, v4, v16                        // 000000000134: 0C162104
  v_mac_legacy_f32  v12, v4, v20                        // 000000000138: 0C182904
  v_mac_legacy_f32  v13, v4, v24                        // 00000000013C: 0C1A3104
  exp           param0, v10, v11, v12, v13              // 000000000140: F800020F 0D0C0B0A
  s_waitcnt     expcnt(0) & lgkmcnt(15)                 // 000000000148: BF8C0F0F
  v_mul_legacy_f32  v10, v7, v31                        // 00000000014C: 0E143F07
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000150: BF8C0F70
  v_mul_legacy_f32  v3, v7, v3                          // 000000000154: 0E060707
  v_mac_legacy_f32  v10, v6, v30                        // 000000000158: 0C143D06
  v_mac_legacy_f32  v3, v6, v2                          // 00000000015C: 0C060506
  v_mac_legacy_f32  v10, v5, v29                        // 000000000160: 0C143B05
  v_mac_legacy_f32  v3, v5, v1                          // 000000000164: 0C060305
  v_mac_legacy_f32  v10, v4, v28                        // 000000000168: 0C143904
  v_mac_legacy_f32  v3, v4, v0                          // 00000000016C: 0C060104
  exp           param1, v10, v3, v8, v9                 // 000000000170: F800021F 0908030A
  s_endpgm                                              // 000000000178: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[393], bundle is:[214] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VDrawableCopyPixelsAlpha.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  1, v8
; Output Semantic Mappings
;   [0] position, usageIdx  2, paramIdx 2, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0

codeLenInByte        = 436;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 38;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 12
; esGsRingItemSize          = 12

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_lshlrev_b32  v0, 3, v8                              // 000000000008: 34001083
  v_bfi_b32     v0, -8, v0, 2                           // 00000000000C: D2940000 020A00C8
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000014: C0840300
  v_cvt_f32_u32  v0, v0                                 // 000000000018: 7E000D00
  v_add_f32     v1, 0x3dcccccd, v0                      // 00000000001C: 060200FF 3DCCCCCD
  v_add_f32     v2, 0x3f8ccccd, v0                      // 000000000024: 060400FF 3F8CCCCD
  v_add_f32     v3, 0x40066666, v0                      // 00000000002C: 060600FF 40066666
  v_cvt_u32_f32  v1, v1                                 // 000000000034: 7E020F01
  v_cvt_u32_f32  v2, v2                                 // 000000000038: 7E040F02
  v_cvt_u32_f32  v3, v3                                 // 00000000003C: 7E060F03
  s_waitcnt     lgkmcnt(0)                              // 000000000040: BF8C007F
  tbuffer_load_format_xyzw  v[14:17], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000044: EBF32000 80020E01
  tbuffer_load_format_xyzw  v[18:21], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000004C: EBF32000 80021202
  tbuffer_load_format_xyzw  v[22:25], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000054: EBF32000 80021603
  v_lshlrev_b32  v8, 3, v8                              // 00000000005C: 34101083
  v_cvt_f32_u32  v8, v8                                 // 000000000060: 7E100D08
  v_add_f32     v9, 0x40466666, v0                      // 000000000064: 061200FF 40466666
  v_add_f32     v10, 0x40833333, v0                     // 00000000006C: 061400FF 40833333
  v_add_f32     v11, 0x3dcccccd, v8                     // 000000000074: 061610FF 3DCCCCCD
  v_cvt_u32_f32  v10, v10                               // 00000000007C: 7E140F0A
  v_cvt_u32_f32  v9, v9                                 // 000000000080: 7E120F09
  v_cvt_u32_f32  v11, v11                               // 000000000084: 7E160F0B
  tbuffer_load_format_xyzw  v[26:29], v9, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000088: EBF32000 80021A09
  tbuffer_load_format_xyzw  v[30:33], v10, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000090: EBF32000 80021E0A
  tbuffer_load_format_xyzw  v[34:37], v11, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000098: EBF32000 8002220B
  v_add_f32     v0, 0x40a33333, v0                      // 0000000000A0: 060000FF 40A33333
  v_cvt_u32_f32  v0, v0                                 // 0000000000A8: 7E000F00
  tbuffer_load_format_xyzw  v[0:3], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80020000
  v_add_f32     v8, 0x3f8ccccd, v8                      // 0000000000B4: 061010FF 3F8CCCCD
  v_cvt_u32_f32  v8, v8                                 // 0000000000BC: 7E100F08
  tbuffer_load_format_xyzw  v[8:11], v8, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C0: EBF32000 80020808
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 0000000000C8: BF8C0F71
  v_mul_legacy_f32  v3, v7, v3                          // 0000000000CC: 0E060707
  v_mac_legacy_f32  v3, v6, v2                          // 0000000000D0: 0C060506
  v_mac_legacy_f32  v3, v5, v1                          // 0000000000D4: 0C060305
  v_mac_legacy_f32  v3, v4, v0                          // 0000000000D8: 0C060104
  v_mul_legacy_f32  v0, v7, v37                         // 0000000000DC: 0E004B07
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 0000000000E0: C080030C
  v_mac_legacy_f32  v0, v6, v36                         // 0000000000E4: 0C004906
  v_mac_legacy_f32  v0, v5, v35                         // 0000000000E8: 0C004705
  v_mac_legacy_f32  v0, v4, v34                         // 0000000000EC: 0C004504
  v_mul_legacy_f32  v17, v7, v17                        // 0000000000F0: 0E222307
  s_waitcnt     lgkmcnt(0)                              // 0000000000F4: BF8C007F
  buffer_store_dword  v0, v0, s[0:3], s4 offset:32 glc slc // 0000000000F8: E0704020 04400000
  v_mac_legacy_f32  v17, v6, v16                        // 000000000100: 0C222106
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000104: BF8C0F71
  v_mul_legacy_f32  v0, v7, v11                         // 000000000108: 0E001707
  v_mac_legacy_f32  v17, v5, v15                        // 00000000010C: 0C221F05
  v_mac_legacy_f32  v0, v6, v10                         // 000000000110: 0C001506
  v_mac_legacy_f32  v17, v4, v14                        // 000000000114: 0C221D04
  v_mac_legacy_f32  v0, v5, v9                          // 000000000118: 0C001305
  v_mul_legacy_f32  v14, v7, v21                        // 00000000011C: 0E1C2B07
  v_mac_legacy_f32  v0, v4, v8                          // 000000000120: 0C001104
  v_mov_b32     v12, 0                                  // 000000000124: 7E180280
  v_mac_legacy_f32  v14, v6, v20                        // 000000000128: 0C1C2906
  v_mov_b32     v13, 1.0                                // 00000000012C: 7E1A02F2
  v_mac_legacy_f32  v14, v5, v19                        // 000000000130: 0C1C2705
  v_mul_legacy_f32  v15, v7, v25                        // 000000000134: 0E1E3307
  v_mac_legacy_f32  v14, v4, v18                        // 000000000138: 0C1C2504
  v_mac_legacy_f32  v15, v6, v24                        // 00000000013C: 0C1E3106
  v_mul_legacy_f32  v16, v7, v29                        // 000000000140: 0E203B07
  buffer_store_dword  v0, v0, s[0:3], s4 offset:36 glc slc // 000000000144: E0704024 04400000
  v_mac_legacy_f32  v15, v5, v23                        // 00000000014C: 0C1E2F05
  v_mac_legacy_f32  v16, v6, v28                        // 000000000150: 0C203906
  v_mul_legacy_f32  v18, v7, v33                        // 000000000154: 0E244307
  buffer_store_dword  v12, v0, s[0:3], s4 offset:40 glc slc // 000000000158: E0704028 04400C00
  v_mac_legacy_f32  v15, v4, v22                        // 000000000160: 0C1E2D04
  v_mac_legacy_f32  v16, v5, v27                        // 000000000164: 0C203705
  v_mac_legacy_f32  v18, v6, v32                        // 000000000168: 0C244106
  buffer_store_dword  v13, v0, s[0:3], s4 offset:44 glc slc // 00000000016C: E070402C 04400D00
  v_mac_legacy_f32  v16, v4, v26                        // 000000000174: 0C203504
  v_mac_legacy_f32  v18, v5, v31                        // 000000000178: 0C243F05
  buffer_store_dword  v17, v0, s[0:3], s4 glc slc       // 00000000017C: E0704000 04401100
  v_mac_legacy_f32  v18, v4, v30                        // 000000000184: 0C243D04
  buffer_store_dword  v14, v0, s[0:3], s4 offset:4 glc slc // 000000000188: E0704004 04400E00
  buffer_store_dword  v15, v0, s[0:3], s4 offset:8 glc slc // 000000000190: E0704008 04400F00
  buffer_store_dword  v16, v0, s[0:3], s4 offset:12 glc slc // 000000000198: E070400C 04401000
  buffer_store_dword  v18, v0, s[0:3], s4 offset:16 glc slc // 0000000001A0: E0704010 04401200
  buffer_store_dword  v3, v0, s[0:3], s4 offset:20 glc slc // 0000000001A8: E0704014 04400300
  s_endpgm                                              // 0000000001B0: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[609], bundle is:[211] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VDrawableCopyPixelsAlpha.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  1, v8
; Output Semantic Mappings
;   [0] position, usageIdx  2, paramIdx 2, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0

codeLenInByte        = 412;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 41;
NumSgprs             = 5;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 12
; lsStride                  = 48

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_lshlrev_b32  v0, 3, v8                              // 000000000008: 34001083
  v_bfi_b32     v0, -8, v0, 2                           // 00000000000C: D2940000 020A00C8
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000014: C0800300
  v_cvt_f32_u32  v0, v0                                 // 000000000018: 7E000D00
  v_add_f32     v9, 0x40066666, v0                      // 00000000001C: 061200FF 40066666
  v_add_f32     v10, 0x40466666, v0                     // 000000000024: 061400FF 40466666
  v_add_f32     v11, 0x40833333, v0                     // 00000000002C: 061600FF 40833333
  v_cvt_u32_f32  v11, v11                               // 000000000034: 7E160F0B
  v_cvt_u32_f32  v9, v9                                 // 000000000038: 7E120F09
  v_cvt_u32_f32  v10, v10                               // 00000000003C: 7E140F0A
  s_waitcnt     lgkmcnt(0)                              // 000000000040: BF8C007F
  tbuffer_load_format_xyzw  v[21:24], v9, s[0:3], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000044: EBF32000 80001509
  tbuffer_load_format_xyzw  v[25:28], v10, s[0:3], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000004C: EBF32000 8000190A
  tbuffer_load_format_xyzw  v[29:32], v11, s[0:3], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000054: EBF32000 80001D0B
  v_add_f32     v2, 0x3dcccccd, v0                      // 00000000005C: 060400FF 3DCCCCCD
  v_add_f32     v3, 0x3f8ccccd, v0                      // 000000000064: 060600FF 3F8CCCCD
  v_add_f32     v0, 0x40a33333, v0                      // 00000000006C: 060000FF 40A33333
  v_cvt_u32_f32  v0, v0                                 // 000000000074: 7E000F00
  v_cvt_u32_f32  v2, v2                                 // 000000000078: 7E040F02
  v_lshlrev_b32  v8, 3, v8                              // 00000000007C: 34101083
  v_cvt_f32_u32  v8, v8                                 // 000000000080: 7E100D08
  v_add_f32     v12, 0x3dcccccd, v8                     // 000000000084: 061810FF 3DCCCCCD
  tbuffer_load_format_xyzw  v[13:16], v2, s[0:3], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000008C: EBF32000 80000D02
  tbuffer_load_format_xyzw  v[33:36], v0, s[0:3], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000094: EBF32000 80002100
  v_add_f32     v8, 0x3f8ccccd, v8                      // 00000000009C: 061010FF 3F8CCCCD
  v_cvt_u32_f32  v3, v3                                 // 0000000000A4: 7E060F03
  v_cvt_u32_f32  v12, v12                               // 0000000000A8: 7E180F0C
  v_cvt_u32_f32  v8, v8                                 // 0000000000AC: 7E100F08
  tbuffer_load_format_xyzw  v[17:20], v3, s[0:3], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B0: EBF32000 80001103
  tbuffer_load_format_xyzw  v[9:12], v12, s[0:3], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B8: EBF32000 8000090C
  tbuffer_load_format_xyzw  v[37:40], v8, s[0:3], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C0: EBF32000 80002508
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000C8: BF8C0F74
  v_mul_legacy_f32  v0, v7, v16                         // 0000000000CC: 0E002107
  v_mac_legacy_f32  v0, v6, v15                         // 0000000000D0: 0C001F06
  v_mac_legacy_f32  v0, v5, v14                         // 0000000000D4: 0C001D05
  v_mac_legacy_f32  v0, v4, v13                         // 0000000000D8: 0C001B04
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 0000000000DC: BF8C0F72
  v_mul_legacy_f32  v2, v7, v20                         // 0000000000E0: 0E042907
  v_mul_legacy_f32  v3, v7, v24                         // 0000000000E4: 0E063107
  v_mul_legacy_f32  v8, v7, v28                         // 0000000000E8: 0E103907
  v_mul_legacy_f32  v13, v7, v32                        // 0000000000EC: 0E1A4107
  v_mul_legacy_f32  v14, v7, v36                        // 0000000000F0: 0E1C4907
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 0000000000F4: BF8C0F71
  v_mul_legacy_f32  v12, v7, v12                        // 0000000000F8: 0E181907
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 0000000000FC: BF8C0F70
  v_mul_legacy_f32  v7, v7, v40                         // 000000000100: 0E0E5107
  v_mac_legacy_f32  v2, v6, v19                         // 000000000104: 0C042706
  v_mac_legacy_f32  v3, v6, v23                         // 000000000108: 0C062F06
  v_mac_legacy_f32  v8, v6, v27                         // 00000000010C: 0C103706
  v_mac_legacy_f32  v13, v6, v31                        // 000000000110: 0C1A3F06
  v_mac_legacy_f32  v14, v6, v35                        // 000000000114: 0C1C4706
  v_mac_legacy_f32  v12, v6, v11                        // 000000000118: 0C181706
  v_mac_legacy_f32  v7, v6, v39                         // 00000000011C: 0C0E4F06
  v_mac_legacy_f32  v2, v5, v18                         // 000000000120: 0C042505
  v_mac_legacy_f32  v3, v5, v22                         // 000000000124: 0C062D05
  v_mac_legacy_f32  v8, v5, v26                         // 000000000128: 0C103505
  v_mac_legacy_f32  v13, v5, v30                        // 00000000012C: 0C1A3D05
  v_mac_legacy_f32  v14, v5, v34                        // 000000000130: 0C1C4505
  v_mac_legacy_f32  v12, v5, v10                        // 000000000134: 0C181505
  v_mac_legacy_f32  v7, v5, v38                         // 000000000138: 0C0E4D05
  s_mov_b32     m0, 0x00010000                          // 00000000013C: BEFC03FF 00010000
  v_mac_legacy_f32  v2, v4, v17                         // 000000000144: 0C042304
  v_mac_legacy_f32  v3, v4, v21                         // 000000000148: 0C062B04
  v_mac_legacy_f32  v8, v4, v25                         // 00000000014C: 0C103304
  v_mac_legacy_f32  v13, v4, v29                        // 000000000150: 0C1A3B04
  v_mac_legacy_f32  v14, v4, v33                        // 000000000154: 0C1C4304
  v_mac_legacy_f32  v12, v4, v9                         // 000000000158: 0C181304
  v_mac_legacy_f32  v7, v4, v37                         // 00000000015C: 0C0E4B04
  v_mul_lo_i32  v1, v1, 48                              // 000000000160: D2D60001 00016101
  ds_write2_b32  v1, v12, v7 offset0:8 offset1:9        // 000000000168: D8380908 00070C01
  v_mov_b32     v4, 0                                   // 000000000170: 7E080280
  v_mov_b32     v5, 1.0                                 // 000000000174: 7E0A02F2
  ds_write2_b32  v1, v4, v5 offset0:10 offset1:11       // 000000000178: D8380B0A 00050401
  ds_write2_b32  v1, v0, v2 offset1:1                   // 000000000180: D8380100 00020001
  ds_write2_b32  v1, v3, v8 offset0:2 offset1:3         // 000000000188: D8380302 00080301
  ds_write2_b32  v1, v13, v14 offset0:4 offset1:5       // 000000000190: D8380504 000E0D01
  s_endpgm                                              // 000000000198: BF810000
end


// Approximately 20 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VDrawableCopyPixelsAlpha[] =
{
     68,  88,  66,  67, 209, 127, 
    187, 122, 146, 227, 107,  87, 
    128,  70,  91, 150, 100, 141, 
    215, 134,   1,   0,   0,   0, 
    176,  15,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     88,   1,   0,   0, 172,   1, 
      0,   0,  52,   2,   0,   0, 
     20,  15,   0,   0,  82,  68, 
     69,  70,  28,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
    224,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      1,   0,   0,   0, 128,   0, 
      0,   0,   0,  12,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 168,   0,   0,   0, 
      0,   0,   0,   0,   0,  12, 
      0,   0,   2,   0,   0,   0, 
    188,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 102, 
    108, 111,  97, 116,  52,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0, 192,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 179,   0, 
      0,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
     76,   0,   0,   0,   2,   0, 
      0,   0,   8,   0,   0,   0, 
     56,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,  15,   0,   0, 
     68,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0,   1,   1,   0,   0, 
     83,  86,  95,  80, 111, 115, 
    105, 116, 105, 111, 110,   0, 
     67,  79,  76,  79,  82,   0, 
    171, 171,  79,  83,  71,  78, 
    128,   0,   0,   0,   4,   0, 
      0,   0,   8,   0,   0,   0, 
    104,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,  12,   0,   0, 
    104,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  12,   3,   0,   0, 
    104,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,   3,  12,   0,   0, 
    113,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  15,   0,   0,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171, 171, 171, 
     83,  72,  69,  88, 216,  12, 
      0,   0,  80,   0,   1,   0, 
     54,   3,   0,   0,  53,  16, 
      0,   0,   5,   0,   0,   0, 
    187,   0,   0,   0,  80,   0, 
      1,   0, 182,   0,   0,   0, 
    106,   8,   0,   1,  89,   8, 
      0,   4,  70, 142,  32,   0, 
      0,   0,   0,   0, 192,   0, 
      0,   0,  95,   0,   0,   3, 
    242,  16,  16,   0,   0,   0, 
      0,   0,  95,   0,   0,   3, 
     18,  16,  16,   0,   1,   0, 
      0,   0, 101,   0,   0,   3, 
     50,  32,  16,   0,   0,   0, 
      0,   0, 101,   0,   0,   3, 
    194,  32,  16,   0,   0,   0, 
      0,   0, 101,   0,   0,   3, 
     50,  32,  16,   0,   1,   0, 
      0,   0, 103,   0,   0,   4, 
    242,  32,  16,   0,   2,   0, 
      0,   0,   1,   0,   0,   0, 
    104,   0,   0,   2,   2,   0, 
      0,   0, 140,   0,   0,  11, 
     18,   0,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
     29,   0,   0,   0,   1,  64, 
      0,   0,   3,   0,   0,   0, 
     10,  16,  16,   0,   1,   0, 
      0,   0,   1,  64,   0,   0, 
      2,   0,   0,   0,  86,   0, 
      0,   5,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
      0,   0,   0,  10, 242,   0, 
     16,   0,   1,   0,   0,   0, 
      6,   0,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
    205, 204, 204,  61, 205, 204, 
    140,  63, 102, 102,   6,  64, 
    102, 102,  70,  64,   0,   0, 
      0,  10,  50,   0,  16,   0, 
      0,   0,   0,   0,   6,   0, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0,  51,  51, 
    131,  64,  51,  51, 163,  64, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  28,   0,   0,   5, 
     50,   0,  16,   0,   0,   0, 
      0,   0,  70,   0,  16,   0, 
      0,   0,   0,   0,  28,   0, 
      0,   5, 242,   0,  16,   0, 
      1,   0,   0,   0,  70,  14, 
     16,   0,   1,   0,   0,   0, 
     17,   0,   0,   9,  18,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   1,   0,   0,   0, 
     17,   0,   0,   9,  34,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  26,   0, 
     16,   0,   1,   0,   0,   0, 
     17,   0,   0,   9,  66,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  42,   0, 
     16,   0,   1,   0,   0,   0, 
     17,   0,   0,   9, 130,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     17,   0,   0,   9,  18,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,   9,  34,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  26,   0, 
     16,   0,   0,   0,   0,   0, 
     41,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,  16,  16,   0,   1,   0, 
      0,   0,   1,  64,   0,   0, 
      3,   0,   0,   0,  86,   0, 
      0,   5,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
      0,   0,   0,  10,  50,   0, 
     16,   0,   0,   0,   0,   0, 
      6,   0,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
    205, 204, 204,  61, 205, 204, 
    140,  63,   0,   0,   0,   0, 
      0,   0,   0,   0,  28,   0, 
      0,   5,  50,   0,  16,   0, 
      0,   0,   0,   0,  70,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,   9,  18,  32, 
     16,   0,   2,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,   9,  34,  32, 
     16,   0,   2,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  26,   0, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   8, 194,  32, 
     16,   0,   2,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  62,   0,   0,   1, 
     53,  16,   0,   0, 206,   0, 
      0,   0,  21,   0,   1,   0, 
     32,  83,  23,   0, 120,   1, 
    237, 152, 187, 111, 211,  80, 
     20, 198, 111,  28, 251, 228, 
    117, 107, 187, 197, 132,  52, 
    180, 180,  85, 121, 148,  87, 
     33, 164,   8,   1,  66,  13, 
    162,   4,   9, 134, 162,  22, 
     49, 121, 113, 105,  66,  17, 
    166,  45,  73,   5, 229,  33, 
     19,  40,  18,  75,  36,  24, 
     96,  96, 102,  97, 224,  31, 
     96, 161,  29,  59, 128, 144, 
    232, 194, 204, 192,   2,  19, 
     44, 221, 194, 119,  18,  27, 
      2, 130,  25,  36, 252, 147, 
    190, 115, 124, 237, 123, 238, 
     61, 190, 231,  78, 103, 114, 
    147, 104, 178, 186, 118, 241, 
      5, 123, 229, 227, 218, 173, 
    247, 138,  16,  26,  15, 128, 
    202,   6, 204,  91, 108, 133, 
    216, 147, 102,  43,  68,  15, 
    155,   8, 132, 185,  91, 225, 
     36, 116,  27, 227,   2,  60, 
    127,  27, 242, 213, 162, 176, 
    242,  20, 150, 160,  61, 208, 
      7, 196, 156, 134,  31, 133, 
     56, 238,  16, 148, 128, 162, 
     80,  64, 156,  13, 136, 177, 
      1, 188,  85,  59,  28, 183, 
     11, 106, 127,  31,  60, 167, 
    160,  32, 239,  38,   3, 108, 
    126, 207,  25, 136, 243, 255, 
     19, 156,  91, 144,  11, 231, 
    199, 121,  50, 188, 255, 191, 
      6, 255, 127,  80,  39, 134, 
    235, 209, 142,  14,   5, 103, 
    252, 121,  35, 219,  31, 103, 
    214, 227, 215,  53, 168, 229, 
     10, 244,  39,  26, 224, 167, 
    243,   5, 193,  24, 165,  69, 
    157, 199, 247,  83, 228, 174, 
     32,  12,   8,  27,  18,  62, 
     18,  46,  20, 225,   2,  16, 
     10,  74,  56,  80, 194,  65, 
     82,  18,  66, 177,   8,  27, 
     82,   7, 132,   4, 201, 128, 
     76, 168,  19, 234, 130,  54, 
     64, 248,  39,  66, 190, 132, 
     28,   9, 247, 149,  50,  80, 
     55, 148, 133,  54,  67, 184, 
    112, 212,  11, 109, 129, 250, 
    130,  28,  90,  80, 228, 151, 
     67, 248,  79, 224,  51,   8, 
    238,  45,  63,   7, 245,  97, 
    218, 159,  67,  66,  66,  66, 
     66,  66,  66,  66,  66,  66, 
     66,  66,  66,  66,  66,  66, 
    254,  22, 202, 192, 189,  87, 
    243,  70, 125, 121, 201,  20, 
     35,  66,  60, 126, 183,  42, 
    146, 202, 146, 105, 142, 136, 
    232, 253,  21, 209,  33, 188, 
    120, 135, 233,  53,  68,  23, 
    149, 203, 197,  66,  67,  88, 
    148, 207,  47,  21,  26, 102, 
    154, 222, 188, 126, 125,  44, 
    105,  88,  94, 194, 232, 242, 
     82,  70, 218, 187,  35, 234, 
    203, 162, 255, 235, 167,  68, 
     70, 169, 177,  79, 246, 180, 
    124, 170,  95, 169,  53, 132, 
    210, 156, 223,  16,  42, 124, 
    125, 180,  33,   8, 235,  81, 
     33,  98,  40, 158,  98, 168, 
     94, 212,  32, 143, 231,  70, 
    100,  43,  70,  49,  91,  62, 
    106,  33, 214,  52, 155,  49, 
    113, 195, 108, 206, 137, 199, 
    121,  61, 129,  60, 158,  21, 
    132,  33, 154, 239, 240,  23, 
    181, 171, 248, 135, 216, 166, 
    180,  30,  59,  85, 212, 105, 
     99,  90, 210, 201, 162, 212, 
     54, 164, 101, 172, 207, 210, 
    181,  19,  69, 169, 118, 226, 
     93, 175,  37, 213, 227,  69, 
     89,  83,  76, 239, 139, 210, 
    229, 105, 155,  45, 249,  54, 
     46, 214,   7,  83, 241, 132, 
    218, 109,  73, 131, 215, 216, 
    129,  53, 246, 101, 244, 216, 
    161, 172,  78, 219,  16, 179, 
     55,  35, 233,  96,  86, 106, 
    131, 105, 169, 237, 206,  72, 
     45, 159, 149, 234,  64,  90, 
    170,  59,  51,  82, 205, 101, 
    165, 161, 136, 245, 100,  74, 
    118,  52,  99,  71,  45, 157, 
    207,  50,  22,  35, 157, 142, 
     89, 146,  52, 146, 218,  81, 
     75, 106,  81, 146, 234,  97, 
    236,  29,  33, 217, 199, 243, 
    163, 241, 132,  16, 119, 151, 
    253, 214,  96, 179, 111, 196, 
    234, 134, 184, 139,  22, 140, 
     77, 136,   9, 198, 172,   0, 
     21,  83, 207, 249, 189, 196, 
     49, 223, 243, 124, 238,  57, 
    233, 223, 187, 141,  45,  22, 
    252, 239, 174, 239, 185,  95, 
    197, 189, 219, 220, 203, 161, 
    115,  79,  38,  14, 155, 143, 
    252, 247, 117, 223, 243,  26, 
     73,  72, 127,  48, 254,  80, 
    247, 251, 214, 207, 253, 111, 
    101, 136, 227, 203,  71, 236, 
     41, 199, 117, 110,  86, 135, 
     23, 230,  42, 115, 151, 135, 
    171,  11, 149, 146, 115, 229, 
    128,  61,  93, 186, 102, 151, 
     22,  23,  74, 149,  89, 199, 
    181,  47, 150,  23,  71, 236, 
    201, 202,   5, 123, 162,  52, 
     59,  93, 170, 216,  99, 249, 
    177, 220, 162,  61,  57, 227, 
     96,  80, 181, 207, 143,  85, 
    156, 235, 206, 148,  91,  58, 
     49,  55, 127, 227, 236, 165, 
    197, 146,  91,  61, 238, 206, 
    207,  56, 195, 101,  55, 151, 
     27, 158, 113, 171,  46, 246, 
    105, 177, 221, 207, 130, 187, 
    229, 220, 169, 190, 226,  92, 
    154,  21, 223,   0,  77,  28, 
    158, 233,  53,  16,   0,   0, 
    216,   0,   0,   0,  21,   0, 
      1,   0,  16, 155,  23,   0, 
    120,   1, 237, 152, 191, 111, 
     19,  89,  16, 199, 199, 235, 
    221,  89,  39, 121, 217, 221, 
    152,  36,  64,  48, 198,  49, 
      6, 194, 175, 128,  47,  57, 
     33,  56, 161,  44,  34, 128, 
     16,  66, 160, 128, 168, 182, 
     89, 200, 154,  32,  76,  98, 
    236,   8,   2,  72, 123, 230, 
    114, 210,  53, 145, 104, 160, 
    226,  58, 254,   5,  26,  36, 
     68,  82, 130,   4,  13,  80, 
     80,  82, 209, 208,  32,  40, 
     41, 204, 119, 236,  93,  20, 
     33, 168,  65, 104,  63, 210, 
    247, 205, 206, 251,  57, 126, 
    243, 220, 204, 253, 181, 212, 
    230, 115, 253,  89,  32,  86, 
    123, 247, 234, 214,  27, 141, 
    200,  16,   7, 224, 179,  77, 
    173,  95,  90, 162, 249,  65, 
    105, 137, 214,  73, 147, 130, 
     48,  97,  43, 140, 130,  30, 
    194, 119,  97, 101, 108,  36, 
     82,   7, 119, 229,   1, 218, 
     46, 104,   7, 244,  50,  77, 
    116,  18, 118,   2,  90,   3, 
    237, 131, 100, 108,  53,  25, 
    168,  27,  98,  72, 144, 163, 
     86,  35, 231, 201,  94, 171, 
    251, 227,  88, 179, 144, 172, 
    253, 202, 176,  52, 223, 103, 
     10, 146, 248, 127, 132, 196, 
     38, 251, 197, 196, 113, 202, 
    249, 191,  26, 114,  23, 113, 
    158,   4, 201, 199, 106,  44, 
     72, 135, 132,  82, 148, 199, 
    120, 202, 116, 228, 199, 185, 
     92, 129, 126,  68,  11, 196, 
    251,   8, 242,  61,  14,   9, 
    146,   3, 166,  83, 123,  57, 
    117, 155,  24,  14,  35, 215, 
    140,   9, 140,   7, 197,  72, 
     38, 155,  16, 146, 203, 184, 
     72,  70, 146, 184,   7, 194, 
    129, 220,  11,  33,  64, 182, 
     33,   7, 234, 131, 112, 241, 
    140,   7, 194, 248,  77,  60, 
      0,  33,  70, 198, 123, 101, 
     60,  48,  94,  15,  13,  65, 
     27, 160,  28, 180,  17, 202, 
     67, 155, 136, 112,  36,   2, 
    145,  72, 224,  75,   3,  56, 
    245, 205, 101, 252, 230, 200, 
     29, 200, 127,  40,  70, 114, 
     20,  35, 249,  21,  37,  36, 
     36,  36,  36,  36,  36,  36, 
     36,  36,  36,  36,  36,  36, 
     36,  36, 252,  76, 180, 225, 
    127, 158, 212, 236, 165, 229, 
     69,  71,  74,  75, 119,  95, 
     62, 165, 110, 141, 210, 255, 
    174,  80,  47, 133,  45, 210, 
    248, 197, 243, 231,   7,  91, 
    164, 195,  46,  77, 180, 136, 
    185,  82,  97,  55, 101, 107, 
    161, 102, 235,  97, 218, 230, 
    240, 111,  90,  90, 166, 194, 
    167, 247,  41,  75, 107, 138, 
    213, 178,  29, 155,  30, 212, 
    154, 139, 142,  51, 158, 233, 
    117, 176,  79,  22, 235, 142, 
    186,  45, 234, 231, 177, 177, 
     69, 183, 229,  12, 182, 247, 
    237, 182, 251, 195,  46,  59, 
     27, 246, 216, 131, 161, 172, 
    233,  26, 234, 172, 237, 206, 
    119, 108,  79,  81, 107, 182, 
    136, 176, 230, 129,  75,  54, 
    181, 231,  32, 226, 102, 203, 
    113, 218, 241, 100, 108, 167, 
    221, 151, 201, 104, 205, 171, 
    248,  13, 166, 201,  22,  27, 
    172, 140,  52,  43,  61, 197, 
    202,  60,  65, 150,  74,  55, 
     87, 248,  56,  41, 227,  24, 
     41, 253,   8,  41, 115, 115, 
    209, 146, 152,  11, 110, 237, 
     45, 145, 171, 243, 112,  81, 
    181, 215, 174,  37, 203, 216, 
     84,  84,  60, 128, 121,  27, 
    139, 202,  88, 131, 185,  59, 
    115, 150, 222,  71, 170, 169, 
    173,  11, 121, 123,  78, 125, 
    212, 134,  66,  99,  91,  78, 
    153,  99, 121,  75, 223, 146, 
     83,  92, 206,  43, 243, 175, 
    130,  85, 138, 246,  50, 246, 
    228,  21, 239,  47,  40, 243, 
    112, 201,  26, 145,  62, 229, 
    234, 250, 238, 188,  50, 246, 
     21,  20,  31,  42, 169,  93, 
    210, 215, 139, 190,  63,  11, 
    202, 152,  40,  41,  18, 191, 
     15, 254, 193, 146, 210, 229, 
    219, 114, 245, 140,  88, 219, 
    213, 149,  88, 199, 213,  29, 
    177,  89,  87, 239,  23, 155, 
    118, 117, 162, 219, 203,   3, 
    146,  56,  32, 149,  55, 209, 
    122,  72, 170, 110, 177,  47, 
    117,  97,  33, 246,  29,  72, 
    136, 125,  81,  12,  54,  76, 
    253,  31, 213,  36, 151,  34, 
     43, 243, 209,  79, 214, 215, 
    170, 101, 135, 199, 209, 248, 
    195, 200,  74, 221, 171,   7, 
     42,  63,  26,  57, 123, 111, 
    106, 191, 243,  38, 234, 127, 
     29,  89, 217,  67, 234, 195, 
    214, 127, 167, 238, 156, 139, 
    234, 223,  31, 162, 177,  10, 
     36, 235,  43,   7, 188, 243, 
    126, 213, 191, 217,  24, 157, 
    159, 171, 207,  93,  30, 109, 
    204, 215,   3, 255, 202,  31, 
    222, 116, 112, 205,  11,  22, 
    230, 131, 250, 172,  95, 245, 
     46,  86,  22, 198, 189,  51, 
    245,  11, 222,  84,  48,  59, 
     29, 212, 189, 201, 177, 201, 
    242, 130, 119, 102, 198, 135, 
    211, 240, 206,  77, 214, 253, 
    235, 254, 249, 106, 112, 120, 
    174, 118, 227, 244, 165, 133, 
    160, 218,  56,  84, 173, 205, 
    248, 163, 149, 106, 185,  60, 
     58,  83, 109,  84, 113,  78, 
    135, 217,  40,  10, 169, 186, 
    155, 208,  21, 255, 210,  44, 
    125,   1,  55, 210, 177, 140, 
      0,   0,  53,  16,   0,   0, 
    213,   0,   0,   0,  21,   0, 
      1,   0,   0, 115,  23,   0, 
    120,   1, 237, 152, 191, 111, 
     19,  89,  16, 199, 199, 235, 
    183, 227,  95, 207, 187,  75, 
     72, 130,  99,  28,  32, 119, 
     66, 252,  18,  14,  38,  65, 
    192,  29,  40, 142,   8,  32, 
    126, 156, 114, 252,  16,   5, 
    218, 102,  33,  54,  65,  56, 
     63, 176,  45,   8,  32,  45, 
    134,  20, 215,  68, 186,   6, 
    186, 147,  78,  58,  90,  10, 
     90,  26, 146, 146,   2, 154, 
     32,  33, 254, 130, 107, 232, 
    238,  36,  42,  36, 243,  29, 
    123, 151,  11,   8, 234,  67, 
    104,  63, 210, 119,  70, 179, 
    239, 205, 122, 222, 155, 117, 
     51, 141,  13, 212, 225, 135, 
    191,  54,  93,  20, 111, 252, 
    253, 234, 206,  27, 131, 200, 
    148,  96,  13, 243, 189,  98, 
    137,  78, 247, 139,  37, 234, 
    132,  49,   8, 123, 119, 192, 
     41, 232,  15, 196, 101, 120, 
     89, 219,  30, 168,  75, 121, 
    229,  79,  88, 134, 134, 161, 
    119, 200,  57,   9,  47, 123, 
    109, 232,   0, 148, 134, 132, 
    240, 119, 147,  98,  64,  66, 
     12,  64, 202,  39, 104, 104, 
     39, 180, 246, 185, 148,  35, 
    100, 161,  56, 244, 145,  33, 
     49,  95, 102,  18, 146, 250, 
    191, 134, 212,  38, 181, 132, 
    117, 125,  94, 231, 183, 132, 
    156,  63, 236, 147,  32, 253, 
     88, 139,   5, 133, 247, 162, 
    131,  62, 134,  91,  14,   5, 
    177, 220, 133, 156, 109,   5, 
    250,  26, 109,  32, 253,  94, 
     75,  24,  75,  63, 152,  38, 
    247, 112, 236,  30,  49,   2, 
    198,  15,  50,  22,  25,  47, 
    101, 124,   0, 140, 134,  50, 
     46, 148,  83,  16,  46, 147, 
     51,  16, 154, 201, 104,  26, 
    163,  64, 198,   7, 193,  14, 
    180,  14, 234, 129, 214,  67, 
     56,  19, 247,  65, 168, 145, 
    241, 189, 114,  14,  26, 128, 
    242, 208,  70, 168,   0,  13, 
     66, 155, 160, 205, 193,  25, 
     13, 169,   4, 177,  24, 192, 
    177, 207,  46, 227,  59,  71, 
    238,  64, 190, 219, 144, 176, 
     63, 114,  11, 242, 223,  17, 
    246, 136, 137, 136, 136, 136, 
    136, 136, 136, 136, 136, 136, 
    136, 136, 136, 136, 136, 136, 
    248, 159,  48, 134, 238,  63, 
    155, 183, 151, 150,  23,  29, 
     26,  37, 122, 176, 250, 156, 
    210,   6, 197,  91,  43, 148, 
     37, 191,  77,  61,  92, 173, 
    114, 185,  77, 189, 240, 199, 
    224, 251, 121, 100, 100, 177, 
    156, 177, 251, 253, 148, 221, 
    227, 167, 237,  94, 255,  46, 
     45,  45, 211, 150, 127, 223, 
    166, 250, 168,  37,  62,  61, 
    208, 245, 153,  65, 106, 181, 
     73, 241, 203,  23,  47,  14, 
    183, 137, 225, 151, 198, 218, 
     68, 200, 127,  84,  38, 155, 
    124, 195,  86, 254, 162, 227, 
    140,  38, 179, 142, 223, 118, 
    114, 157, 125, 146, 103, 100, 
    187, 249,  52, 132, 124, 199, 
    233, 228, 197, 109, 246, 181, 
    157, 243, 147, 182, 227, 203, 
     90, 124,  93, 119, 143,  78, 
    117, 125, 114,  43, 181, 154, 
     56,  67,  98, 136,  44, 222, 
     76, 218,  28,  36, 173,  54, 
    146, 174, 203, 179,  29, 202, 
     74, 148, 216,  74,  28, 116, 
    172, 196, 120, 222,  74, 156, 
     40,  88, 215, 229, 249,  64, 
    206, 146, 115,  39, 206,  88, 
     22, 111,  83, 154, 135,  89, 
    243, 126,  71, 243,  88,  94, 
    243, 241, 130, 230,  13,  57, 
    205, 147, 150,  54, 183,  42, 
    109, 238, 102, 109, 238, 115, 
    180, 121,  56, 175, 205, 163, 
      5, 109, 246, 229, 180, 249, 
    139, 165, 219, 241, 247, 207, 
    100, 210, 163, 126,  84,  90, 
    237,  98, 173,  70,  28, 173, 
    126, 206, 107, 117, 164, 160, 
    213, 250, 156,  86, 167,  44, 
     29, 163, 215, 171,  49,  47, 
     70, 201, 212, 129,  55,  49, 
    157, 160, 150, 145, 244, 255, 
     49, 210, 126,  58, 131,  88, 
    153,  72, 135,  39, 131, 140, 
     56, 124,  60,  73, 202, 132, 
    207, 202,   4, 241, 222, 114, 
     31, 172,  32,  19,  54, 209, 
      0,  36, 115, 165,  48, 118, 
     32,  33, 140,  69,  33,  10, 
     91, 155, 193, 172, 113,  42, 
    240, 178,  95, 230,  83,  86, 
    231,  45, 255, 241,  32,  88, 
     95,  10, 188, 204, 179,  50, 
     80, 233, 233, 246, 243,  15, 
    207,  30, 116, 158,   4, 207, 
     31,   7,  94, 222,  33, 243, 
     89, 235, 183, 201, 223, 139, 
    193,  92, 251, 121, 176,  86, 
    133,  36, 191, 250, 147, 123, 
    201, 171, 121, 183,  27, 197, 
    230,  92, 125, 238,  90, 177, 
    209, 172,  87, 188, 153, 189, 
    238,  84, 229, 134,  91,  89, 
    104,  86, 234, 179,  94, 205, 
    189,  82,  93,  24, 117, 207, 
    213,  47, 187, 103,  43, 179, 
     83, 149, 186,  59,  49,  50, 
     81,  90, 112, 207,  77, 123, 
      8,  26, 238, 133, 137, 186, 
    119, 211, 187,  84, 171,  28, 
    153, 155, 191, 245, 235, 213, 
    133,  74, 173,  49,  94, 155, 
    159, 246, 138, 213,  90, 169, 
     84, 156, 174,  53, 106, 248, 
    157,  46, 199, 130,  42, 112, 
    159, 157,  73, 246, 140, 119, 
    117, 150,  62,   0,  91,  33, 
    165, 199,  83,  84,  65,  84, 
    148,   0,   0,   0,  20,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   6,   0, 
      0,   0,  11,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   5,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0
};
