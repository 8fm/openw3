#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4 vfuniforms[144];            // Offset:    0 Size:  2304
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// SV_Position              0   xyzw        2     NONE   float   xyzw
// SV_InstanceID            0   x           3   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xy          4     NONE   float   xy  
// SV_Position              0   xyzw        5      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[187]
// Embedded Data:
//  0x000000bb - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000b6 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[144], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input_sgv v3.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_output_siv o5.xyzw, position
dcl_temps 1
mov o0.xyzw, v0.xyzw
mov o1.xyzw, v1.xyzw
imul null, r0.x, v3.x, l(6)
imad r0.y, v3.x, l(6), l(1)
utof r0.xy, r0.xyxx
add r0.xy, r0.xyxx, l(0.100000, 0.100000, 0.000000, 0.000000)
ftou r0.xy, r0.xyxx
mov o3.xyzw, cb0[r0.y + 0].xyzw
mov o2.xyzw, cb0[r0.x + 0].xyzw
imad r0.xyzw, v3.xxxx, l(6, 6, 6, 6), l(2, 2, 4, 4)
utof r0.xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, l(0.100000, 1.100000, 0.100000, 1.100000)
ftou r0.xyzw, r0.xyzw
dp4 o4.x, v2.xyzw, cb0[r0.z + 0].xyzw
dp4 o4.y, v2.xyzw, cb0[r0.w + 0].xyzw
dp4 o5.x, v2.xyzw, cb0[r0.x + 0].xyzw
dp4 o5.y, v2.xyzw, cb0[r0.y + 0].xyzw
mov o5.zw, l(0,0,0,1.000000)
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[187], bundle is:[192] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedTexTGVertexCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [2] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [3] generic, usageIdx  3, paramIdx 3, paramSlot 0
;   [4] generic, usageIdx  4, paramIdx 4, paramSlot 0

codeLenInByte        = 316;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 38;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000008
SVOC:VS_EXPORT_COUNT        = 4
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_mul_lo_i32  v0, v3, 6                               // 000000000008: D2D60000 00010D03
  v_add_i32     v1, vcc, 2, v0                          // 000000000010: 4A020082
  v_cvt_f32_u32  v1, v1                                 // 000000000014: 7E020D01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v16, 0x3dcccccd, v1                     // 00000000001C: 062002FF 3DCCCCCD
  v_add_f32     v1, 0x3f8ccccd, v1                      // 000000000024: 060202FF 3F8CCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000002C: 7E020F01
  v_add_i32     v2, vcc, 4, v0                          // 000000000030: 4A040084
  v_cvt_f32_u32  v2, v2                                 // 000000000034: 7E040D02
  v_add_i32     v0, vcc, 1, v0                          // 000000000038: 4A000081
  s_waitcnt     lgkmcnt(0)                              // 00000000003C: BF8C007F
  tbuffer_load_format_xyzw  v[22:25], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 80021601
  v_add_f32     v17, 0x3dcccccd, v2                     // 000000000048: 062204FF 3DCCCCCD
  v_cvt_f32_u32  v0, v0                                 // 000000000050: 7E000D00
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000054: 060404FF 3F8CCCCD
  v_add_f32     v0, 0x3dcccccd, v0                      // 00000000005C: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v2, v2                                 // 000000000064: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 000000000068: 7E000F00
  tbuffer_load_format_xyzw  v[30:33], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000006C: EBF32000 80021E02
  tbuffer_load_format_xyzw  v[34:37], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000074: EBF32000 80022200
  v_cvt_u32_f32  v16, v16                               // 00000000007C: 7E200F10
  v_cvt_u32_f32  v17, v17                               // 000000000080: 7E220F11
  tbuffer_load_format_xyzw  v[18:21], v16, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000084: EBF32000 80021210
  v_mul_lo_i32  v3, v3, 6                               // 00000000008C: D2D60003 00010D03
  tbuffer_load_format_xyzw  v[26:29], v17, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000094: EBF32000 80021A11
  v_cvt_f32_u32  v1, v3                                 // 00000000009C: 7E020D03
  v_add_f32     v1, 0x3dcccccd, v1                      // 0000000000A0: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v1, v1                                 // 0000000000A8: 7E020F01
  tbuffer_load_format_xyzw  v[0:3], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80020001
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 0000000000B4: BF8C0F72
  v_mul_legacy_f32  v16, v15, v21                       // 0000000000B8: 0E202B0F
  v_mac_legacy_f32  v16, v14, v20                       // 0000000000BC: 0C20290E
  v_mul_legacy_f32  v17, v15, v25                       // 0000000000C0: 0E22330F
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 0000000000C4: BF8C0F71
  v_mul_legacy_f32  v20, v15, v29                       // 0000000000C8: 0E283B0F
  v_mul_legacy_f32  v15, v15, v33                       // 0000000000CC: 0E1E430F
  v_mac_legacy_f32  v17, v14, v24                       // 0000000000D0: 0C22310E
  v_mac_legacy_f32  v16, v13, v19                       // 0000000000D4: 0C20270D
  v_mac_legacy_f32  v20, v14, v28                       // 0000000000D8: 0C28390E
  v_mac_legacy_f32  v15, v14, v32                       // 0000000000DC: 0C1E410E
  v_mac_legacy_f32  v17, v13, v23                       // 0000000000E0: 0C222F0D
  v_mac_legacy_f32  v16, v12, v18                       // 0000000000E4: 0C20250C
  v_mac_legacy_f32  v20, v13, v27                       // 0000000000E8: 0C28370D
  v_mac_legacy_f32  v15, v13, v31                       // 0000000000EC: 0C1E3F0D
  v_mac_legacy_f32  v17, v12, v22                       // 0000000000F0: 0C222D0C
  v_mov_b32     v14, 0                                  // 0000000000F4: 7E1C0280
  v_mov_b32     v18, 1.0                                // 0000000000F8: 7E2402F2
  v_mac_legacy_f32  v20, v12, v26                       // 0000000000FC: 0C28350C
  v_mac_legacy_f32  v15, v12, v30                       // 000000000100: 0C1E3D0C
  exp           pos0, v16, v17, v14, v18 done           // 000000000104: F80008CF 120E1110
  exp           param0, v4, v5, v6, v7                  // 00000000010C: F800020F 07060504
  exp           param1, v8, v9, v10, v11                // 000000000114: F800021F 0B0A0908
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 00000000011C: BF8C0F70
  exp           param2, v0, v1, v2, v3                  // 000000000120: F800022F 03020100
  exp           param3, v34, v35, v36, v37              // 000000000128: F800023F 25242322
  exp           param4, v20, v15, v14, v18              // 000000000130: F800024F 120E0F14
  s_endpgm                                              // 000000000138: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[381], bundle is:[215] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedTexTGVertexCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] position, usageIdx  5, paramIdx 5, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [4] generic, usageIdx  3, paramIdx 3, paramSlot 0
;   [5] generic, usageIdx  4, paramIdx 4, paramSlot 0

codeLenInByte        = 456;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 36;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 24
; esGsRingItemSize          = 24

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_mul_lo_i32  v0, v3, 6                               // 000000000008: D2D60000 00010D03
  v_add_i32     v1, vcc, 2, v0                          // 000000000010: 4A020082
  v_cvt_f32_u32  v1, v1                                 // 000000000014: 7E020D01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v2, 0x3dcccccd, v1                      // 00000000001C: 060402FF 3DCCCCCD
  v_add_f32     v1, 0x3f8ccccd, v1                      // 000000000024: 060202FF 3F8CCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000002C: 7E020F01
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  tbuffer_load_format_xyzw  v[20:23], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000034: EBF32000 80021401
  v_cvt_u32_f32  v2, v2                                 // 00000000003C: 7E040F02
  v_mul_lo_i32  v1, v3, 6                               // 000000000040: D2D60001 00010D03
  v_cvt_f32_u32  v1, v1                                 // 000000000048: 7E020D01
  tbuffer_load_format_xyzw  v[16:19], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000004C: EBF32000 80021002
  v_add_f32     v1, 0x3dcccccd, v1                      // 000000000054: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000005C: 7E020F01
  tbuffer_load_format_xyzw  v[24:27], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000060: EBF32000 80021801
  v_add_i32     v2, vcc, 4, v0                          // 000000000068: 4A040084
  v_cvt_f32_u32  v2, v2                                 // 00000000006C: 7E040D02
  v_add_f32     v3, 0x3dcccccd, v2                      // 000000000070: 060604FF 3DCCCCCD
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000078: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v3, v3                                 // 000000000080: 7E060F03
  v_cvt_u32_f32  v1, v2                                 // 000000000084: 7E020F02
  tbuffer_load_format_xyzw  v[28:31], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000088: EBF32000 80021C03
  tbuffer_load_format_xyzw  v[32:35], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000090: EBF32000 80022001
  v_add_i32     v0, vcc, 1, v0                          // 000000000098: 4A000081
  v_cvt_f32_u32  v0, v0                                 // 00000000009C: 7E000D00
  v_add_f32     v0, 0x3dcccccd, v0                      // 0000000000A0: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v0, v0                                 // 0000000000A8: 7E000F00
  tbuffer_load_format_xyzw  v[0:3], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80020000
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000B4: BF8C0F74
  v_mul_legacy_f32  v19, v15, v19                       // 0000000000B8: 0E26270F
  v_mac_legacy_f32  v19, v14, v18                       // 0000000000BC: 0C26250E
  s_load_dwordx4  s[8:11], s[2:3], 0x0c                 // 0000000000C0: C084030C
  v_mul_legacy_f32  v18, v15, v23                       // 0000000000C4: 0E242F0F
  v_mac_legacy_f32  v19, v13, v17                       // 0000000000C8: 0C26230D
  v_mac_legacy_f32  v18, v14, v22                       // 0000000000CC: 0C242D0E
  v_mac_legacy_f32  v19, v12, v16                       // 0000000000D0: 0C26210C
  v_mac_legacy_f32  v18, v13, v21                       // 0000000000D4: 0C242B0D
  v_mac_legacy_f32  v18, v12, v20                       // 0000000000D8: 0C24290C
  v_mov_b32     v16, 0                                  // 0000000000DC: 7E200280
  s_waitcnt     lgkmcnt(0)                              // 0000000000E0: BF8C007F
  buffer_store_dword  v19, v0, s[8:11], s4 offset:80 glc slc // 0000000000E4: E0704050 04421300
  v_mov_b32     v17, 1.0                                // 0000000000EC: 7E2202F2
  buffer_store_dword  v18, v0, s[8:11], s4 offset:84 glc slc // 0000000000F0: E0704054 04421200
  buffer_store_dword  v16, v0, s[8:11], s4 offset:88 glc slc // 0000000000F8: E0704058 04421000
  buffer_store_dword  v17, v0, s[8:11], s4 offset:92 glc slc // 000000000100: E070405C 04421100
  buffer_store_dword  v4, v0, s[8:11], s4 glc slc       // 000000000108: E0704000 04420400
  buffer_store_dword  v5, v0, s[8:11], s4 offset:4 glc slc // 000000000110: E0704004 04420500
  buffer_store_dword  v6, v0, s[8:11], s4 offset:8 glc slc // 000000000118: E0704008 04420600
  buffer_store_dword  v7, v0, s[8:11], s4 offset:12 glc slc // 000000000120: E070400C 04420700
  buffer_store_dword  v8, v0, s[8:11], s4 offset:16 glc slc // 000000000128: E0704010 04420800
  buffer_store_dword  v9, v0, s[8:11], s4 offset:20 glc slc // 000000000130: E0704014 04420900
  buffer_store_dword  v10, v0, s[8:11], s4 offset:24 glc slc // 000000000138: E0704018 04420A00
  buffer_store_dword  v11, v0, s[8:11], s4 offset:28 glc slc // 000000000140: E070401C 04420B00
  s_waitcnt     lgkmcnt(15)                             // 000000000148: BF8C0F7F
  buffer_store_dword  v24, v0, s[8:11], s4 offset:32 glc slc // 00000000014C: E0704020 04421800
  buffer_store_dword  v25, v0, s[8:11], s4 offset:36 glc slc // 000000000154: E0704024 04421900
  s_waitcnt     lgkmcnt(15)                             // 00000000015C: BF8C0F7F
  v_mul_legacy_f32  v4, v15, v31                        // 000000000160: 0E083F0F
  buffer_store_dword  v26, v0, s[8:11], s4 offset:40 glc slc // 000000000164: E0704028 04421A00
  v_mac_legacy_f32  v4, v14, v30                        // 00000000016C: 0C083D0E
  v_mul_legacy_f32  v5, v15, v35                        // 000000000170: 0E0A470F
  buffer_store_dword  v27, v0, s[8:11], s4 offset:44 glc slc // 000000000174: E070402C 04421B00
  v_mac_legacy_f32  v4, v13, v29                        // 00000000017C: 0C083B0D
  v_mac_legacy_f32  v5, v14, v34                        // 000000000180: 0C0A450E
  s_waitcnt     lgkmcnt(15)                             // 000000000184: BF8C0F7F
  buffer_store_dword  v0, v0, s[8:11], s4 offset:48 glc slc // 000000000188: E0704030 04420000
  v_mac_legacy_f32  v4, v12, v28                        // 000000000190: 0C08390C
  v_mac_legacy_f32  v5, v13, v33                        // 000000000194: 0C0A430D
  buffer_store_dword  v1, v0, s[8:11], s4 offset:52 glc slc // 000000000198: E0704034 04420100
  v_mac_legacy_f32  v5, v12, v32                        // 0000000001A0: 0C0A410C
  buffer_store_dword  v2, v0, s[8:11], s4 offset:56 glc slc // 0000000001A4: E0704038 04420200
  buffer_store_dword  v3, v0, s[8:11], s4 offset:60 glc slc // 0000000001AC: E070403C 04420300
  buffer_store_dword  v4, v0, s[8:11], s4 offset:64 glc slc // 0000000001B4: E0704040 04420400
  buffer_store_dword  v5, v0, s[8:11], s4 offset:68 glc slc // 0000000001BC: E0704044 04420500
  s_endpgm                                              // 0000000001C4: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[598], bundle is:[201] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VInstancedTexTGVertexCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] position, usageIdx  5, paramIdx 5, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [4] generic, usageIdx  3, paramIdx 3, paramSlot 0
;   [5] generic, usageIdx  4, paramIdx 4, paramSlot 0

codeLenInByte        = 376;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 41;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 3
; exportVertexSize          = 24
; lsStride                  = 96

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_mul_lo_i32  v0, v3, 6                               // 000000000008: D2D60000 00010D03
  v_add_i32     v2, vcc, 2, v0                          // 000000000010: 4A040082
  v_cvt_f32_u32  v2, v2                                 // 000000000014: 7E040D02
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v16, 0x3dcccccd, v2                     // 00000000001C: 062004FF 3DCCCCCD
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000024: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v2, v2                                 // 00000000002C: 7E040F02
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  tbuffer_load_format_xyzw  v[20:23], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000034: EBF32000 80021402
  v_mul_lo_i32  v2, v3, 6                               // 00000000003C: D2D60002 00010D03
  v_add_i32     v3, vcc, 4, v0                          // 000000000044: 4A060084
  v_add_i32     v0, vcc, 1, v0                          // 000000000048: 4A000081
  v_cvt_f32_u32  v2, v2                                 // 00000000004C: 7E040D02
  v_cvt_f32_u32  v0, v0                                 // 000000000050: 7E000D00
  v_add_f32     v2, 0x3dcccccd, v2                      // 000000000054: 060404FF 3DCCCCCD
  v_add_f32     v0, 0x3dcccccd, v0                      // 00000000005C: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v16, v16                               // 000000000064: 7E200F10
  v_cvt_u32_f32  v2, v2                                 // 000000000068: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 00000000006C: 7E000F00
  tbuffer_load_format_xyzw  v[16:19], v16, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000070: EBF32000 80021010
  tbuffer_load_format_xyzw  v[25:28], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000078: EBF32000 80021902
  tbuffer_load_format_xyzw  v[37:40], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000080: EBF32000 80022500
  v_cvt_f32_u32  v3, v3                                 // 000000000088: 7E060D03
  v_add_f32     v24, 0x3dcccccd, v3                     // 00000000008C: 063006FF 3DCCCCCD
  v_add_f32     v3, 0x3f8ccccd, v3                      // 000000000094: 060606FF 3F8CCCCD
  v_cvt_u32_f32  v24, v24                               // 00000000009C: 7E300F18
  v_cvt_u32_f32  v3, v3                                 // 0000000000A0: 7E060F03
  tbuffer_load_format_xyzw  v[29:32], v24, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A4: EBF32000 80021D18
  tbuffer_load_format_xyzw  v[33:36], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80022103
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000B4: BF8C0F74
  v_mul_legacy_f32  v0, v15, v19                        // 0000000000B8: 0E00270F
  v_mul_legacy_f32  v2, v15, v23                        // 0000000000BC: 0E042F0F
  v_mac_legacy_f32  v0, v14, v18                        // 0000000000C0: 0C00250E
  v_mac_legacy_f32  v2, v14, v22                        // 0000000000C4: 0C042D0E
  v_mac_legacy_f32  v0, v13, v17                        // 0000000000C8: 0C00230D
  v_mac_legacy_f32  v2, v13, v21                        // 0000000000CC: 0C042B0D
  s_movk_i32    s0, 0x0060                              // 0000000000D0: B0000060
  s_mov_b32     m0, 0x00010000                          // 0000000000D4: BEFC03FF 00010000
  v_mac_legacy_f32  v0, v12, v16                        // 0000000000DC: 0C00210C
  v_mac_legacy_f32  v2, v12, v20                        // 0000000000E0: 0C04290C
  v_mul_lo_i32  v1, v1, s0                              // 0000000000E4: D2D60001 00000101
  ds_write2_b32  v1, v0, v2 offset0:20 offset1:21       // 0000000000EC: D8381514 00020001
  v_mov_b32     v0, 0                                   // 0000000000F4: 7E000280
  v_mov_b32     v2, 1.0                                 // 0000000000F8: 7E0402F2
  ds_write2_b32  v1, v0, v2 offset0:22 offset1:23       // 0000000000FC: D8381716 00020001
  ds_write2_b32  v1, v4, v5 offset1:1                   // 000000000104: D8380100 00050401
  ds_write2_b32  v1, v6, v7 offset0:2 offset1:3         // 00000000010C: D8380302 00070601
  ds_write2_b32  v1, v8, v9 offset0:4 offset1:5         // 000000000114: D8380504 00090801
  ds_write2_b32  v1, v10, v11 offset0:6 offset1:7       // 00000000011C: D8380706 000B0A01
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000124: BF8C0F71
  v_mul_legacy_f32  v0, v15, v32                        // 000000000128: 0E00410F
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 00000000012C: BF8C0F70
  v_mul_legacy_f32  v2, v15, v36                        // 000000000130: 0E04490F
  ds_write2_b32  v1, v25, v26 offset0:8 offset1:9       // 000000000134: D8380908 001A1901
  v_mac_legacy_f32  v0, v14, v31                        // 00000000013C: 0C003F0E
  v_mac_legacy_f32  v2, v14, v35                        // 000000000140: 0C04470E
  ds_write2_b32  v1, v27, v28 offset0:10 offset1:11     // 000000000144: D8380B0A 001C1B01
  v_mac_legacy_f32  v0, v13, v30                        // 00000000014C: 0C003D0D
  v_mac_legacy_f32  v2, v13, v34                        // 000000000150: 0C04450D
  ds_write2_b32  v1, v37, v38 offset0:12 offset1:13     // 000000000154: D8380D0C 00262501
  v_mac_legacy_f32  v0, v12, v29                        // 00000000015C: 0C003B0C
  v_mac_legacy_f32  v2, v12, v33                        // 000000000160: 0C04430C
  ds_write2_b32  v1, v39, v40 offset0:14 offset1:15     // 000000000164: D8380F0E 00282701
  ds_write2_b32  v1, v0, v2 offset0:16 offset1:17       // 00000000016C: D8381110 00020001
  s_endpgm                                              // 000000000174: BF810000
end


// Approximately 19 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VInstancedTexTGVertexCxform[] =
{
     68,  88,  66,  67, 163, 138, 
    145, 252,  14, 181, 139,  56, 
    221, 203, 193, 124, 203,  34, 
    241, 249,   1,   0,   0,   0, 
    204,  15,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     88,   1,   0,   0, 232,   1, 
      0,   0, 164,   2,   0,   0, 
     48,  15,   0,   0,  82,  68, 
     69,  70,  28,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
    224,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      1,   0,   0,   0, 128,   0, 
      0,   0,   0,   9,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 168,   0,   0,   0, 
      0,   0,   0,   0,   0,   9, 
      0,   0,   2,   0,   0,   0, 
    188,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 102, 
    108, 111,  97, 116,  52,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0, 144,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 179,   0, 
      0,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
    136,   0,   0,   0,   4,   0, 
      0,   0,   8,   0,   0,   0, 
    104,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,  15,   0,   0, 
    104,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,  15,   0,   0, 
    110,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  15,  15,   0,   0, 
    122,   0,   0,   0,   0,   0, 
      0,   0,   8,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   1,   1,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     83,  86,  95,  80, 111, 115, 
    105, 116, 105, 111, 110,   0, 
     83,  86,  95,  73, 110, 115, 
    116,  97, 110,  99, 101,  73, 
     68,   0,  79,  83,  71,  78, 
    180,   0,   0,   0,   6,   0, 
      0,   0,   8,   0,   0,   0, 
    152,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
    152,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    158,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  15,   0,   0,   0, 
    158,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,  15,   0,   0,   0, 
    158,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   4,   0, 
      0,   0,   3,  12,   0,   0, 
    167,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   5,   0, 
      0,   0,  15,   0,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88, 132,  12,   0,   0, 
     80,   0,   1,   0,  33,   3, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 187,   0, 
      0,   0,  80,   0,   1,   0, 
    182,   0,   0,   0, 106,   8, 
      0,   1,  89,   8,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0, 144,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   1,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   2,   0,   0,   0, 
     96,   0,   0,   4,  18,  16, 
     16,   0,   3,   0,   0,   0, 
      8,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      3,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      4,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      5,   0,   0,   0,   1,   0, 
      0,   0, 104,   0,   0,   2, 
      1,   0,   0,   0,  54,   0, 
      0,   5, 242,  32,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   5, 242,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  38,   0,   0,   8, 
      0, 208,   0,   0,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,  16,  16,   0,   3,   0, 
      0,   0,   1,  64,   0,   0, 
      6,   0,   0,   0,  35,   0, 
      0,   9,  34,   0,  16,   0, 
      0,   0,   0,   0,  10,  16, 
     16,   0,   3,   0,   0,   0, 
      1,  64,   0,   0,   6,   0, 
      0,   0,   1,  64,   0,   0, 
      1,   0,   0,   0,  86,   0, 
      0,   5,  50,   0,  16,   0, 
      0,   0,   0,   0,  70,   0, 
     16,   0,   0,   0,   0,   0, 
      0,   0,   0,  10,  50,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   0,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
    205, 204, 204,  61, 205, 204, 
    204,  61,   0,   0,   0,   0, 
      0,   0,   0,   0,  28,   0, 
      0,   5,  50,   0,  16,   0, 
      0,   0,   0,   0,  70,   0, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   7, 242,  32, 
     16,   0,   3,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  26,   0,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   7, 242,  32,  16,   0, 
      2,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  35,   0,   0,  15, 
    242,   0,  16,   0,   0,   0, 
      0,   0,   6,  16,  16,   0, 
      3,   0,   0,   0,   2,  64, 
      0,   0,   6,   0,   0,   0, 
      6,   0,   0,   0,   6,   0, 
      0,   0,   6,   0,   0,   0, 
      2,  64,   0,   0,   2,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   0,   0,   4,   0, 
      0,   0,  86,   0,   0,   5, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,  10, 242,   0,  16,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0, 205, 204, 
    204,  61, 205, 204, 140,  63, 
    205, 204, 204,  61, 205, 204, 
    140,  63,  28,   0,   0,   5, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  18,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   2,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  42,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  34,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   2,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  18,  32,  16,   0, 
      5,   0,   0,   0,  70,  30, 
     16,   0,   2,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  34,  32,  16,   0, 
      5,   0,   0,   0,  70,  30, 
     16,   0,   2,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  26,   0,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   8, 194,  32,  16,   0, 
      5,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 128,  63, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 194,   0,   0,   0, 
     21,   0,   1,   0,  32,  22, 
     23,   0, 120,   1, 237, 152, 
    207,  79,  19,  65,  20, 199, 
    103, 167, 203, 148,  31, 179, 
    187,  45,  98,  85, 196,  82, 
     10,  72, 141,  82, 168,  96, 
     12,  34,   1,   3, 137, 129, 
    152,  96, 132, 112, 218,  75, 
    133, 173,  16,  75, 193, 182, 
     33, 141, 135, 165,  16, 188, 
     40, 137, 241, 255, 240, 111, 
     16,  14, 158,  12, 134, 232, 
    193, 152, 200, 197, 163, 209, 
    147,  30, 228,  86, 191, 175, 
    221,  33,  28, 228, 174, 100, 
     63, 201, 119, 222, 188, 153, 
    183,  59, 111, 230, 205, 105, 
     34, 231,  88, 149, 224, 218, 
     16,  39, 251, 251, 224, 217, 
    151, 207, 232, 213, 145,   3, 
    116, 106, 192, 106,  11, 181, 
    140, 253,  56,  75,  45,  99, 
    231, 169, 209,  32, 196,  94, 
    134, 145, 208, 109, 248,  99, 
    176,  52, 151, 240,  84,  99, 
    108, 247,   5,  90,   1, 245, 
     65,  83, 248, 102,  18, 182, 
     23,  50, 161,  30, 168,  30, 
    162, 121, 133, 234,  43,  75, 
     75,  29, 135, 214, 187,   0, 
    225,  87,  71, 168,  24, 154, 
     83, 249,  87, 233, 160, 230, 
    239,  12,  67, 148, 255,  73, 
     80, 110, 199, 115, 161,  60, 
      9,  90, 227,  95, 131, 246, 
    175, 234,  68,  80,  61, 142, 
     67, 103,  29, 128, 136, 215, 
     94,  29,  85, 200, 129, 231, 
    171,  90, 238,  66,  39,  81, 
      1, 234,  94,  40, 148,  79, 
    255,  23, 108, 186,  95, 104, 
     47, 251,   5, 223, 239,  23, 
     24,  16, 152,  20,  40, 136, 
    192,   1, 138,  32, 132,  67, 
     20,  13,  80,  35, 212,   4, 
     97,  65,  97,  64,  72,  80, 
     88,  80,   8,  10,  67, 205, 
    208,  25,   8, 123,  18, 200, 
     79,  68,  32, 220,  87, 129, 
     11,  38,  80, 124, 209,  10, 
     93, 132, 218, 160,  75,  80, 
     20, 106, 175, 213, 158, 106, 
     69,   8, 173, 182,  67, 193, 
    107,  55,  69,   4,  40,  67, 
     88,  93, 101, 124,  58, 161, 
     51,  80, 119, 149, 172, 218, 
     45, 237, 254, 116, 239, 220, 
    199, 199, 199, 199, 199, 199, 
    199, 199, 199, 199, 199, 199, 
    199, 199, 231, 127, 129, 119, 
    108, 190,  89, 181, 182, 119, 
     24, 251, 244,  49,  96, 104, 
    108, 147, 241,  41, 205, 224, 
     46,  11, 108, 237,  86, 120, 
     76, 188, 223, 219,  27, 169, 
    112,  14, 187,  61, 170,  89, 
    220, 221,  98, 250,  20,  55, 
    116, 119, 131, 177, 169, 117, 
    134, 239,  98, 191, 190, 107, 
     17,  94, 174, 232, 241, 106, 
     44,  51, 152,  91, 209, 245, 
    106, 124, 133, 177, 234,  24, 
    183, 116, 151,  89, 204, 165, 
     88,  30, 229, 101, 178,  44, 
    206, 203,  33,  43, 230, 134, 
    173, 120, 117,  60, 212, 204, 
    203,   1,  47,   7, 242, 195, 
    173, 240, 145,  71, 109, 237, 
    189,  17,  90, 155, 198,  53, 
    198, 203, 121, 228, 107,  93, 
    141, 153, 230, 149, 152, 180, 
      6, 226, 230,  19, 242, 135, 
     19, 166,  53,  30,  53, 205, 
     84,  92,  26,  61,  49, 105, 
     14,  37, 164, 121,  39,  42, 
    141, 190, 184, 148, 221,  49, 
    105, 220,  76,  72,  99,  52, 
     42, 101, 111,  92, 150, 121, 
    155, 251, 147, 119, 185, 242, 
     70,  66, 202, 145, 168, 220, 
    175, 103, 135, 161, 176, 217, 
    108, 113, 118, 168, 215, 137, 
     96,  59, 108, 125,  67,  99, 
     19, 157,  75,  31, 250,  76, 
    227, 129,  81, 216, 120, 103, 
     87, 247,  52, 108, 139, 101, 
     54,  51, 182, 177, 227,  61, 
    229,  85, 223,  70,  73, 244, 
     78,  74, 175,  96, 202,  15, 
     65, 132, 242,  73,  10,  29, 
    161,  45,  17, 234, 161, 239, 
     89, 138, 167,  55,  35, 243, 
    232, 181, 176, 198, 160,  55, 
    127, 205, 179, 244, 206, 212, 
      4,  13, 190, 234,  90, 127, 
    151, 120, 254, 246, 190,  55, 
    126, 207, 179, 244, 143,  70, 
    168, 243, 235, 140, 243, 193, 
     27,  91, 244, 236,  18,  68, 
    223, 103, 110, 217,  15, 211, 
    217, 244, 211,  66, 178, 184, 
    146,  95, 121, 156,  44,  20, 
    243,  78, 122, 249, 186, 189, 
    224, 172, 217,  78, 169, 232, 
    228, 115, 233, 172, 253,  40, 
     83,  26, 180, 103, 242, 243, 
    246,   3,  39, 183, 224, 228, 
    237, 137, 129, 137,  84, 201, 
    158,  89,  76, 195,  41, 216, 
    115, 147, 185,  66,  49, 157, 
    155, 119,  22, 102, 157, 210, 
    236, 221,  57,  39,  95, 116, 
     74, 227, 165, 204,  74, 126, 
     57, 153, 201, 166,  82, 201, 
    197, 108,  33, 139, 165, 106, 
    124, 243,  18, 160,   7, 179, 
     32, 180, 156,  94, 202, 177, 
     63, 120, 124, 156, 133,   0, 
     53,  16,   0,   0, 217,   0, 
      0,   0,  21,   0,   1,   0, 
     16, 178,  23,   0, 120,   1, 
    237, 152,  63, 111,  19,  73, 
     24, 198, 103, 199, 147, 137, 
     49, 251, 199, 144,   0,  33, 
      4,  72,  14,  95,  18,   4, 
      4,   7,  82, 228, 224, 162, 
    228, 134,  32,  68,  10,  56, 
    145,   8,  93, 177, 141,  33, 
    107,  64,  56,  78, 100,  91, 
    200, 162, 112, 156,  40,  72, 
      8,  69,  58,  93, 113,  61, 
     31,   1, 241,   1,  32, 197, 
     21,   8,   5,  29, 162,  64, 
     72,  80, 112, 221,  73,  80, 
     65,  65, 105, 158, 103, 189, 
    139,  82,  28, 245,  33, 180, 
     63, 233, 217, 103, 222, 217, 
    215,  51, 239, 236, 140, 155, 
    121, 184,  71, 132, 116, 172, 
    123,  43, 244,  79, 111, 238, 
    188, 126,  37,  17,  51,   0, 
    104, 134,  44, 117, 243,  41, 
    196, 221, 221, 124,  10, 209, 
    199, 135,   5,  33,  33,   7, 
    179, 161,  39, 136, 167, 224, 
    124,  55,  28, 169, 205, 212, 
    198, 159, 120, 110, 131, 142, 
     64,  69,  37,  68,  21, 158, 
    135,  14,  64,  67, 208, 118, 
    104,  43,  26, 226,  84, 105, 
    136, 112, 170, 173, 112, 190, 
    189,  80,  92,  31, 137, 219, 
    156, 223, 129, 190,  48, 192, 
    199, 127, 115,   1,  98, 253, 
     95, 131, 181, 113, 188, 152, 
    184,  78, 206, 255, 173, 193, 
    111,  20, 239,  19, 225, 126, 
    108, 197, 133, 240, 233,  67, 
    198, 163, 125, 140,  83, 234, 
     81,  28, 239, 229,   6, 244, 
     53,  90,  32,  30, 135, 176, 
     61,   6, 145,  20, 164, 197, 
    197, 188, 182, 126, 207, 107, 
    249, 119,  94, 163,  67,  35, 
     65, 227,  64, 105, 108, 170, 
    238, 132, 176, 169,  26, 135, 
     65, 103,  32, 124,  80, 141, 
      9,  53,  54,  76, 163,  64, 
    237,  65,  89, 104,   7, 180, 
     19, 234, 130, 176,  38, 189, 
     11,  66, 141,  26, 231,  85, 
    247,  64, 216, 124, 221,  11, 
    237, 131, 176,  65, 122,  63, 
    132, 195, 164,  15,  66, 168, 
     65, 116, 180,  79, 112, 216, 
      6, 218, 106, 175,  84, 203, 
    246,  41, 209,  41,  86,  10, 
     87, 172, 254, 251, 131, 235, 
    142, 255,  59,  36,  94,  37, 
     87, 141, 207,  23,  42,  33, 
     33,  33,  33,  33,  33,  33, 
     33,  33,  33,  33,  33,  33, 
     33,  33, 225, 255,  68,  14, 
    172,  62,  90, 242, 214,  31, 
     11, 241, 242,  69, 202, 177, 
    196, 170, 144,  51, 150,  35, 
     27,  34, 181, 182, 209, 146, 
     74,  63, 219, 220, 156, 104, 
     73,   9,  95, 159, 180,  60, 
    217,  88,  22, 200, 237, 255, 
    248, 206, 234, 150,  77, 233, 
    169, 134,  21, 253,  46, 252, 
     13, 250, 101,  86,  54, 219, 
    249, 155,  19, 204,  15, 115, 
    123, 100, 115,  77, 168,  25, 
    233, 168,  70,  75, 233, 240, 
     93,  75, 113, 236, 245, 201, 
    148, 167,  27,  50, 202,  75, 
    245, 201, 102, 152, 223,  47, 
    155,  43,  66, 204,   8,  71, 
     52,  90,  66, 132, 249, 194, 
     19,  97,  14,  42, 110, 214, 
     80, 175,  55,  52, 232, 186, 
     63,  14, 218,  54, 234, 244, 
    142, 231,  92, 231, 208, 160, 
    237,  30, 203, 217, 246, 192, 
    160, 237,  28, 129,  31, 206, 
    217,  77, 217,  31, 214, 251, 
    235, 212, 210,  91, 209, 101, 
    212,   7, 249,  67,  99, 142, 
    237, 157,  70, 253,  70, 207, 
     26, 229, 211, 119,  24,  37, 
    232, 202,  40,  69, 239,  48, 
     42,  77, 215,  70, 217, 244, 
     78, 163, 178, 244, 180,  81, 
    221, 244, 109,  70, 245, 208, 
     51,  70, 245, 209, 183,  27, 
    181, 140, 154, 250, 217, 238, 
     49,  42,  71, 223, 219, 238, 
    243,  38, 211, 238,  48, 227, 
     94, 163, 220, 137, 180, 237, 
    157, 203, 184,  71,  25, 239, 
     51, 202,  57, 157, 182, 221, 
    179,  25, 155, 121, 121, 246, 
      9, 204, 247,  83, 218, 118, 
    206, 100, 236,  49, 198,  22, 
    226,  95,  50, 246,  56, 219, 
    210, 168, 159, 233,  41, 163, 
    166, 232, 168, 117, 154, 142, 
     90, 133,  88, 121, 188, 139, 
    155,   9, 120, 235,  70, 241, 
    206, 150,  55, 113, 113,  28, 
    223,  67, 197, 113,  22,  34, 
    113,  76, 197,  96,  64, 235, 
     65, 116,  79, 121,  63, 114, 
    230, 163,  95, 184,  95, 110, 
     50, 219,  60, 143, 222,  63, 
    137, 156, 119,  97, 188, 187, 
     29, 251,  35, 183, 252, 116, 
    248, 222,  95, 239, 163, 254, 
    127,  35, 231,  24,  25, 232, 
    208,  63, 179, 193,  66, 116, 
     39, 174,  34, 191,   1, 241, 
    247, 197,  83, 254, 149,  66, 
    169, 112, 187,  58,  82,  91, 
    172,  44, 222,  28, 169, 214, 
     42,  65,  97, 225, 132,  63, 
     31, 220, 242, 131, 122,  45, 
    168, 148,  11,  37, 255,  90, 
    177,  62, 230, 207,  86, 174, 
    250, 151, 130, 242, 124,  80, 
    241, 167,  79,  78, 143, 214, 
    253, 217, 235,   5,   4,  85, 
    255, 242, 249, 114, 181,  86, 
     40,  95,  13, 230, 231, 130, 
    250, 220, 185, 203,  65, 165, 
     22, 212, 207, 212, 139, 139, 
    149, 133, 145,  98, 105, 116, 
    116, 228, 122, 169,  90, 194, 
     84, 109, 238,  68,   5, 240, 
     42, 179,  19,  90,  40, 220, 
     40, 139, 207,  60,  40, 200, 
    246,   0,   0,   0,  53,  16, 
      0,   0, 203,   0,   0,   0, 
     21,   0,   1,   0,   0,  82, 
     23,   0, 120,   1, 237, 152, 
     75,  79,  19,  81,  20, 199, 
     79, 103, 110,  47, 175, 121, 
     20, 229, 253,  80,  26,  45, 
    148,  16, 161,  40,  11, 163, 
     33,  64, 192,  16, 216, 104, 
    128, 176, 154,   5,  21, 166, 
     66,  44,   5, 218, 198,  52, 
     46, 134,  71,  48,  49, 134, 
    196, 152, 248,  17, 252,   0, 
    126,   2,  96, 225, 202,  96, 
     72,  88,  24,  18, 221, 184, 
     51, 113, 167,  11,  55,  38, 
    245, 127, 230,   1,  93, 200, 
     90,  99, 230, 151, 252, 239, 
    153, 115, 231, 222, 123, 206, 
    125, 172, 206,  76,  51, 185, 
    244, 157,  28, 143, 177, 253, 
    249, 249, 217, 167,  83, 133, 
     40, 202,  78,   5, 235,  13, 
    220,  18,  37, 155, 184,  37, 
    114, 221,   8, 132, 177, 189, 
     48,  26,  84, 130,  63,  10, 
    203, 255, 146, 190,  60,  70, 
     15,  95, 163, 149,  80,  10, 
    234,  86, 137,  54,  96,   7, 
    160,  96, 108,  45, 196, 212, 
    113,   3, 120,  44,  19,  88, 
    132,  57, 131, 195, 114, 188, 
     86,   8,  75, 157, 193, 253, 
     76,  61,  84, 217,  79, 113, 
    110, 254, 204,  56, 196, 249, 
     95,   4, 231, 198,  57,   4, 
    121,   5, 121, 114, 252, 127, 
     13, 222, 127, 112,  79,  12, 
    223,  71,  37,   6,  20, 156, 
    203, 215,  70, 110, 207, 207, 
    172, 197, 191, 215, 224,  46, 
     15, 161, 139,  40,   3, 193, 
     31,  21,   4,  62, 175,  47, 
    233, 126,  74,  70,  94, 166, 
    164, 114, 156, 146, 232, 144, 
    248,  41, 241, 160,  36,  14, 
     82,  86,  65, 213,  80,  13, 
    132, 195, 148,  56,  88, 137, 
    128,  82, 135, 144, 160,  52, 
    161,  24, 132,  75, 148, 151, 
    160, 203,  16, 246,  36, 145, 
    175,  68, 142,  18, 239,  85, 
    182,  64, 184, 124, 217,   6, 
    181,  67,  29,  80,  39, 116, 
      5, 186,  10,  33,   7, 138, 
    122,  47, 216, 253,   6,  50, 
    226, 237,  84,  42, 222,  75, 
    146,  42, 103,  10,  43, 130, 
    204, 255,  47, 120, 223,  56, 
    230,  51, 130,  93, 242, 174, 
    113, 124,  46,  11, 220, 132, 
    132, 132, 132, 132, 132, 132, 
    132, 132, 132, 132, 132, 132, 
    132, 132, 132, 252,  37, 148, 
    248, 206, 254, 186, 185, 119, 
     64, 244, 241,  68, 213,  35, 
    180,  67,  98,  90, 209, 133, 
     67, 234, 238,  97,  89, 116, 
    201,  15,  71,  71, 195, 101, 
     33,  96, 247,  70,  20,  83, 
     56, 155, 132, 177,  93,  63, 
    190,  41,  13, 202, 150, 226, 
    207, 217,  37,  57, 189,  77, 
    228, 205, 211, 201, 241, 198, 
     99,  30, 145, 107,  99, 102, 
    151, 195, 115, 201,  36, 135, 
    231, 198,  98, 202, 150, 187, 
     70, 171, 103,  41, 161, 108, 
    169, 186, 116, 202,  50, 229, 
    205, 147,  18, 118, 111, 164, 
    197,  76,  57, 170,  41, 221, 
     57,  45, 157, 222,  88,  53, 
    174, 108,  21, 145, 175, 217, 
     67, 134,  57,  32,  12,  35, 
     65, 154, 113,  67, 104, 250, 
     53, 210, 244,  62, 161,  45, 
     16, 189,  45, 171, 191, 246, 
    185, 226, 166, 197,  73, 211, 
    122, 133,  22,  65, 158,  92, 
    150, 106, 104, 188, 125,  26, 
     33, 133, 144, 184, 243,  93, 
     17,  78,  83, 179, 231,  83, 
      4,  86,  68,  73,  81,  97, 
    101,  21, 137,  40, 108, 117, 
     13, 201,  42, 216, 218,  58, 
    218, 224, 120,  99, 100, 240, 
     57, 153,  83, 194, 168, 174, 
     65, 127, 107,  27,  25,  35, 
    136,  61,  41, 180, 218,  58, 
    248, 237,  29, 164,  15,  35, 
    135, 123,  66, 211, 116, 248, 
    137, 110, 210, 238,  34, 254, 
    184, 208,  12,  19, 126,  79, 
    146,  98, 245, 176,  28, 143, 
    182,  15, 252, 178, 160, 235, 
    177, 184, 198, 202, 149, 179, 
    192, 143,  65,  76, 224, 179, 
      2,   4, 134,  62, 240, 235, 
    136, 163, 190, 229, 241,  92, 
    123,  50, 220,  85, 206,  89, 
    247, 255,  47, 251, 150, 107, 
     85,  92,  99,  29, 122, 117, 
    125, 243, 125, 242, 197, 187, 
     61, 191, 255, 185, 111, 121, 
     13, 174, 189,  94, 251,  50, 
    107, 235, 126, 205, 250, 141, 
    255, 111,   5, 226, 249, 153, 
     59, 214, 195, 116,  54, 253, 
    180, 208,  95,  92, 203, 175, 
     61, 238,  47,  20, 243, 118, 
    122, 245, 166, 181, 100,  63, 
    177, 236,  82, 209, 206, 231, 
    210,  89, 235,  81, 166,  52, 
    100, 205, 230,  23, 173,  25, 
     59, 183, 100, 231, 173, 137, 
     91,  19, 131,  37, 107, 118, 
     57,  13, 167,  96, 205,  79, 
    229,  10, 197, 116, 110, 209, 
     94, 154, 179,  75, 115, 147, 
    243, 118, 190, 104, 151, 198, 
     75, 153, 181, 252, 106, 127, 
     38,  59,  56, 216, 191, 156, 
     45, 100,  17, 202,  35, 225, 
     39, 194, 165, 198,  42, 104, 
     53, 189, 146, 163, 223,  52, 
     18, 166, 200,   0,   0,   0, 
     83,  84,  65,  84, 148,   0, 
      0,   0,  19,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  10,   0,   0,   0, 
      6,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      5,   0,   0,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0
};
