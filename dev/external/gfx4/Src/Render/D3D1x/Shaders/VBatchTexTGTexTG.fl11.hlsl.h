#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4 vfuniforms[144];            // Offset:    0 Size:  2304
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// SV_Position              0   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// SV_Position              0   xyzw        2      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[141]
// Embedded Data:
//  0x0000008d - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x00000088 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[144], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_output o0.xyzw
dcl_output o1.xy
dcl_output o1.zw
dcl_output_siv o2.xyzw, position
dcl_temps 1
mov o0.xyzw, v0.xyzw
mad r0.xyzw, v0.zzzz, l(1530.059937, 1530.059937, 1530.059937, 1530.059937), l(0.100000, 1.100000, 2.100000, 3.100000)
ftou r0.xyzw, r0.xyzw
dp4 o1.x, v1.xyzw, cb0[r0.z + 0].xyzw
dp4 o1.y, v1.xyzw, cb0[r0.w + 0].xyzw
mad r0.zw, v0.zzzz, l(0.000000, 0.000000, 1530.059937, 1530.059937), l(0.000000, 0.000000, 4.100000, 5.100000)
ftou r0.zw, r0.zzzw
dp4 o1.z, v1.xyzw, cb0[r0.z + 0].xyzw
dp4 o1.w, v1.xyzw, cb0[r0.w + 0].xyzw
dp4 o2.x, v1.xyzw, cb0[r0.x + 0].xyzw
dp4 o2.y, v1.xyzw, cb0[r0.y + 0].xyzw
mov o2.zw, l(0,0,0,1.000000)
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[141], bundle is:[186] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBatchTexTGTexTG.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0

codeLenInByte        = 344;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 32;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000002
SVOC:VS_EXPORT_COUNT        = 1
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  v_mov_b32     v0, 0x44bf41eb                          // 000000000004: 7E0002FF 44BF41EB
  s_mov_b32     s0, 0x3dcccccd                          // 00000000000C: BE8003FF 3DCCCCCD
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000014: BF8C0F70
  v_mad_legacy_f32  v1, v6, v0, s0                      // 000000000018: D2800001 00020106
  s_mov_b32     s0, 0x3f8ccccd                          // 000000000020: BE8003FF 3F8CCCCD
  v_mad_legacy_f32  v2, v6, v0, s0                      // 000000000028: D2800002 00020106
  s_mov_b32     s0, 0x40066666                          // 000000000030: BE8003FF 40066666
  v_mad_legacy_f32  v3, v6, v0, s0                      // 000000000038: D2800003 00020106
  exp           param0, v4, v5, v6, v7                  // 000000000040: F800020F 07060504
  s_mov_b32     s0, 0x40466666                          // 000000000048: BE8003FF 40466666
  s_waitcnt     expcnt(0) & lgkmcnt(15)                 // 000000000050: BF8C0F0F
  v_mad_legacy_f32  v4, v6, v0, s0                      // 000000000054: D2800004 00020106
  s_mov_b32     s0, 0x40833333                          // 00000000005C: BE8003FF 40833333
  v_mad_legacy_f32  v5, v6, v0, s0                      // 000000000064: D2800005 00020106
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 00000000006C: C0840300
  s_mov_b32     s0, 0x40a33333                          // 000000000070: BE8003FF 40A33333
  v_mad_legacy_f32  v0, v6, v0, s0                      // 000000000078: D2800000 00020106
  v_cvt_u32_f32  v1, v1                                 // 000000000080: 7E020F01
  v_cvt_u32_f32  v3, v3                                 // 000000000084: 7E060F03
  v_cvt_u32_f32  v0, v0                                 // 000000000088: 7E000F00
  s_waitcnt     lgkmcnt(0)                              // 00000000008C: BF8C007F
  tbuffer_load_format_xyzw  v[12:15], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000090: EBF32000 80020C03
  tbuffer_load_format_xyzw  v[24:27], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000098: EBF32000 80021800
  tbuffer_load_format_xyzw  v[28:31], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A0: EBF32000 80021C01
  v_cvt_u32_f32  v2, v2                                 // 0000000000A8: 7E040F02
  v_cvt_u32_f32  v4, v4                                 // 0000000000AC: 7E080F04
  tbuffer_load_format_xyzw  v[16:19], v4, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B0: EBF32000 80021004
  tbuffer_load_format_xyzw  v[0:3], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B8: EBF32000 80020002
  v_cvt_u32_f32  v5, v5                                 // 0000000000C0: 7E0A0F05
  tbuffer_load_format_xyzw  v[20:23], v5, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C4: EBF32000 80021405
  s_waitcnt     vmcnt(3) & lgkmcnt(15)                  // 0000000000CC: BF8C0F73
  v_mul_legacy_f32  v4, v11, v31                        // 0000000000D0: 0E083F0B
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 0000000000D4: BF8C0F71
  v_mul_legacy_f32  v3, v11, v3                         // 0000000000D8: 0E06070B
  v_mac_legacy_f32  v4, v10, v30                        // 0000000000DC: 0C083D0A
  v_mac_legacy_f32  v3, v10, v2                         // 0000000000E0: 0C06050A
  v_mac_legacy_f32  v4, v9, v29                         // 0000000000E4: 0C083B09
  v_mac_legacy_f32  v3, v9, v1                          // 0000000000E8: 0C060309
  v_mov_b32     v6, 0                                   // 0000000000EC: 7E0C0280
  v_mov_b32     v7, 1.0                                 // 0000000000F0: 7E0E02F2
  v_mac_legacy_f32  v4, v8, v28                         // 0000000000F4: 0C083908
  v_mac_legacy_f32  v3, v8, v0                          // 0000000000F8: 0C060108
  exp           pos0, v4, v3, v6, v7 done               // 0000000000FC: F80008CF 07060304
  v_mul_legacy_f32  v0, v11, v15                        // 000000000104: 0E001F0B
  v_mul_legacy_f32  v1, v11, v19                        // 000000000108: 0E02270B
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 00000000010C: BF8C0F70
  v_mul_legacy_f32  v2, v11, v23                        // 000000000110: 0E042F0B
  s_waitcnt     expcnt(0) & lgkmcnt(15)                 // 000000000114: BF8C0F0F
  v_mul_legacy_f32  v3, v11, v27                        // 000000000118: 0E06370B
  v_mac_legacy_f32  v0, v10, v14                        // 00000000011C: 0C001D0A
  v_mac_legacy_f32  v1, v10, v18                        // 000000000120: 0C02250A
  v_mac_legacy_f32  v2, v10, v22                        // 000000000124: 0C042D0A
  v_mac_legacy_f32  v3, v10, v26                        // 000000000128: 0C06350A
  v_mac_legacy_f32  v0, v9, v13                         // 00000000012C: 0C001B09
  v_mac_legacy_f32  v1, v9, v17                         // 000000000130: 0C022309
  v_mac_legacy_f32  v2, v9, v21                         // 000000000134: 0C042B09
  v_mac_legacy_f32  v3, v9, v25                         // 000000000138: 0C063309
  v_mac_legacy_f32  v0, v8, v12                         // 00000000013C: 0C001908
  v_mac_legacy_f32  v1, v8, v16                         // 000000000140: 0C022108
  v_mac_legacy_f32  v2, v8, v20                         // 000000000144: 0C042908
  v_mac_legacy_f32  v3, v8, v24                         // 000000000148: 0C063108
  exp           param1, v0, v1, v2, v3                  // 00000000014C: F800021F 03020100
  s_endpgm                                              // 000000000154: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[329], bundle is:[202] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBatchTexTGTexTG.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] position, usageIdx  2, paramIdx 2, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0

codeLenInByte        = 420;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 36;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 12
; esGsRingItemSize          = 12

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  v_mov_b32     v0, 0x44bf41eb                          // 000000000004: 7E0002FF 44BF41EB
  s_mov_b32     s5, 0x3dcccccd                          // 00000000000C: BE8503FF 3DCCCCCD
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000014: BF8C0F70
  v_mad_legacy_f32  v1, v6, v0, s5                      // 000000000018: D2800001 00160106
  s_mov_b32     s5, 0x3f8ccccd                          // 000000000020: BE8503FF 3F8CCCCD
  v_mad_legacy_f32  v2, v6, v0, s5                      // 000000000028: D2800002 00160106
  s_mov_b32     s5, 0x40066666                          // 000000000030: BE8503FF 40066666
  v_mad_legacy_f32  v3, v6, v0, s5                      // 000000000038: D2800003 00160106
  s_mov_b32     s5, 0x40466666                          // 000000000040: BE8503FF 40466666
  v_mad_legacy_f32  v12, v6, v0, s5                     // 000000000048: D280000C 00160106
  s_mov_b32     s5, 0x40833333                          // 000000000050: BE8503FF 40833333
  v_mad_legacy_f32  v13, v6, v0, s5                     // 000000000058: D280000D 00160106
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000060: C0840300
  s_mov_b32     s5, 0x40a33333                          // 000000000064: BE8503FF 40A33333
  v_mad_legacy_f32  v0, v6, v0, s5                      // 00000000006C: D2800000 00160106
  v_cvt_u32_f32  v1, v1                                 // 000000000074: 7E020F01
  v_cvt_u32_f32  v3, v3                                 // 000000000078: 7E060F03
  v_cvt_u32_f32  v0, v0                                 // 00000000007C: 7E000F00
  s_waitcnt     lgkmcnt(0)                              // 000000000080: BF8C007F
  tbuffer_load_format_xyzw  v[16:19], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000084: EBF32000 80021003
  tbuffer_load_format_xyzw  v[28:31], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000008C: EBF32000 80021C00
  tbuffer_load_format_xyzw  v[32:35], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000094: EBF32000 80022001
  v_cvt_u32_f32  v12, v12                               // 00000000009C: 7E180F0C
  tbuffer_load_format_xyzw  v[20:23], v12, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A0: EBF32000 8002140C
  v_cvt_u32_f32  v2, v2                                 // 0000000000A8: 7E040F02
  tbuffer_load_format_xyzw  v[0:3], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80020002
  v_cvt_u32_f32  v13, v13                               // 0000000000B4: 7E1A0F0D
  tbuffer_load_format_xyzw  v[24:27], v13, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B8: EBF32000 8002180D
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000C0: BF8C0F75
  v_mul_legacy_f32  v12, v11, v19                       // 0000000000C4: 0E18270B
  v_mac_legacy_f32  v12, v10, v18                       // 0000000000C8: 0C18250A
  s_waitcnt     vmcnt(3) & lgkmcnt(15)                  // 0000000000CC: BF8C0F73
  v_mul_legacy_f32  v18, v11, v35                       // 0000000000D0: 0E24470B
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 0000000000D4: C080030C
  v_mac_legacy_f32  v18, v10, v34                       // 0000000000D8: 0C24450A
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 0000000000DC: BF8C0F71
  v_mul_legacy_f32  v3, v11, v3                         // 0000000000E0: 0E06070B
  v_mac_legacy_f32  v18, v9, v33                        // 0000000000E4: 0C244309
  v_mac_legacy_f32  v3, v10, v2                         // 0000000000E8: 0C06050A
  v_mac_legacy_f32  v18, v8, v32                        // 0000000000EC: 0C244108
  v_mac_legacy_f32  v3, v9, v1                          // 0000000000F0: 0C060309
  v_mac_legacy_f32  v3, v8, v0                          // 0000000000F4: 0C060108
  v_mov_b32     v14, 0                                  // 0000000000F8: 7E1C0280
  v_mov_b32     v15, 1.0                                // 0000000000FC: 7E1E02F2
  s_waitcnt     lgkmcnt(0)                              // 000000000100: BF8C007F
  buffer_store_dword  v18, v0, s[0:3], s4 offset:32 glc slc // 000000000104: E0704020 04401200
  buffer_store_dword  v3, v0, s[0:3], s4 offset:36 glc slc // 00000000010C: E0704024 04400300
  v_mac_legacy_f32  v12, v9, v17                        // 000000000114: 0C182309
  buffer_store_dword  v14, v0, s[0:3], s4 offset:40 glc slc // 000000000118: E0704028 04400E00
  v_mac_legacy_f32  v12, v8, v16                        // 000000000120: 0C182108
  v_mul_legacy_f32  v13, v11, v23                       // 000000000124: 0E1A2F0B
  buffer_store_dword  v15, v0, s[0:3], s4 offset:44 glc slc // 000000000128: E070402C 04400F00
  v_mac_legacy_f32  v13, v10, v22                       // 000000000130: 0C1A2D0A
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 000000000134: BF8C0F74
  v_mul_legacy_f32  v16, v11, v27                       // 000000000138: 0E20370B
  buffer_store_dword  v4, v0, s[0:3], s4 glc slc        // 00000000013C: E0704000 04400400
  v_mac_legacy_f32  v13, v9, v21                        // 000000000144: 0C1A2B09
  v_mac_legacy_f32  v16, v10, v26                       // 000000000148: 0C20350A
  v_mul_legacy_f32  v17, v11, v31                       // 00000000014C: 0E223F0B
  buffer_store_dword  v5, v0, s[0:3], s4 offset:4 glc slc // 000000000150: E0704004 04400500
  v_mac_legacy_f32  v13, v8, v20                        // 000000000158: 0C1A2908
  v_mac_legacy_f32  v16, v9, v25                        // 00000000015C: 0C203309
  v_mac_legacy_f32  v17, v10, v30                       // 000000000160: 0C223D0A
  buffer_store_dword  v6, v0, s[0:3], s4 offset:8 glc slc // 000000000164: E0704008 04400600
  v_mac_legacy_f32  v16, v8, v24                        // 00000000016C: 0C203108
  v_mac_legacy_f32  v17, v9, v29                        // 000000000170: 0C223B09
  buffer_store_dword  v7, v0, s[0:3], s4 offset:12 glc slc // 000000000174: E070400C 04400700
  v_mac_legacy_f32  v17, v8, v28                        // 00000000017C: 0C223908
  buffer_store_dword  v12, v0, s[0:3], s4 offset:16 glc slc // 000000000180: E0704010 04400C00
  buffer_store_dword  v13, v0, s[0:3], s4 offset:20 glc slc // 000000000188: E0704014 04400D00
  buffer_store_dword  v16, v0, s[0:3], s4 offset:24 glc slc // 000000000190: E0704018 04401000
  buffer_store_dword  v17, v0, s[0:3], s4 offset:28 glc slc // 000000000198: E070401C 04401100
  s_endpgm                                              // 0000000001A0: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[533], bundle is:[196] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBatchTexTGTexTG.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
; Output Semantic Mappings
;   [0] position, usageIdx  2, paramIdx 2, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0

codeLenInByte        = 384;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 37;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 12
; lsStride                  = 48

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  v_mov_b32     v0, 0x44bf41eb                          // 000000000008: 7E0002FF 44BF41EB
  s_mov_b32     s0, 0x3dcccccd                          // 000000000010: BE8003FF 3DCCCCCD
  s_mov_b32     s1, 0x3f8ccccd                          // 000000000018: BE8103FF 3F8CCCCD
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000020: BF8C0F70
  v_mad_legacy_f32  v2, v6, v0, s0                      // 000000000024: D2800002 00020106
  v_mad_legacy_f32  v3, v6, v0, s1                      // 00000000002C: D2800003 00060106
  v_cvt_u32_f32  v2, v2                                 // 000000000034: 7E040F02
  v_cvt_u32_f32  v3, v3                                 // 000000000038: 7E060F03
  s_waitcnt     lgkmcnt(0)                              // 00000000003C: BF8C007F
  tbuffer_load_format_xyzw  v[12:15], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 80020C02
  tbuffer_load_format_xyzw  v[16:19], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000048: EBF32000 80021003
  s_mov_b32     s0, 0x40066666                          // 000000000050: BE8003FF 40066666
  s_mov_b32     s1, 0x40466666                          // 000000000058: BE8103FF 40466666
  v_mad_legacy_f32  v2, v6, v0, s0                      // 000000000060: D2800002 00020106
  v_mad_legacy_f32  v3, v6, v0, s1                      // 000000000068: D2800003 00060106
  s_mov_b32     s0, 0x40833333                          // 000000000070: BE8003FF 40833333
  s_mov_b32     s1, 0x40a33333                          // 000000000078: BE8103FF 40A33333
  v_mad_legacy_f32  v20, v6, v0, s0                     // 000000000080: D2800014 00020106
  v_mad_legacy_f32  v0, v6, v0, s1                      // 000000000088: D2800000 00060106
  v_cvt_u32_f32  v2, v2                                 // 000000000090: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 000000000094: 7E000F00
  tbuffer_load_format_xyzw  v[21:24], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000098: EBF32000 80021502
  tbuffer_load_format_xyzw  v[33:36], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A0: EBF32000 80022100
  v_cvt_u32_f32  v3, v3                                 // 0000000000A8: 7E060F03
  v_cvt_u32_f32  v20, v20                               // 0000000000AC: 7E280F14
  tbuffer_load_format_xyzw  v[25:28], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B0: EBF32000 80021903
  tbuffer_load_format_xyzw  v[29:32], v20, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B8: EBF32000 80021D14
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000C0: BF8C0F75
  v_mul_legacy_f32  v0, v11, v15                        // 0000000000C4: 0E001F0B
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000C8: BF8C0F74
  v_mul_legacy_f32  v2, v11, v19                        // 0000000000CC: 0E04270B
  v_mac_legacy_f32  v0, v10, v14                        // 0000000000D0: 0C001D0A
  v_mac_legacy_f32  v2, v10, v18                        // 0000000000D4: 0C04250A
  v_mac_legacy_f32  v0, v9, v13                         // 0000000000D8: 0C001B09
  v_mac_legacy_f32  v2, v9, v17                         // 0000000000DC: 0C042309
  s_mov_b32     m0, 0x00010000                          // 0000000000E0: BEFC03FF 00010000
  v_mac_legacy_f32  v0, v8, v12                         // 0000000000E8: 0C001908
  v_mac_legacy_f32  v2, v8, v16                         // 0000000000EC: 0C042108
  v_mul_lo_i32  v1, v1, 48                              // 0000000000F0: D2D60001 00016101
  ds_write2_b32  v1, v0, v2 offset0:8 offset1:9         // 0000000000F8: D8380908 00020001
  s_waitcnt     vmcnt(3) & lgkmcnt(15)                  // 000000000100: BF8C0F73
  v_mul_legacy_f32  v3, v11, v24                        // 000000000104: 0E06310B
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000108: BF8C0F71
  v_mul_legacy_f32  v12, v11, v28                       // 00000000010C: 0E18390B
  v_mov_b32     v0, 0                                   // 000000000110: 7E000280
  v_mov_b32     v2, 1.0                                 // 000000000114: 7E0402F2
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000118: BF8C0F70
  v_mul_legacy_f32  v13, v11, v32                       // 00000000011C: 0E1A410B
  v_mac_legacy_f32  v3, v10, v23                        // 000000000120: 0C062F0A
  v_mac_legacy_f32  v12, v10, v27                       // 000000000124: 0C18370A
  v_mul_legacy_f32  v11, v11, v36                       // 000000000128: 0E16490B
  ds_write2_b32  v1, v0, v2 offset0:10 offset1:11       // 00000000012C: D8380B0A 00020001
  v_mac_legacy_f32  v3, v9, v22                         // 000000000134: 0C062D09
  v_mac_legacy_f32  v12, v9, v26                        // 000000000138: 0C183509
  v_mac_legacy_f32  v13, v10, v31                       // 00000000013C: 0C1A3F0A
  v_mac_legacy_f32  v11, v10, v35                       // 000000000140: 0C16470A
  ds_write2_b32  v1, v4, v5 offset1:1                   // 000000000144: D8380100 00050401
  v_mac_legacy_f32  v3, v8, v21                         // 00000000014C: 0C062B08
  v_mac_legacy_f32  v12, v8, v25                        // 000000000150: 0C183308
  v_mac_legacy_f32  v13, v9, v30                        // 000000000154: 0C1A3D09
  v_mac_legacy_f32  v11, v9, v34                        // 000000000158: 0C164509
  ds_write2_b32  v1, v6, v7 offset0:2 offset1:3         // 00000000015C: D8380302 00070601
  v_mac_legacy_f32  v13, v8, v29                        // 000000000164: 0C1A3B08
  v_mac_legacy_f32  v11, v8, v33                        // 000000000168: 0C164308
  ds_write2_b32  v1, v3, v12 offset0:4 offset1:5        // 00000000016C: D8380504 000C0301
  ds_write2_b32  v1, v13, v11 offset0:6 offset1:7       // 000000000174: D8380706 000B0D01
  s_endpgm                                              // 00000000017C: BF810000
end


// Approximately 13 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VBatchTexTGTexTG[] =
{
     68,  88,  66,  67, 190, 157, 
     16, 201, 114, 198, 153,  55, 
    130, 194, 214,   1, 104, 179, 
    206,  36,   1,   0,   0,   0, 
     72,  14,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     88,   1,   0,   0, 172,   1, 
      0,   0,  56,   2,   0,   0, 
    172,  13,   0,   0,  82,  68, 
     69,  70,  28,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
    224,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      1,   0,   0,   0, 128,   0, 
      0,   0,   0,   9,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 168,   0,   0,   0, 
      0,   0,   0,   0,   0,   9, 
      0,   0,   2,   0,   0,   0, 
    188,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 102, 
    108, 111,  97, 116,  52,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0, 144,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 179,   0, 
      0,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
     76,   0,   0,   0,   2,   0, 
      0,   0,   8,   0,   0,   0, 
     56,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,  15,   0,   0, 
     62,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,  15,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     83,  86,  95,  80, 111, 115, 
    105, 116, 105, 111, 110,   0, 
    171, 171,  79,  83,  71,  78, 
    132,   0,   0,   0,   4,   0, 
      0,   0,   8,   0,   0,   0, 
    104,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
    110,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,   3,  12,   0,   0, 
    110,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  12,   3,   0,   0, 
    119,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  15,   0,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88, 108,  11,   0,   0, 
     80,   0,   1,   0, 219,   2, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 141,   0, 
      0,   0,  80,   0,   1,   0, 
    136,   0,   0,   0, 106,   8, 
      0,   1,  89,   8,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0, 144,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3,  50,  32, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3, 194,  32, 
     16,   0,   1,   0,   0,   0, 
    103,   0,   0,   4, 242,  32, 
     16,   0,   2,   0,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   2,   1,   0,   0,   0, 
     54,   0,   0,   5, 242,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  50,   0,   0,  15, 
    242,   0,  16,   0,   0,   0, 
      0,   0, 166,  26,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0, 235,  65, 191,  68, 
    235,  65, 191,  68, 235,  65, 
    191,  68, 235,  65, 191,  68, 
      2,  64,   0,   0, 205, 204, 
    204,  61, 205, 204, 140,  63, 
    102, 102,   6,  64, 102, 102, 
     70,  64,  28,   0,   0,   5, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  18,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  42,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  34,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,  15, 194,   0,  16,   0, 
      0,   0,   0,   0, 166,  26, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    235,  65, 191,  68, 235,  65, 
    191,  68,   2,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  51,  51, 131,  64, 
     51,  51, 163,  64,  28,   0, 
      0,   5, 194,   0,  16,   0, 
      0,   0,   0,   0, 166,  14, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,   9,  66,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  42,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,   9, 130,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,   9,  18,  32, 
     16,   0,   2,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,   9,  34,  32, 
     16,   0,   2,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  70, 142,  32,   4, 
      0,   0,   0,   0,  26,   0, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   8, 194,  32, 
     16,   0,   2,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    128,  63,  62,   0,   0,   1, 
     53,  16,   0,   0, 188,   0, 
      0,   0,  21,   0,   1,   0, 
     32,  39,  23,   0, 120,   1, 
    237, 152, 207, 107,  19,  65, 
     20, 199, 103, 103,  55,  47, 
    155, 205, 116, 183, 106, 213, 
    214, 182, 182,  69, 164, 138, 
     24,  27,  83,  17, 149, 210, 
     40, 197,  31,  39, 197, 138, 
    120,  88, 132, 180,  77, 140, 
     52, 253, 149,   4, 137,  30, 
    214, 168,  61,  73, 197, 191, 
     65, 188, 121, 246, 220, 246, 
    232, 161,  69,  17, 193, 187, 
    215, 222, 244,  82, 188, 212, 
    239, 203, 238, 104,  16, 123, 
     86, 112,  63, 240, 125,  47, 
    111, 118, 126, 190, 153,  92, 
    222, 240,  65, 209,  98, 105, 
    106, 244,  21, 251, 241, 185, 
    135,  31,   6, 165,  16,   9, 
     14, 128, 197,   6,  44, 118, 
    177,  21, 194,  62, 192,  86, 
    136,  65,  54,   6, 132, 190, 
    252,  91,  65, 119,  16, 231, 
    225,  57,  62,  22,  41,  36, 
    191, 254,   2,  54,   9, 113, 
    219,  27, 140, 185,   6, 159, 
    133,  60, 104,  24, 234, 132, 
     76,  72,  67, 108, 128, 205, 
      6, 240, 216, 118,  82,  80, 
     55, 164, 251,  49, 188,  29, 
    134, 191, 181, 207,  37, 134, 
    216, 252,  25, 189, 223, 221, 
    224, 189, 233,  53, 120,  78, 
    222,  39, 195, 231, 253, 215, 
    224, 243, 235, 123,  98, 248, 
     62, 218, 113,  33, 157, 151, 
    119, 251, 217, 254, 202, 217, 
    118,  20, 115,  46, 248, 108, 
    235, 208, 110, 236,   0, 253, 
     46,  52,  58, 198, 213,  34, 
     95, 215,  71, 200, 120,  57, 
     66,   8,   8,  11,  18,  62, 
     18,  30,  20,  33, 145, 132, 
    139,  36,  92,  42, 225, 146, 
    200, 129, 210,  16,  22, 164, 
     14,   8,  27,  36,  60,   8, 
     66, 146, 105,  15, 180,  23, 
    218,   7, 225,  76, 132, 253, 
     17, 222,  30, 225, 189,  18, 
     46, 158, 122, 160,  67,  80, 
     47, 212,   7, 245,  67, 135, 
    161,   1, 189, 135,  16,  50, 
    126,  75, 194, 127,   2, 231, 
     64, 255, 119, 248, 183, 190, 
     31, 166, 253, 119,  76,  76, 
     76,  76,  76,  76,  76,  76, 
     76,  76,  76,  76,  76,  76, 
     76, 204, 223,  66,  14,  61, 
     93, 221, 145,  34, 216, 186, 
    184,  54, 177,  99,  54,  87, 
     55,  55,  54, 198,  22, 189, 
    149,  53,  67,  52,  63, 146, 
     33,  69, 216, 182,  50,  46, 
    219, 226,  82, 137, 242, 102, 
     20, 123,  82, 108,  91,   9, 
     74, 134, 237, 151, 243,  30, 
    198,  90, 109, 125, 115, 185, 
    103, 249,  68,  20,  11, 115, 
    121,  61, 108, 123, 157,  23, 
     81, 155, 225, 201, 192, 244, 
     40,  16, 158,   8,  30, 139, 
    149,  53,  49, 248, 109, 203, 
     84, 178, 201,  94, 116, 135, 
    222, 232, 147,  77, 233,  89, 
    129, 229, 217,   1, 199,  86, 
    103, 216,  46, 133, 108,  38, 
     60, 167, 213, 150, 232, 146, 
    205,  26, 214,  78, 143, 219, 
    238,  18, 251,  36, 185, 206, 
    152, 173, 156,   4, 169, 212, 
      5,  91, 165,  76,  82,  77, 
    169, 130, 175, 210,  13, 236, 
    115, 182, 178,  13,  82, 239, 
    109, 236, 221, 164, 100, 122, 
     64, 184, 233,  97, 233, 242, 
    185, 211, 167,  44, 151, 207, 
    144,  62, 139, 241, 253,  66, 
     57,  71, 165, 114,  78,  90, 
    202,  57, 131, 121, 122, 133, 
     74,  29, 145,  42, 117, 194, 
     82, 169,  28,  41, 187,  71, 
     40, 123,  72,  42, 251, 184, 
    165, 236,  44, 169,   1, 228, 
     66,  24, 210,  20, 226, 201, 
     90,  84, 230, 107, 213, 132, 
     88,  61,  16,  87, 200, 116, 
    172, 235, 155,  58, 102, 105, 
     44, 116,  29, 209, 245, 223, 
    200, 115, 127, 174,  39, 185, 
     63,  43, 137,  33,  55, 162, 
    239,  87,  35, 207, 181, 168, 
     52, 148, 155, 237,  16,  99, 
    111, 213, 102,  37, 106,  47, 
     71, 158, 231, 112, 160, 207, 
    147, 207,  63, 125, 137, 218, 
    150,  35, 127,  23, 226, 241, 
    165, 243, 254,  84, 161,  82, 
    120,  84, 203, 212,  23, 170, 
     11, 179, 153,  90, 189,  90, 
     44, 204, 157, 246, 103, 138, 
     15, 252,  98, 163,  94, 172, 
    206,  23,  42, 254, 189,  82, 
     99, 212, 159, 172,  78, 251, 
     55, 139, 243,  51, 197, 170, 
     63, 145, 155, 200,  54, 252, 
    201, 114,   1,  65, 205, 191, 
    125, 169,  80, 159,  46, 223, 
     42,  54, 110,  93, 105, 153, 
     76, 169, 146, 205, 102, 202, 
    149,  90,   5, 243, 135, 124, 
    143,  86, 229,  10,  56,  87, 
    157, 231,  10, 247, 231, 197, 
     15, 154, 169, 151, 178,   0, 
      0,   0,  53,  16,   0,   0, 
    204,   0,   0,   0,  21,   0, 
      1,   0,  16, 131,  23,   0, 
    120,   1, 237, 152, 205,  79, 
     19,  65,  24, 135, 103,  63, 
     24, 250,  49, 221,  45,  88, 
    176, 212, 138, 165, 214, 128, 
     65,  43, 165,  24, 163,   6, 
     89,  20,  37,  49,  38,  38, 
     66,  56, 109,  76,  42, 180, 
     98,  40,  31, 182, 213,  84, 
     99, 234,  42, 122,  49,  77, 
    140,  38, 254,   5, 114, 244, 
    232, 153, 246, 224, 193,   3, 
     38,  70,  77, 188, 114, 231, 
    166, 127,  64, 253, 189, 237, 
     46,  41,  70, 206,  26, 179, 
     79, 242, 204,  59, 239, 236, 
    236, 236, 116, 223, 237, 101, 
    214,  15, 178,  38, 253, 175, 
     26,  95,  41,  78,  44,  63, 
    248,  28, 147,  25, 235, 160, 
      4, 160, 219, 100,  45,  68, 
     45,  99,  11, 189, 212,  50, 
     22, 165,  70, 130, 152, 144, 
     64,  16, 112,   3, 185, 129, 
     72, 215, 134, 108,  91,  24, 
    245,  55, 104, 125, 112,  24, 
    190,  86,  24, 187, 134,  56, 
     10, 195, 112,  16, 118, 193, 
    118,  56, 164,  53,  61, 144, 
    232, 164, 166,  13,  47, 164, 
    123, 105, 158, 131, 179, 215, 
    110,  72, 247, 238,  50,  64, 
    205, 159, 185,  10, 105, 255, 
    251,  65, 123, 163, 245,  28, 
    156, 125, 238,  89, 255,  31, 
    129, 202, 225, 212, 137, 160, 
    122, 180, 163,  65,  21,  18, 
     33, 187, 142, 206, 148,  89, 
     59, 119, 106,  89, 135, 251, 
    209,   0, 206,  58,   4, 245, 
    199,  32,  65,  53, 224, 236, 
    250,   8, 151,  94, 142, 112, 
     36,  28, 181, 230, 152, 192, 
    241,  65, 113,  20, 139, 163, 
    144,  28,  69, 229,  40,  32, 
    199,   7, 193, 253,  16,  15, 
    228,   1, 136,  13, 114,  29, 
      6,  33,  94,  52, 199, 139, 
    231,   7,  32, 126,  19, 239, 
    129, 216,  35, 199, 247, 202, 
     81, 120, 222,   7,  35, 240, 
     16, 196,   7, 199,  15, 195, 
    126, 120, 132,  49,  60,  18, 
     27, 161, 157,  32, 167,   6, 
    112, 233, 183, 151, 241, 159, 
     67, 239, 192, 249, 239,  16, 
     84,  35,   7, 170,  47, 233, 
    226, 226, 226, 226, 226, 226, 
    226, 226, 226, 226, 226, 226, 
    226, 226, 226, 242,  55, 145, 
      7, 158, 110,  54, 100,  86, 
    217, 153, 172,  77,  53, 148, 
    231, 155, 159, 182, 182, 198, 
    215, 244, 106,  77,  98, 214, 
     23,  46, 245, 178, 214,  88, 
    117,  66, 110, 203, 115,  57, 
    110,  40, 123, 242,  43, 134, 
    104, 203, 211, 233, 117,  35, 
     96, 231,  76, 121,  86, 111, 
    141, 189,  53, 152,  61,  38, 
    233, 114,  69, 209, 121, 133, 
    233, 172, 242, 152,  85, 107, 
     44, 246, 115,  71,   9, 202, 
     22,  69,  22, 109,  69,  41, 
     38,  91,  66,  15,  87, 168, 
     47,  66, 178,  37, 235, 106, 
    179,  47,  51, 217,  10, 232, 
    145, 102,  63,  16, 150, 173, 
    123, 216, 171, 127,  48, 172, 
    249, 142, 133,  69, 145, 250, 
    211,   9,  77,  40,  86, 221, 
    119,  57,  33, 238,  82, 222, 
    201,  53, 239, 165, 132, 240, 
    117, 112, 225, 153,  76,   8, 
    175, 130,  40, 113,  97, 201, 
    209, 202,  15, 185, 191, 249, 
    252, 152, 177, 182, 205, 186, 
     13,  53,  65,  81,  49,  84, 
    239, 209, 176,  24, 162, 190, 
    102, 168, 158, 129, 176, 240, 
    159, 138, 104,  39,  40, 215, 
     13, 213, 119,  50,  34,  74, 
    180, 238, 153, 152, 198, 104, 
     76, 197, 252, 225, 136, 240, 
    157, 142,   9, 255,  68,  92, 
     83, 105, 172,   3, 247,  29, 
    143,   8, 111,  58,  38, 124, 
    227, 113, 225, 161,  49, 142, 
    177,  84,  76, 120, 207, 199, 
    133, 160, 188,  19, 249, 217, 
    184,   8,  82,  95,  24, 106, 
    136,  98, 192,  80, 195,  20, 
    131, 134,  26, 165, 216, 101, 
    168, 140,  61, 169, 245,  80, 
    161,   0, 157, 180, 145, 125, 
    144,  78, 217, 156, 156, 206, 
    103,   9,  39,  15,  66, 194, 
    201,  73,   7,  44,  40,  85, 
     81,  22, 226, 145,  29, 105, 
     62, 198, 153, 182, 123,  74, 
    217, 226, 157, 125, 125, 195, 
    142, 116, 206, 229, 135, 233, 
    165,   0,  27, 127,  47,  62, 
    125, 180, 199,  63, 216, 145, 
    214, 160, 179, 231, 239,  51, 
     47, 190,  93, 176, 207, 187, 
    183, 237, 107,  55,  33, 221, 
    159,  59, 103, 222, 202, 228, 
     51,  15, 139, 201, 210, 106, 
     97, 117,  41,  89,  44,  21, 
    178, 153, 229,  81, 115,  33, 
    123, 223, 204, 150,  75, 217, 
    194,  74,  38, 111, 222, 206, 
    149, 199, 204, 153, 194, 188, 
    121,  35, 187, 178, 144,  45, 
    152,  83, 233, 169,  84, 217, 
    156,  89, 204,  32,  41, 154, 
    115,  23,  51, 165, 249, 197, 
    217, 108, 121, 118, 186, 217, 
     36, 115, 249,  84,  42, 185, 
    152,  47, 230, 177, 126, 139, 
     57, 251, 233, 116, 186,  78, 
     39, 218, 203, 153,  59,  43, 
    236,  23, 207, 193, 179, 160, 
      0,   0,  53,  16,   0,   0, 
    198,   0,   0,   0,  21,   0, 
      1,   0,   0,  79,  23,   0, 
    120,   1, 237, 152,  75,  79, 
     19,  81,  20, 199, 239,  60, 
    184, 116, 166, 151,  41, 106, 
    169, 109,  17, 161,  26,  34, 
    137,  90,  91, 170, 241,  21, 
     66,  81,  16,  89, 145,   8, 
     49,  46,  38,  38,  35, 180, 
     98,  40,  15, 219, 106, 170, 
    139,  58, 168,  43, 211,  68, 
     23, 126,   3,  19,  87,  46, 
     93,  83,  62,   0,  36, 134, 
     24, 116, 203, 154, 141, 209, 
    173,  73, 253, 159, 118,  70, 
      8, 145, 181, 198, 220,  95, 
    242,  63, 167, 231,  62, 207, 
    189, 103, 186, 185, 147,  71, 
     89, 147, 237, 173, 109, 135, 
    252, 240, 194, 147,  79, 125, 
     42,  99, 109,  20, 236,  97, 
     57,  76, 150, 177,  84, 132, 
     44,  99,  81,  50,  10, 132, 
    177, 253, 112,   2, 114,  17, 
    103, 225, 169, 111, 192,  83, 
    139, 236,  90,  13,  54,   0, 
    157, 129, 222,  99, 206,   4, 
    252,  32, 116,   4, 162, 113, 
    135,  32, 130, 147,   1, 190, 
    167,  57, 132, 239, 125,  12, 
    136, 246, 105, 135, 124,  40, 
     29, 130, 114, 209, 160, 223, 
     36, 200, 252, 153,  49, 136, 
    242,  63,   8, 202, 141, 114, 
    241, 243, 241, 243, 164,  61, 
    254,  53, 232, 252, 126, 157, 
      8, 170, 199,  94,  44, 200, 
    191, 151, 111,  93, 100, 119, 
    239, 172, 207, 171, 171,  95, 
    203,  53, 232,  32,  26,  64, 
    167,  31, 123, 240,  99, 148, 
     22, 119,  53, 153, 226, 202, 
    235,  20,  71, 192, 177,  33, 
     71,  39, 199,   7, 197, 113, 
    137,  28,   5, 227,  40,  38, 
     71,   1, 185,   9,   5,  33, 
    108, 200,  59,  32,  36, 200, 
     67,  80,  39, 132, 139, 230, 
    135,  33, 124,  32,  28, 103, 
    226, 200, 151,  35,  71, 142, 
    239, 149, 163, 240,  60,   6, 
    197, 161, 110, 232,  24, 212, 
      3,  29, 135, 122, 189,  51, 
    170, 148,   9,  98,  50, 128, 
     43, 251,  46, 227,  63, 135, 
    238,  96, 239, 127, 198, 175, 
     15, 221,   2, 213, 151,  72, 
    145, 145,  72,  36,  18, 137, 
     68,  34, 145,  72,  36,  18, 
    137,  68,  34, 249,  75, 168, 
    137, 231, 171,  76, 123, 185, 
    214,  80,  89, 117, 103, 164, 
     62, 218, 208, 220, 213, 141, 
    245, 245, 161, 134, 182,   2, 
     95,  27,  94,  14, 213, 234, 
     42, 115,  55, 185, 162,  50, 
    173, 233,  57,  83,  67, 122, 
     85,  11, 241, 234,  51,  86, 
    171, 179, 190,  31,  59, 170, 
     80,  93, 242,  90, 167, 234, 
    210, 252, 124, 158, 103, 105, 
    126,  62, 127,  35, 187, 127, 
     46, 245, 103,  50,  47, 154, 
    253, 153, 204, 187, 108, 216, 
    235, 103,  94,  63, 173, 205, 
     66, 172, 218,  92, 183, 171, 
    181,  46,  75, 168,  46, 237, 
     23,  14,  13,  52, 219, 181, 
     88, 171,  61, 220, 163, 186, 
    143, 144,  95, 176, 151,  89, 
    101, 242, 167, 116, 203, 236, 
     97, 194, 236, 215, 133, 209, 
    205, 132, 113,  82,  23,  13, 
    237, 231,  42, 189, 198,   4, 
     98,  76,   4,  18, 186,  80, 
    216, 214, 166, 226,  32,  54, 
     46, 125,  85, 152, 202,  74, 
     52,  47, 205, 173, 135, 228, 
     47,  71,  45,  23, 247, 240, 
     93, 213, 171, 116, 238, 224, 
     72, 220,  50, 207, 113,  97, 
     94, 140, 138, 224,  68, 196, 
     50, 131, 173,  57, 198,  89, 
     46, 140,  11,  81,  97,  14, 
    199, 133,  57,  30,  17,  76, 
     65, 187, 222, 198,   2, 167, 
    185,   8, 100, 162, 194,  24, 
    138,  11,  99,  44,  34,  84, 
     13, 237, 188, 157,   5, 174, 
    198,  69, 224, 122,  68, 232, 
    109, 136,  53, 193, 120,  59, 
    124,  71,  16, 103,  94, 169, 
    123, 207, 131,  88, 181, 165, 
     24,  68, 111,  71, 126, 220, 
      9,  17, 126,  76, 242, 209, 
     49, 244, 142, 247, 158, 120, 
    211, 243,  52, 158, 222, 160, 
    172, 230,  42, 187,  84, 188, 
    254, 101, 207, 211, 155,  21, 
    101, 144, 153, 239,  96,  67, 
     31, 197, 198,  91, 175, 253, 
    141, 231, 105,  13,  19, 250, 
     50, 245, 234, 179, 233, 189, 
     93, 127, 240, 250, 238,  66, 
     52,  63, 127, 197, 190, 231, 
     20, 156, 167, 165, 100, 121, 
    169, 184,  52, 159,  44, 149, 
    139,  57, 103,  97, 208, 158, 
    205,  61, 182, 115, 149, 114, 
    174, 184, 232,  20, 236, 251, 
    249, 202, 121, 123, 170,  56, 
     99, 223, 202,  45, 206, 230, 
    138, 246, 104, 102,  52,  93, 
    177, 167, 230,  28,   4,  37, 
    251, 246,  53, 167,  60,  51, 
     55, 157, 171,  76, 143,  55, 
     77,  50,  95,  72, 167, 147, 
    115, 133,  82,   1, 235, 183, 
     56, 225, 237,  78,  47, 229, 
    244,  10, 189, 224,  60,  88, 
    100, 191,   0,  51,  51, 163, 
    115,   0,  83,  84,  65,  84, 
    148,   0,   0,   0,  13,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   6,   0, 
      0,   0,   8,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0
};
