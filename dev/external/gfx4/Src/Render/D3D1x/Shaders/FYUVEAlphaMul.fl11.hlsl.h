#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler_tex[0]                    sampler      NA          NA    0        1
// sampler_tex[1]                    sampler      NA          NA    1        1
// sampler_tex[2]                    sampler      NA          NA    2        1
// tex[0]                            texture  float4          2d    0        1
// tex[1]                            texture  float4          2d    1        1
// tex[2]                            texture  float4          2d    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float      w
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[141]
// Embedded Data:
//  0x0000008d - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x00000088 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v0.w
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 1
sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t2.xyzw, s2
add r0.x, r0.x, l(-0.501961)
mul r0.xyz, r0.xxxx, l(1.596000, -0.813000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t0.yzwx, s0
add r0.w, r0.w, l(-0.062745)
mad r0.xyz, r0.wwww, l(1.164000, 1.164000, 1.164000, 0.000000), r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t1.yzwx, s1
add r0.w, r0.w, l(-0.501961)
mad r0.xyz, r0.wwww, l(0.000000, -0.392000, 2.017000, 0.000000), r0.xyzx
mul o0.xyz, r0.xyzx, v0.wwww
mov o0.w, v0.w
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[141], bundle is:[175] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\FYUVEAlphaMul.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask  8, param0, paramSlot 0, DefaultVal={0,0,0,0};   [1] generic, usageIdx  1, channelMask  3, param1, paramSlot 1, DefaultVal={0,0,0,0}

codeLenInByte        = 224;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0:1]
extUserElementCount  = 6;
;  extUserElements 1[0] = IMM_RESOURCE, 0, offset 0:7 dwords
;  extUserElements 1[1] = IMM_RESOURCE, 1, offset 8:15 dwords
;  extUserElements 1[2] = IMM_RESOURCE, 2, offset 16:23 dwords
;  extUserElements 1[3] = IMM_SAMPLER, 0, offset 24:27 dwords
;  extUserElements 1[4] = IMM_SAMPLER, 1, offset 28:31 dwords
;  extUserElements 1[5] = IMM_SAMPLER, 2, offset 32:35 dwords
NumVgprs             = 7;
NumSgprs             = 42;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000007
; constBufUsage           = 0x00000000

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000002
SPIC:NUM_INTERP             = 2
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[40:41], exec                          // 000000000000: BEA8047E
  s_wqm_b64     exec, exec                              // 000000000004: BEFE0A7E
  s_mov_b32     m0, s2                                  // 000000000008: BEFC0302
  s_load_dwordx8  s[16:23], s[0:1], 0x00                // 00000000000C: C0C80100
  s_load_dwordx8  s[4:11], s[0:1], 0x10                 // 000000000010: C0C20110
  s_load_dwordx8  s[24:31], s[0:1], 0x18                // 000000000014: C0CC0118
  s_load_dwordx4  s[12:15], s[0:1], 0x20                // 000000000018: C0860120
  v_interp_p1_f32  v2, v0, attr1.x                      // 00000000001C: C8080400
  v_interp_p1_f32  v3, v0, attr1.y                      // 000000000020: C80C0500
  v_interp_p2_f32  v2, v1, attr1.x                      // 000000000024: C8090401
  v_interp_p2_f32  v3, v1, attr1.y                      // 000000000028: C80D0501
  s_waitcnt     lgkmcnt(0)                              // 00000000002C: BF8C007F
  image_sample  v[4:7], v[2:3], s[4:11], s[12:15]       // 000000000030: F0800100 00610402
  image_sample  v[5:8], v[2:3], s[16:23], s[24:27]      // 000000000038: F0800100 00C40502
  s_load_dwordx8  s[32:39], s[0:1], 0x08                // 000000000040: C0D00108
  s_waitcnt     lgkmcnt(0)                              // 000000000044: BF8C007F
  image_sample  v[2:5], v[2:3], s[32:39], s[28:31]      // 000000000048: F0800100 00E80202
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 000000000050: BF8C0F72
  v_add_f32     v3, 0xbf008081, v4                      // 000000000054: 060608FF BF008081
  v_interp_p1_f32  v0, v0, attr0.w                      // 00000000005C: C8000300
  v_mul_legacy_f32  v4, 0xbf5020c5, v3                  // 000000000060: 0E0806FF BF5020C5
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000068: BF8C0F71
  v_add_f32     v5, 0xbd808081, v5                      // 00000000006C: 060A0AFF BD808081
  s_mov_b32     s0, 0x3f94fdf4                          // 000000000074: BE8003FF 3F94FDF4
  v_mul_legacy_f32  v3, 0x3fcc49ba, v3                  // 00000000007C: 0E0606FF 3FCC49BA
  v_interp_p2_f32  v0, v1, attr0.w                      // 000000000084: C8010301
  v_mul_legacy_f32  v6, 0x3f94fdf4, v5                  // 000000000088: 0E0C0AFF 3F94FDF4
  v_mac_legacy_f32  v4, s0, v5                          // 000000000090: 0C080A00
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000094: BF8C0F70
  v_add_f32     v2, 0xbf008081, v2                      // 000000000098: 060404FF BF008081
  s_mov_b32     s1, 0xbec8b439                          // 0000000000A0: BE8103FF BEC8B439
  s_mov_b32     s2, 0x40011687                          // 0000000000A8: BE8203FF 40011687
  v_mac_legacy_f32  v3, s0, v5                          // 0000000000B0: 0C060A00
  v_mac_legacy_f32  v4, s1, v2                          // 0000000000B4: 0C080401
  v_mac_legacy_f32  v6, s2, v2                          // 0000000000B8: 0C0C0402
  v_mul_legacy_f32  v1, v3, v0                          // 0000000000BC: 0E020103
  v_mul_legacy_f32  v2, v4, v0                          // 0000000000C0: 0E040104
  v_mul_legacy_f32  v3, v6, v0                          // 0000000000C4: 0E060106
  s_mov_b64     exec, s[40:41]                          // 0000000000C8: BEFE0428
  v_cvt_pkrtz_f16_f32  v1, v1, v2                       // 0000000000CC: 5E020501
  v_cvt_pkrtz_f16_f32  v0, v3, v0                       // 0000000000D0: 5E000103
  exp           mrt0, v1, v1, v0, v0 compr vm           // 0000000000D4: F800140F 00000001
  s_endpgm                                              // 0000000000DC: BF810000
end


// Approximately 12 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_FYUVEAlphaMul[] =
{
     68,  88,  66,  67, 154,  18, 
     37,  14,  86,  33,  60,  64, 
    222, 238, 175, 242, 233,  55, 
    251, 181,   1,   0,   0,   0, 
    216,   7,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    184,   1,   0,   0,   8,   2, 
      0,   0,  60,   2,   0,   0, 
     60,   7,   0,   0,  82,  68, 
     69,  70, 124,   1,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   6,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    255, 255,   0, 129,   0,   0, 
     62,   1,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
    252,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0,  11,   1,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   1,   0,   0,   0, 
      1,   0,   0,   0,  26,   1, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,   1,   0, 
      0,   0,   1,   0,   0,   0, 
     41,   1,   0,   0,   2,   0, 
      0,   0,   5,   0,   0,   0, 
      4,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
      1,   0,   0,   0,  13,   0, 
      0,   0,  48,   1,   0,   0, 
      2,   0,   0,   0,   5,   0, 
      0,   0,   4,   0,   0,   0, 
    255, 255, 255, 255,   1,   0, 
      0,   0,   1,   0,   0,   0, 
     13,   0,   0,   0,  55,   1, 
      0,   0,   2,   0,   0,   0, 
      5,   0,   0,   0,   4,   0, 
      0,   0, 255, 255, 255, 255, 
      2,   0,   0,   0,   1,   0, 
      0,   0,  13,   0,   0,   0, 
    115,  97, 109, 112, 108, 101, 
    114,  95, 116, 101, 120,  91, 
     48,  93,   0, 115,  97, 109, 
    112, 108, 101, 114,  95, 116, 
    101, 120,  91,  49,  93,   0, 
    115,  97, 109, 112, 108, 101, 
    114,  95, 116, 101, 120,  91, 
     50,  93,   0, 116, 101, 120, 
     91,  48,  93,   0, 116, 101, 
    120,  91,  49,  93,   0, 116, 
    101, 120,  91,  50,  93,   0, 
     77, 105,  99, 114, 111, 115, 
    111, 102, 116,  32,  40,  82, 
     41,  32,  72,  76,  83,  76, 
     32,  83, 104,  97, 100, 101, 
    114,  32,  67, 111, 109, 112, 
    105, 108, 101, 114,  32,  70, 
    111, 114,  32,  68, 117, 114, 
     97, 110, 103, 111,  32,  57, 
     46,  51,  48,  46,  49,  50, 
     48,  57,  56,  46,  48,   0, 
    171, 171,  73,  83,  71,  78, 
     72,   0,   0,   0,   2,   0, 
      0,   0,   8,   0,   0,   0, 
     56,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   8,   0,   0, 
     62,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,   3,   3,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0, 171,  79,  83, 
     71,  78,  44,   0,   0,   0, 
      1,   0,   0,   0,   8,   0, 
      0,   0,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,  83,  86,  95,  84, 
     97, 114, 103, 101, 116,   0, 
    171, 171,  83,  72,  69,  88, 
    248,   4,   0,   0,  80,   0, 
      0,   0,  62,   1,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 141,   0,   0,   0, 
     80,   0,   0,   0, 136,   0, 
      0,   0, 106,   8,   0,   1, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   1,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   2,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  88,  24, 
      0,   4,   0, 112,  16,   0, 
      1,   0,   0,   0,  85,  85, 
      0,   0,  88,  24,   0,   4, 
      0, 112,  16,   0,   2,   0, 
      0,   0,  85,  85,   0,   0, 
     98,  16,   0,   3, 130,  16, 
     16,   0,   0,   0,   0,   0, 
     98,  16,   0,   3,  50,  16, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    104,   0,   0,   2,   1,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0,  18,   0,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   1,   0,   0,   0, 
     70, 126,  16,   0,   2,   0, 
      0,   0,   0,  96,  16,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
      1,  64,   0,   0, 129, 128, 
      0, 191,  56,   0,   0,  10, 
    114,   0,  16,   0,   0,   0, 
      0,   0,   6,   0,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0, 186,  73, 204,  63, 
    197,  32,  80, 191,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     69,   0,   0, 139, 194,   0, 
      0, 128,  67,  85,  21,   0, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,  16,  16,   0, 
      1,   0,   0,   0, 150, 115, 
     16,   0,   0,   0,   0,   0, 
      0,  96,  16,   0,   0,   0, 
      0,   0,   0,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,   1,  64, 
      0,   0, 129, 128, 128, 189, 
     50,   0,   0,  12, 114,   0, 
     16,   0,   0,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
    244, 253, 148,  63, 244, 253, 
    148,  63, 244, 253, 148,  63, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     69,   0,   0, 139, 194,   0, 
      0, 128,  67,  85,  21,   0, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,  16,  16,   0, 
      1,   0,   0,   0, 150, 115, 
     16,   0,   1,   0,   0,   0, 
      0,  96,  16,   0,   1,   0, 
      0,   0,   0,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,   1,  64, 
      0,   0, 129, 128,   0, 191, 
     50,   0,   0,  12, 114,   0, 
     16,   0,   0,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,   0,  57, 180, 
    200, 190, 135,  22,   1,  64, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,  32, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0, 246,  31,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   5, 130,  32,  16,   0, 
      0,   0,   0,   0,  58,  16, 
     16,   0,   0,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 177,   0,   0,   0, 
     21,   0,   1,   0,  41, 228, 
     10,   0, 120,   1, 237,  86, 
     63, 104, 212,  80,  24, 127, 
     47, 201, 197,  52, 141, 185, 
    195, 127,  84, 233, 112, 131, 
     98,  81,  57, 168, 117, 169, 
     75,  79, 104,  69,   7,  65, 
     44, 138, 214,  80, 154, 179, 
    169,  39, 166, 215, 122,  87, 
    229, 112, 184, 222,  57, 216, 
    165, 131, 131, 155, 131, 171, 
    224,  42,   8, 130,  73,  16, 
    133,  12,  29,  92, 220, 111, 
    112, 208,  69,  59,  56,  56, 
    104, 227, 247,  75, 242, 218, 
     32, 117,  59,  80, 176,  63, 
    248, 125, 223, 251, 125, 121, 
    249, 222, 151, 188, 144, 239, 
    125, 212,  89, 140, 175, 133, 
    231,  54, 124, 191, 246, 100, 
    185,  40,  49, 150, 163,  49, 
     39, 194,   3,  77,  13, 150, 
    177, 176,  15, 150, 177,  33, 
     24,  76, 160, 185, 187, 200, 
     29,  35, 118, 137, 101,  34, 
    174,   9,  38,  40,   7,  29, 
    178,  69,  34, 210, 148, 232, 
    158, 115, 228, 143,  18,  21, 
    226, 126, 226,  30,  34, 210, 
      1,  50,  76,  10,  21, 134, 
    128,  53, 126,  71,  30,  38, 
      5, 230, 137,  90, 145, 147, 
    150, 216, 194,  17, 152, 237, 
    113, 156, 184,  93, 110,   1, 
    212,  38, 234,  65, 125, 168, 
     19, 192, 243, 254, 109,  36, 
    239,  43, 169,  78,  60, 131, 
    216,  39,   0, 251, 145, 133, 
     73,  76, 238,  97, 236, 106, 
    186, 143, 226, 253,  86,  83, 
    141,  60, 120, 182, 128, 248, 
     39,  68, 132, 195,  24, 100, 
     32,  52, 222, 187,  26, 239, 
     50, 121, 190,  55, 222, 243, 
    255,  13, 248, 254,   0, 188, 
     11, 176,  64, 204, 126, 171, 
    184,  62,  66, 100, 172, 237, 
    131, 143,   6, 216, 119,  40, 
    161,  57, 233, 100, 159,  18, 
     45,  67,  35,  81,  86, 147, 
    226,  57, 105,  90, 230, 108, 
     58,  63, 184, 169,  45, 210, 
     86,  70,  79, 145, 158, 202, 
    232,  25, 210,  51,  25,  93, 
     33,  93,  17,  90, 228, 207, 
    199, 235, 201, 241,  62,  83, 
    176, 245,  47, 115, 167, 198, 
    222, 112, 167, 198, 222, 112, 
    167, 198, 158,  49,  70,  75, 
    121, 230, 181, 244,  13,  79, 
    146, 127, 120, 140, 135,  65, 
    129, 191,   9,   6, 248,  90, 
     80, 228,  15,   3, 166, 104, 
     33, 203,  25,  33,  87, 250, 
     66, 158, 219,  29,  46, 179, 
     85, 159, 241, 246, 186, 164, 
    208,  81,   6,  62, 247, 150, 
    105, 252, 125, 176,  25, 151, 
     62, 177, 122, 126, 213, 143, 
     52,  85, 237, 180, 153,  79, 
    173,  51, 140,  84, 205, 124, 
     87, 188, 232, 223,  65,  92, 
    215,  41, 222, 126,  29, 201, 
    109, 239, 219, 207, 199,  99, 
    145, 170, 154, 175, 206, 175, 
    141, 113, 153, 135, 145, 110, 
    152, 136,  49,  93,  51,  22, 
     49,  87,  81, 226,  28, 145, 
    220, 241,  70,  95, 132,  94, 
     36,  63, 240,  86,  14, 240, 
     50, 211,  85, 131,  43, 154, 
     33,  41, 134,  33, 115, 201, 
     84, 184,  98, 170,  92,  53, 
    135, 148,  13, 143, 254, 183, 
    201, 255, 122, 159, 248, 223, 
    118, 252, 131, 100, 147, 113, 
    210,  43, 178, 160,  46,  26, 
     95, 130,  65,  71,  21,  26, 
    243, 208,  83, 160, 227,   0, 
     97, 128,  72, 125,  37, 214, 
    224,  32,  81, 104, 204,  71, 
     31, 134,  94,  79, 251, 124, 
     55, 245, 200,  67, 113,  58, 
     27,  96, 230,  22,  10, 233, 
    185,  80,  19, 158, 216,  79, 
     92,  25, 253, 252, 165, 175, 
     61, 105, 159,  72, 227,  67, 
    169,  71,  14,  12, 187,  19, 
    135,  62,  60,  77,  99, 227, 
    169, 191,  78, 196, 253, 115, 
    167, 173, 138, 237, 218, 247, 
     27, 165, 165, 133, 250, 194, 
    237,  82,  99, 169, 238, 216, 
    243,  39, 173,  89, 231, 158, 
    229,  52, 151, 156, 122, 205, 
    118, 173, 155, 115, 205,  83, 
    214, 100, 253, 134, 117, 201, 
    169, 205,  58, 117, 107, 124, 
    100, 124, 184, 105,  77,  86, 
    109,  18,  13, 235, 236, 181, 
    203,  87,  38, 206, 184, 139, 
     85, 251, 194,  93, 183,  52, 
    231,  14,  15, 151, 170, 110, 
    195, 165, 228,   9,  94, 166, 
     75, 226,  40, 136, 163, 204, 
    188, 125, 171, 198, 126,   1, 
     53,  35,  75,  39,  83,  84, 
     65,  84, 148,   0,   0,   0, 
     12,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   7,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0
};
