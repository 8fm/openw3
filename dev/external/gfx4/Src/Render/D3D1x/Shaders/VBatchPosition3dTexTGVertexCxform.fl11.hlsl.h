#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4x4 vfmuniforms[24];          // Offset:    0 Size:  1536
//   float4 vfuniforms[96];             // Offset: 1536 Size:  1536
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// SV_Position              0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xy          4     NONE   float   xy  
// SV_Position              0   xyzw        5      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[169]
// Embedded Data:
//  0x000000a9 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000a4 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[192], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_output_siv o5.xyzw, position
dcl_temps 1
mov o0.xyzw, v0.xyzw
mov o1.xyzw, v1.xyzw
mad r0.xyzw, v1.zzzz, l(255.009995, 1020.039978, 1020.039978, 1020.039978), l(0.100000, 2.100000, 3.100000, 0.100000)
ftou r0.xyzw, r0.xyzw
mov o2.xyzw, cb0[r0.w + 96].xyzw
mad r0.w, v1.z, l(1020.039978), l(1.100000)
ftou r0.w, r0.w
mov o3.xyzw, cb0[r0.w + 96].xyzw
dp4 o4.x, v2.xyzw, cb0[r0.y + 96].xyzw
dp4 o4.y, v2.xyzw, cb0[r0.z + 96].xyzw
ishl r0.x, r0.x, l(2)
dp4 o5.x, v2.xyzw, cb0[r0.x + 0].xyzw
dp4 o5.y, v2.xyzw, cb0[r0.x + 1].xyzw
dp4 o5.z, v2.xyzw, cb0[r0.x + 2].xyzw
dp4 o5.w, v2.xyzw, cb0[r0.x + 3].xyzw
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[169], bundle is:[212] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBatchPosition3dTexTGVertexCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [2] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [3] generic, usageIdx  3, paramIdx 3, paramSlot 0
;   [4] generic, usageIdx  4, paramIdx 4, paramSlot 0

codeLenInByte        = 408;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 44;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000008
SVOC:VS_EXPORT_COUNT        = 4
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  v_mov_b32     v0, 0x3dcccccd                          // 000000000004: 7E0002FF 3DCCCCCD
  s_mov_b32     s0, 0x437f028f                          // 00000000000C: BE8003FF 437F028F
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000014: BF8C0F70
  v_mad_legacy_f32  v1, v10, s0, v0                     // 000000000018: D2800001 0400010A
  v_cvt_u32_f32  v1, v1                                 // 000000000020: 7E020F01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000024: C0840300
  v_lshlrev_b32  v1, 2, v1                              // 000000000028: 34020282
  v_add_i32     v16, vcc, 1, v1                         // 00000000002C: 4A200281
  v_add_i32     v17, vcc, 2, v1                         // 000000000030: 4A220282
  v_add_i32     v18, vcc, 3, v1                         // 000000000034: 4A240283
  s_waitcnt     lgkmcnt(0)                              // 000000000038: BF8C007F
  tbuffer_load_format_xyzw  v[20:23], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000003C: EBF32000 80021401
  tbuffer_load_format_xyzw  v[24:27], v16, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000044: EBF32000 80021810
  tbuffer_load_format_xyzw  v[28:31], v17, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000004C: EBF32000 80021C11
  tbuffer_load_format_xyzw  v[32:35], v18, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000054: EBF32000 80022012
  v_mov_b32     v2, 0x40066666                          // 00000000005C: 7E0402FF 40066666
  s_mov_b32     s0, 0x447f028f                          // 000000000064: BE8003FF 447F028F
  v_mov_b32     v3, 0x40466666                          // 00000000006C: 7E0602FF 40466666
  v_mac_legacy_f32  v2, s0, v10                         // 000000000074: 0C041400
  v_mac_legacy_f32  v3, s0, v10                         // 000000000078: 0C061400
  v_cvt_u32_f32  v2, v2                                 // 00000000007C: 7E040F02
  v_cvt_u32_f32  v3, v3                                 // 000000000080: 7E060F03
  v_add_i32     v2, vcc, 0x00000060, v2                 // 000000000084: 4A0404FF 00000060
  v_mac_legacy_f32  v0, s0, v10                         // 00000000008C: 0C001400
  v_add_i32     v3, vcc, 0x00000060, v3                 // 000000000090: 4A0606FF 00000060
  v_cvt_u32_f32  v0, v0                                 // 000000000098: 7E000F00
  v_mov_b32     v19, 0x3f8ccccd                         // 00000000009C: 7E2602FF 3F8CCCCD
  v_add_i32     v0, vcc, 0x00000060, v0                 // 0000000000A4: 4A0000FF 00000060
  v_mac_legacy_f32  v19, s0, v10                        // 0000000000AC: 0C261400
  v_cvt_u32_f32  v1, v19                                // 0000000000B0: 7E020F13
  tbuffer_load_format_xyzw  v[36:39], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B4: EBF32000 80022402
  tbuffer_load_format_xyzw  v[40:43], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000BC: EBF32000 80022803
  tbuffer_load_format_xyzw  v[16:19], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C4: EBF32000 80021000
  v_add_i32     v1, vcc, 0x00000060, v1                 // 0000000000CC: 4A0202FF 00000060
  tbuffer_load_format_xyzw  v[0:3], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D4: EBF32000 80020001
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 0000000000DC: BF8C0F77
  v_mul_legacy_f32  v23, v15, v23                       // 0000000000E0: 0E2E2F0F
  v_mac_legacy_f32  v23, v14, v22                       // 0000000000E4: 0C2E2D0E
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 0000000000E8: BF8C0F76
  v_mul_legacy_f32  v27, v15, v27                       // 0000000000EC: 0E36370F
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000F0: BF8C0F75
  v_mul_legacy_f32  v31, v15, v31                       // 0000000000F4: 0E3E3F0F
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000F8: BF8C0F74
  v_mul_legacy_f32  v35, v15, v35                       // 0000000000FC: 0E46470F
  s_waitcnt     vmcnt(3) & lgkmcnt(15)                  // 000000000100: BF8C0F73
  v_mul_legacy_f32  v22, v15, v39                       // 000000000104: 0E2C4F0F
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 000000000108: BF8C0F72
  v_mul_legacy_f32  v15, v15, v43                       // 00000000010C: 0E1E570F
  v_mac_legacy_f32  v27, v14, v26                       // 000000000110: 0C36350E
  v_mac_legacy_f32  v31, v14, v30                       // 000000000114: 0C3E3D0E
  v_mac_legacy_f32  v35, v14, v34                       // 000000000118: 0C46450E
  v_mac_legacy_f32  v22, v14, v38                       // 00000000011C: 0C2C4D0E
  v_mac_legacy_f32  v15, v14, v42                       // 000000000120: 0C1E550E
  v_mac_legacy_f32  v23, v13, v21                       // 000000000124: 0C2E2B0D
  v_mac_legacy_f32  v27, v13, v25                       // 000000000128: 0C36330D
  v_mac_legacy_f32  v31, v13, v29                       // 00000000012C: 0C3E3B0D
  v_mac_legacy_f32  v35, v13, v33                       // 000000000130: 0C46430D
  v_mac_legacy_f32  v22, v13, v37                       // 000000000134: 0C2C4B0D
  v_mac_legacy_f32  v15, v13, v41                       // 000000000138: 0C1E530D
  v_mac_legacy_f32  v23, v12, v20                       // 00000000013C: 0C2E290C
  v_mac_legacy_f32  v27, v12, v24                       // 000000000140: 0C36310C
  v_mac_legacy_f32  v31, v12, v28                       // 000000000144: 0C3E390C
  v_mac_legacy_f32  v35, v12, v32                       // 000000000148: 0C46410C
  v_mac_legacy_f32  v22, v12, v36                       // 00000000014C: 0C2C490C
  v_mac_legacy_f32  v15, v12, v40                       // 000000000150: 0C1E510C
  v_mov_b32     v12, 0                                  // 000000000154: 7E180280
  v_mov_b32     v13, 1.0                                // 000000000158: 7E1A02F2
  exp           pos0, v23, v27, v31, v35 done           // 00000000015C: F80008CF 231F1B17
  exp           param0, v4, v5, v6, v7                  // 000000000164: F800020F 07060504
  exp           param1, v8, v9, v10, v11                // 00000000016C: F800021F 0B0A0908
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000174: BF8C0F71
  exp           param2, v16, v17, v18, v19              // 000000000178: F800022F 13121110
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000180: BF8C0F70
  exp           param3, v0, v1, v2, v3                  // 000000000184: F800023F 03020100
  exp           param4, v22, v15, v12, v13              // 00000000018C: F800024F 0D0C0F16
  s_endpgm                                              // 000000000194: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[383], bundle is:[228] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBatchPosition3dTexTGVertexCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] position, usageIdx  5, paramIdx 5, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [4] generic, usageIdx  3, paramIdx 3, paramSlot 0
;   [5] generic, usageIdx  4, paramIdx 4, paramSlot 0

codeLenInByte        = 528;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 44;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 24
; esGsRingItemSize          = 24

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  v_mov_b32     v0, 0x3dcccccd                          // 000000000004: 7E0002FF 3DCCCCCD
  s_mov_b32     s0, 0x437f028f                          // 00000000000C: BE8003FF 437F028F
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000014: C0840300
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000018: BF8C0F70
  v_mad_legacy_f32  v1, v10, s0, v0                     // 00000000001C: D2800001 0400010A
  v_cvt_u32_f32  v1, v1                                 // 000000000024: 7E020F01
  v_lshlrev_b32  v1, 2, v1                              // 000000000028: 34020282
  s_waitcnt     lgkmcnt(0)                              // 00000000002C: BF8C007F
  tbuffer_load_format_xyzw  v[16:19], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000030: EBF32000 80021001
  v_add_i32     v2, vcc, 1, v1                          // 000000000038: 4A040281
  v_add_i32     v3, vcc, 2, v1                          // 00000000003C: 4A060282
  v_add_i32     v1, vcc, 3, v1                          // 000000000040: 4A020283
  tbuffer_load_format_xyzw  v[28:31], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000044: EBF32000 80021C01
  tbuffer_load_format_xyzw  v[20:23], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000004C: EBF32000 80021402
  s_mov_b32     s0, 0x447f028f                          // 000000000054: BE8003FF 447F028F
  v_mac_legacy_f32  v0, s0, v10                         // 00000000005C: 0C001400
  v_cvt_u32_f32  v0, v0                                 // 000000000060: 7E000F00
  v_mov_b32     v1, 0x40066666                          // 000000000064: 7E0202FF 40066666
  v_add_i32     v0, vcc, 0x00000060, v0                 // 00000000006C: 4A0000FF 00000060
  tbuffer_load_format_xyzw  v[24:27], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000074: EBF32000 80021803
  v_mac_legacy_f32  v1, s0, v10                         // 00000000007C: 0C021400
  v_mov_b32     v2, 0x40466666                          // 000000000080: 7E0402FF 40466666
  v_mac_legacy_f32  v2, s0, v10                         // 000000000088: 0C041400
  v_cvt_u32_f32  v1, v1                                 // 00000000008C: 7E020F01
  tbuffer_load_format_xyzw  v[32:35], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000090: EBF32000 80022000
  v_cvt_u32_f32  v2, v2                                 // 000000000098: 7E040F02
  v_add_i32     v1, vcc, 0x00000060, v1                 // 00000000009C: 4A0202FF 00000060
  v_add_i32     v2, vcc, 0x00000060, v2                 // 0000000000A4: 4A0404FF 00000060
  tbuffer_load_format_xyzw  v[36:39], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80022401
  tbuffer_load_format_xyzw  v[40:43], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B4: EBF32000 80022802
  v_mov_b32     v3, 0x3f8ccccd                          // 0000000000BC: 7E0602FF 3F8CCCCD
  v_mac_legacy_f32  v3, s0, v10                         // 0000000000C4: 0C061400
  v_cvt_u32_f32  v0, v3                                 // 0000000000C8: 7E000F03
  v_add_i32     v0, vcc, 0x00000060, v0                 // 0000000000CC: 4A0000FF 00000060
  tbuffer_load_format_xyzw  v[0:3], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D4: EBF32000 80020000
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 0000000000DC: BF8C0F77
  v_mul_legacy_f32  v19, v15, v19                       // 0000000000E0: 0E26270F
  v_mac_legacy_f32  v19, v14, v18                       // 0000000000E4: 0C26250E
  s_load_dwordx4  s[8:11], s[2:3], 0x0c                 // 0000000000E8: C084030C
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000EC: BF8C0F75
  v_mul_legacy_f32  v18, v15, v23                       // 0000000000F0: 0E242F0F
  v_mac_legacy_f32  v19, v13, v17                       // 0000000000F4: 0C26230D
  v_mac_legacy_f32  v18, v14, v22                       // 0000000000F8: 0C242D0E
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000FC: BF8C0F74
  v_mul_legacy_f32  v17, v15, v27                       // 000000000100: 0E22370F
  v_mac_legacy_f32  v19, v12, v16                       // 000000000104: 0C26210C
  v_mac_legacy_f32  v18, v13, v21                       // 000000000108: 0C242B0D
  v_mac_legacy_f32  v17, v14, v26                       // 00000000010C: 0C22350E
  v_mul_legacy_f32  v16, v15, v31                       // 000000000110: 0E203F0F
  v_mac_legacy_f32  v18, v12, v20                       // 000000000114: 0C24290C
  v_mac_legacy_f32  v17, v13, v25                       // 000000000118: 0C22330D
  v_mac_legacy_f32  v16, v14, v30                       // 00000000011C: 0C203D0E
  v_mac_legacy_f32  v17, v12, v24                       // 000000000120: 0C22310C
  v_mac_legacy_f32  v16, v13, v29                       // 000000000124: 0C203B0D
  v_mac_legacy_f32  v16, v12, v28                       // 000000000128: 0C20390C
  s_waitcnt     lgkmcnt(0)                              // 00000000012C: BF8C007F
  buffer_store_dword  v19, v0, s[8:11], s4 offset:80 glc slc // 000000000130: E0704050 04421300
  buffer_store_dword  v18, v0, s[8:11], s4 offset:84 glc slc // 000000000138: E0704054 04421200
  buffer_store_dword  v17, v0, s[8:11], s4 offset:88 glc slc // 000000000140: E0704058 04421100
  buffer_store_dword  v16, v0, s[8:11], s4 offset:92 glc slc // 000000000148: E070405C 04421000
  buffer_store_dword  v4, v0, s[8:11], s4 glc slc       // 000000000150: E0704000 04420400
  buffer_store_dword  v5, v0, s[8:11], s4 offset:4 glc slc // 000000000158: E0704004 04420500
  buffer_store_dword  v6, v0, s[8:11], s4 offset:8 glc slc // 000000000160: E0704008 04420600
  buffer_store_dword  v7, v0, s[8:11], s4 offset:12 glc slc // 000000000168: E070400C 04420700
  buffer_store_dword  v8, v0, s[8:11], s4 offset:16 glc slc // 000000000170: E0704010 04420800
  buffer_store_dword  v9, v0, s[8:11], s4 offset:20 glc slc // 000000000178: E0704014 04420900
  buffer_store_dword  v10, v0, s[8:11], s4 offset:24 glc slc // 000000000180: E0704018 04420A00
  buffer_store_dword  v11, v0, s[8:11], s4 offset:28 glc slc // 000000000188: E070401C 04420B00
  s_waitcnt     lgkmcnt(15)                             // 000000000190: BF8C0F7F
  buffer_store_dword  v32, v0, s[8:11], s4 offset:32 glc slc // 000000000194: E0704020 04422000
  buffer_store_dword  v33, v0, s[8:11], s4 offset:36 glc slc // 00000000019C: E0704024 04422100
  s_waitcnt     lgkmcnt(15)                             // 0000000001A4: BF8C0F7F
  v_mul_legacy_f32  v4, v15, v39                        // 0000000001A8: 0E084F0F
  buffer_store_dword  v34, v0, s[8:11], s4 offset:40 glc slc // 0000000001AC: E0704028 04422200
  v_mac_legacy_f32  v4, v14, v38                        // 0000000001B4: 0C084D0E
  v_mul_legacy_f32  v5, v15, v43                        // 0000000001B8: 0E0A570F
  buffer_store_dword  v35, v0, s[8:11], s4 offset:44 glc slc // 0000000001BC: E070402C 04422300
  v_mac_legacy_f32  v4, v13, v37                        // 0000000001C4: 0C084B0D
  v_mac_legacy_f32  v5, v14, v42                        // 0000000001C8: 0C0A550E
  s_waitcnt     lgkmcnt(15)                             // 0000000001CC: BF8C0F7F
  buffer_store_dword  v0, v0, s[8:11], s4 offset:48 glc slc // 0000000001D0: E0704030 04420000
  v_mac_legacy_f32  v4, v12, v36                        // 0000000001D8: 0C08490C
  v_mac_legacy_f32  v5, v13, v41                        // 0000000001DC: 0C0A530D
  buffer_store_dword  v1, v0, s[8:11], s4 offset:52 glc slc // 0000000001E0: E0704034 04420100
  v_mac_legacy_f32  v5, v12, v40                        // 0000000001E8: 0C0A510C
  buffer_store_dword  v2, v0, s[8:11], s4 offset:56 glc slc // 0000000001EC: E0704038 04420200
  buffer_store_dword  v3, v0, s[8:11], s4 offset:60 glc slc // 0000000001F4: E070403C 04420300
  buffer_store_dword  v4, v0, s[8:11], s4 offset:64 glc slc // 0000000001FC: E0704040 04420400
  buffer_store_dword  v5, v0, s[8:11], s4 offset:68 glc slc // 000000000204: E0704044 04420500
  s_endpgm                                              // 00000000020C: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[613], bundle is:[221] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBatchPosition3dTexTGVertexCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask 15, v[8:11]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] position, usageIdx  5, paramIdx 5, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0
;   [4] generic, usageIdx  3, paramIdx 3, paramSlot 0
;   [5] generic, usageIdx  4, paramIdx 4, paramSlot 0

codeLenInByte        = 452;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 50;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 24
; lsStride                  = 96

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  v_mov_b32     v0, 0x3dcccccd                          // 000000000004: 7E0002FF 3DCCCCCD
  s_mov_b32     s0, 0x437f028f                          // 00000000000C: BE8003FF 437F028F
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000014: C0840300
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000018: BF8C0F70
  v_mad_legacy_f32  v2, v10, s0, v0                     // 00000000001C: D2800002 0400010A
  v_cvt_u32_f32  v2, v2                                 // 000000000024: 7E040F02
  v_lshlrev_b32  v2, 2, v2                              // 000000000028: 34040482
  v_add_i32     v3, vcc, 1, v2                          // 00000000002C: 4A060481
  v_add_i32     v16, vcc, 2, v2                         // 000000000030: 4A200482
  s_waitcnt     lgkmcnt(0)                              // 000000000034: BF8C007F
  tbuffer_load_format_xyzw  v[18:21], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000038: EBF32000 80021202
  tbuffer_load_format_xyzw  v[22:25], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 80021603
  tbuffer_load_format_xyzw  v[26:29], v16, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000048: EBF32000 80021A10
  v_add_i32     v17, vcc, 3, v2                         // 000000000050: 4A220483
  s_mov_b32     s0, 0x447f028f                          // 000000000054: BE8003FF 447F028F
  v_mov_b32     v2, 0x40066666                          // 00000000005C: 7E0402FF 40066666
  v_mac_legacy_f32  v0, s0, v10                         // 000000000064: 0C001400
  v_mov_b32     v3, 0x40466666                          // 000000000068: 7E0602FF 40466666
  v_mac_legacy_f32  v2, s0, v10                         // 000000000070: 0C041400
  v_cvt_u32_f32  v0, v0                                 // 000000000074: 7E000F00
  v_mac_legacy_f32  v3, s0, v10                         // 000000000078: 0C061400
  v_cvt_u32_f32  v2, v2                                 // 00000000007C: 7E040F02
  v_mov_b32     v16, 0x3f8ccccd                         // 000000000080: 7E2002FF 3F8CCCCD
  v_add_i32     v0, vcc, 0x00000060, v0                 // 000000000088: 4A0000FF 00000060
  v_cvt_u32_f32  v3, v3                                 // 000000000090: 7E060F03
  v_mac_legacy_f32  v16, s0, v10                        // 000000000094: 0C201400
  v_add_i32     v2, vcc, 0x00000060, v2                 // 000000000098: 4A0404FF 00000060
  v_add_i32     v3, vcc, 0x00000060, v3                 // 0000000000A0: 4A0606FF 00000060
  v_cvt_u32_f32  v16, v16                               // 0000000000A8: 7E200F10
  v_add_i32     v16, vcc, 0x00000060, v16               // 0000000000AC: 4A2020FF 00000060
  tbuffer_load_format_xyzw  v[34:37], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000B4: EBF32000 80022200
  tbuffer_load_format_xyzw  v[38:41], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000BC: EBF32000 80022602
  tbuffer_load_format_xyzw  v[30:33], v17, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000C4: EBF32000 80021E11
  tbuffer_load_format_xyzw  v[42:45], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000CC: EBF32000 80022A03
  tbuffer_load_format_xyzw  v[46:49], v16, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000D4: EBF32000 80022E10
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 0000000000DC: BF8C0F77
  v_mul_legacy_f32  v0, v15, v21                        // 0000000000E0: 0E002B0F
  s_waitcnt     vmcnt(6) & lgkmcnt(15)                  // 0000000000E4: BF8C0F76
  v_mul_legacy_f32  v2, v15, v25                        // 0000000000E8: 0E04330F
  v_mac_legacy_f32  v0, v14, v20                        // 0000000000EC: 0C00290E
  v_mac_legacy_f32  v2, v14, v24                        // 0000000000F0: 0C04310E
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000F4: BF8C0F75
  v_mul_legacy_f32  v3, v15, v29                        // 0000000000F8: 0E063B0F
  s_waitcnt     vmcnt(2) & lgkmcnt(15)                  // 0000000000FC: BF8C0F72
  v_mul_legacy_f32  v16, v15, v33                       // 000000000100: 0E20430F
  v_mac_legacy_f32  v0, v13, v19                        // 000000000104: 0C00270D
  v_mac_legacy_f32  v2, v13, v23                        // 000000000108: 0C042F0D
  v_mac_legacy_f32  v3, v14, v28                        // 00000000010C: 0C06390E
  v_mac_legacy_f32  v16, v14, v32                       // 000000000110: 0C20410E
  s_movk_i32    s0, 0x0060                              // 000000000114: B0000060
  s_mov_b32     m0, 0x00010000                          // 000000000118: BEFC03FF 00010000
  v_mac_legacy_f32  v0, v12, v18                        // 000000000120: 0C00250C
  v_mac_legacy_f32  v2, v12, v22                        // 000000000124: 0C042D0C
  v_mac_legacy_f32  v3, v13, v27                        // 000000000128: 0C06370D
  v_mac_legacy_f32  v16, v13, v31                       // 00000000012C: 0C203F0D
  v_mul_lo_i32  v1, v1, s0                              // 000000000130: D2D60001 00000101
  v_mac_legacy_f32  v3, v12, v26                        // 000000000138: 0C06350C
  v_mac_legacy_f32  v16, v12, v30                       // 00000000013C: 0C203D0C
  ds_write2_b32  v1, v0, v2 offset0:20 offset1:21       // 000000000140: D8381514 00020001
  ds_write2_b32  v1, v3, v16 offset0:22 offset1:23      // 000000000148: D8381716 00100301
  ds_write2_b32  v1, v4, v5 offset1:1                   // 000000000150: D8380100 00050401
  ds_write2_b32  v1, v6, v7 offset0:2 offset1:3         // 000000000158: D8380302 00070601
  ds_write2_b32  v1, v8, v9 offset0:4 offset1:5         // 000000000160: D8380504 00090801
  ds_write2_b32  v1, v10, v11 offset0:6 offset1:7       // 000000000168: D8380706 000B0A01
  v_mul_legacy_f32  v0, v15, v41                        // 000000000170: 0E00530F
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000174: BF8C0F71
  v_mul_legacy_f32  v2, v15, v45                        // 000000000178: 0E045B0F
  ds_write2_b32  v1, v34, v35 offset0:8 offset1:9       // 00000000017C: D8380908 00232201
  v_mac_legacy_f32  v0, v14, v40                        // 000000000184: 0C00510E
  v_mac_legacy_f32  v2, v14, v44                        // 000000000188: 0C04590E
  ds_write2_b32  v1, v36, v37 offset0:10 offset1:11     // 00000000018C: D8380B0A 00252401
  v_mac_legacy_f32  v0, v13, v39                        // 000000000194: 0C004F0D
  v_mac_legacy_f32  v2, v13, v43                        // 000000000198: 0C04570D
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 00000000019C: BF8C0F70
  ds_write2_b32  v1, v46, v47 offset0:12 offset1:13     // 0000000001A0: D8380D0C 002F2E01
  v_mac_legacy_f32  v0, v12, v38                        // 0000000001A8: 0C004D0C
  v_mac_legacy_f32  v2, v12, v42                        // 0000000001AC: 0C04550C
  ds_write2_b32  v1, v48, v49 offset0:14 offset1:15     // 0000000001B0: D8380F0E 00313001
  ds_write2_b32  v1, v0, v2 offset0:16 offset1:17       // 0000000001B8: D8381110 00020001
  s_endpgm                                              // 0000000001C0: BF810000
end


// Approximately 16 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VBatchPosition3dTexTGVertexCxform[] =
{
     68,  88,  66,  67, 190,  46, 
    228, 230,  33, 246,  29,  60, 
    115, 188,   4,  53, 169, 185, 
    254,  16,   1,   0,   0,   0, 
    152,  16,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    188,   1,   0,   0,  40,   2, 
      0,   0, 228,   2,   0,   0, 
    252,  15,   0,   0,  82,  68, 
     69,  70, 128,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
     68,   1,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      2,   0,   0,   0, 128,   0, 
      0,   0,   0,  12,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 208,   0,   0,   0, 
      0,   0,   0,   0,   0,   6, 
      0,   0,   2,   0,   0,   0, 
    232,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
     12,   1,   0,   0,   0,   6, 
      0,   0,   0,   6,   0,   0, 
      2,   0,   0,   0,  32,   1, 
      0,   0,   0,   0,   0,   0, 
    255, 255, 255, 255,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 118, 102, 
    109, 117, 110, 105, 102, 111, 
    114, 109, 115,   0, 102, 108, 
    111,  97, 116,  52, 120,  52, 
      0, 171, 171, 171,   3,   0, 
      3,   0,   4,   0,   4,   0, 
     24,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
    220,   0,   0,   0, 118, 102, 
    117, 110, 105, 102, 111, 114, 
    109, 115,   0, 102, 108, 111, 
     97, 116,  52,   0, 171, 171, 
      1,   0,   3,   0,   1,   0, 
      4,   0,  96,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  23,   1,   0,   0, 
     77, 105,  99, 114, 111, 115, 
    111, 102, 116,  32,  40,  82, 
     41,  32,  72,  76,  83,  76, 
     32,  83, 104,  97, 100, 101, 
    114,  32,  67, 111, 109, 112, 
    105, 108, 101, 114,  32,  70, 
    111, 114,  32,  68, 117, 114, 
     97, 110, 103, 111,  32,  57, 
     46,  51,  48,  46,  49,  50, 
     48,  57,  56,  46,  48,   0, 
     73,  83,  71,  78, 100,   0, 
      0,   0,   3,   0,   0,   0, 
      8,   0,   0,   0,  80,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,  15,   0,   0,  80,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,  15,   0,   0,  86,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
     15,  15,   0,   0,  67,  79, 
     76,  79,  82,   0,  83,  86, 
     95,  80, 111, 115, 105, 116, 
    105, 111, 110,   0, 171, 171, 
     79,  83,  71,  78, 180,   0, 
      0,   0,   6,   0,   0,   0, 
      8,   0,   0,   0, 152,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0, 152,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 158,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
     15,   0,   0,   0, 158,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
     15,   0,   0,   0, 158,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   4,   0,   0,   0, 
      3,  12,   0,   0, 167,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   5,   0,   0,   0, 
     15,   0,   0,   0,  67,  79, 
     76,  79,  82,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
     16,  13,   0,   0,  80,   0, 
      1,   0,  68,   3,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 169,   0,   0,   0, 
     80,   0,   1,   0, 164,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   8,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
    192,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      1,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      3,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      4,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      5,   0,   0,   0,   1,   0, 
      0,   0, 104,   0,   0,   2, 
      1,   0,   0,   0,  54,   0, 
      0,   5, 242,  32,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   5, 242,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  50,   0,   0,  15, 
    242,   0,  16,   0,   0,   0, 
      0,   0, 166,  26,  16,   0, 
      1,   0,   0,   0,   2,  64, 
      0,   0, 143,   2, 127,  67, 
    143,   2, 127,  68, 143,   2, 
    127,  68, 143,   2, 127,  68, 
      2,  64,   0,   0, 205, 204, 
    204,  61, 102, 102,   6,  64, 
    102, 102,  70,  64, 205, 204, 
    204,  61,  28,   0,   0,   5, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   8, 242,  32,  16,   0, 
      2,   0,   0,   0,  70, 142, 
     32,   6,   0,   0,   0,   0, 
     96,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,   9, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     42,  16,  16,   0,   1,   0, 
      0,   0,   1,  64,   0,   0, 
    143,   2, 127,  68,   1,  64, 
      0,   0, 205, 204, 140,  63, 
     28,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   8, 
    242,  32,  16,   0,   3,   0, 
      0,   0,  70, 142,  32,   6, 
      0,   0,   0,   0,  96,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,  10,  18,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   2,   0,   0,   0, 
     70, 142,  32,   6,   0,   0, 
      0,   0,  96,   0,   0,   0, 
     26,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,  10, 
     34,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      2,   0,   0,   0,  70, 142, 
     32,   6,   0,   0,   0,   0, 
     96,   0,   0,   0,  42,   0, 
     16,   0,   0,   0,   0,   0, 
     41,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      2,   0,   0,   0,  17,   0, 
      0,   9,  18,  32,  16,   0, 
      5,   0,   0,   0,  70,  30, 
     16,   0,   2,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,  10,  34,  32,  16,   0, 
      5,   0,   0,   0,  70,  30, 
     16,   0,   2,   0,   0,   0, 
     70, 142,  32,   6,   0,   0, 
      0,   0,   1,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  17,   0,   0,  10, 
     66,  32,  16,   0,   5,   0, 
      0,   0,  70,  30,  16,   0, 
      2,   0,   0,   0,  70, 142, 
     32,   6,   0,   0,   0,   0, 
      2,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     17,   0,   0,  10, 130,  32, 
     16,   0,   5,   0,   0,   0, 
     70,  30,  16,   0,   2,   0, 
      0,   0,  70, 142,  32,   6, 
      0,   0,   0,   0,   3,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    214,   0,   0,   0,  21,   0, 
      1,   0,  32, 120,  23,   0, 
    120,   1, 237, 152,  75,  79, 
     19,  81,  24, 134, 207, 156, 
     14, 135, 139, 167,  51,   5, 
     42,  87,  45,  85,   9, 209, 
     88,  43, 136, 162,  96,  40, 
     40,  88,   4,  66,  80, 241, 
    178, 112,  22,  86, 152,  10, 
    177,  80, 108,  43,  52, 196, 
    148, 130,  46,  92, 144,  64, 
     98,  76,  76, 252,   3,  46, 
    220, 248,   3, 184, 196, 232, 
     14,  99, 226,  47, 112, 239, 
    198, 232, 134, 221, 248, 126, 
    204, 140, 193,  68, 247, 106, 
    230,  73, 222, 243, 158, 111, 
    206, 153, 153, 239,  92,  86, 
     95, 190, 150, 237, 178, 158, 
    126, 185,  78,  62,  80, 195, 
    158, 175, 113, 198,  74,  40, 
      0,  42,  53,  96,  54,  72, 
     45,  99, 151, 107, 168, 101, 
    108,  55,  84,  32, 204, 141, 
    192,  36, 244,   2, 113,  47, 
    156, 198, 142,  58, 178, 233, 
    221, 122, 134, 182,  20, 234, 
    130,  22, 240, 206,  32,  60, 
      6, 233,  80, 171, 227,   2, 
    114,  41, 163,   6, 236, 163, 
      6, 248, 168, 217,   3,  61, 
    111, 134,  40,   5,  23, 183, 
    175,  65, 191, 204,  63,  68, 
    205, 239,  25, 129,  40, 255, 
     63,  65, 185, 185, 185,  80, 
    126, 148,  39,  65, 235, 253, 
    219, 160, 245, 187, 231,  68, 
    208, 121, 236, 101, 239, 190, 
    148,  57, 231, 232,  78,  57, 
    231, 196, 238,  89, 110,  65, 
    127, 194,   2, 238, 189, 112, 
    113,  99, 250, 190,  96, 163, 
    173,  66,  89, 109,  21, 252, 
     99, 171, 192,   3, 129,  65, 
    129,  11,  37, 176, 129,   2, 
    151,  64,  96,  67,  69,  57, 
     84,   1, 225,  32,   5, 126, 
     40, 252,  16,  18,  20, 216, 
     96,  17, 128,  42, 161,  42, 
    168,  26, 194, 154, 196, 126, 
      8,  57,  10, 220,  87,  81, 
      7, 213,  67,  13,  80,  35, 
    116,   0,  58,   8, 133, 160, 
     38, 251, 238, 210,  89,  17, 
     66, 177,  87,  40,  56,  46, 
     29,  16,  62, 202,  16, 174, 
    186,  25, 255, 159, 208,  30, 
    184, 247, 150, 124, 239, 106, 
    255, 239, 149, 123, 120, 120, 
    120, 120, 120, 120, 120, 120, 
    120, 120, 120, 120, 120, 120, 
    252,  43, 240,  67, 203,  27, 
     22, 103, 133,  15, 219, 219, 
    221, 150, 175, 184, 177, 202, 
     23, 251, 102, 245, 149,  77, 
    133,  21,  63,  85,  40,  76, 
     85, 116,  94,  96, 190,  39, 
     91, 203, 156, 159,  94, 226, 
    225, 161, 101, 126, 120, 232, 
     49, 111,  30,  90, 100,  43, 
    155,  44, 252, 253, 139,  18, 
    228,  69, 242,  64, 157, 237, 
    149,   7, 108, 175,  10, 243, 
    162, 197, 213,  66,  50,  41, 
    122, 157, 239, 246,  91,  92, 
     32, 142, 247, 178, 160,  42, 
     89,  80,  72, 174, 171,   5, 
    159,  46,  10, 150, 170,  14, 
    221, 161, 100, 130,  76,  90, 
     66, 216, 125, 157,  21,  44, 
    222, 130, 188,  86, 122,  44, 
    198, 156, 241,  22,  89,  77, 
    249, 224, 251, 188, 217, 254, 
    143, 239, 168, 237,  44,  64, 
    255, 227, 246,  60, 196,  10, 
    227, 197, 121, 172,  67,  63, 
     25, 213, 180,  19,  81,  57, 
     71, 253, 179,  29, 218,  67, 
    242, 158, 152, 150,  35,  31, 
    136, 107,  89, 242, 209, 136, 
    150,  33, 191,  21, 210, 180, 
     51,  29,  82, 235, 142,  73, 
    237,  82,  92, 106,  35,  17, 
    169, 221,   8,  73, 255, 241, 
    168, 244, 183, 119,  72, 255, 
    249, 152, 244, 247, 197, 165, 
    127,  56,  34, 253,  99,  33, 
     41, 143,  69, 165, 108, 235, 
    144, 178,  51,  38, 229, 133, 
    184, 148, 131,  17,  41, 175, 
    134, 100, 145, 215,  21, 190, 
    241, 134, 194, 199,  50, 182, 
     83, 219, 216, 116,  68, 231, 
    108,  71,  45,  17, 165,  77, 
    240, 178, 242, 138, 125,  15, 
    240, 175, 147, 232,   7,  42, 
    171, 170, 105, 175, 123, 208, 
    103,  10, 247, 141, 194, 107, 
    116, 233, 103, 108, 105, 115, 
     63, 173,   3,  80,  53, 141, 
     84,  15,  81, 133, 205, 141, 
      3,  16, 225, 198,  36,  23, 
     21,  83, 103, 157,  58, 227, 
     29, 199, 105,  62, 213, 163, 
    180, 159, 149,  72, 155,  53, 
    103, 252, 169, 227,  84, 195, 
    162, 154, 111, 195, 163, 247, 
    225,  55, 157, 183, 223, 190, 
    118, 158, 191, 114, 156, 190, 
     81,   1, 205, 127, 157, 255, 
    220, 238, 212, 180, 223,  57, 
     99, 105, 136, 222,  79, 118, 
     25, 119,  19, 169, 196,  66, 
     54, 154,  75, 103, 210, 247, 
    163, 217,  92, 198,  76,  76, 
    159,  50,  38, 204,  57, 195, 
    204, 231, 204, 204,  76,  34, 
    101, 220,  75, 230,  79,  27, 
     99, 153, 113, 227, 154,  57, 
     51,  97, 102, 140, 254, 246, 
    254, 182, 188,  49,  54, 153, 
     64, 144,  53, 110,  94,  76, 
    228, 198,  39, 175, 164, 179, 
     83, 185, 169, 244,  76, 251, 
    196, 117,  51, 127, 125, 224, 
    166, 153, 201, 153, 249, 190, 
    124,  50, 157, 153, 142,  38, 
     83, 109, 109, 209, 201,  84, 
     54, 133,  31, 218,  12,  59, 
    233,  80,  73, 142,  74, 224, 
    211, 137, 169,  25, 246,   3, 
    226,  17, 182, 207,   0,   0, 
     53,  16,   0,   0, 230,   0, 
      0,   0,  21,   0,   1,   0, 
     16,   0,  24,   0, 120,   1, 
    237, 152, 193, 111,  27,  69, 
     24, 197, 191,  29,  79,  39, 
    174,  51, 222, 117,  91,  55, 
     77,  75,   0, 199,  53,  33, 
    136,  98, 156, 198, 168,  20, 
     90, 213, 218,  70,  84,   4, 
     80,  11,   9,   5, 209,  61, 
     96,  26, 155,  68,  56, 113, 
    100,  27,  98,  21, 148, 184, 
    129,  99, 164, 114, 225, 192, 
    159, 193,  25, 169, 137, 144, 
    184,  21, 129, 128,  63, 160, 
     71,  36,  46,  72,  92, 184, 
    153, 247, 236, 221, 200,   7, 
    122,   6, 161, 253,  73, 111, 
    222, 124, 179, 179,  51, 223, 
    204, 236,  94,  70,  38, 101, 
    192, 218, 249, 247, 126, 165, 
     95, 155, 144, 175, 190,  84, 
     34,  71,  24,   0,  84,   7, 
    108, 102,  89, 138, 252,  52, 
    193,  82, 100,  16,  58,  16, 
     58, 156, 131,  89,  40, 131, 
    122,   5, 206, 103, 179, 161, 
    134,  84,  14, 190,  70, 153, 
    130,  46,  64, 119, 180, 200, 
    167, 240,  75, 208, 147,  80, 
     17, 242, 160,  81, 146,  16, 
    167, 226,  59,  36, 193,  98, 
    132, 163,  80,   1,  98,  10, 
     17, 152, 126, 192,  19,  80, 
     26,  58, 100, 154, 197,  63, 
    115,  11,  98, 254, 143, 130, 
    185, 113, 188, 136,  40,  79, 
    174, 247, 191,   6, 247,  34, 
     58,  39, 194, 243,  24, 197, 
    133, 176, 245,   3, 122, 225, 
     57,  70, 251, 119,  16, 198, 
    209,  89,  30,  64, 143, 162, 
     15, 162, 113,   8, 235, 101, 
    136, 240, 156, 140,  92,  47, 
     25, 231,  94, 201, 168,  31, 
     75,   6,  13,   6,  29,  12, 
     62,  40,  99, 160,  49,   8, 
    135, 107, 112, 128,   6, 135, 
    107, 198,  33,  76, 104, 112, 
     96,   6,   9,  26, 108, 176, 
    201,  64, 199, 160, 227, 208, 
      9,   8, 107,  50,  39,  33, 
    228, 104,  78,  65, 248, 102, 
    205, 105, 232,  12, 244,  24, 
     52,   5,  61,  14, 225, 160, 
     12,  62,  40,  76, 131,  15, 
    120, 248,   5,  15, 234, 192, 
     56, 195, 149,  26,  53, 220, 
     20, 147,  96, 166, 112, 205, 
    236, 255, 127, 112, 221, 252, 
    135,  34,  70,  87, 201,  95, 
    158, 138, 137, 137, 137, 137, 
    137, 137, 137, 137, 137, 137, 
    137, 137, 137, 137, 137, 249, 
     55,  81, 211, 187, 247, 251, 
     74, 182, 127, 120, 240, 224, 
    114,  63, 209, 187, 127,  79, 
    237,  92, 149, 196,  23,   7, 
    155, 222, 222, 190,  35, 189, 
    159,  83, 142, 104, 199,  83, 
    219, 187,  74, 149, 119, 100, 
    111,  95, 114, 127, 254, 238, 
    100,  84, 239, 174, 210, 139, 
    187, 202,  44, 126, 174, 212, 
    226, 160, 109,  74, 245, 232, 
     42, 171, 122, 225,  56,  11, 
    146,  21,  43, 158, 108, 247, 
    149, 218, 174, 215,  77, 165, 
     47, 178, 248,  62,  39,  69, 
    191, 196,  36, 250, 103, 149, 
    237,  43, 141, 103, 175,  84, 
     36, 171,  45, 231, 225,  51, 
    201, 169, 158, 242,  52, 223, 
     27, 244, 239, 107, 125, 248, 
    158,  83,   8, 231, 153, 197, 
     60, 202,  32, 239, 189,  43, 
    146,  53,  54, 193, 121,  70, 
    198, 199, 202, 122,  91,  88, 
    131, 247, 244, 140, 235,  62, 
     53,  99,  45, 214, 244,  49, 
    227, 231,  11, 110, 250, 236, 
    140, 117, 159,  43, 216,  14, 
    227,  11, 121, 215,  78, 207, 
    216, 244, 179,   5, 235, 190, 
    144, 183, 222, 149, 156, 107, 
    159,  41, 216, 244, 124, 222, 
    186, 151, 115, 214, 206, 229, 
    109, 250, 101, 248, 197, 156, 
    229, 250, 111,  84,  54,  31, 
    202,   9,  95,  47, 211, 143, 
    251, 250,  93, 250,  49,  95, 
      7, 244, 140, 175, 133, 174, 
    125, 173, 233,  71, 124, 157, 
    164,  27,  95,  91, 250, 152, 
    175,  51, 244, 164, 175, 179, 
    244, 163, 190, 158, 164, 167, 
    124,  61,  69,  31, 247, 245, 
     14, 114, 202, 177, 158, 243, 
    117, 129,  62,  61, 108, 243, 
    174,  39, 221,  89, 198, 121, 
     95, 187, 111,  36, 173, 247, 
     78, 202,  61, 199, 248, 172, 
    175, 211, 175,  37, 173, 251, 
    118, 202, 178,  95, 137, 109, 
    130, 249,  94,  77, 218, 244, 
     82, 202, 150,  25,  59, 136, 
    223,  76, 217,  23,  89,  87, 
    190, 190,  68,  79, 248, 186, 
     66,  71, 174,  11, 116, 228, 
     42, 114, 119, 255,  36, 247, 
     15, 240, 246, 142,  58,  13, 
    241,  70,  47, 138, 163, 251, 
    172,  40, 206,  64,  36, 138, 
    169,   8,  12, 232, 252,  53, 
    193, 154, 200, 111, 161, 179, 
     63, 218, 197,  61, 188,  17, 
     29,  50, 121, 138,  37, 158, 
    135, 206,  59, 181, 113, 232, 
    204, 103, 223, 231, 190, 185, 
    120, 235, 187, 114, 216,  94, 
     10, 157,  99, 240, 206, 122, 
    235, 143, 173, 135, 223, 134, 
    109, 175, 135, 222, 132, 248, 
    126, 253, 165, 224, 131, 106, 
    163, 122, 167,  93, 236,  52, 
     91, 205, 143, 138, 237,  78, 
    171,  86,  93,  63,  31, 172, 
    212,  62,   9, 106, 221,  78, 
    173, 181,  81, 109,   4,  31, 
    214, 187, 229,  96, 169, 117, 
     59, 120, 171, 182, 177,  82, 
    107,   5,  11, 243,  11, 115, 
    221,  96, 105, 181, 138, 160, 
     29, 220, 244, 171, 157, 219, 
    171,  55, 154, 237, 181, 206, 
     90, 115,  99, 126, 101, 185, 
    214,  93, 190, 118, 179, 214, 
    234, 212, 186,  87, 187, 245, 
    102, 107, 189,  88, 111, 204, 
    205,  21,  87,  27, 237,   6, 
     38,  28, 242,  75, 152,   6, 
     47,  70, 199, 160, 245, 234, 
    218, 134, 252,  13, 225,  48, 
    212, 142,  53,  16,   0,   0, 
    223,   0,   0,   0,  21,   0, 
      1,   0,   0, 164,  23,   0, 
    120,   1, 237, 152, 223, 107, 
     20,  87,  20, 199, 207, 222, 
    185,  57,  73,  54, 119, 103, 
     54,  54, 198, 154,  90,  59, 
    166, 254, 168,  21,  55,  89, 
    147, 226, 111,  76,  77, 168, 
     16,  16, 171, 241,   7, 226, 
    128, 110, 205, 172,   9, 110, 
    178, 186, 187,  53,  75, 145, 
    117, 141, 125,  12,  40, 148, 
    190, 245, 161,  15, 253,   3, 
     20, 138,  79,  37,   9,  98, 
    223,  44,   5,  41, 197,  71, 
    223, 125,  17, 124,  45,  76, 
    191, 103, 126, 104,  30, 244, 
    185,  69, 230,   3, 223, 251, 
    157, 115, 239, 204, 220, 115, 
    127,  60, 157,  95,  54,  80, 
    200,  15,  15, 235, 175, 196, 
    143, 245, 211, 143, 247,  20, 
     81, 135,   4, 107, 184, 214, 
     39,  45,  81, 163,  95,  90, 
    162, 188,  52,  25,   8, 239, 
    238, 129,  25, 232,  49, 226, 
     49, 184, 140, 125,  22,  43, 
     98, 108, 245, 103, 180, 157, 
    208,   1, 232, 168,  69, 116, 
     29, 126,   8,  90,  15,  13, 
     65,  14,  36, 244,  72,   3, 
    186, 164,   1, 221, 210,   0, 
     45,  77, 140,  76,  43, 253, 
     91,  33,  76, 255,  26, 233, 
     23,  62, 128, 214, 246, 211, 
     22, 105, 222, 206,  73,  72, 
    242, 127,  23, 146, 155, 228, 
    146, 228, 149, 228,  41, 235, 
    253, 191,  33, 235,  79, 206, 
     73, 144, 243,  88, 139,  13, 
     97, 235,  67,  70, 227, 115, 
     76,  94, 153, 142, 227, 228, 
     44,  87, 161, 119,  17, 128, 
    181, 231,  33,  36, 177, 252, 
    159, 233, 196,  48, 103, 238, 
     14, 179, 250, 115, 152, 209, 
    193,  24, 100,  92,  40, 102, 
      8, 151, 128, 177, 161, 140, 
      3, 228,  44, 132, 141, 101, 
     76, 200,  57,   8,   9,  50, 
     54, 152, 113, 129, 184,  23, 
     90,   7, 225,  48,  25, 107, 
     98,  92,  20,  70, 142, 140, 
    251, 202,  31,  66,  27, 161, 
      1, 232,  35, 104,  19, 244, 
     49, 180,  25, 250,   4,  66, 
     14, 212,  17, 221, 224, 240, 
     25, 112,  38,  90,  41, 171, 
    232, 102, 176,  37, 153, 194, 
    117, 146, 249, 251, 133, 172, 
     91, 238, 109,  66, 178,  74, 
    217,   5, 108,  95, 200,  37, 
    105,  82,  82,  82,  82,  82, 
     82,  82,  82,  82,  82,  82, 
     82,  82,  82,  82,  82, 254, 
     35, 212, 150, 197, 229,  64, 
     81, 235, 143,  39,  79,  14, 
      7,  86, 123, 249, 174, 186, 
     53,  78, 214, 247, 171, 215, 
    156, 165,  21,  69, 237, 167, 
    217,  12, 105, 229, 232, 214, 
    162, 214, 163, 183,  53,  79, 
     46, 106, 119, 242,  22,  45, 
    173, 144, 251, 234, 133,  90, 
    167, 218, 226,  86, 127, 228, 
    249,   1, 213, 190, 163,   7, 
     39, 227, 255,  76,   4,  74, 
    183, 202, 101,  30, 163,  62, 
     50, 129,  98,  60, 127, 133, 
    103, 109, 200, 161,  22, 245, 
    177, 145, 255,   6, 202, 197, 
    220,  75,  71,   2, 162,  73, 
    169, 147,  88,  14,  99, 204, 
     53, 129, 214,  97,  28,  48, 
    135, 158, 119, 220,  86, 224, 
    186, 225, 179, 204,  69, 131, 
    209, 156, 106, 123, 228, 189, 
    155,  35, 183,  62, 143,  60, 
     95,  80, 237,   5, 172, 193, 
    217,  69, 246,  13, 241,  17, 
    109, 219,  59, 201, 216,  69, 
    109, 190, 149, 248,  32, 219, 
     53, 241, 113, 215, 206, 237, 
     32, 147,  27, 210, 198, 222, 
    207, 198, 254, 210,  53, 152, 
    227, 126,  96, 253, 179,  44, 
     85,  28, 179, 141, 140, 217, 
    173,  77, 110,  47, 155, 220, 
     17, 215, 100, 232, 239, 167, 
     82, 226,  50,  95, 176,  49, 
    135,  93, 211, 183, 126, 223, 
    179,  12,  41, 234, 223,   0, 
    183, 242, 248,   4, 174,  59, 
     72,  89, 112, 238,  36, 221, 
      1, 239, 234,  38, 238, 132, 
    103, 123, 200, 153,  34, 251, 
    186, 204, 123,  65, 219,  93, 
    221, 232,  27, 252, 148, 236, 
    147, 200, 235, 188,  54, 217, 
     30, 196,  91, 183,  81, 238, 
      4, 242,  57, 167, 141, 156, 
    129, 201, 161, 175,  48,  68, 
    230,  56, 242,  56, 131,  28, 
     29, 196, 195,  69, 202, 247, 
    194, 195, 234, 235, 237,  21, 
    169, 237,  10,  18, 137,  54, 
     66,  82, 127,  74,  98, 100, 
     21, 146, 196, 162,   4, 141, 
     87, 127, 138, 107, 146,  75, 
    177, 203, 251,  82, 199, 178, 
    195, 191, 188, 225, 183, 120, 
    252, 215, 216, 165, 238,  37, 
    245, 218, 129, 155, 191, 187, 
     15, 246,  95, 120, 244,  44, 
    238, 255,  43, 118, 249,  71, 
     22,  90, 120, 185, 240, 252, 
     98,  92, 255, 126,  25, 143, 
     85,  33, 249, 190, 124, 192, 
    251, 166,  84,  41, 125,  87, 
     47,  52, 170, 181, 234, 213, 
     66, 189,  81, 243,  75, 115, 
    123, 188, 105, 255, 134, 231, 
     55,  27, 126, 109, 190,  84, 
    241, 174, 148, 155, 163, 222, 
     84, 237, 178, 119, 202, 159, 
    159, 246, 107, 222, 196, 200, 
     68, 177, 233,  77, 205, 148, 
     16, 212, 189, 179,  71,  75, 
    141, 203,  51,  95,  87, 235, 
    179, 141, 217, 234, 252, 200, 
    244, 105, 191, 121, 250, 216, 
     89, 191, 214, 240, 155, 227, 
    205, 114, 181,  54,  87,  40, 
     87, 138, 197, 194,  76, 165, 
     94, 193, 132,  17,  11, 113, 
     58,  82, 188, 236, 132, 230, 
     74, 179, 243, 244,  47, 143, 
    174, 187,  18,   0,   0,   0, 
     83,  84,  65,  84, 148,   0, 
      0,   0,  16,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   9,   0,   0,   0, 
      8,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0
};
