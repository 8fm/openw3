#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler_tex                       sampler      NA          NA    0        1
// tex                               texture  float4          2d    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[109]
// Embedded Data:
//  0x0000006d - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x00000068 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 2
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v2.xyxx, t0.xyzw, s0
add r0.xyz, r0.xyzx, l(-0.501961, -0.000000, -0.501961, 0.000000)
mad r0.w, -r0.x, l(0.186593), r0.y
mad_sat r1.y, -r0.z, l(0.466296), r0.w
mad_sat r1.xz, r0.zzxz, l(1.568648, 0.000000, 1.848352, 0.000000), r0.yyyy
mov r1.w, l(1.000000)
mad r0.xyzw, r1.xyzw, v1.xyzw, v0.xyzw
mul o0.xyz, r0.wwww, r0.xyzx
mov o0.w, r0.w
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[109], bundle is:[176] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\FYUY2CxformMul.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, param0, paramSlot 0, DefaultVal={0,0,0,0};   [1] generic, usageIdx  1, channelMask 15, param1, paramSlot 1, DefaultVal={0,0,0,0};   [2] generic, usageIdx  2, channelMask  3, param2, paramSlot 2, DefaultVal={0,0,0,0}

codeLenInByte        = 248;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0:1]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_RESOURCE, 0, offset 0:7 dwords
;  extUserElements 1[1] = IMM_SAMPLER, 0, offset 8:11 dwords
NumVgprs             = 13;
NumSgprs             = 14;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000000

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000003
SPIC:NUM_INTERP             = 3
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[12:13], exec                          // 000000000000: BE8C047E
  s_wqm_b64     exec, exec                              // 000000000004: BEFE0A7E
  s_mov_b32     m0, s2                                  // 000000000008: BEFC0302
  s_load_dwordx8  s[4:11], s[0:1], 0x00                 // 00000000000C: C0C20100
  s_load_dwordx4  s[0:3], s[0:1], 0x08                  // 000000000010: C0800108
  v_interp_p1_f32  v2, v0, attr2.x                      // 000000000014: C8080800
  v_interp_p1_f32  v3, v0, attr2.y                      // 000000000018: C80C0900
  v_interp_p2_f32  v2, v1, attr2.x                      // 00000000001C: C8090801
  v_interp_p2_f32  v3, v1, attr2.y                      // 000000000020: C80D0901
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[2:5], v[2:3], s[4:11], s[0:3] dmask:0x7 // 000000000028: F0800700 00010202
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000030: BF8C0F70
  v_add_f32     v2, 0xbf008084, v2                      // 000000000034: 060404FF BF008084
  s_mov_b32     s0, 0x3e3f123c                          // 00000000003C: BE8003FF 3E3F123C
  v_mad_legacy_f32  v5, -v2, s0, v3                     // 000000000044: D2800005 240C0102
  v_interp_p1_f32  v6, v0, attr0.x                      // 00000000004C: C8180000
  v_interp_p1_f32  v7, v0, attr0.y                      // 000000000050: C81C0100
  v_interp_p1_f32  v8, v0, attr0.z                      // 000000000054: C8200200
  v_interp_p1_f32  v9, v0, attr0.w                      // 000000000058: C8240300
  v_interp_p1_f32  v10, v0, attr1.x                     // 00000000005C: C8280400
  v_interp_p1_f32  v11, v0, attr1.y                     // 000000000060: C82C0500
  v_interp_p1_f32  v12, v0, attr1.z                     // 000000000064: C8300600
  v_add_f32     v4, 0xbf008084, v4                      // 000000000068: 060808FF BF008084
  s_mov_b32     s0, 0x3eeebe59                          // 000000000070: BE8003FF 3EEEBE59
  v_interp_p1_f32  v0, v0, attr1.w                      // 000000000078: C8000700
  s_mov_b32     s1, 0x3fc8c975                          // 00000000007C: BE8103FF 3FC8C975
  v_mad_legacy_f32  v5, -v4, s0, v5 clamp               // 000000000084: D2800805 24140104
  s_mov_b32     s2, 0x3fec96cc                          // 00000000008C: BE8203FF 3FEC96CC
  v_mad_legacy_f32  v4, v4, s1, v3 clamp                // 000000000094: D2800804 040C0304
  v_interp_p2_f32  v6, v1, attr0.x                      // 00000000009C: C8190001
  v_interp_p2_f32  v7, v1, attr0.y                      // 0000000000A0: C81D0101
  v_interp_p2_f32  v8, v1, attr0.z                      // 0000000000A4: C8210201
  v_interp_p2_f32  v9, v1, attr0.w                      // 0000000000A8: C8250301
  v_interp_p2_f32  v10, v1, attr1.x                     // 0000000000AC: C8290401
  v_interp_p2_f32  v11, v1, attr1.y                     // 0000000000B0: C82D0501
  v_interp_p2_f32  v12, v1, attr1.z                     // 0000000000B4: C8310601
  v_interp_p2_f32  v0, v1, attr1.w                      // 0000000000B8: C8010701
  v_mad_legacy_f32  v3, v2, s2, v3 clamp                // 0000000000BC: D2800803 040C0502
  v_add_f32     v0, v9, v0                              // 0000000000C4: 06000109
  v_mac_legacy_f32  v6, v4, v10                         // 0000000000C8: 0C0C1504
  v_mac_legacy_f32  v7, v5, v11                         // 0000000000CC: 0C0E1705
  v_mac_legacy_f32  v8, v3, v12                         // 0000000000D0: 0C101903
  v_mul_legacy_f32  v1, v0, v6                          // 0000000000D4: 0E020D00
  v_mul_legacy_f32  v2, v0, v7                          // 0000000000D8: 0E040F00
  v_mul_legacy_f32  v3, v0, v8                          // 0000000000DC: 0E061100
  s_mov_b64     exec, s[12:13]                          // 0000000000E0: BEFE040C
  v_cvt_pkrtz_f16_f32  v1, v1, v2                       // 0000000000E4: 5E020501
  v_cvt_pkrtz_f16_f32  v0, v3, v0                       // 0000000000E8: 5E000103
  exp           mrt0, v1, v1, v0, v0 compr vm           // 0000000000EC: F800140F 00000001
  s_endpgm                                              // 0000000000F4: BF810000
end


// Approximately 10 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_FYUY2CxformMul[] =
{
     68,  88,  66,  67, 102, 142, 
     23,  34, 241, 146, 209,  99, 
     63,  57,  12,  21, 209, 227, 
    162, 192,   1,   0,   0,   0, 
    188,   6,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
      4,   1,   0,   0, 104,   1, 
      0,   0, 156,   1,   0,   0, 
     32,   6,   0,   0,  82,  68, 
     69,  70, 200,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    255, 255,   0, 129,   0,   0, 
    140,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
    124,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   0,   0,   5,   0, 
      0,   0,   4,   0,   0,   0, 
    255, 255, 255, 255,   0,   0, 
      0,   0,   1,   0,   0,   0, 
     13,   0,   0,   0, 115,  97, 
    109, 112, 108, 101, 114,  95, 
    116, 101, 120,   0, 116, 101, 
    120,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
     92,   0,   0,   0,   3,   0, 
      0,   0,   8,   0,   0,   0, 
     80,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,  15,   0,   0, 
     80,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,  15,   0,   0, 
     80,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   3,   3,   0,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0, 171, 171, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88, 124,   4,   0,   0, 
     80,   0,   0,   0,  31,   1, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 109,   0, 
      0,   0,  80,   0,   0,   0, 
    104,   0,   0,   0, 106,   8, 
      0,   1,  90,   0,   0,   3, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  88,  24,   0,   4, 
      0, 112,  16,   0,   0,   0, 
      0,   0,  85,  85,   0,   0, 
     98,  16,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     98,  16,   0,   3, 242,  16, 
     16,   0,   1,   0,   0,   0, 
     98,  16,   0,   3,  50,  16, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    104,   0,   0,   2,   2,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   2,   0,   0,   0, 
     70, 126,  16,   0,   0,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,  10, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    132, 128,   0, 191,   0,   0, 
      0,   0,  50,   0,   0,  10, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
     60,  18,  63,  62,  26,   0, 
     16,   0,   0,   0,   0,   0, 
     50,  32,   0,  10,  34,   0, 
     16,   0,   1,   0,   0,   0, 
     42,   0,  16, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,  89, 190, 
    238,  62,  58,   0,  16,   0, 
      0,   0,   0,   0,  50,  32, 
      0,  12,  82,   0,  16,   0, 
      1,   0,   0,   0, 166,   8, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0, 117, 201, 
    200,  63,   0,   0,   0,   0, 
    204, 150, 236,  63,   0,   0, 
      0,   0,  86,   5,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   5, 130,   0,  16,   0, 
      1,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     50,   0,   0,   9, 242,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  14,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,  32, 
     16,   0,   0,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   5, 130,  32,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 178,   0,   0,   0, 
     21,   0,   1,   0,  41, 189, 
     10,   0, 120,   1, 237,  86, 
     65,  79,  19,  65,  20, 126, 
    111, 119, 118, 187, 197, 165, 
     69, 131,  17,  18, 140,  40, 
    144,  96, 130,  13,  69,  47, 
     26, 165,  36,  18,  79, 122, 
    145, 120, 128, 108,   8,  69, 
     90,  33, 182, 133, 180,  96, 
     26,  14, 184,  24, 143,  28, 
     56,  24, 207,  36, 254,   1, 
     47,  38,  94, 220,  54,  30, 
    116,  76,  60, 225,  31, 240, 
     98, 244,  96, 212, 147, 241, 
     96, 168, 239, 237, 206, 192, 
    154, 200, 141,  68,  19, 249, 
    146, 239, 189, 249, 118, 102, 
    222, 204, 206, 155, 236, 219, 
     23, 109,  16, 226, 245, 171, 
     71,  87, 216, 127,  29,  14, 
    138,  91,   8,  96,  81, 155, 
     92, 232,  25, 117, 135,  45, 
    192,  86, 146,  45, 192,  32, 
     27,  30,  96,   0, 180, 147, 
     75,  17, 127,  16, 199, 136, 
    220, 167,  25,  97, 172, 249, 
    132, 108, 135, 226,  42, 205, 
    185,  78, 126, 136, 104,  19, 
    251, 136,  28, 131, 195,  49, 
    180, 103, 152, 108,   8, 106, 
    249, 223, 112, 132,  40, 136, 
    140,  78,  34, 133,  13, 193, 
     62,  30,   3,   6, 216, 252, 
     25,  35,  68,  94, 123,  63, 
    240, 222, 116,  44, 246, 122, 
     44, 191, 239, 223,  70, 180, 
    175, 184, 221, 203,  19, 131, 
    243,  17,   7, 239,  89, 143, 
     91,  82, 121, 212, 103, 230, 
     43, 205, 239, 199, 227, 154, 
    196, 253, 208,  34, 184, 220, 
    136,  65, 107, 206, 151,  13, 
    105, 178, 228, 241,  20, 244, 
    178,  55, 250, 194, 123, 241, 
    191,  64, 223,  73,  62,  11, 
     62,  95, 190, 243, 209, 137, 
     68, 224, 254, 139,  68,  58, 
    245,   6, 115, 179,  75, 167, 
     42, 210,  72,  58, 202,  83, 
    164,  77, 214,  97, 162,  98, 
    154,  20,  90, 198, 180, 137, 
     48, 157, 238, 217, 213,  30, 
    105,  47, 166, 167,  72,  79, 
    197, 244,  12, 233, 153, 152, 
    158,  37,  61, 171, 181, 142, 
    159,  14, 215,  51, 195,  60, 
    211, 195, 181, 127, 153, 135, 
    123,  60,  24,  30, 238, 241, 
     96, 120, 184, 199,   3,  99, 
    136,  53, 177,  17, 172, 181, 
    237,   4, 134, 249,  51,   0, 
    124, 217, 116, 208, 111, 130, 
    227,  72,  72, 186,  18, 157, 
    164, 196, 100, 187, 188,  15, 
     27,  13,  72, 248, 223,  12, 
      3,  97,  41, 189, 209, 104, 
      9,  97,  63, 244, 161, 209, 
     50, 253, 224, 242, 177, 220, 
    168,   5, 254, 182, 129, 110, 
     63,  64, 151,   4, 236, 145, 
     96, 244,  74,  48, 251,  37, 
    136,  65,   9, 214, 144,   4, 
    123,  88, 182,  28, 103, 119, 
    206, 100, 240, 101,  20,  18, 
     32,  91, 230, 122, 176, 242, 
     70, 230,  44, 199, 223,  22, 
    216, 217, 223,  50,  31,   4, 
    111,  31, 127, 206,   9, 214, 
    166,  43,  16, 186,  37, 226, 
     73, 137, 198, 105, 137, 230, 
    128,  68, 113,  86, 162, 117, 
     78, 162, 157, 149, 152,  64, 
    105, 210,  56, 195, 114,  69, 
     18, 193,  22, 199,  93, 215, 
     58, 145, 114, 205, 238,  14, 
     23, 218, 141,  20, 164,  69, 
     10, 142, 218,  41,  87, 236, 
      4, 244,  29, 142, 190, 227, 
    157, 250,  59, 188, 222, 232, 
     38,  27, 181, 247, 106, 180, 
      6, 149, 120, 212, 125,  92, 
    238, 169, 158, 160,  84, 245, 
    251, 185, 242,  92, 115, 184, 
    206, 164, 118, 163,  68, 248, 
    164, 250, 223,  43, 207, 243, 
    249,  63, 234, 204, 179, 119, 
     79, 219, 114,  31,  62,  10, 
    245,  63,   8, 202, 115,  12, 
    110,  54,  87, 191,  47, 212, 
    213, 179,  30, 229,  61,  34, 
    207,  47,  94, 242, 102, 243, 
    165, 252, 106,  45, 179, 188, 
     88,  93, 188, 155, 169,  45, 
     87,  11, 249, 242, 136,  55, 
     87, 184, 231,  21, 234, 203, 
    133, 106,  37,  95, 242, 238, 
     20, 235,  23, 188, 137, 234, 
    109, 239, 102, 161,  50,  87, 
    168, 122, 227, 231, 199, 179, 
    117, 111,  98,  62,  79, 162, 
    230,  93, 155, 188,  53,  57, 
    114, 181,  94,  92, 172, 150, 
    111, 172, 148,  50, 197,  82, 
     54, 155, 153,  47, 213,  74, 
     20,  61, 194, 166,  90, 147, 
    255,  71,  19, 196, 114, 126, 
    161,   2, 191,   0,  89, 152, 
     74,  28,  83,  84,  65,  84, 
    148,   0,   0,   0,  10,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   4,   0, 
      0,   0,   6,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0
};
