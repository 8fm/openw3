#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4 vfuniforms[144];            // Offset:    0 Size:  2304
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// COLOR                    1   x           1     NONE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xy          2     NONE   float   xy  
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[164]
// Embedded Data:
//  0x000000a4 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x0000009f - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[144], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.x
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output_siv o3.xyzw, position
dcl_temps 1
imul null, r0.x, v1.x, l(6)
imad r0.y, v1.x, l(6), l(1)
utof r0.xy, r0.xyxx
add r0.xy, r0.xyxx, l(0.100000, 0.100000, 0.000000, 0.000000)
ftou r0.xy, r0.xyxx
mov o1.xyzw, cb0[r0.y + 0].xyzw
mov o0.xyzw, cb0[r0.x + 0].xyzw
imad r0.xyzw, v1.xxxx, l(6, 6, 6, 6), l(2, 2, 4, 4)
utof r0.xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, l(0.100000, 1.100000, 0.100000, 1.100000)
ftou r0.xyzw, r0.xyzw
dp4 o2.x, v0.xyzw, cb0[r0.z + 0].xyzw
dp4 o2.y, v0.xyzw, cb0[r0.w + 0].xyzw
dp4 o3.x, v0.xyzw, cb0[r0.x + 0].xyzw
dp4 o3.y, v0.xyzw, cb0[r0.y + 0].xyzw
mov o3.zw, l(0,0,0,1.000000)
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[164], bundle is:[184] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBatchTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  1, v8
; Output Semantic Mappings
;   [0] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [1] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [2] generic, usageIdx  2, paramIdx 2, paramSlot 0

codeLenInByte        = 300;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 30;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000004
SVOC:VS_EXPORT_COUNT        = 2
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_mul_lo_i32  v0, v8, 6                               // 000000000008: D2D60000 00010D08
  v_add_i32     v1, vcc, 2, v0                          // 000000000010: 4A020082
  v_cvt_f32_u32  v1, v1                                 // 000000000014: 7E020D01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v3, 0x3dcccccd, v1                      // 00000000001C: 060602FF 3DCCCCCD
  v_add_f32     v1, 0x3f8ccccd, v1                      // 000000000024: 060202FF 3F8CCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000002C: 7E020F01
  v_add_i32     v2, vcc, 4, v0                          // 000000000030: 4A040084
  v_cvt_f32_u32  v2, v2                                 // 000000000034: 7E040D02
  v_add_i32     v0, vcc, 1, v0                          // 000000000038: 4A000081
  s_waitcnt     lgkmcnt(0)                              // 00000000003C: BF8C007F
  tbuffer_load_format_xyzw  v[14:17], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 80020E01
  v_add_f32     v9, 0x3dcccccd, v2                      // 000000000048: 061204FF 3DCCCCCD
  v_cvt_f32_u32  v0, v0                                 // 000000000050: 7E000D00
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000054: 060404FF 3F8CCCCD
  v_add_f32     v0, 0x3dcccccd, v0                      // 00000000005C: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v3, v3                                 // 000000000064: 7E060F03
  v_cvt_u32_f32  v2, v2                                 // 000000000068: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 00000000006C: 7E000F00
  tbuffer_load_format_xyzw  v[10:13], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000070: EBF32000 80020A03
  tbuffer_load_format_xyzw  v[22:25], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000078: EBF32000 80021602
  tbuffer_load_format_xyzw  v[26:29], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000080: EBF32000 80021A00
  v_cvt_u32_f32  v9, v9                                 // 000000000088: 7E120F09
  v_mul_lo_i32  v8, v8, 6                               // 00000000008C: D2D60008 00010D08
  tbuffer_load_format_xyzw  v[18:21], v9, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000094: EBF32000 80021209
  v_cvt_f32_u32  v1, v8                                 // 00000000009C: 7E020D08
  v_add_f32     v1, 0x3dcccccd, v1                      // 0000000000A0: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v1, v1                                 // 0000000000A8: 7E020F01
  tbuffer_load_format_xyzw  v[0:3], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80020001
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000B4: BF8C0F74
  v_mul_legacy_f32  v8, v7, v13                         // 0000000000B8: 0E101B07
  v_mac_legacy_f32  v8, v6, v12                         // 0000000000BC: 0C101906
  v_mul_legacy_f32  v9, v7, v17                         // 0000000000C0: 0E122307
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 0000000000C4: BF8C0F71
  v_mul_legacy_f32  v12, v7, v21                        // 0000000000C8: 0E182B07
  v_mul_legacy_f32  v7, v7, v25                         // 0000000000CC: 0E0E3307
  v_mac_legacy_f32  v9, v6, v16                         // 0000000000D0: 0C122106
  v_mac_legacy_f32  v8, v5, v11                         // 0000000000D4: 0C101705
  v_mac_legacy_f32  v12, v6, v20                        // 0000000000D8: 0C182906
  v_mac_legacy_f32  v7, v6, v24                         // 0000000000DC: 0C0E3106
  v_mac_legacy_f32  v9, v5, v15                         // 0000000000E0: 0C121F05
  v_mac_legacy_f32  v8, v4, v10                         // 0000000000E4: 0C101504
  v_mac_legacy_f32  v12, v5, v19                        // 0000000000E8: 0C182705
  v_mac_legacy_f32  v7, v5, v23                         // 0000000000EC: 0C0E2F05
  v_mac_legacy_f32  v9, v4, v14                         // 0000000000F0: 0C121D04
  v_mov_b32     v6, 0                                   // 0000000000F4: 7E0C0280
  v_mov_b32     v10, 1.0                                // 0000000000F8: 7E1402F2
  v_mac_legacy_f32  v12, v4, v18                        // 0000000000FC: 0C182504
  v_mac_legacy_f32  v7, v4, v22                         // 000000000100: 0C0E2D04
  exp           pos0, v8, v9, v6, v10 done              // 000000000104: F80008CF 0A060908
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 00000000010C: BF8C0F70
  exp           param0, v0, v1, v2, v3                  // 000000000110: F800020F 03020100
  exp           param1, v26, v27, v28, v29              // 000000000118: F800021F 1D1C1B1A
  exp           param2, v12, v7, v6, v10                // 000000000120: F800022F 0A06070C
  s_endpgm                                              // 000000000128: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[350], bundle is:[198] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBatchTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  1, v8
; Output Semantic Mappings
;   [0] position, usageIdx  3, paramIdx 3, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0

codeLenInByte        = 396;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 29;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 16
; esGsRingItemSize          = 16

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_mul_lo_i32  v0, v8, 6                               // 000000000008: D2D60000 00010D08
  v_add_i32     v1, vcc, 2, v0                          // 000000000010: 4A020082
  v_cvt_f32_u32  v1, v1                                 // 000000000014: 7E020D01
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000018: C0840300
  v_add_f32     v2, 0x3dcccccd, v1                      // 00000000001C: 060402FF 3DCCCCCD
  v_add_f32     v1, 0x3f8ccccd, v1                      // 000000000024: 060202FF 3F8CCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000002C: 7E020F01
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  tbuffer_load_format_xyzw  v[13:16], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000034: EBF32000 80020D01
  v_cvt_u32_f32  v2, v2                                 // 00000000003C: 7E040F02
  v_mul_lo_i32  v1, v8, 6                               // 000000000040: D2D60001 00010D08
  v_cvt_f32_u32  v1, v1                                 // 000000000048: 7E020D01
  tbuffer_load_format_xyzw  v[9:12], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000000004C: EBF32000 80020902
  v_add_f32     v1, 0x3dcccccd, v1                      // 000000000054: 060202FF 3DCCCCCD
  v_cvt_u32_f32  v1, v1                                 // 00000000005C: 7E020F01
  tbuffer_load_format_xyzw  v[17:20], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000060: EBF32000 80021101
  v_add_i32     v2, vcc, 4, v0                          // 000000000068: 4A040084
  v_cvt_f32_u32  v2, v2                                 // 00000000006C: 7E040D02
  v_add_f32     v3, 0x3dcccccd, v2                      // 000000000070: 060604FF 3DCCCCCD
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000078: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v3, v3                                 // 000000000080: 7E060F03
  v_cvt_u32_f32  v1, v2                                 // 000000000084: 7E020F02
  tbuffer_load_format_xyzw  v[21:24], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000088: EBF32000 80021503
  tbuffer_load_format_xyzw  v[25:28], v1, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000090: EBF32000 80021901
  v_add_i32     v0, vcc, 1, v0                          // 000000000098: 4A000081
  v_cvt_f32_u32  v0, v0                                 // 00000000009C: 7E000D00
  v_add_f32     v0, 0x3dcccccd, v0                      // 0000000000A0: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v0, v0                                 // 0000000000A8: 7E000F00
  tbuffer_load_format_xyzw  v[0:3], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80020000
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000B4: BF8C0F74
  v_mul_legacy_f32  v8, v7, v12                         // 0000000000B8: 0E101907
  s_load_dwordx4  s[8:11], s[2:3], 0x0c                 // 0000000000BC: C084030C
  v_mac_legacy_f32  v8, v6, v11                         // 0000000000C0: 0C101706
  v_mul_legacy_f32  v11, v7, v16                        // 0000000000C4: 0E162107
  v_mac_legacy_f32  v8, v5, v10                         // 0000000000C8: 0C101505
  v_mac_legacy_f32  v11, v6, v15                        // 0000000000CC: 0C161F06
  v_mac_legacy_f32  v8, v4, v9                          // 0000000000D0: 0C101304
  v_mac_legacy_f32  v11, v5, v14                        // 0000000000D4: 0C161D05
  v_mac_legacy_f32  v11, v4, v13                        // 0000000000D8: 0C161B04
  v_mov_b32     v9, 0                                   // 0000000000DC: 7E120280
  s_waitcnt     lgkmcnt(0)                              // 0000000000E0: BF8C007F
  buffer_store_dword  v8, v0, s[8:11], s4 offset:48 glc slc // 0000000000E4: E0704030 04420800
  v_mov_b32     v8, 1.0                                 // 0000000000EC: 7E1002F2
  buffer_store_dword  v11, v0, s[8:11], s4 offset:52 glc slc // 0000000000F0: E0704034 04420B00
  buffer_store_dword  v9, v0, s[8:11], s4 offset:56 glc slc // 0000000000F8: E0704038 04420900
  buffer_store_dword  v8, v0, s[8:11], s4 offset:60 glc slc // 000000000100: E070403C 04420800
  s_waitcnt     vmcnt(7) & lgkmcnt(15)                  // 000000000108: BF8C0F77
  buffer_store_dword  v17, v0, s[8:11], s4 glc slc      // 00000000010C: E0704000 04421100
  buffer_store_dword  v18, v0, s[8:11], s4 offset:4 glc slc // 000000000114: E0704004 04421200
  s_waitcnt     vmcnt(8) & lgkmcnt(15)                  // 00000000011C: BF8C0F78
  v_mul_legacy_f32  v8, v7, v24                         // 000000000120: 0E103107
  buffer_store_dword  v19, v0, s[8:11], s4 offset:8 glc slc // 000000000124: E0704008 04421300
  v_mac_legacy_f32  v8, v6, v23                         // 00000000012C: 0C102F06
  s_waitcnt     vmcnt(8) & lgkmcnt(15)                  // 000000000130: BF8C0F78
  v_mul_legacy_f32  v7, v7, v28                         // 000000000134: 0E0E3907
  buffer_store_dword  v20, v0, s[8:11], s4 offset:12 glc slc // 000000000138: E070400C 04421400
  v_mac_legacy_f32  v8, v5, v22                         // 000000000140: 0C102D05
  v_mac_legacy_f32  v7, v6, v27                         // 000000000144: 0C0E3706
  s_waitcnt     vmcnt(8) & lgkmcnt(15)                  // 000000000148: BF8C0F78
  buffer_store_dword  v0, v0, s[8:11], s4 offset:16 glc slc // 00000000014C: E0704010 04420000
  v_mac_legacy_f32  v8, v4, v21                         // 000000000154: 0C102B04
  v_mac_legacy_f32  v7, v5, v26                         // 000000000158: 0C0E3505
  buffer_store_dword  v1, v0, s[8:11], s4 offset:20 glc slc // 00000000015C: E0704014 04420100
  v_mac_legacy_f32  v7, v4, v25                         // 000000000164: 0C0E3304
  buffer_store_dword  v2, v0, s[8:11], s4 offset:24 glc slc // 000000000168: E0704018 04420200
  buffer_store_dword  v3, v0, s[8:11], s4 offset:28 glc slc // 000000000170: E070401C 04420300
  buffer_store_dword  v8, v0, s[8:11], s4 offset:32 glc slc // 000000000178: E0704020 04420800
  buffer_store_dword  v7, v0, s[8:11], s4 offset:36 glc slc // 000000000180: E0704024 04420700
  s_endpgm                                              // 000000000188: BF810000
end


Opaque Custom Data - XBOX Precompiled Shader
// Offset:[550], bundle is:[189] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\VBatchTexTGCxform.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  1, v8
; Output Semantic Mappings
;   [0] position, usageIdx  3, paramIdx 3, paramSlot 0
;   [1] generic, usageIdx  0, paramIdx 0, paramSlot 0
;   [2] generic, usageIdx  1, paramIdx 1, paramSlot 0
;   [3] generic, usageIdx  2, paramIdx 2, paramSlot 0

codeLenInByte        = 340;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER, 0, offset 0:3 dwords
NumVgprs             = 33;
NumSgprs             = 12;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 16
; lsStride                  = 64

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000004: BF8C0F70
  v_mul_lo_i32  v0, v8, 6                               // 000000000008: D2D60000 00010D08
  v_add_i32     v2, vcc, 2, v0                          // 000000000010: 4A040082
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000014: C0840300
  v_cvt_f32_u32  v2, v2                                 // 000000000018: 7E040D02
  v_add_f32     v3, 0x3dcccccd, v2                      // 00000000001C: 060604FF 3DCCCCCD
  v_add_f32     v2, 0x3f8ccccd, v2                      // 000000000024: 060404FF 3F8CCCCD
  v_cvt_u32_f32  v3, v3                                 // 00000000002C: 7E060F03
  v_cvt_u32_f32  v2, v2                                 // 000000000030: 7E040F02
  s_waitcnt     lgkmcnt(0)                              // 000000000034: BF8C007F
  tbuffer_load_format_xyzw  v[9:12], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000038: EBF32000 80020903
  tbuffer_load_format_xyzw  v[13:16], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000040: EBF32000 80020D02
  v_add_i32     v3, vcc, 4, v0                          // 000000000048: 4A060084
  v_mul_lo_i32  v2, v8, 6                               // 00000000004C: D2D60002 00010D08
  v_add_i32     v0, vcc, 1, v0                          // 000000000054: 4A000081
  v_cvt_f32_u32  v2, v2                                 // 000000000058: 7E040D02
  v_cvt_f32_u32  v0, v0                                 // 00000000005C: 7E000D00
  v_add_f32     v2, 0x3dcccccd, v2                      // 000000000060: 060404FF 3DCCCCCD
  v_add_f32     v0, 0x3dcccccd, v0                      // 000000000068: 060000FF 3DCCCCCD
  v_cvt_u32_f32  v2, v2                                 // 000000000070: 7E040F02
  v_cvt_u32_f32  v0, v0                                 // 000000000074: 7E000F00
  tbuffer_load_format_xyzw  v[17:20], v2, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000078: EBF32000 80021102
  tbuffer_load_format_xyzw  v[29:32], v0, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000000000080: EBF32000 80021D00
  v_cvt_f32_u32  v3, v3                                 // 000000000088: 7E060D03
  v_add_f32     v8, 0x3dcccccd, v3                      // 00000000008C: 061006FF 3DCCCCCD
  v_add_f32     v3, 0x3f8ccccd, v3                      // 000000000094: 060606FF 3F8CCCCD
  v_cvt_u32_f32  v8, v8                                 // 00000000009C: 7E100F08
  v_cvt_u32_f32  v3, v3                                 // 0000000000A0: 7E060F03
  tbuffer_load_format_xyzw  v[21:24], v8, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000A4: EBF32000 80021508
  tbuffer_load_format_xyzw  v[25:28], v3, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000000000AC: EBF32000 80021903
  s_waitcnt     vmcnt(5) & lgkmcnt(15)                  // 0000000000B4: BF8C0F75
  v_mul_legacy_f32  v0, v7, v12                         // 0000000000B8: 0E001907
  s_waitcnt     vmcnt(4) & lgkmcnt(15)                  // 0000000000BC: BF8C0F74
  v_mul_legacy_f32  v2, v7, v16                         // 0000000000C0: 0E042107
  v_mac_legacy_f32  v0, v6, v11                         // 0000000000C4: 0C001706
  v_mac_legacy_f32  v2, v6, v15                         // 0000000000C8: 0C041F06
  v_mac_legacy_f32  v0, v5, v10                         // 0000000000CC: 0C001505
  v_mac_legacy_f32  v2, v5, v14                         // 0000000000D0: 0C041D05
  s_mov_b32     m0, 0x00010000                          // 0000000000D4: BEFC03FF 00010000
  v_mac_legacy_f32  v0, v4, v9                          // 0000000000DC: 0C001304
  v_mac_legacy_f32  v2, v4, v13                         // 0000000000E0: 0C041B04
  v_lshlrev_b32  v1, 6, v1                              // 0000000000E4: 34020286
  ds_write2_b32  v1, v0, v2 offset0:12 offset1:13       // 0000000000E8: D8380D0C 00020001
  v_mov_b32     v0, 0                                   // 0000000000F0: 7E000280
  v_mov_b32     v2, 1.0                                 // 0000000000F4: 7E0402F2
  ds_write2_b32  v1, v0, v2 offset0:14 offset1:15       // 0000000000F8: D8380F0E 00020001
  s_waitcnt     vmcnt(1) & lgkmcnt(15)                  // 000000000100: BF8C0F71
  v_mul_legacy_f32  v0, v7, v24                         // 000000000104: 0E003107
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000108: BF8C0F70
  v_mul_legacy_f32  v2, v7, v28                         // 00000000010C: 0E043907
  ds_write2_b32  v1, v17, v18 offset1:1                 // 000000000110: D8380100 00121101
  v_mac_legacy_f32  v0, v6, v23                         // 000000000118: 0C002F06
  v_mac_legacy_f32  v2, v6, v27                         // 00000000011C: 0C043706
  ds_write2_b32  v1, v19, v20 offset0:2 offset1:3       // 000000000120: D8380302 00141301
  v_mac_legacy_f32  v0, v5, v22                         // 000000000128: 0C002D05
  v_mac_legacy_f32  v2, v5, v26                         // 00000000012C: 0C043505
  ds_write2_b32  v1, v29, v30 offset0:4 offset1:5       // 000000000130: D8380504 001E1D01
  v_mac_legacy_f32  v0, v4, v21                         // 000000000138: 0C002B04
  v_mac_legacy_f32  v2, v4, v25                         // 00000000013C: 0C043304
  ds_write2_b32  v1, v31, v32 offset0:6 offset1:7       // 000000000140: D8380706 00201F01
  ds_write2_b32  v1, v0, v2 offset0:8 offset1:9         // 000000000148: D8380908 00020001
  s_endpgm                                              // 000000000150: BF810000
end


// Approximately 17 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_VBatchTexTGCxform[] =
{
     68,  88,  66,  67,  43,  61, 
    215, 220, 222, 104, 171, 231, 
    247,   2,  49, 138, 107,  32, 
     35, 199,   1,   0,   0,   0, 
    108,  14,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     88,   1,   0,   0, 172,   1, 
      0,   0,  52,   2,   0,   0, 
    208,  13,   0,   0,  82,  68, 
     69,  70,  28,   1,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    254, 255,   0, 129,   0,   0, 
    224,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
     92,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  67, 111, 110, 115, 
    116,  97, 110, 116, 115,   0, 
    171, 171,  92,   0,   0,   0, 
      1,   0,   0,   0, 128,   0, 
      0,   0,   0,   9,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0, 168,   0,   0,   0, 
      0,   0,   0,   0,   0,   9, 
      0,   0,   2,   0,   0,   0, 
    188,   0,   0,   0,   0,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0, 255, 255, 
    255, 255,   0,   0,   0,   0, 
    118, 102, 117, 110, 105, 102, 
    111, 114, 109, 115,   0, 102, 
    108, 111,  97, 116,  52,   0, 
    171, 171,   1,   0,   3,   0, 
      1,   0,   4,   0, 144,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 179,   0, 
      0,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
     76,   0,   0,   0,   2,   0, 
      0,   0,   8,   0,   0,   0, 
     56,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,  15,   0,   0, 
     68,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0,   1,   1,   0,   0, 
     83,  86,  95,  80, 111, 115, 
    105, 116, 105, 111, 110,   0, 
     67,  79,  76,  79,  82,   0, 
    171, 171,  79,  83,  71,  78, 
    128,   0,   0,   0,   4,   0, 
      0,   0,   8,   0,   0,   0, 
    104,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
    104,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    104,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   3,  12,   0,   0, 
    113,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,  15,   0,   0,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171, 171, 171, 
     83,  72,  69,  88, 148,  11, 
      0,   0,  80,   0,   1,   0, 
    229,   2,   0,   0,  53,  16, 
      0,   0,   5,   0,   0,   0, 
    164,   0,   0,   0,  80,   0, 
      1,   0, 159,   0,   0,   0, 
    106,   8,   0,   1,  89,   8, 
      0,   4,  70, 142,  32,   0, 
      0,   0,   0,   0, 144,   0, 
      0,   0,  95,   0,   0,   3, 
    242,  16,  16,   0,   0,   0, 
      0,   0,  95,   0,   0,   3, 
     18,  16,  16,   0,   1,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   1,   0, 
      0,   0, 101,   0,   0,   3, 
     50,  32,  16,   0,   2,   0, 
      0,   0, 103,   0,   0,   4, 
    242,  32,  16,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
    104,   0,   0,   2,   1,   0, 
      0,   0,  38,   0,   0,   8, 
      0, 208,   0,   0,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,  16,  16,   0,   1,   0, 
      0,   0,   1,  64,   0,   0, 
      6,   0,   0,   0,  35,   0, 
      0,   9,  34,   0,  16,   0, 
      0,   0,   0,   0,  10,  16, 
     16,   0,   1,   0,   0,   0, 
      1,  64,   0,   0,   6,   0, 
      0,   0,   1,  64,   0,   0, 
      1,   0,   0,   0,  86,   0, 
      0,   5,  50,   0,  16,   0, 
      0,   0,   0,   0,  70,   0, 
     16,   0,   0,   0,   0,   0, 
      0,   0,   0,  10,  50,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   0,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
    205, 204, 204,  61, 205, 204, 
    204,  61,   0,   0,   0,   0, 
      0,   0,   0,   0,  28,   0, 
      0,   5,  50,   0,  16,   0, 
      0,   0,   0,   0,  70,   0, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   7, 242,  32, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  26,   0,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   7, 242,  32,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   4,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  35,   0,   0,  15, 
    242,   0,  16,   0,   0,   0, 
      0,   0,   6,  16,  16,   0, 
      1,   0,   0,   0,   2,  64, 
      0,   0,   6,   0,   0,   0, 
      6,   0,   0,   0,   6,   0, 
      0,   0,   6,   0,   0,   0, 
      2,  64,   0,   0,   2,   0, 
      0,   0,   2,   0,   0,   0, 
      4,   0,   0,   0,   4,   0, 
      0,   0,  86,   0,   0,   5, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,  10, 242,   0,  16,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0, 205, 204, 
    204,  61, 205, 204, 140,  63, 
    205, 204, 204,  61, 205, 204, 
    140,  63,  28,   0,   0,   5, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  18,  32,  16,   0, 
      2,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  42,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  34,  32,  16,   0, 
      2,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  18,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   9,  34,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   4,   0,   0, 
      0,   0,  26,   0,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   8, 194,  32,  16,   0, 
      3,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 128,  63, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 186,   0,   0,   0, 
     21,   0,   1,   0,  32, 252, 
     22,   0, 120,   1, 237, 152, 
    207,  79,  19,  65,  20, 199, 
    223,  78, 183, 211,  22, 166, 
    187, 117, 229,  71, 249,  37, 
     16,  37, 104, 144,  98,  69, 
     15,  18,  81, 130,  36, 198, 
     94, 140,  66, 140, 135,  77, 
     76, 133,  86,  12, 229, 135, 
    109,  99,  26,  99, 150,  66, 
     56, 242,  39, 240, 103, 152, 
    120,  82, 240,  94,  67, 226, 
    193, 147,  36, 122, 246, 166, 
     30,  56, 152, 212, 239, 107, 
    119,   9,  38, 114, 214, 196, 
    249,  36, 223, 121, 157, 233, 
    155, 121, 111, 230, 237, 233, 
    253, 236, 160,   6,  35, 109, 
     75, 211, 108, 119, 150, 214, 
    198,  95,  10, 162,  48,  79, 
    128, 201,   3,  88, 107, 227, 
    145, 232,  83,  59, 143,  68, 
      3,  60,  24,  16, 124, 207, 
    192,  40, 232,  34, 230,  83, 
    176, 252, 223, 121,  95,  77, 
    166, 246, 182,  48,  74, 104, 
      8, 154, 192, 158,  59, 176, 
    163,  16, 239,  27, 134, 162, 
     80,  16, 139,  97,  95,  38, 
    176,  28, 234,  56, 188, 175, 
     11, 194,  81,  71,   4,  62, 
     45, 208, 241, 179, 104, 144, 
    135,  63, 115,  13, 226, 252, 
     79, 130, 115,  11, 114, 224, 
     51,  57,  79, 134, 227, 255, 
    107, 240, 253, 131,  58,  49, 
     92, 143, 227,  88,  80,   8, 
     98, 118, 252,  58,   6,  46, 
     53, 127,  30, 212, 114,  15, 
     58, 137,  58, 248, 237, 125, 
     65,  48, 231, 122,  72, 186, 
    123,  73,  26,  27,  36,  49, 
    145,   8,  40, 241, 167, 196, 
      7,  37, 241, 144,  50,   2, 
    225,  17, 101,  12,  66, 161, 
    100,  43, 132, 128,  50,  14, 
     33,  65, 105,  67,   9, 232, 
     20, 228,  64, 167,  33, 220, 
     73,  34,  63, 137, 111,  85, 
    118,  66,  73,   8, 197, 151, 
    221,  80,  15, 212,  11, 245, 
     65,  72,  94, 246,  55, 239, 
     24, 212,  76,  26, 205,  27, 
     74, 193, 153, 253,  63, 240, 
     27,   4, 223,  42, 215, 134, 
     21, 112, 252, 183,  70, 163, 
    209, 104,  52,  26, 141,  70, 
    163, 209, 104,  52,  26, 205, 
    223,  66,  12, 110, 190,  93, 
    179, 183, 119, 137,  62, 126, 
    136, 198,  13, 218,  36, 145, 
     49, 226, 194, 163, 208, 214, 
     94,  93,  72, 249, 190,  86, 
    155, 172,  11,   1, 187, 125, 
    211, 176, 133, 183,  69, 102, 
     70, 196,  77, 111, 131,  40, 
    179,  78, 216,  55, 240, 253, 
    171,  97, 137, 106, 221, 116, 
     26, 190,  20,  39, 175, 110, 
    154,  13, 255,  58,  81,  99, 
     45, 100,  75,  79, 216, 166, 
     71,  54, 121, 236,  31, 106, 
     17,  85, 182, 162, 163, 105, 
    169,  91,  84,  99, 182, 227, 
     69, 253,  28, 120,  45, 230, 
    136, 106,  20, 121,  52,  99, 
    215,  38,  57,  54, 175,  27, 
     36, 170, 101, 228,  27, 233, 
     73,  88, 178,  43, 161,  34, 
    103,  29, 235,  25, 207,  71, 
    146,  86, 100, 220, 178, 228, 
    160, 163, 194, 157,   9,  37, 
     47,  36, 149,  76,  91,  42, 
    220, 239,  40, 179,  61, 161, 
    194, 195,  73,  21,  30, 179, 
    148, 217, 231, 168, 170,  80, 
    222,  55, 209, 230, 153,  67, 
     73, 101, 142,  90, 106,  63, 
     74, 135, 209, 152, 108, 225, 
    119, 176,   5,  29, 146,  33, 
     66, 253, 176, 221,  61, 189, 
    125,  99, 176,  42, 194,  29, 
    180, 141,  93, 191, 117, 215, 
    232, 189, 177, 184,  47, 202, 
     93, 175,  96, 158, 128, 152, 
     96, 206,  10,  48, 225, 106, 
    250,  61, 224,  31, 254,  65, 
    236, 207,  61,  34, 235, 168, 
     59, 216, 228, 156, 239, 215, 
    235,  91, 238,  47, 181,  66, 
    175,  14,  14, 222, 221, 184, 
    183, 254, 121, 202,  95, 191, 
    238,  91,  62,   3,   9, 210, 
    151, 204, 213,  55, 175, 253, 
    181, 135, 190, 125,   4, 241, 
    254, 252, 132, 251,  56,  91, 
    200, 190,  40, 165, 202, 171, 
    197, 213, 165,  84, 169,  92, 
    204, 101, 151,  47, 187,  11, 
    185, 231, 110, 174,  82, 206, 
     21,  87, 178,   5, 247,  73, 
    190, 114, 197, 157,  45, 206, 
    187, 247, 115,  43,  11, 185, 
    162,  59,  51,  62, 147, 174, 
    184, 179, 139,  89,  76,  74, 
    238, 131, 233, 108, 121, 126, 
    113,  46,  87, 153, 187, 125, 
    171, 146,  95,  45,  46, 167, 
    242, 133, 116,  58, 181,  88, 
     40,  21,  16, 160, 201, 190, 
     31, 150, 219, 218,  17, 104, 
     57, 251, 116, 133, 126,   1, 
    122,  18, 145, 118,  53,  16, 
      0,   0, 200,   0,   0,   0, 
     21,   0,   1,   0,  16, 108, 
     23,   0, 120,   1, 237, 152, 
    207,  79,  19,  65,  20, 199, 
    223,  78, 167, 211,   2, 219, 
    237, 242, 171, 128, 128,  64, 
     52, 193, 196,  88, 169,  64, 
    252,  17,  16, 178, 146, 152, 
     16,  19, 163,  16, 189, 108, 
     98,  42, 180,  86,  41, 208, 
    180, 141,  54, 198, 148,  66, 
    184, 152, 244, 232, 209,  63, 
    193, 131,   7, 174,  10, 222, 
     60, 224, 197, 131,  55,  18, 
     60, 123, 211, 171,  73, 253, 
    190, 237,  44, 114, 144, 179, 
    198, 236,  39, 249, 206, 155, 
     31, 111, 102, 222, 206, 219, 
    211, 203, 247, 144, 199, 125, 
    107,  39, 199, 246, 245,  74, 
     97, 252, 133,  32,  10, 243, 
      0, 160, 235,  81, 232, 226, 
    150, 232,  86, 130,  91, 162, 
     97, 110,  12,   8,  14, 131, 
     48,  38,  84, 199, 120,  22, 
    150, 215, 206, 105,  53, 153, 
    221, 123, 137, 182,   5,  58, 
      3,  61,   9,  17,  45, 194, 
    166,  32,  62, 110,  20, 226, 
    253, 199,  81, 144,   5, 241, 
     30, 134, 175,  58,  14, 251, 
    247,  65, 126, 124, 140, 223, 
    231,  80,  99, 208,  17,  35, 
    220, 252, 153, 155,  16, 199, 
    127,  18,  28, 155, 254, 116, 
     15,  63,  78, 223, 254,  75, 
    240,  27, 249, 121,  98,  56, 
     31, 199, 225, 247, 148,  16, 
    243, 179, 155, 219, 223, 239, 
     58, 165, 243, 234, 231, 114, 
     15,  58, 137,   6, 240, 207, 
     97, 184,  63,   1,  49, 156, 
      3,  69, 183, 199, 148, 177, 
     73,  10,   3, 133,  92,  43, 
     56,  40, 252,  80,  10,  73, 
     85,  17,  40,  10,  33, 177, 
    170,  21, 106, 131, 112, 161, 
     66, 194,  20,   2,  84, 113, 
    200, 134, 218, 161,  14, 168, 
     19, 194,  55,  41, 196, 171, 
     16, 163, 194, 255, 170, 122, 
     33,  36,  95, 157, 130, 250, 
    161,   1,   8, 129, 171, 211, 
    208, 144, 254, 198,  16,  46, 
      6, 252,  31,  49, 202, 104, 
    126, 169,  18,  28, 225, 255, 
     15, 191,   1, 158, 249,   8, 
    239,  77,  52, 120,  94,  79, 
      1,   1,   1,   1,   1,   1, 
      1,   1,   1,   1,   1,   1, 
      1,   1,   1,   1, 127,  19, 
     49, 178, 245, 190,  16, 175, 
    239,  18, 125, 249,  28, 141, 
     25, 180,  69,  98, 222, 136, 
    137,  42, 133, 182, 247,  26, 
     66, 170,  79, 251, 251, 211, 
     13,  33,  96, 235,  51,  70, 
     92,  84,  55,   8, 190, 195, 
     63, 190, 193, 167,  38, 226, 
    178, 106, 232, 125, 222,  30, 
    204, 139,  22,  81, 107, 250, 
    239,  79, 179, 191, 231, 219, 
     46, 106, 219,  36, 231,  69, 
     76,  86,  27,  82, 121, 107, 
     13, 201, 103, 215, 103,  66, 
    113,  85,  21, 218,  47, 212, 
     45, 106, 158, 127, 159, 168, 
    109,  18, 205,  83, 140, 170, 
     13,  34, 207, 159, 226, 228, 
    249,  32, 226,  90,  25, 241, 
     70, 250, 108, 203,  68, 140, 
    170, 199,  54,  35,  35,   9, 
     43, 220, 109, 155, 106,  40, 
     97, 202,  78, 219,  12,  15, 
    194, 246,  39, 204, 154, 232, 
    240, 226,  29, 155,  45,  28, 
     82, 212, 145, 223, 133,  93, 
    157, 224, 126, 155,  35, 175, 
    176, 109, 113, 228,  20,  91, 
    172,  61, 227,  55, 224, 126, 
    187,  35,  37, 219,  14,  71, 
     86, 248, 158, 148, 109,  69, 
    121, 220, 233,  72, 117, 209, 
     54, 189, 185, 171, 150, 101, 
    242,  92, 151,  35, 195,  23, 
    112, 239, 101, 203, 155, 183, 
    121, 142, 176, 255,  60,  98, 
    152, 180, 204,  46,  30,  27, 
     24, 143,  91, 102,  47, 247, 
    133,  35,   7, 216, 134,  28, 
     57, 204,  22, 247, 158, 101, 
     27, 113,  36, 209, 230, 174, 
     46,  21, 122, 181,  61,  22, 
    215,  93, 185, 154, 230, 143, 
    123,  33, 198,  31, 251, 181, 
     37, 127, 204, 242, 193, 129, 
     70,  89, 215,  26, 151, 181, 
    101, 127, 204, 147, 117,  84, 
    141, 108, 242,  74, 175, 215, 
    181, 229, 122,  86,  27, 180, 
    115, 112, 240, 225, 250, 157, 
    141, 195, 183, 122, 254, 141, 
    182, 124,  70,  43, 244, 117, 
    126, 242, 221, 168, 174, 107, 
    127, 212, 107,  15,  32, 222, 
    159, 189, 230,  62,  76, 231, 
    211, 207,  75, 201, 242, 122, 
    113, 125,  37,  89,  42,  23, 
     51, 233, 213,  75, 238, 114, 
    230, 169, 155, 169, 148,  51, 
    197, 181, 116, 222, 125, 148, 
    173,  76, 184,  11, 197,  37, 
    247, 110, 102, 109,  57,  83, 
    116, 231, 198, 231,  82,  21, 
    119,  33, 151, 198, 160, 228, 
    222, 115, 210, 229, 165, 220, 
     98, 166, 178, 120, 243,  70, 
     37, 187,  94,  92,  77, 102, 
    243, 169,  84,  50, 151,  47, 
    229, 113,  65, 147,  25, 125, 
     61, 151, 209,  35, 208, 106, 
    250, 241,  26, 253,   2,   8, 
     77, 176,   0,   0,   0,   0, 
     53,  16,   0,   0, 191,   0, 
      0,   0,  21,   0,   1,   0, 
      0,  36,  23,   0, 120,   1, 
    237, 152,  75, 107,  83,  81, 
     16, 199,  39, 231, 158,  76, 
     82, 123, 147, 244, 105, 141, 
     53, 182,   5,   5,  65, 141, 
     77,  31, 248,   0, 109, 209, 
    130,  16,   4, 209,  22,  87, 
     23,  36, 182, 137, 145, 166, 
     15, 147,  40, 161, 200, 109, 
     90, 170, 171, 126,   4,  63, 
    131,  43, 183, 182,  21,  92, 
    214, 141,  11, 113,  83, 212, 
    181,  59,  21, 220,   8, 241, 
     63, 185, 247, 182, 117,  81, 
    183, 138, 156,  31, 252, 207, 
    100, 238, 121, 205, 153, 115, 
    178, 153,  19,  61, 212, 100, 
    105,  40,  25,  23, 251, 124, 
    118, 113, 248, 137,  34,  10, 
    139, 179, 143, 197,  46, 105, 
    137, 244,  97, 105, 137, 142, 
     73,  19, 130,  48, 118,   0, 
    198, 134, 166, 224, 143, 195, 
     74, 223,  41,  95,  30, 227, 
     91,  79, 209,  50, 116,  18, 
    122, 129,  57,  89, 216,  65, 
     40,   1, 201, 184,  67, 144, 
     16, 145,   6, 200,  88,  33, 
    240,  49, 229,  55, 100, 191, 
    163, 208, 254, 239,  18, 142, 
     16, 131,  44, 104,  23,   9, 
    240,   0, 198, 160,  63, 116, 
     55,  99, 147,  88, 130,  56, 
    130,  56, 101, 255, 127,  13, 
     57, 127, 112,  79, 130, 220, 
    199, 126, 228, 130, 131, 188, 
    188, 233, 150, 118,  47, 103, 
    223, 125,  95, 114,  33, 103, 
    219, 130,  14, 162,   1, 180, 
    252, 216,  71, 224, 203, 125, 
     48, 221,  28, 228, 208,  10, 
     49,  28, 198, 134, 140,  78, 
    198, 131,  98,  36, 146, 145, 
     72, 142,  66,  45,  16, 146, 
    201, 173,  16,  54, 100,  92, 
     26,  35,  64, 198, 131, 224, 
     54, 168,  29, 234, 128,  58, 
     33, 156, 137,  17,  31, 227, 
    237,  49, 222,  43,  31, 129, 
    146,  16,  30,   0, 247,  66, 
    120, 112, 156, 130, 142,  67, 
    125, 126,  44, 150, 119,  82, 
    185,  59, 129,  67, 222,  73, 
     89,  73, 132, 255,  63, 146, 
      3, 164, 121, 151, 102,  78, 
    128, 100,   1, 233, 109,  34, 
    255,  85, 131, 193,  96,  48, 
     24,  12,   6, 131, 193,  96, 
     48,  24,  12, 134, 191, 133, 
     26,  88, 221,  88,  76, 172, 
    111,  18, 189, 127,  23, 141, 
    133, 104, 149, 116, 150, 172, 
    181,  45,  21, 211, 110,  67, 
     51, 191, 221, 222, 190, 220, 
    208,  26, 118, 125, 204,  74, 
    176, 171,  18, 218,  93,  38, 
    140, 239, 255, 246, 197, 106, 
     81, 117, 177,  42, 166, 234, 
    107, 196,  89, 229, 175, 177, 
     66, 148, 149, 249,  20,  35, 
    172,  33, 115, 177,   6,  81, 
    211, 202, 124,  74, 144, 219, 
    156, 215, 238, 205, 167, 148, 
    170,  91,  49, 118,  27, 220, 
    230, 141, 101, 217, 119, 125, 
     44, 154, 104, 115, 101,  79, 
     25,  19, 237, 246, 198,  90, 
     73,  85, 127, 132, 120,  35, 
     73, 138,  87, 197,  14, 232, 
     56, 247, 144, 205, 125, 218, 
     14, 119, 147,  29,  78, 105, 
    187,  97, 253, 220, 144,  10, 
    140, 238,  36,  91, 247, 106, 
    251, 153,  82,  35, 118, 236, 
    194, 135,  16,  41, 170,  43, 
    114, 191,  42, 237, 198,  19, 
    158, 255,  80, 214, 200,  80, 
     92, 114,  16, 185, 168, 227, 
     20, 194, 247, 246,  14, 226, 
    115,  88, 243, 188, 182, 149, 
      5, 191, 179, 139, 194, 103, 
    177, 246, 168, 182, 117,  24, 
    126, 234,  56, 233, 211,  88, 
    123,  88, 219,  28, 129, 223, 
    215,  79, 209,  22,  88, 172, 
     71, 180, 178, 233, 151, 248, 
    154, 158,  40,   9,  73,  61, 
     40, 240, 131, 186,  80, 224, 
    139,   2,  52, 134, 158,   9, 
    106, 191, 190, 149, 241,  82, 
     87,  66, 112, 104, 247, 184, 
    225, 247,  79, 248,  86, 234, 
     80, 173, 208, 203, 157, 157, 
    215,  87, 110,  45, 127,  42, 
    250, 223, 103, 124,  43, 107, 
     72,  93, 245, 115, 118, 244, 
    213,  71, 255,  91, 221, 183, 
    119,  33, 153,  95, 184, 228, 
    220, 203, 149, 114,  75, 149, 
    116, 117, 161, 188,  48, 155, 
    174,  84, 203, 249, 220, 220, 
    144,  51, 147, 127, 236, 228, 
    107, 213, 124, 121,  62,  87, 
    114, 238,  23, 106,  35, 206, 
    100, 121, 218, 185, 157, 159, 
    159, 201, 151, 157, 137, 225, 
    137,  76, 205, 153,  44, 230, 
    224,  84, 156,  59,  87, 115, 
    213, 233, 226,  84, 190,  54, 
    117, 253,  90, 173, 176,  80, 
    158,  75,  23,  74, 153,  76, 
    186,  88, 170, 148, 176, 129, 
    199,  15, 127,  91,  41, 127, 
     75, 201, 119,  46, 247,  96, 
    158, 126,   1,   2, 209, 152, 
    231,   0,  83,  84,  65,  84, 
    148,   0,   0,   0,  17,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   6,   0, 
      0,   0,   6,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   4,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0
};
