#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler_tex[0]                    sampler      NA          NA    0        1
// sampler_tex[1]                    sampler      NA          NA    1        1
// tex[0]                            texture  float4          2d    0        1
// tex[1]                            texture  float4          2d    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1     zw        0     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[239]
// Embedded Data:
//  0x000000ef - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x000000ea - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v0.xy
dcl_input_ps linear v0.zw
dcl_output o0.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v0.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v0.zwzz, t1.xyzw, s1
add r0.xyzw, r0.xyzw, -r1.xyzw
lt r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r0.xyzw
lt r2.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
frc r0.xyzw, r0.xyzw
iadd r1.xyzw, -r1.xyzw, r2.xyzw
itof r1.xyzw, r1.xyzw
add r1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
lt r2.xyzw, r1.xyzw, l(-0.000000, -0.000000, -0.000000, -0.000000)
lt r1.xyzw, l(-0.000000, -0.000000, -0.000000, -0.000000), r1.xyzw
iadd r1.xyzw, -r2.xyzw, r1.xyzw
itof r1.xyzw, r1.xyzw
add r1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r0.xyzw, r1.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922), r0.xyzw
dp3 r1.x, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
lt r1.y, l(0.000000), r1.x
lt r1.x, r1.x, l(0.000000)
iadd r1.x, -r1.y, r1.x
itof r1.x, r1.x
mov r2.xyz, r0.xyzx
mov r2.w, l(1.000000)
mov r0.xyz, l(1.000000,1.000000,1.000000,0)
add r2.xyzw, -r0.zzzw, r2.xyzw
mad o0.xyzw, r1.xxxx, r2.xyzw, r0.xyzw
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[239], bundle is:[215] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\FDrawableCompare.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, param0, paramSlot 0, DefaultVal={0,0,0,0}

codeLenInByte        = 576;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0:1]
extUserElementCount  = 4;
;  extUserElements 1[0] = IMM_RESOURCE, 0, offset 0:7 dwords
;  extUserElements 1[1] = IMM_RESOURCE, 1, offset 8:15 dwords
;  extUserElements 1[2] = IMM_SAMPLER, 0, offset 16:19 dwords
;  extUserElements 1[3] = IMM_SAMPLER, 1, offset 20:23 dwords
NumVgprs             = 13;
NumSgprs             = 30;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000003
; constBufUsage           = 0x00000000

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000001
SPIC:NUM_INTERP             = 1
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[28:29], exec                          // 000000000000: BE9C047E
  s_wqm_b64     exec, exec                              // 000000000004: BEFE0A7E
  s_mov_b32     m0, s2                                  // 000000000008: BEFC0302
  s_load_dwordx8  s[4:11], s[0:1], 0x00                 // 00000000000C: C0C20100
  s_load_dwordx8  s[20:27], s[0:1], 0x10                // 000000000010: C0CA0110
  v_interp_p1_f32  v2, v0, attr0.x                      // 000000000014: C8080000
  v_interp_p1_f32  v3, v0, attr0.y                      // 000000000018: C80C0100
  v_interp_p2_f32  v2, v1, attr0.x                      // 00000000001C: C8090001
  v_interp_p2_f32  v3, v1, attr0.y                      // 000000000020: C80D0101
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[5:8], v[2:3], s[4:11], s[20:23] dmask:0xf // 000000000028: F0800F00 00A10502
  s_load_dwordx8  s[12:19], s[0:1], 0x08                // 000000000030: C0C60108
  v_interp_p1_f32  v9, v0, attr0.z                      // 000000000034: C8240200
  v_interp_p1_f32  v10, v0, attr0.w                     // 000000000038: C8280300
  v_interp_p2_f32  v9, v1, attr0.z                      // 00000000003C: C8250201
  v_interp_p2_f32  v10, v1, attr0.w                     // 000000000040: C8290301
  s_waitcnt     lgkmcnt(0)                              // 000000000044: BF8C007F
  image_sample  v[0:3], v[9:10], s[12:19], s[24:27] dmask:0xf // 000000000048: F0800F00 00C30009
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000050: BF8C0F70
  v_sub_f32     v1, v6, v1                              // 000000000054: 08020306
  v_sub_f32     v2, v7, v2                              // 000000000058: 08040507
  v_cmp_lt_f32  s[0:1], v1, 0                           // 00000000005C: D0020000 00010101
  v_sub_f32     v0, v5, v0                              // 000000000064: 08000105
  v_cmp_lt_f32  s[2:3], v2, 0                           // 000000000068: D0020002 00010102
  v_cmp_gt_f32  s[4:5], v1, 0                           // 000000000070: D0080004 00010101
  v_cndmask_b32  v4, 0, -1, s[0:1]                      // 000000000078: D2000004 00018280
  v_cmp_gt_f32  s[6:7], v2, 0                           // 000000000080: D0080006 00010102
  v_cmp_lt_f32  s[8:9], v0, 0                           // 000000000088: D0020008 00010100
  v_cndmask_b32  v5, 0, -1, s[2:3]                      // 000000000090: D2000005 00098280
  v_addc_u32    v4, vcc, v4, 0, s[4:5]                  // 000000000098: D2506A04 00110104
  v_cmp_gt_f32  s[0:1], v0, 0                           // 0000000000A0: D0080000 00010100
  v_cndmask_b32  v6, 0, -1, s[8:9]                      // 0000000000A8: D2000006 00218280
  v_addc_u32    v5, vcc, v5, 0, s[6:7]                  // 0000000000B0: D2506A05 00190105
  v_addc_u32    v6, vcc, v6, 0, s[0:1]                  // 0000000000B8: D2506A06 00010106
  v_sub_f32     v3, v8, v3                              // 0000000000C0: 08060708
  v_cvt_f32_i32  v4, v4                                 // 0000000000C4: 7E080B04
  v_cmp_lt_f32  s[0:1], v3, 0                           // 0000000000C8: D0020000 00010103
  v_cvt_f32_i32  v5, v5                                 // 0000000000D0: 7E0A0B05
  v_add_f32     v4, 1.0, v4                             // 0000000000D4: 060808F2
  v_mov_b32     v7, 0x80000000                          // 0000000000D8: 7E0E02FF 80000000
  v_cndmask_b32  v8, 0, -1, s[0:1]                      // 0000000000E0: D2000008 00018280
  v_cvt_f32_i32  v6, v6                                 // 0000000000E8: 7E0C0B06
  v_add_f32     v5, 1.0, v5                             // 0000000000EC: 060A0AF2
  v_cmp_gt_f32  s[2:3], v4, v7                          // 0000000000F0: D0080002 00020F04
  v_cmp_gt_f32  s[6:7], v3, 0                           // 0000000000F8: D0080006 00010103
  v_cmp_lt_f32  s[0:1], v4, v7                          // 000000000100: D0020000 00020F04
  v_add_f32     v6, 1.0, v6                             // 000000000108: 060C0CF2
  s_nop         0x0000                                  // 00000000010C: BF800000
  v_cmp_gt_f32  s[4:5], v5, v7                          // 000000000110: D0080004 00020F05
  v_cmp_lt_f32  s[8:9], v5, v7                          // 000000000118: D0020008 00020F05
  v_cndmask_b32  v4, 0, -1, s[2:3]                      // 000000000120: D2000004 00098280
  v_addc_u32    v8, vcc, v8, 0, s[6:7]                  // 000000000128: D2506A08 00190108
  v_cmp_gt_f32  s[10:11], v6, v7                        // 000000000130: D008000A 00020F06
  v_cndmask_b32  v5, 0, -1, s[4:5]                      // 000000000138: D2000005 00118280
  v_cmp_lt_f32  s[2:3], v6, v7                          // 000000000140: D0020002 00020F06
  v_addc_u32    v4, vcc, v4, 0, s[0:1]                  // 000000000148: D2506A04 00010104
  v_cndmask_b32  v6, 0, -1, s[10:11]                    // 000000000150: D2000006 00298280
  v_addc_u32    v5, vcc, v5, 0, s[8:9]                  // 000000000158: D2506A05 00210105
  v_cvt_f32_i32  v8, v8                                 // 000000000160: 7E100B08
  v_cvt_f32_i32  v4, v4                                 // 000000000164: 7E080B04
  v_addc_u32    v6, vcc, v6, 0, s[2:3]                  // 000000000168: D2506A06 00090106
  v_cvt_f32_i32  v5, v5                                 // 000000000170: 7E0A0B05
  v_fract_f32   v1, v1                                  // 000000000174: 7E024101
  v_add_f32     v8, 1.0, v8                             // 000000000178: 061010F2
  v_add_f32     v4, 1.0, v4                             // 00000000017C: 060808F2
  v_mov_b32     v9, 0x3b808081                          // 000000000180: 7E1202FF 3B808081
  v_fract_f32   v2, v2                                  // 000000000188: 7E044102
  v_cvt_f32_i32  v6, v6                                 // 00000000018C: 7E0C0B06
  v_add_f32     v5, 1.0, v5                             // 000000000190: 060A0AF2
  v_cmp_gt_f32  s[0:1], v8, v7                          // 000000000194: D0080000 00020F08
  v_mac_legacy_f32  v1, v4, v9                          // 00000000019C: 0C021304
  v_fract_f32   v0, v0                                  // 0000000001A0: 7E004100
  v_add_f32     v6, 1.0, v6                             // 0000000001A4: 060C0CF2
  v_mac_legacy_f32  v2, v5, v9                          // 0000000001A8: 0C041305
  v_cmp_lt_f32  vcc, v8, v7                             // 0000000001AC: 7C020F08
  v_cndmask_b32  v4, 0, -1, s[0:1]                      // 0000000001B0: D2000004 00018280
  v_mac_legacy_f32  v0, v6, v9                          // 0000000001B8: 0C001306
  v_add_f32     v5, v1, v2                              // 0000000001BC: 060A0501
  v_addc_u32    v4, vcc, v4, 0, vcc                     // 0000000001C0: D2506A04 01A90104
  v_add_f32     v5, v0, v5                              // 0000000001C8: 060A0B00
  v_cvt_f32_i32  v4, v4                                 // 0000000001CC: 7E080B04
  v_cmp_lt_f32  s[0:1], v5, 0                           // 0000000001D0: D0020000 00010105
  v_fract_f32   v3, v3                                  // 0000000001D8: 7E064103
  v_add_f32     v4, 1.0, v4                             // 0000000001DC: 060808F2
  v_cmp_lt_f32  vcc, 0, v5                              // 0000000001E0: 7C020A80
  v_cndmask_b32  v5, 0, -1, s[0:1]                      // 0000000001E4: D2000005 00018280
  v_mac_legacy_f32  v3, v4, v9                          // 0000000001EC: 0C061304
  v_addc_u32    v4, vcc, v5, 0, vcc                     // 0000000001F0: D2506A04 01A90105
  v_cvt_f32_i32  v4, v4                                 // 0000000001F8: 7E080B04
  v_add_f32     v0, -1.0, v0                            // 0000000001FC: 060000F3
  v_add_f32     v1, -1.0, v1                            // 000000000200: 060202F3
  v_add_f32     v2, -1.0, v2                            // 000000000204: 060404F3
  v_sub_f32     v5, 1.0, v3                             // 000000000208: 080A06F2
  v_mad_legacy_f32  v0, v4, v0, 1.0                     // 00000000020C: D2800000 03CA0104
  v_mad_legacy_f32  v1, v4, v1, 1.0                     // 000000000214: D2800001 03CA0304
  v_mad_legacy_f32  v2, v4, v2, 1.0                     // 00000000021C: D2800002 03CA0504
  v_mac_legacy_f32  v3, v4, v5                          // 000000000224: 0C060B04
  s_mov_b64     exec, s[28:29]                          // 000000000228: BEFE041C
  v_cvt_pkrtz_f16_f32  v0, v0, v1                       // 00000000022C: 5E000300
  v_cvt_pkrtz_f16_f32  v1, v2, v3                       // 000000000230: 5E020702
  exp           mrt0, v0, v0, v1, v1 compr vm           // 000000000234: F800140F 00000100
  s_endpgm                                              // 00000000023C: BF810000
end


// Approximately 26 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_FDrawableCompare[] =
{
     68,  88,  66,  67,  97, 170, 
     35, 251, 228,  54, 116, 189, 
     10,  36,  47, 165, 246, 147, 
    209, 162,   1,   0,   0,   0, 
    164,   9,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     96,   1,   0,   0, 172,   1, 
      0,   0, 224,   1,   0,   0, 
      8,   9,   0,   0,  82,  68, 
     69,  70,  36,   1,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    255, 255,   0, 129,   0,   0, 
    232,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
    188,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0, 203,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   1,   0,   0,   0, 
      1,   0,   0,   0, 218,   0, 
      0,   0,   2,   0,   0,   0, 
      5,   0,   0,   0,   4,   0, 
      0,   0, 255, 255, 255, 255, 
      0,   0,   0,   0,   1,   0, 
      0,   0,  13,   0,   0,   0, 
    225,   0,   0,   0,   2,   0, 
      0,   0,   5,   0,   0,   0, 
      4,   0,   0,   0, 255, 255, 
    255, 255,   1,   0,   0,   0, 
      1,   0,   0,   0,  13,   0, 
      0,   0, 115,  97, 109, 112, 
    108, 101, 114,  95, 116, 101, 
    120,  91,  48,  93,   0, 115, 
     97, 109, 112, 108, 101, 114, 
     95, 116, 101, 120,  91,  49, 
     93,   0, 116, 101, 120,  91, 
     48,  93,   0, 116, 101, 120, 
     91,  49,  93,   0,  77, 105, 
     99, 114, 111, 115, 111, 102, 
    116,  32,  40,  82,  41,  32, 
     72,  76,  83,  76,  32,  83, 
    104,  97, 100, 101, 114,  32, 
     67, 111, 109, 112, 105, 108, 
    101, 114,  32,  70, 111, 114, 
     32,  68, 117, 114,  97, 110, 
    103, 111,  32,  57,  46,  51, 
     48,  46,  49,  50,  48,  57, 
     56,  46,  48,   0,  73,  83, 
     71,  78,  68,   0,   0,   0, 
      2,   0,   0,   0,   8,   0, 
      0,   0,  56,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   3,   3, 
      0,   0,  56,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  12,  12, 
      0,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
    171, 171,  79,  83,  71,  78, 
     44,   0,   0,   0,   1,   0, 
      0,   0,   8,   0,   0,   0, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
     83,  86,  95,  84,  97, 114, 
    103, 101, 116,   0, 171, 171, 
     83,  72,  69,  88,  32,   7, 
      0,   0,  80,   0,   0,   0, 
    200,   1,   0,   0,  53,  16, 
      0,   0,   5,   0,   0,   0, 
    239,   0,   0,   0,  80,   0, 
      0,   0, 234,   0,   0,   0, 
    106,   8,   0,   1,  90,   0, 
      0,   3,   0,  96,  16,   0, 
      0,   0,   0,   0,  90,   0, 
      0,   3,   0,  96,  16,   0, 
      1,   0,   0,   0,  88,  24, 
      0,   4,   0, 112,  16,   0, 
      0,   0,   0,   0,  85,  85, 
      0,   0,  88,  24,   0,   4, 
      0, 112,  16,   0,   1,   0, 
      0,   0,  85,  85,   0,   0, 
     98,  16,   0,   3,  50,  16, 
     16,   0,   0,   0,   0,   0, 
     98,  16,   0,   3, 194,  16, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    104,   0,   0,   2,   3,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 242,   0,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     70, 126,  16,   0,   0,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,  69,   0, 
      0, 139, 194,   0,   0, 128, 
     67,  85,  21,   0, 242,   0, 
     16,   0,   1,   0,   0,   0, 
    230,  26,  16,   0,   0,   0, 
      0,   0,  70, 126,  16,   0, 
      1,   0,   0,   0,   0,  96, 
     16,   0,   1,   0,   0,   0, 
      0,   0,   0,   8, 242,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  14,  16,   0,   0,   0, 
      0,   0,  70,  14,  16, 128, 
     65,   0,   0,   0,   1,   0, 
      0,   0,  49,   0,   0,  10, 
    242,   0,  16,   0,   1,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   0,   0,   0,   0, 
     49,   0,   0,  10, 242,   0, 
     16,   0,   2,   0,   0,   0, 
     70,  14,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  26,   0, 
      0,   5, 242,   0,  16,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   0,   0,   0,   0, 
     30,   0,   0,   8, 242,   0, 
     16,   0,   1,   0,   0,   0, 
     70,  14,  16, 128,  65,   0, 
      0,   0,   1,   0,   0,   0, 
     70,  14,  16,   0,   2,   0, 
      0,   0,  43,   0,   0,   5, 
    242,   0,  16,   0,   1,   0, 
      0,   0,  70,  14,  16,   0, 
      1,   0,   0,   0,   0,   0, 
      0,  10, 242,   0,  16,   0, 
      1,   0,   0,   0,  70,  14, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0, 128,  63,   0,   0, 
    128,  63,  49,   0,   0,  10, 
    242,   0,  16,   0,   2,   0, 
      0,   0,  70,  14,  16,   0, 
      1,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0, 128, 
      0,   0,   0, 128,   0,   0, 
      0, 128,   0,   0,   0, 128, 
     49,   0,   0,  10, 242,   0, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0, 128,   0,   0,   0, 128, 
      0,   0,   0, 128,   0,   0, 
      0, 128,  70,  14,  16,   0, 
      1,   0,   0,   0,  30,   0, 
      0,   8, 242,   0,  16,   0, 
      1,   0,   0,   0,  70,  14, 
     16, 128,  65,   0,   0,   0, 
      2,   0,   0,   0,  70,  14, 
     16,   0,   1,   0,   0,   0, 
     43,   0,   0,   5, 242,   0, 
     16,   0,   1,   0,   0,   0, 
     70,  14,  16,   0,   1,   0, 
      0,   0,   0,   0,   0,  10, 
    242,   0,  16,   0,   1,   0, 
      0,   0,  70,  14,  16,   0, 
      1,   0,   0,   0,   2,  64, 
      0,   0,   0,   0, 128,  63, 
      0,   0, 128,  63,   0,   0, 
    128,  63,   0,   0, 128,  63, 
     50,   0,   0,  12, 242,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  14,  16,   0,   1,   0, 
      0,   0,   2,  64,   0,   0, 
    129, 128, 128,  59, 129, 128, 
    128,  59, 129, 128, 128,  59, 
    129, 128, 128,  59,  70,  14, 
     16,   0,   0,   0,   0,   0, 
     16,   0,   0,  10,  18,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128,  63,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0,   0,   0,  49,   0, 
      0,   7,  34,   0,  16,   0, 
      1,   0,   0,   0,   1,  64, 
      0,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   1,   0, 
      0,   0,  49,   0,   0,   7, 
     18,   0,  16,   0,   1,   0, 
      0,   0,  10,   0,  16,   0, 
      1,   0,   0,   0,   1,  64, 
      0,   0,   0,   0,   0,   0, 
     30,   0,   0,   8,  18,   0, 
     16,   0,   1,   0,   0,   0, 
     26,   0,  16, 128,  65,   0, 
      0,   0,   1,   0,   0,   0, 
     10,   0,  16,   0,   1,   0, 
      0,   0,  43,   0,   0,   5, 
     18,   0,  16,   0,   1,   0, 
      0,   0,  10,   0,  16,   0, 
      1,   0,   0,   0,  54,   0, 
      0,   5, 114,   0,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   5, 130,   0, 
     16,   0,   2,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  54,   0,   0,   8, 
    114,   0,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128,  63,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0,   0,   0,   0,   0, 
      0,   8, 242,   0,  16,   0, 
      2,   0,   0,   0, 166,  14, 
     16, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   2,   0,   0,   0, 
     50,   0,   0,   9, 242,  32, 
     16,   0,   0,   0,   0,   0, 
      6,   0,  16,   0,   1,   0, 
      0,   0,  70,  14,  16,   0, 
      2,   0,   0,   0,  70,  14, 
     16,   0,   0,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 217,   0,   0,   0, 
     21,   0,   1,   0,  41,  39, 
     12,   0, 120,   1, 237,  86, 
     49, 107,  20,  65,  20, 126, 
     51, 187,  59, 153, 219, 219, 
    120, 167,  73,  97,  32, 136, 
    130, 209, 216,   4, 163,  86, 
     10, 146, 195,  32, 150, 193, 
     20,  66,  88,  66,  54, 102, 
     99,  52, 151,  68,  46,  81, 
     15, 145, 117,  35, 118,  90, 
    216, 217, 216,  88,   8, 241, 
     15, 136, 133, 228, 130, 138, 
     28, 169,  66, 126, 129, 216, 
    218, 200,  69,  65,  68,  18, 
    191,  55, 187,  27,  23,  33, 
     93,  64, 193,  60, 248, 230, 
    205, 247, 102, 246, 205,  55, 
    111, 142, 155,  57, 238, 145, 
    177, 153, 158, 175, 221, 236, 
     95, 213, 151, 166, 151,  44, 
     34,   7, 125,   1, 176, 103, 
    171, 107, 110, 137, 116, 145, 
     91, 162,  94, 110, 120, 130, 
     36, 106, 135,  59,   4,  12, 
    160,  63,   0, 207,  99,  25, 
     18,  27,  88, 121, 143, 182, 
     19,  40,   3, 199, 144, 127, 
      2, 254,  60, 192, 115, 174, 
      0,  44, 131, 211, 177,  33, 
    205, 182, 101, 235, 219, 220, 
    228, 172,   4, 116,   1,  61, 
      0, 207, 103, 121,  72, 107, 
    140, 125,  62, 135, 153, 180, 
    131,  77,   2, 172, 127,  39, 
     99, 109,  89,  46, 214, 151, 
    150, 203, 236, 247, 111,  91, 
     82, 175, 164, 205, 246, 158, 
    157,  19,  27, 159,  71, 222, 
    246,   1, 201, 108, 162, 215, 
     46, 183, 191, 235, 218,  76, 
    121, 118, 150,  43, 192,  78, 
    182,   5,  59, 200, 157, 156, 
    101, 156, 243,  43, 115,  58, 
    255, 175, 101,  53, 229,  90, 
    240,  17, 240, 111,  62,  95, 
     17,  30, 127,   4,  16, 197, 
     13, 198, 147, 131, 244, 157, 
     89, 198, 197,  31, 220,  98, 
    206, 201, 242, 156,  15, 220, 
    162,  81, 217,  38,  71,  75, 
    221, 233, 184,  69,  62, 184, 
    159, 227,  35, 224,  35,  57, 
     62,   6,  62, 150, 227, 227, 
    224, 227, 219,  60, 205,  95, 
     50, 235,  73, 139, 207,  25, 
    193, 232,  95, 198, 158, 198, 
    221, 193, 158, 198, 221, 193, 
    158, 198,  93, 131, 177, 200, 
    126, 182,  28, 185, 155, 203, 
    210, 250, 185,  76, 226, 237, 
     74,  89, 172, 226, 106, 210, 
     77,  18,  94,  83,  80, 161, 
     41,  68, 123, 243,  62,  61, 
    110,  80,  41, 254,  34, 157, 
    231, 164, 197, 135,  21, 146, 
     71, 155, 100, 245,  54, 133, 
    236, 105,  10, 235, 196, 246, 
    120, 129, 222, 209, 205, 210, 
    227, 134, 178, 164, 110, 115, 
    108, 220, 148, 114,  77,   8, 
     65, 142,  32,  45, 209, 151, 
    232, 219, 164,  77,  12, 255, 
    209, 235, 241,   3, 129, 187, 
     76, 155, 184, 198,  56, 193, 
    227,  61, 130, 120, 129, 236, 
     27,  67, 235, 182, 216,  15, 
    133, 218, 196, 149, 137,  31, 
     33,   7, 113,  71, 116, 145, 
    130,  87, 136, 235,  54, 165, 
    237, 162, 198, 126, 228, 154, 
      5, 238,  20, 221, 168, 165, 
    181, 218, 146, 251, 120, 143, 
     49,  68, 224,  59, 124,  95, 
    244, 162, 150, 235,  42, 137, 
    124, 118,  73, 154, 117, 121, 
     62, 127, 199, 188, 229, 121, 
     88,  34, 110, 176,  62,   7, 
    156, 245, 176,  79, 116,  22, 
     72,  99,  61, 141, 117,  93, 
    140,  43, 196,  19, 157, 251, 
    113, 255,  72, 195,  19, 189, 
    153, 206,  19, 169, 206,  35, 
    120, 207, 149,  35, 214, 151, 
    232,  45,  24, 125, 162,  34, 
    163,  86, 185, 172,  18, 157, 
      7, 162, 197,  56,  62,  39, 
     43, 118, 148, 105, 228,  61, 
    107, 206, 217,  33,  61, 170, 
     80, 196, 218, 156,  14, 219, 
     67, 236, 222, 118, 221,  58, 
    200,  19, 142, 171, 146, 117, 
     95,  10,  42, 162, 159, 214, 
    193, 129,  14, 171, 162,  76, 
     29,  98,  87, 222,  75, 180, 
    162, 230,  29, 202, 227, 249, 
     14, 230, 243, 220,  13,  60, 
     37,  54, 164,  84,  27, 182, 
    173,  90, 202,  69, 169,  98, 
    228,  90, 181,   4, 123, 107, 
    213, 146, 236, 157,  85, 203, 
     46,  42, 175, 219, 222,  92, 
    198, 125, 150, 220, 135, 157, 
    217, 125, 182, 216, 224,  55, 
    162, 233, 194, 254, 120,  14, 
    161, 134, 201,  16,  55, 232, 
     27, 110,   2,  48, 190, 179, 
    177,  23, 195,  25, 252, 118, 
    101, 126,  50, 125, 255,  30, 
     78, 125,  58,  15, 111,  43, 
    158, 245, 219, 134, 210, 241, 
     75, 169, 231, 252, 220,  61, 
     89, 121,  17, 126, 126, 122, 
    235,  91,  53, 141,  79, 165, 
    158, 115, 240,  19, 108, 250, 
    205, 240, 199,  79, 105, 236, 
     97, 234,  71,   1, 254, 126, 
    242, 172,  63,  30,  84, 131, 
    187, 243, 125,  11, 115, 181, 
    185, 233, 190, 249, 133,  90, 
     24, 204, 156, 242,  39, 194, 
    219, 126,  88,  95,   8, 107, 
    179,  65, 213, 191,  54,  89, 
     63, 227,  15, 215, 174, 250, 
    151, 195, 217, 137, 176, 230, 
     15, 158,  30, 236, 175, 251, 
    195,  83,   1, 200, 188, 127, 
    113, 176,  22, 220,   9, 198, 
    171, 225, 133, 185, 153, 155, 
     65,  45, 236, 155, 172, 246, 
    247, 247,  77,  85, 231, 171, 
    200, 159, 216, 143, 116,  85, 
    156,  10, 181,   1,  51, 193, 
    245,  89, 250,   5, 204, 150, 
    123,  43,  83,  84,  65,  84, 
    148,   0,   0,   0,  26,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,  14,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   4,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0
};
