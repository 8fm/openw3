#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler_tex                       sampler      NA          NA    0        1
// tex                               texture  float4          2d    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float      w
// COLOR                    1   xyzw        1     NONE   float   x  w
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[65]
// Embedded Data:
//  0x00000041 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000003c - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v0.w
dcl_input_ps linear v1.xw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 1
sample_indexable(texture2d)(float,float,float,float) r0.x, v2.xyxx, t0.wxyz, s0
add r0.x, r0.x, -v0.w
mad r0.x, v1.x, r0.x, v0.w
mul o0.xyzw, r0.xxxx, v1.wwww
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[65], bundle is:[143] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\FTexTGVertexEAlphaInv.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask  8, param0, paramSlot 0, DefaultVal={0,0,0,0};   [1] generic, usageIdx  1, channelMask  9, param1, paramSlot 1, DefaultVal={0,0,0,0};   [2] generic, usageIdx  2, channelMask  3, param2, paramSlot 2, DefaultVal={0,0,0,0}

codeLenInByte        = 112;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0:1]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_RESOURCE, 0, offset 0:7 dwords
;  extUserElements 1[1] = IMM_SAMPLER, 0, offset 8:11 dwords
NumVgprs             = 6;
NumSgprs             = 14;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000000

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000003
SPIC:NUM_INTERP             = 3
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[12:13], exec                          // 000000000000: BE8C047E
  s_wqm_b64     exec, exec                              // 000000000004: BEFE0A7E
  s_mov_b32     m0, s2                                  // 000000000008: BEFC0302
  s_load_dwordx8  s[4:11], s[0:1], 0x00                 // 00000000000C: C0C20100
  s_load_dwordx4  s[0:3], s[0:1], 0x08                  // 000000000010: C0800108
  v_interp_p1_f32  v2, v0, attr2.x                      // 000000000014: C8080800
  v_interp_p1_f32  v3, v0, attr2.y                      // 000000000018: C80C0900
  v_interp_p2_f32  v2, v1, attr2.x                      // 00000000001C: C8090801
  v_interp_p2_f32  v3, v1, attr2.y                      // 000000000020: C80D0901
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[2:5], v[2:3], s[4:11], s[0:3] dmask:0x8 // 000000000028: F0800800 00010202
  v_interp_p1_f32  v3, v0, attr0.w                      // 000000000030: C80C0300
  v_interp_p1_f32  v4, v0, attr1.x                      // 000000000034: C8100400
  v_interp_p2_f32  v3, v1, attr0.w                      // 000000000038: C80D0301
  v_interp_p1_f32  v0, v0, attr1.w                      // 00000000003C: C8000700
  v_interp_p2_f32  v4, v1, attr1.x                      // 000000000040: C8110401
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000044: BF8C0F70
  v_sub_f32     v2, v2, v3                              // 000000000048: 08040702
  v_interp_p2_f32  v0, v1, attr1.w                      // 00000000004C: C8010701
  v_mac_legacy_f32  v3, v4, v2                          // 000000000050: 0C060504
  v_mul_legacy_f32  v0, v3, v0                          // 000000000054: 0E000103
  s_mov_b64     exec, s[12:13]                          // 000000000058: BEFE040C
  v_cvt_pkrtz_f16_f32  v0, v0, v0                       // 00000000005C: 5E000100
  s_nop         0x0000                                  // 000000000060: BF800000
  exp           mrt0, v0, v0, v0, v0 compr vm           // 000000000064: F800140F 00000000
  s_endpgm                                              // 00000000006C: BF810000
end


// Approximately 5 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_FTexTGVertexEAlphaInv[] =
{
     68,  88,  66,  67, 234,  69, 
    171,  81, 179,   4,  33,  10, 
    154,  55, 131,  23,  99, 104, 
    125,  60,   1,   0,   0,   0, 
    140,   5,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
      4,   1,   0,   0, 108,   1, 
      0,   0, 160,   1,   0,   0, 
    240,   4,   0,   0,  82,  68, 
     69,  70, 200,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    255, 255,   0, 129,   0,   0, 
    140,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
    124,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   0,   0,   5,   0, 
      0,   0,   4,   0,   0,   0, 
    255, 255, 255, 255,   0,   0, 
      0,   0,   1,   0,   0,   0, 
     13,   0,   0,   0, 115,  97, 
    109, 112, 108, 101, 114,  95, 
    116, 101, 120,   0, 116, 101, 
    120,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
     96,   0,   0,   0,   3,   0, 
      0,   0,   8,   0,   0,   0, 
     80,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   8,   0,   0, 
     80,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   9,   0,   0, 
     86,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   3,   3,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0, 171,  79,  83, 
     71,  78,  44,   0,   0,   0, 
      1,   0,   0,   0,   8,   0, 
      0,   0,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,  83,  86,  95,  84, 
     97, 114, 103, 101, 116,   0, 
    171, 171,  83,  72,  69,  88, 
     72,   3,   0,   0,  80,   0, 
      0,   0, 210,   0,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0,  65,   0,   0,   0, 
     80,   0,   0,   0,  60,   0, 
      0,   0, 106,   8,   0,   1, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  98,  16, 
      0,   3, 130,  16,  16,   0, 
      0,   0,   0,   0,  98,  16, 
      0,   3, 146,  16,  16,   0, 
      1,   0,   0,   0,  98,  16, 
      0,   3,  50,  16,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 104,   0, 
      0,   2,   1,   0,   0,   0, 
     69,   0,   0, 139, 194,   0, 
      0, 128,  67,  85,  21,   0, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  70,  16,  16,   0, 
      2,   0,   0,   0,  54, 121, 
     16,   0,   0,   0,   0,   0, 
      0,  96,  16,   0,   0,   0, 
      0,   0,   0,   0,   0,   8, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  58,  16, 
     16, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,  50,   0, 
      0,   9,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,  16, 
     16,   0,   1,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  58,  16,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 242,  32,  16,   0, 
      0,   0,   0,   0,   6,   0, 
     16,   0,   0,   0,   0,   0, 
    246,  31,  16,   0,   1,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 145,   0, 
      0,   0,  21,   0,   1,   0, 
     41,  60,  10,   0, 120,   1, 
    237,  86, 207, 107,  19,  65, 
     24, 253, 102, 119, 155, 236, 
    214, 205, 143, 162,  96,  11, 
     30,   4,  17,  60,   5,  83, 
     61, 137, 135,   8, 213, 226, 
    165,   7,  91,  68, 100, 145, 
    110, 219, 141,  17, 183, 105, 
    216,  13, 101,  41,  37, 198, 
    147,  30, 114, 240, 224,  81, 
    240, 127,  16, 207,  73, 240, 
    180,  39,  61, 248,  71, 232, 
    177,  55, 123, 144, 234, 247, 
    118, 103, 234, 186, 152,  91, 
     64, 193,  60, 120, 223, 203, 
    155,  31,  95, 102, 103, 134, 
    153, 185,  57,  79,   9, 222, 
    126, 121, 183,   0, 125, 113, 
    246, 115, 241, 136, 117, 142, 
     41, 164,   2, 145, 137,  72, 
    180, 104,  33,  18,  93,  65, 
     64,   3, 141, 168, 192,  82, 
    102, 118, 152,  13,  38, 234, 
     20,  83,  52, 198,  33, 199, 
     42,  19, 109,  63, 114, 191, 
     85, 214, 243,  76, 238, 158, 
    244,  69,  90, 164,   3, 148, 
      2,  58,   2, 195,  64, 200, 
     33,  91, 134, 207,  64,  46, 
      0, 154, 205,  65, 151,  17, 
    254, 140,  37,  38, 198,  52, 
      9,  24, 155, 202,   5, 149, 
    159, 159, 148, 255, 109, 164, 
    227, 202, 198,  95, 235,   4, 
     96,  61, 178, 200, 126, 203, 
     87, 217,  78, 205, 217, 177, 
    244, 152,  11, 180,  27,  51, 
     39, 225,   7, 195, 198, 143, 
     12, 148, 199, 122,  21,  40, 
     77,  86,  16,  75, 116,  17, 
    170,  93,  74, 246, 197, 255, 
      2, 181,  47,  49,  23, 152, 
     95, 236, 251,  10,  83,   1, 
    245, 216, 251,  68, 253,  17, 
    248, 106, 145, 142, 225, 148, 
     23,  57, 175,  79, 242, 130, 
     30, 193,  87,  46, 156, 122, 
     39, 231,  31, 230, 252, 102, 
    206, 111, 253, 230, 249, 119, 
    226, 101, 126, 172,  51,  75, 
    239,  95, 230, 108, 140, 211, 
    225, 108, 140, 211, 225, 108, 
    140,  83,  99, 130, 158,  49, 
     24, 246, 230,  79, 134, 154, 
    254, 125,  72, 226, 195, 216, 
     20, 253,  49, 153, 102,  76, 
    150,  29,  11, 211, 138, 133, 
     85, 138, 159, 209,  96,  68, 
    102, 255,  72, 211, 248, 118, 
    211, 237, 152, 140, 106,  44, 
    244,  82,  76,  69, 138, 133, 
    177,  16, 119,  42, 131, 145, 
     86,  52,  76,  81,  20, 177, 
     49,  87, 176, 117,  65, 101, 
    219,  56, 225, 124, 242, 252, 
     60, 167, 206, 191, 231,  35, 
    188,   7, 212,  29, 169, 238, 
     70,   5, 190, 213, 132, 170, 
    195,  13, 199, 231, 184, 104, 
    200,   7, 193,  85, 169,  56, 
    235, 113, 190, 151,  79, 179, 
    164, 216, 148, 245,  15, 164, 
    162, 255,  25, 102, 105, 237, 
    125, 248, 210, 248,  84,  61, 
    148, 229, 145,  84, 228, 192, 
    155, 102, 205, 234, 189, 249, 
     38, 203,  94,  75, 221, 102, 
    162, 127, 243, 134, 179, 229, 
    250, 238,  65,  88, 235, 238, 
      5, 123,  79, 107,  97,  55, 
    240, 220, 221, 101, 103, 199, 
    219, 119, 188, 168, 235,   5, 
    109, 215, 119,  30,  55, 163, 
    235, 206, 122, 176, 237, 220, 
    243, 218,  59,  94, 224, 172, 
     92,  91, 169,  71, 206, 122, 
    203, 101,  19,  58, 119,  54, 
    188, 104,  99, 245, 190,  23, 
    116, 189, 232, 246,  45, 191, 
    211, 114, 239, 182, 247, 107, 
     77, 191,  94, 175, 181, 252, 
    208, 231,  63,  73,  81, 193, 
     88,  24, 120,  14,  22, 153, 
    187, 238, 147,  54, 253,   4, 
    187, 216,  36, 238,  83,  84, 
     65,  84, 148,   0,   0,   0, 
      5,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0
};
