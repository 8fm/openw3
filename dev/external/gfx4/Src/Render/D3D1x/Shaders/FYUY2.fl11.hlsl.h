#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler_tex                       sampler      NA          NA    0        1
// tex                               texture  float4          2d    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[82]
// Embedded Data:
//  0x00000052 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000004d - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v0.xy
dcl_output o0.xyzw
dcl_temps 1
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v0.xyxx, t0.xyzw, s0
add r0.xyz, r0.xyzx, l(-0.501961, -0.000000, -0.501961, 0.000000)
mad r0.w, -r0.x, l(0.186593), r0.y
mad_sat o0.y, -r0.z, l(0.466296), r0.w
mad_sat o0.xz, r0.zzxz, l(1.568648, 0.000000, 1.848352, 0.000000), r0.yyyy
mov o0.w, l(1.000000)
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[82], bundle is:[152] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\FYUY2.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask  3, param0, paramSlot 0, DefaultVal={0,0,0,0}

codeLenInByte        = 160;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0:1]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_RESOURCE, 0, offset 0:7 dwords
;  extUserElements 1[1] = IMM_SAMPLER, 0, offset 8:11 dwords
NumVgprs             = 6;
NumSgprs             = 14;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000000

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000001
SPIC:NUM_INTERP             = 1
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[12:13], exec                          // 000000000000: BE8C047E
  s_wqm_b64     exec, exec                              // 000000000004: BEFE0A7E
  s_mov_b32     m0, s2                                  // 000000000008: BEFC0302
  s_load_dwordx8  s[4:11], s[0:1], 0x00                 // 00000000000C: C0C20100
  s_load_dwordx4  s[0:3], s[0:1], 0x08                  // 000000000010: C0800108
  v_interp_p1_f32  v2, v0, attr0.x                      // 000000000014: C8080000
  v_interp_p1_f32  v3, v0, attr0.y                      // 000000000018: C80C0100
  v_interp_p2_f32  v2, v1, attr0.x                      // 00000000001C: C8090001
  v_interp_p2_f32  v3, v1, attr0.y                      // 000000000020: C80D0101
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[0:3], v[2:3], s[4:11], s[0:3] dmask:0x7 // 000000000028: F0800700 00010002
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000030: BF8C0F70
  v_add_f32     v0, 0xbf008084, v0                      // 000000000034: 060000FF BF008084
  s_mov_b32     s0, 0x3e3f123c                          // 00000000003C: BE8003FF 3E3F123C
  v_mad_legacy_f32  v3, -v0, s0, v1                     // 000000000044: D2800003 24040100
  v_add_f32     v2, 0xbf008084, v2                      // 00000000004C: 060404FF BF008084
  s_mov_b32     s0, 0x3eeebe59                          // 000000000054: BE8003FF 3EEEBE59
  s_mov_b32     s1, 0x3fc8c975                          // 00000000005C: BE8103FF 3FC8C975
  v_mad_legacy_f32  v3, -v2, s0, v3 clamp               // 000000000064: D2800803 240C0102
  s_mov_b32     s2, 0x3fec96cc                          // 00000000006C: BE8203FF 3FEC96CC
  v_mad_legacy_f32  v2, v2, s1, v1 clamp                // 000000000074: D2800802 04040302
  v_mad_legacy_f32  v1, v0, s2, v1 clamp                // 00000000007C: D2800801 04040500
  v_mov_b32     v0, 1.0                                 // 000000000084: 7E0002F2
  s_mov_b64     exec, s[12:13]                          // 000000000088: BEFE040C
  v_cvt_pkrtz_f16_f32  v2, v2, v3                       // 00000000008C: 5E040702
  v_cvt_pkrtz_f16_f32  v0, v1, v0                       // 000000000090: 5E000101
  exp           mrt0, v2, v2, v0, v0 compr vm           // 000000000094: F800140F 00000002
  s_endpgm                                              // 00000000009C: BF810000
end


// Approximately 7 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_FYUY2[] =
{
     68,  88,  66,  67, 237, 253, 
     75, 184, 195, 136, 248,  47, 
     71, 255,  50,  22, 133, 162, 
     53, 234,   1,   0,   0,   0, 
    192,   5,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
      4,   1,   0,   0,  56,   1, 
      0,   0, 108,   1,   0,   0, 
     36,   5,   0,   0,  82,  68, 
     69,  70, 200,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    255, 255,   0, 129,   0,   0, 
    140,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
    124,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   0,   0,   5,   0, 
      0,   0,   4,   0,   0,   0, 
    255, 255, 255, 255,   0,   0, 
      0,   0,   1,   0,   0,   0, 
     13,   0,   0,   0, 115,  97, 
    109, 112, 108, 101, 114,  95, 
    116, 101, 120,   0, 116, 101, 
    120,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
     44,   0,   0,   0,   1,   0, 
      0,   0,   8,   0,   0,   0, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,   3,   0,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0, 171, 171, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88, 176,   3,   0,   0, 
     80,   0,   0,   0, 236,   0, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0,  82,   0, 
      0,   0,  80,   0,   0,   0, 
     77,   0,   0,   0, 106,   8, 
      0,   1,  90,   0,   0,   3, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  88,  24,   0,   4, 
      0, 112,  16,   0,   0,   0, 
      0,   0,  85,  85,   0,   0, 
     98,  16,   0,   3,  50,  16, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    104,   0,   0,   2,   1,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     70, 126,  16,   0,   0,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,  10, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0, 132, 128, 
      0, 191,   0,   0,   0, 128, 
    132, 128,   0, 191,   0,   0, 
      0,   0,  50,   0,   0,  10, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
     60,  18,  63,  62,  26,   0, 
     16,   0,   0,   0,   0,   0, 
     50,  32,   0,  10,  34,  32, 
     16,   0,   0,   0,   0,   0, 
     42,   0,  16, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,  89, 190, 
    238,  62,  58,   0,  16,   0, 
      0,   0,   0,   0,  50,  32, 
      0,  12,  82,  32,  16,   0, 
      0,   0,   0,   0, 166,   8, 
     16,   0,   0,   0,   0,   0, 
      2,  64,   0,   0, 117, 201, 
    200,  63,   0,   0,   0,   0, 
    204, 150, 236,  63,   0,   0, 
      0,   0,  86,   5,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   5, 130,  32,  16,   0, 
      0,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 154,   0,   0,   0, 
     21,   0,   1,   0,  41,  92, 
     10,   0, 120,   1, 237,  86, 
    207, 107,  19,  65,  20, 126, 
    179, 187,  77, 210, 154,  54, 
     34, 162,  21, 122, 179,  66, 
     79, 145, 212, 158,  68, 154, 
     30, 138, 246, 108, 240, 144, 
     48, 148, 108, 204, 198, 138, 
    105,  90, 242,  67, 130,  72, 
    220, 138,   7,  15,  57, 228, 
    228,  77, 244, 224, 193, 131, 
    253,  23,  54,  65,  60, 108, 
     65,  47, 253,  19, 196, 163, 
    138, 122, 242,  32, 198, 247, 
    237, 206, 164, 139, 216,  91, 
     64, 193, 124, 240, 189, 183, 
    223, 252, 120, 251, 118, 222, 
     50,  51, 114, 134,   2, 248, 
    239,  18,  79, 225, 191, 122, 
    251, 207,  86,   4, 209,  20, 
     63, 179,  11,  60, 208,  78, 
    192,  18, 109,  76, 195,  18, 
     45, 193,  96, 128,  65,  20, 
     99,  55, 199, 124, 206,  92, 
     99, 162,  79,  51, 196, 218, 
    160, 197, 246,  36,  19,  97, 
    222, 243, 188,  13, 246, 103, 
    152, 152,  59, 171, 136, 112, 
    128, 246, 128,   9, 195,  80, 
    175,  31,   1,  99,  44,  69, 
      0, 158,  83,   9,   0,  31, 
    141,  65,  23,  96, 254, 140, 
      5,  38, 114,  56,  14, 191, 
    231,   5,  13, 224, 123, 255, 
     54, 194, 188, 162, 246, 168, 
     78,   0, 234,  17,   5, 114, 
    214, 227, 230,  85,  29, 245, 
    154,  45,  41, 141, 181, 192, 
    184,   1, 243,  56,  12,  25, 
     73,  60,  68, 160,  53, 226, 
    199,  70,  85, 251,  63, 161, 
    255,  73, 172,   5, 214,  23, 
    255, 125, 138, 169, 129, 254, 
    243,  76,  34, 183,  15, 246, 
    230, 233,  59, 148, 214, 130, 
    117,  88, 151,  80, 155, 208, 
    193, 146,  70,  52,  43,  35, 
    110, 109,  10,  65, 155, 169, 
    133, 145, 150, 172, 101,  68, 
     23,  88,  23,  34, 186, 200, 
    186,  24, 209,  37, 214,  37, 
    173, 117, 252,  84, 240,  62, 
     17, 212, 153,  27,  59, 255, 
     50,  39,  57, 142, 135, 147, 
     28, 199, 195,  73, 142,  99, 
     99, 128, 142, 213, 245,  58, 
     51,  63,  61, 195, 252, 225, 
    145, 120,  61,  72,   8, 151, 
    143, 166, 132,  79,  34, 233, 
     11, 154, 246, 133, 152, 245, 
     31,  80, 183,  79, 113, 247, 
    139, 193,  59, 238, 110, 170, 
    219, 231, 143, 139,  61, 114, 
    169,  63,  52,  93, 239, 202, 
    169, 236, 170,  73, 238,  33, 
      9, 107, 113, 104,  89, 163, 
    246, 188, 247, 121, 117, 104, 
    238, 121, 173,   3,  63, 107, 
     38, 220,  67,  67,  36,  23, 
    135, 230,  67, 239, 237, 147, 
    143,  89,   3, 218, 180,  44, 
    193, 158, 166,  44, 235, 155, 
     65, 157, 164, 197,  57, 232, 
    253, 246, 180, 222,  47, 247, 
    250, 231, 216,  98, 159,   7, 
    194, 182,  35, 240,  81, 204, 
    195,  67, 224,  88, 230, 125, 
     95, 236, 170, 115, 182, 168, 
     60, 206,   6, 156,   7, 115, 
    163,  40,  33, 122, 170, 255, 
    177, 242, 152, 127, 130, 121, 
     80, 104, 245, 202, 215, 122, 
     31,  94, 169, 246, 151, 202, 
     35,   6, 174, 114, 251,  47, 
     62, 221,  63, 171, 238, 116, 
    111,  84,  95, 142, 137, 249, 
    149, 203, 178, 100,  87, 237, 
    123, 141, 116, 115, 167, 190, 
    115,  39, 221, 104, 214,  29, 
    123, 123,  89, 150, 157, 187, 
    210, 105,  55, 157, 122, 205, 
    174, 202,  91, 149, 246, 138, 
    204, 213, 111, 202, 235,  78, 
    173, 236, 212, 229, 250, 165, 
    245,  76,  91, 230, 182, 108, 
     22,  13, 121,  53, 127,  35, 
    191, 156, 174,  84,  51, 153, 
    244,  86, 181,  81, 229, 160, 
     33,  46, 170,  87, 226, 186, 
     24, 103, 110, 219, 183, 107, 
    244,  11, 243, 118,  52, 126, 
      0,   0,  83,  84,  65,  84, 
    148,   0,   0,   0,   7,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,   4,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0
};
