#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler_tex[3]                    sampler      NA          NA    3        1
// tex[3]                            texture  float4          2d    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[40]
// Embedded Data:
//  0x00000028 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x00000023 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v0.xy
dcl_output o0.xyzw
dcl_temps 1
sample_indexable(texture2d)(float,float,float,float) r0.x, v0.xyxx, t3.xyzw, s3
mov o0.xyzw, r0.xxxx
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[40], bundle is:[130] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\FYUVAInv.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask  3, param0, paramSlot 0, DefaultVal={0,0,0,0}

codeLenInByte        = 76;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0:1]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_RESOURCE, 3, offset 0:7 dwords
;  extUserElements 1[1] = IMM_SAMPLER, 3, offset 8:11 dwords
NumVgprs             = 6;
NumSgprs             = 14;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000008
; constBufUsage           = 0x00000000

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000001
SPIC:NUM_INTERP             = 1
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[12:13], exec                          // 000000000000: BE8C047E
  s_wqm_b64     exec, exec                              // 000000000004: BEFE0A7E
  s_mov_b32     m0, s2                                  // 000000000008: BEFC0302
  s_load_dwordx8  s[4:11], s[0:1], 0x00                 // 00000000000C: C0C20100
  s_load_dwordx4  s[0:3], s[0:1], 0x08                  // 000000000010: C0800108
  v_interp_p1_f32  v2, v0, attr0.x                      // 000000000014: C8080000
  v_interp_p1_f32  v3, v0, attr0.y                      // 000000000018: C80C0100
  v_interp_p2_f32  v2, v1, attr0.x                      // 00000000001C: C8090001
  v_interp_p2_f32  v3, v1, attr0.y                      // 000000000020: C80D0101
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[0:3], v[2:3], s[4:11], s[0:3]         // 000000000028: F0800100 00010002
  s_mov_b64     exec, s[12:13]                          // 000000000030: BEFE040C
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000034: BF8C0F70
  v_cvt_pkrtz_f16_f32  v0, v0, v0                       // 000000000038: 5E000100
  s_nop         0x0000                                  // 00000000003C: BF800000
  exp           mrt0, v0, v0, v0, v0 compr vm           // 000000000040: F800140F 00000000
  s_endpgm                                              // 000000000048: BF810000
end


// Approximately 3 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_FYUVAInv[] =
{
     68,  88,  66,  67,  31, 186, 
     86,  12, 175,  94,  16, 158, 
    106,  31,  67,  75, 166,  73, 
     97, 102,   1,   0,   0,   0, 
    200,   4,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     12,   1,   0,   0,  64,   1, 
      0,   0, 116,   1,   0,   0, 
     44,   4,   0,   0,  82,  68, 
     69,  70, 208,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    255, 255,   0, 129,   0,   0, 
    146,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
    124,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0, 139,   0,   0,   0, 
      2,   0,   0,   0,   5,   0, 
      0,   0,   4,   0,   0,   0, 
    255, 255, 255, 255,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     13,   0,   0,   0, 115,  97, 
    109, 112, 108, 101, 114,  95, 
    116, 101, 120,  91,  51,  93, 
      0, 116, 101, 120,  91,  51, 
     93,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0, 171, 171,  73,  83, 
     71,  78,  44,   0,   0,   0, 
      1,   0,   0,   0,   8,   0, 
      0,   0,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   3,   3, 
      0,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
    171, 171,  79,  83,  71,  78, 
     44,   0,   0,   0,   1,   0, 
      0,   0,   8,   0,   0,   0, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
     83,  86,  95,  84,  97, 114, 
    103, 101, 116,   0, 171, 171, 
     83,  72,  69,  88, 176,   2, 
      0,   0,  80,   0,   0,   0, 
    172,   0,   0,   0,  53,  16, 
      0,   0,   5,   0,   0,   0, 
     40,   0,   0,   0,  80,   0, 
      0,   0,  35,   0,   0,   0, 
    106,   8,   0,   1,  90,   0, 
      0,   3,   0,  96,  16,   0, 
      3,   0,   0,   0,  88,  24, 
      0,   4,   0, 112,  16,   0, 
      3,   0,   0,   0,  85,  85, 
      0,   0,  98,  16,   0,   3, 
     50,  16,  16,   0,   0,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 104,   0,   0,   2, 
      1,   0,   0,   0,  69,   0, 
      0, 139, 194,   0,   0, 128, 
     67,  85,  21,   0,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  16,  16,   0,   0,   0, 
      0,   0,  70, 126,  16,   0, 
      3,   0,   0,   0,   0,  96, 
     16,   0,   3,   0,   0,   0, 
     54,   0,   0,   5, 242,  32, 
     16,   0,   0,   0,   0,   0, 
      6,   0,  16,   0,   0,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 132,   0, 
      0,   0,  21,   0,   1,   0, 
     41,  11,  10,   0, 120,   1, 
    237,  86,  65,  75,  27,  65, 
     20, 158,  73,  98, 140,  49, 
     53,  21, 164,  40, 205, 181, 
    224,  41,  16, 205, 169, 244, 
     96,  33,  40, 130, 167, 164, 
    134,  86,   6, 233, 170,  27, 
     21,  55,  81,  54,  33,  44, 
     30,  98, 188, 231, 208,  63, 
    210, 139,  32, 244, 148,   4, 
    145, 146, 187, 158, 123,  41, 
    133,  28,  91,  16, 241,  32, 
    234, 251, 178, 111,  66,  92, 
    204,  45, 160, 208, 124, 240, 
    205, 183, 223, 206, 190, 183, 
    143, 153, 229, 205, 142, 135, 
     69,   7, 255, 130, 237, 101, 
    104, 219,  74, 191, 169, 145, 
    142,  16,  37,  43, 224, 132, 
     48,  10, 113, 197,  58, 139, 
      1,  15, 248, 132,   8, 146, 
     76,  16,  87, 136,  11,  68, 
    204, 105, 186,  88, 104, 190, 
    165, 241,  53,  49,  64,  60, 
    161, 184,  37,  82, 196,  80, 
    120, 231,  29,  99,  68, 164, 
      3, 180,   2, 126,  12,   4, 
    196, 121, 209, 251,  28, 230, 
    145,  11, 128, 246, 206, 137, 
    119,  24, 158,   6, 106,  66, 
    253, 253, 128, 218, 116,  46, 
     40, 234,   4,  80, 251, 115, 
      3, 245, 248, 121, 101, 120, 
     91, 186, 251,   4,  96,  63, 
    122, 129, 154,  17,   3, 156, 
    243, 115, 122, 205,  46, 217, 
    235, 189, 108,  18, 251, 225, 
    158,  16, 193,  69,  15, 180, 
     71, 254,  96, 119, 215, 254, 
     79, 184,  59, 226, 174,   5, 
    214,  23, 223,  88, 148, 168, 
    129, 121, 172, 177,  16, 213, 
      6, 248, 109,  90, 220, 192, 
    105,  47,  61, 222, 223, 207, 
     75, 177,  14,  31, 141, 117, 
    189, 242, 248,  53, 143, 255, 
    234, 241,  27, 143,  60,  93, 
    119,  60, 231, 199,  62, 147, 
     84,  94,  50, 135,  53,  14, 
    134, 195,  26,   7, 195,  97, 
    141,   3,  99,   7, 149,  64, 
    173,  94,   9, 223, 213, 125, 
    254, 219, 186, 144, 103, 205, 
    144, 172, 210, 209,  20, 106, 
      9,  25, 105,  73,  49, 214, 
    146, 242,  85, 235,  72, 212, 
     26,  66,  86, 255, 250, 168, 
    161,  69,   2, 119, 245, 131, 
     40,  60, 247, 198,  41, 221, 
    219, 142,  27,  51,  52, 162, 
     39,   3, 250, 220, 211,  39, 
     21,  29, 127,  18, 115, 240, 
     56,  10, 169,  71, 203,  24, 
     31, 246,  17,  86, 244, 113, 
    183, 119, 235,  44,  46,  62, 
    240, 124, 146,  21, 241, 227, 
    196, 251,  73, 231, 232, 207, 
    143, 223,  23, 159, 249, 254, 
     39,  86, 228, 192, 111, 215, 
    245, 233, 244, 247, 159, 124, 
    239, 128,  53,  75,  68, 124, 
    238, 189, 218,  48,  44, 227, 
    176,  24,  47, 237, 219, 251, 
    123, 241,  98, 201,  54, 141, 
    252, 156, 218,  50, 203, 202, 
    116,  74, 166,  93,  48,  44, 
    181, 157, 115, 146,  42,  99, 
    111, 170, 180,  89, 216,  50, 
    109, 149, 154,  79,  37,  28, 
    149, 217,  49, 200,  20, 213, 
    226, 151, 213, 236, 199, 229, 
     66,  57, 158, 179,  18, 137, 
    248, 142,  85, 180,  40, 175, 
    139,  95, 252,  54, 252, 221, 
    140,  18, 243, 198, 110,  65, 
     60,   0, 246, 154,  27, 217, 
     83,  84,  65,  84, 148,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0
};
