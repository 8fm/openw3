#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler For Durango 9.30.12098.0
//
//
///
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler_tex                       sampler      NA          NA    0        1
// tex                               texture  float4          2d    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[57]
// Embedded Data:
//  0x00000039 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x00000034 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyzw
dcl_output o0.xyzw
dcl_temps 1
sample_indexable(texture2d)(float,float,float,float) r0.x, v0.xyxx, t0.xyzw, s0
mul r0.x, r0.x, v1.w
mul o0.xyz, r0.xxxx, v1.xyzx
mov o0.w, r0.x
ret 
Opaque Custom Data - XBOX Precompiled Shader
// Offset:[57], bundle is:[148] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// HLSL Source Filename      : f:\balazs.torok.stream2\dev\external\gfx4\Src\Render\D3D1x\Shaders\FTextMul.fl11.hlsl
// HLSL Entrypoint Name      : main

//
// Shader Data:
// ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask  3, param0, paramSlot 0, DefaultVal={0,0,0,0};   [1] generic, usageIdx  1, channelMask 15, param1, paramSlot 1, DefaultVal={0,0,0,0}

codeLenInByte        = 124;Bytes

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0:1]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_RESOURCE, 0, offset 0:7 dwords
;  extUserElements 1[1] = IMM_SAMPLER, 0, offset 8:11 dwords
NumVgprs             = 6;
NumSgprs             = 14;
FloatMode            = 192;
IeeeMode             = 0;
bFlatPtr32           = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000000

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000002
SPIC:NUM_INTERP             = 2
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[12:13], exec                          // 000000000000: BE8C047E
  s_wqm_b64     exec, exec                              // 000000000004: BEFE0A7E
  s_mov_b32     m0, s2                                  // 000000000008: BEFC0302
  s_load_dwordx8  s[4:11], s[0:1], 0x00                 // 00000000000C: C0C20100
  s_load_dwordx4  s[0:3], s[0:1], 0x08                  // 000000000010: C0800108
  v_interp_p1_f32  v2, v0, attr0.x                      // 000000000014: C8080000
  v_interp_p1_f32  v3, v0, attr0.y                      // 000000000018: C80C0100
  v_interp_p2_f32  v2, v1, attr0.x                      // 00000000001C: C8090001
  v_interp_p2_f32  v3, v1, attr0.y                      // 000000000020: C80D0101
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[2:5], v[2:3], s[4:11], s[0:3]         // 000000000028: F0800100 00010202
  v_interp_p1_f32  v3, v0, attr1.w                      // 000000000030: C80C0700
  v_interp_p1_f32  v4, v0, attr1.x                      // 000000000034: C8100400
  v_interp_p1_f32  v5, v0, attr1.y                      // 000000000038: C8140500
  v_interp_p1_f32  v0, v0, attr1.z                      // 00000000003C: C8000600
  v_interp_p2_f32  v3, v1, attr1.w                      // 000000000040: C80D0701
  v_interp_p2_f32  v4, v1, attr1.x                      // 000000000044: C8110401
  v_interp_p2_f32  v5, v1, attr1.y                      // 000000000048: C8150501
  v_interp_p2_f32  v0, v1, attr1.z                      // 00000000004C: C8010601
  s_waitcnt     vmcnt(0) & lgkmcnt(15)                  // 000000000050: BF8C0F70
  v_mul_legacy_f32  v2, v2, v3                          // 000000000054: 0E040702
  v_mul_legacy_f32  v1, v2, v4                          // 000000000058: 0E020902
  v_mul_legacy_f32  v3, v2, v5                          // 00000000005C: 0E060B02
  v_mul_legacy_f32  v0, v2, v0                          // 000000000060: 0E000102
  s_mov_b64     exec, s[12:13]                          // 000000000064: BEFE040C
  v_cvt_pkrtz_f16_f32  v1, v1, v3                       // 000000000068: 5E020701
  v_cvt_pkrtz_f16_f32  v0, v0, v2                       // 00000000006C: 5E000500
  exp           mrt0, v1, v1, v0, v0 compr vm           // 000000000070: F800140F 00000001
  s_endpgm                                              // 000000000078: BF810000
end


// Approximately 5 instruction slots used
#endif

const BYTE pBinary_D3D1xFL11X_FTextMul[] =
{
     68,  88,  66,  67, 106,   2, 
     15, 203,  99,  38,  70, 246, 
    252,  18, 253,  22, 219, 138, 
    113, 224,   1,   0,   0,   0, 
    104,   5,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
      4,   1,   0,   0,  84,   1, 
      0,   0, 136,   1,   0,   0, 
    204,   4,   0,   0,  82,  68, 
     69,  70, 200,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     60,   0,   0,   0,   0,   5, 
    255, 255,   0, 129,   0,   0, 
    140,   0,   0,   0,  82,  68, 
     49,  49,  60,   0,   0,   0, 
     24,   0,   0,   0,  32,   0, 
      0,   0,  40,   0,   0,   0, 
     36,   0,   0,   0,  12,   0, 
      0,   0,   0,   0,   0,   0, 
    124,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0, 136,   0,   0,   0, 
      2,   0,   0,   0,   5,   0, 
      0,   0,   4,   0,   0,   0, 
    255, 255, 255, 255,   0,   0, 
      0,   0,   1,   0,   0,   0, 
     13,   0,   0,   0, 115,  97, 
    109, 112, 108, 101, 114,  95, 
    116, 101, 120,   0, 116, 101, 
    120,   0,  77, 105,  99, 114, 
    111, 115, 111, 102, 116,  32, 
     40,  82,  41,  32,  72,  76, 
     83,  76,  32,  83, 104,  97, 
    100, 101, 114,  32,  67, 111, 
    109, 112, 105, 108, 101, 114, 
     32,  70, 111, 114,  32,  68, 
    117, 114,  97, 110, 103, 111, 
     32,  57,  46,  51,  48,  46, 
     49,  50,  48,  57,  56,  46, 
     48,   0,  73,  83,  71,  78, 
     72,   0,   0,   0,   2,   0, 
      0,   0,   8,   0,   0,   0, 
     56,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,   3,   0,   0, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,  15,   0,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  67,  79,  76, 
     79,  82,   0, 171,  79,  83, 
     71,  78,  44,   0,   0,   0, 
      1,   0,   0,   0,   8,   0, 
      0,   0,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,  83,  86,  95,  84, 
     97, 114, 103, 101, 116,   0, 
    171, 171,  83,  72,  69,  88, 
     60,   3,   0,   0,  80,   0, 
      0,   0, 207,   0,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0,  57,   0,   0,   0, 
     80,   0,   0,   0,  52,   0, 
      0,   0, 106,   8,   0,   1, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  98,  16, 
      0,   3,  50,  16,  16,   0, 
      0,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 104,   0, 
      0,   2,   1,   0,   0,   0, 
     69,   0,   0, 139, 194,   0, 
      0, 128,  67,  85,  21,   0, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  70,  16,  16,   0, 
      0,   0,   0,   0,  70, 126, 
     16,   0,   0,   0,   0,   0, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  58,  16, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   7, 114,  32, 
     16,   0,   0,   0,   0,   0, 
      6,   0,  16,   0,   0,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  54,   0, 
      0,   5, 130,  32,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 150,   0,   0,   0, 
     21,   0,   1,   0,  41,  59, 
     10,   0, 120,   1, 237,  86, 
     77, 107,  19,  65,  24, 158, 
    217, 108, 190, 218, 116,  19, 
    165, 130, 159, 232, 193, 130, 
    167,  64, 212,  83, 245, 208, 
     67,  17,   5,  21, 180, 226, 
    161,  14, 165,  27, 179, 177, 
    226,  54, 149,  77,  42,  65, 
     74,  76, 193, 131, 135,  28, 
    252,   9, 254,   5, 143,  94, 
    146, 224, 105, 142, 162, 120, 
     23, 193, 187,   7,  17,  15, 
     18, 125, 158, 236, 140,  46, 
     69, 111,   1, 133, 230, 129, 
    231, 125, 247, 153, 143, 119, 
    231,  99, 247, 157, 185,  48, 
     35, 198, 248, 180, 112,  61, 
     79, 255, 113, 247, 125, 233, 
     13, 124,  26, 148, 198,  19, 
    237,  28, 173,  16, 167, 199, 
    173, 132,  56,  67, 195,   6, 
    142,  16,  25,  56,  15, 220, 
      1, 151,  64, 214,  89, 198, 
     88,  26, 110, 195, 150, 192, 
     44, 248,  22, 253,  46, 195, 
     31,   3, 209,  93,  28,   4, 
     25, 150, 225,   8, 235, 137, 
     20,  13, 224, 210, 236,   1, 
    223, 107,  81,   0,  25, 139, 
    160,  79, 198,  16,  11,  52, 
    127, 198,   9,  48,  25, 103, 
     47,  56,  54,  27, 139, 222, 
     76, 127,  60, 223, 127, 141, 
    120,  92,  73, 251, 123, 159, 
      8, 238,  71,  18,  28, 179, 
    109, 247, 197, 180, 179, 107, 
    230, 154, 137, 113,  45, 216, 
    110,   8, 254,  13,  63,   0, 
    174, 119,  18,  86,  51,  94, 
    198, 236,  90,  70, 158,  20, 
    167, 248, 176, 207,  96, 191, 
     85, 174,   5, 201, 239, 190, 
      8,  90, 176, 254,  40,  40, 
     68, 119,  64,  62,  63,  44, 
    190,  81,  89,  45, 161, 227, 
    125, 138, 117, 138, 122, 188, 
    164,   9, 141, 192,  50, 235, 
    172, 225,   7,  93,  43,  30, 
    135,  70,  45, 180, 130,  86, 
      9, 189,  10, 189, 154, 208, 
    235, 208, 235,   9,  93, 133, 
    174,  90, 109, 227,  23, 227, 
    247,  57, 220, 103,  20, 118, 
    254, 103,  78, 199,  56,  25, 
     78, 199,  56,  25,  78, 199, 
     56,  49, 142, 209, 113, 123, 
    253, 206, 204, 168, 239, 164, 
    190, 247, 133, 124,  61, 204, 
    201,  46, 142, 166, 156,  22, 
    178, 160, 165, 200, 107,  41, 
    231, 244,  19, 209,  27,   8, 
    217, 253, 236,  56, 200,  98, 
    217, 130,  22, 110,  73, 139, 
    244, 188, 198,  65, 164, 101, 
    118,  78,  75, 247, 128, 150, 
    233,  67,  90, 102, 164, 126, 
     88, 236,  13, 156, 172, 235, 
     57, 121, 199, 115, 102,  51, 
     30, 186, 120,   5, 119, 212, 
     71,  46, 140, 115, 233, 188, 
    205, 133, 187, 131,  35, 176, 
    241, 115, 156, 199, 147, 192, 
    241,  41, 109,  29, 143,  82, 
    228, 116, 121, 213, 156, 161, 
     23, 141, 103, 222, 103, 174, 
    247, 126,  69, 137,  17, 154, 
    250, 154, 241, 236,  63,  11, 
    126, 184, 113, 103, 241,  93, 
    116, 229, 229,  51,  83, 254, 
    212, 120, 198, 224,  53,  45, 
     61, 218, 121, 245, 213, 148, 
    189,  48, 254,  54, 200, 254, 
    245,  69,  85, 245,  67, 255, 
    113, 179, 220, 218, 138, 182, 
     30, 148, 155, 173,  40, 240, 
     55, 207, 170,  90, 240,  72, 
      5, 237,  86,  16,  53, 252, 
     80, 221, 171, 183, 207, 171, 
    149, 232, 174, 186,  25,  52, 
    106,  65, 164, 150, 207,  45, 
     87, 218, 106, 101, 195, 135, 
    104, 170,  75, 183, 208, 240, 
    218, 118,  88, 174, 135, 149, 
     74, 121,  35, 108, 134, 136, 
     27, 195,  51, 183,  68, 222, 
      6, 121, 131, 219, 244, 239, 
     55, 196,  79,  77, 175,  29, 
    233,   0,   0,   0,  83,  84, 
     65,  84, 148,   0,   0,   0, 
      5,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0
};
